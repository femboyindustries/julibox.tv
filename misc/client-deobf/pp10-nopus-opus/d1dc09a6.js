var RL = Object.defineProperty;
var ML = (t, e, n) => e in t ? RL(t, e, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: n
}) : t[e] = n;
var DL = (t, e) => () => (e || t((e = { exports: {} }).exports, e), e.exports);
var Ae = (t, e, n) => (ML(t, typeof e != 'symbol' ? e + '' : e, n), n);
var xAe = DL((HCe, nN) => {
    (function () {
        const e = document.createElement('link').relList;
        if (e && e.supports && e.supports('modulepreload')) {
            return;
        }
        for (const s of document.querySelectorAll('link[rel="modulepreload"]'))
            r(s);
        new MutationObserver(s => {
            for (const i of s)
                if (i.type === 'childList') {
                    for (const o of i.addedNodes)
                        o.tagName === 'LINK' && o.rel === 'modulepreload' && r(o);
                }
        }).observe(document, {
            childList: true,
            subtree: true
        });
        function n(s) {
            const i = {
                p: _,
                p: _,
                innerHTML: s.parse(a.innerHTML),
                innerHTML: s.parse(a.innerHTML),
                level: 'error',
                async: true,
                src: pfe(s, t),
                value: oe,
                __root: e,
                onerror: () => {
                    u();
                    r(new SyntaxError());
                    ;
                },
                onload: () => {
                    u();
                    n();
                    ;
                },
                src: a,
                type: 'module',
                p: u[_],
                v: s[0],
                channelCount: r,
                channelCount: l,
                channelCountMode: l,
                channelInterpretation: l,
                type: 'allpass',
                s: '1'
            };
            return s.integrity && (i.integrity = s.integrity), s.referrerPolicy && (i.referrerPolicy = s.referrerPolicy), s.crossOrigin === 'use-credentials' ? i.credentials = 'include' : s.crossOrigin === 'anonymous' ? i.credentials = 'omit' : i.credentials = 'same-origin', i;
        }
        function r(s) {
            if (s.ep) {
                return;
            }
            ;
            const i = n(s);
            fetch(s.href, i);
        }
    }());
    function H2(t, e) {
        const n = Object.create(null), r = t.split(',');
        for (let s = 0; s < r.length; s++) {
            n[r[s]] = true;
        }
        return e ? s => !!n[s.toLowerCase()] : s => !!n[s];
    }
    const nn = {}, Tl = [], zs = () => {
        }, $L = () => false, Tm = t => /^on[^a-z]/.test(t), z2 = t => t.startsWith('onUpdate:'), xn = Object.assign, Y2 = (t, e) => {
            const n = t.indexOf(e);
            n > -1 && t.splice(n, 1);
        }, FL = Object.prototype.hasOwnProperty, Rt = (t, e) => FL.call(t, e), ze = Array.isArray, Sl = t => Nf(t) === '[object Map]', Sm = t => Nf(t) === '[object Set]', AE = t => Nf(t) === '[object Date]', pt = t => typeof t == 'function', Cn = t => typeof t == 'string', Bh = t => typeof t == 'symbol', Yt = t => t !== null && typeof t == 'object', T8 = t => Yt(t) && pt(t.then) && pt(t.catch), S8 = Object.prototype.toString, Nf = t => S8.call(t), UL = t => Nf(t).slice(8, -1), w8 = t => Nf(t) === '[object Object]', K2 = t => Cn(t) && t !== 'NaN' && t[0] !== '-' && '' + parseInt(t, 10) === t, kp = H2(',key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted'), wm = t => {
            const e = Object.create(null);
            return n => e[n] || (e[n] = t(n));
        }, Ti = wm(t => t.replace(/-(\w)/g, (e, n) => n ? n.toUpperCase() : '')), Pc = wm(t => t.replace(/\B([A-Z])/g, '-$1').toLowerCase()), Om = wm(t => t.charAt(0).toUpperCase() + t.slice(1)), z_ = wm(t => t ? `on${ Om(t) }` : ''), qh = (t, e) => !Object.is(t, e), Np = (t, e) => {
            for (let n = 0; n < t.length; n++) {
                t[n](e);
            }
        }, jp = (t, e, n) => {
            Object.defineProperty(t, e, {
                configurable: true,
                enumerable: false,
                value: n
            });
        }, r0 = t => {
            const e = parseFloat(t);
            return isNaN(e) ? t : e;
        }, VL = t => {
            const e = Cn(t) ? Number(t) : NaN;
            return isNaN(e) ? t : e;
        };
    let CE;
    const s0 = () => CE || (CE = typeof globalThis < 'u' ? globalThis : typeof self < 'u' ? self : typeof window < 'u' ? window : typeof global < 'u' ? global : {});
    function an(t) {
        if (ze(t)) {
            const e = { i: s[i] };
            for (let n = 0; n < t.length; n++) {
                const r = t[n], s = Cn(r) ? HL(r) : an(r);
                if (s) {
                    for (const i in s);
                }
            }
            return e;
        } else {
            if (Cn(t)) {
                return t;
            }
            if (Yt(t)) {
                return t;
            }
        }
    }
    ;
    function HL(t) {
        const e = {
            length: n,
            length: 0,
            i: tp(i, false, true),
            s: gU(s, i, r),
            s: () => o,
            r: s,
            ip: this.get_config('ip') ? 1 : 0,
            _: new Date().getTime().toString(),
            token: this.get_config('token'),
            $duration: parseFloat((a / 1000).toFixed(3)),
            n: t[n],
            default: s.fetch,
            fetch: s.fetch,
            Headers: s.Headers,
            Request: s.Request,
            Response: s.Response,
            o: i,
            n: t[n].listener || t[n],
            i: Zi.Tag.create(i, (o, a) => `<strong>${ a }</strong>`),
            i: Zi.Tag.create(i, (o, a) => `<em>${ a }</em>`),
            tos: Zi.Tag.create('tos', (i, o) => `<a class="tosLink" href="https://jackboxgames.com/terms-of-service/" target="_blank">${ o }</a>`),
            pp: Zi.Tag.create('pp', (i, o) => `<a class="ppLink" href="https://jackboxgames.com/privacy-policy/" target="_blank">${ o }</a>`),
            r: n[r],
            n: (...r) => {
                t && TA(() => {
                    Ys.console[n](`${ 'Sentry Logger ' }[${ n }]:`, ...r);
                });
            },
            n: () => {
            },
            contexts: {
                trace: this._span.getTraceContext(),
                ...e.contexts
            },
            sdkProcessingMetadata: {
                dynamicSamplingContext: r.getDynamicSamplingContext(),
                ...e.sdkProcessingMetadata
            },
            fingerprint: e.fingerprint ? jhe(e.fingerprint) : [],
            message: `Assertion failed: ${ O6(t.args.slice(1), ' ') || 'console.assert' }`,
            onError: u => {
                i = true;
                o(u);
                ;
            },
            n: i.slice(s, s + 128),
            s: (n[s] - 128) * 0.0078125,
            copyFromChannel: (n => (r, s, i = 0) => {
                const o = t(i), a = t(s);
                if (o < e.length) {
                    return n.call(e, r, a, o);
                }
            })(e.copyFromChannel),
            copyToChannel: (n => (r, s, i = 0) => {
                const o = t(i), a = t(s);
                if (o < e.length) {
                    return n.call(e, r, a, o);
                }
            })(e.copyToChannel),
            buffer: n,
            param: e.param._param,
            ticks: this._getTicksUntilEvent(o, e.time),
            time: e.time.valueOf(),
            urls: this.convertDrumRackKeys(e.urls),
            isVisible: true,
            isVisible: false,
            isCurrent: false,
            isMissed: true,
            isCurrent: true,
            isPassed: true,
            r: n[r],
            _act: 0,
            _zTime: -Bt,
            _gsap: this,
            _onUpdate: l,
            _initted: (!e._op || e._pt) && !_e,
            _pt: i,
            r: n[r],
            o: r[a + 1],
            _: g
        };
        return t.replace(/\/\*[^]*?\*\//g, '').split(/;(?![^(]*\))/g).forEach(n => {
            if (n) {
                const r = n.split(/:([^]+)/);
                r.length > 1 && (e[r[0].trim()] = r[1].trim());
            }
        }), e;
    }
    function nt(t) {
        let e = '';
        if (Cn(t)) {
            e = t;
        } else {
            if (ze(t)) {
                for (let n = 0; n < t.length; n++) {
                    const r = nt(t[n]);
                    r && (e += r + ' ');
                }
            } else {
                if (Yt(t)) {
                    for (const n in t)
                        t[n] && (e += n + ' ');
                }
            }
        }
        return e.trim();
    }
    const YL = H2('itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly');
    function O8(t) {
        return !!t || t === '';
    }
    function KL(t, e) {
        if (t.length !== e.length) {
            return false;
        }
        let n = true;
        for (let r = 0; n && r < t.length; r++) {
            n = Am(t[r], e[r]);
        }
        return n;
    }
    function Am(t, e) {
        if (t === e) {
            return true;
        }
        let n = AE(t), r = AE(e);
        if (n || r) {
            return n && r ? t.getTime() === e.getTime() : false;
        }
        if (n = Bh(t), r = Bh(e), n || r) {
            return t === e;
        }
        if (n = ze(t), r = ze(e), n || r) {
            return n && r ? KL(t, e) : false;
        }
        if (n = Yt(t), r = Yt(e), n || r) {
            if (!n || !r) {
                return false;
            }
            const s = Object.keys(t).length, i = Object.keys(e).length;
            if (s !== i) {
                return false;
            }
            for (const o in t) {
                const a = t.hasOwnProperty(o), l = e.hasOwnProperty(o);
                if (a && !l || !a && l || !Am(t[o], e[o])) {
                    return false;
                }
            }
        }
        return String(t) === String(e);
    }
    function A8(t, e) {
        return t.findIndex(n => Am(n, e));
    }
    const Nt = t => Cn(t) ? t : t == null ? '' : ze(t) || Yt(t) && (t.toString === S8 || !pt(t.toString)) ? JSON.stringify(t, C8, 2) : String(t), C8 = (t, e) => e && e.__v_isRef ? C8(t, e.value) : Sl(e) ? { [`Map(${ e.size })`]: [...e.entries()].reduce((n, [r, s]) => (n[`${ r } =>`] = s, n), {}) } : Sm(e) ? { [`Set(${ e.size })`]: [...e.values()] } : Yt(e) && !ze(e) && !w8(e) ? String(e) : e;
    let Ls;
    class I8 {
        constructor(e = false) {
            this.detached = e;
            this._active = true;
            this.effects = [];
            this.cleanups = [];
            this.parent = Ls;
            !e && Ls && (this.index = (Ls.scopes || (Ls.scopes = [])).push(this) - 1);
            ;
        }
        get active() {
            return this._active;
        }
        run(e) {
            if (this._active) {
                const n = Ls;
                try {
                    return Ls = this, e();
                } finally {
                    Ls = n;
                }
            }
        }
        on() {
            Ls = this;
        }
        off() {
            Ls = this.parent;
        }
        stop(e) {
            if (this._active) {
                let n, r;
                for (n = 0, r = this.effects.length; n < r; n++) {
                    this.effects[n].stop();
                }
                for (n = 0, r = this.cleanups.length; n < r; n++) {
                    this.cleanups[n]();
                }
                if (this.scopes) {
                    for (n = 0, r = this.scopes.length; n < r; n++) {
                        this.scopes[n].stop(true);
                    }
                }
                if (!this.detached && this.parent && !e) {
                    const s = this.parent.scopes.pop();
                    s && s !== this && (this.parent.scopes[this.index] = s, s.index = this.index);
                }
                this.parent = void 0;
                this._active = false;
                ;
            }
        }
    }
    function ZL(t) {
        return new I8(t);
    }
    function XL(t, e = Ls) {
        e && e.active && e.effects.push(t);
    }
    function QL() {
        return Ls;
    }
    const Z2 = t => {
            const e = new Set(t);
            return e.w = 0, e.n = 0, e;
        }, k8 = t => (t.w & aa) > 0, N8 = t => (t.n & aa) > 0, JL = ({deps: t}) => {
            if (t.length) {
                for (let e = 0; e < t.length; e++) {
                    t[e].w |= aa;
                }
            }
        }, eF = t => {
            const {deps: e} = t;
            if (e.length) {
                let n = 0;
                for (let r = 0; r < e.length; r++) {
                    const s = e[r];
                    k8(s) && !N8(s) ? s.delete(t) : e[n++] = s;
                    ;
                    ;
                    ;
                }
                ;
            }
        }, i0 = new WeakMap();
    let uh = 0, aa = 1;
    ;
    let Vs;
    const dc = Symbol(''), a0 = Symbol('');
    class X2 {
        constructor(e, n = null, r) {
            this.fn = e;
            this.scheduler = n;
            this.active = true;
            this.deps = [];
            this.parent = void 0;
            XL(this, r);
            ;
        }
        run() {
            if (!this.active) {
                return this.fn();
            }
            let e = Vs, n = Qo;
            for (; e;) {
                if (e === this) {
                    return;
                }
                e = e.parent;
            }
            try {
                return this.parent = Vs, Vs = this, Qo = true, aa = 1 << ++uh, uh <= 30 ? JL(this) : IE(this), this.fn();
            } finally {
                uh <= 30 && eF(this);
                aa = 1 << --uh;
                Vs = this.parent;
                Qo = n;
                this.parent = void 0;
                this.deferStop && this.stop();
                ;
            }
        }
        stop() {
            Vs === this ? this.deferStop = true : this.active && (IE(this), this.onStop && this.onStop(), this.active = false);
        }
    }
    function IE(t) {
        const {deps: e} = t;
        if (e.length) {
            for (let n = 0; n < e.length; n++) {
                e[n].delete(t);
            }
            ;
        }
    }
    let Qo = true;
    const x8 = [];
    function _u() {
        x8.push(Qo);
        Qo = false;
        ;
    }
    function yu() {
        const t = x8.pop();
        Qo = t === void 0 ? true : t;
    }
    function Br(t, e, n) {
        if (Qo && Vs) {
            let r = i0.get(t);
            r || i0.set(t, r = new Map());
            let s = r.get(n);
            s || r.set(n, s = Z2());
            P8(s);
            ;
        }
    }
    function P8(t, e) {
        let n = false;
        uh <= 30 ? N8(t) || (t.n |= aa, n = !k8(t)) : n = !t.has(Vs);
        n && (t.add(Vs), Vs.deps.push(t));
        ;
    }
    function lo(t, e, n, r, s, i) {
        const o = i0.get(t);
        if (!o) {
            return;
        }
        let a = [];
        if (e === 'clear') {
            a = [...o.values()];
        } else {
            if (n === 'length' && ze(t)) {
                const l = Number(r);
                o.forEach((u, f) => {
                    (f === 'length' || f >= l) && a.push(u);
                });
            } else {
                switch (n !== void 0 && a.push(o.get(n)), e) {
                case 'add':
                    ze(t) ? K2(n) && a.push(o.get('length')) : (a.push(o.get(dc)), Sl(t) && a.push(o.get(a0)));
                    break;
                case 'delete':
                    ze(t) || (a.push(o.get(dc)), Sl(t) && a.push(o.get(a0)));
                    break;
                case 'set':
                    Sl(t) && a.push(o.get(dc));
                    break;
                }
            }
        }
        if (a.length === 1) {
            a[0] && c0(a[0]);
        } else {
            const l = [];
            for (const u of a)
                u && l.push(...u);
            c0(Z2(l));
        }
    }
    function c0(t, e) {
        const n = ze(t) ? t : [...t];
        for (const r of n)
            r.computed && kE(r);
        for (const r of n)
            r.computed || kE(r);
    }
    function kE(t, e) {
        (t !== Vs || t.allowRecurse) && (t.scheduler ? t.scheduler() : t.run());
    }
    const tF = H2('__proto__,__v_isRef,__isVue'), R8 = new Set(Object.getOwnPropertyNames(Symbol).filter(t => t !== 'arguments' && t !== 'caller').map(t => Symbol[t]).filter(Bh)), nF = Q2(), rF = Q2(false, true), sF = Q2(true), NE = iF();
    function iF() {
        const t = {
            e: function (...n) {
                const r = Dt(this);
                for (let i = 0, o = this.length; i < o; i++) {
                    Br(r, 'get', i + '');
                }
                const s = r[e](...n);
                return s === -1 || s === false ? r[e](...n.map(Dt)) : s;
            },
            e: function (...n) {
                _u();
                const r = Dt(this)[e].apply(this, n);
                return yu(), r;
            }
        };
        return [
            'includes',
            'indexOf',
            'lastIndexOf'
        ].forEach(e => {
            ;
        }), [
            'push',
            'pop',
            'shift',
            'unshift',
            'splice'
        ].forEach(e => {
            ;
        }), t;
    }
    function oF(t) {
        const e = Dt(this);
        return Br(e, 'has', t), e.hasOwnProperty(t);
    }
    function Q2(t = false, e = false) {
        return function (r, s, i) {
            if (s === '__v_isReactive') {
                return !t;
            }
            if (s === '__v_isReadonly') {
                return t;
            }
            if (s === '__v_isShallow') {
                return e;
            }
            if (s === '__v_raw' && i === (t ? e ? TF : F8 : e ? L8 : $8).get(r)) {
                return r;
            }
            const o = ze(r);
            if (!t) {
                if (o && Rt(NE, s)) {
                    return Reflect.get(NE, s, i);
                }
                if (s === 'hasOwnProperty') {
                    return oF;
                }
            }
            const a = Reflect.get(r, s, i);
            return (Bh(s) ? R8.has(s) : tF(s)) || (t || Br(r, 'get', s), e) ? a : Zn(a) ? o && K2(s) ? a : a.value : Yt(a) ? t ? U8(a) : Tc(a) : a;
        };
    }
    const aF = M8(), cF = M8(true);
    function M8(t = false) {
        return function (n, r, s, i) {
            let o = n[r];
            if (Gl(o) && Zn(o) && !Zn(s)) {
                return false;
            }
            if (!t && (!Wp(s) && !Gl(s) && (o = Dt(o), s = Dt(s)), !ze(n) && Zn(o) && !Zn(s))) {
                return o.value = s, true;
            }
            const a = ze(n) && K2(r) ? Number(r) < n.length : Rt(n, r), l = Reflect.set(n, r, s, i);
            return n === Dt(i) && (a ? qh(s, o) && lo(n, 'set', r, s) : lo(n, 'add', r, s)), l;
        };
    }
    function lF(t, e) {
        const n = Rt(t, e);
        t[e];
        const r = Reflect.deleteProperty(t, e);
        return r && n && lo(t, 'delete', e, void 0), r;
    }
    function uF(t, e) {
        const n = Reflect.has(t, e);
        return (!Bh(e) || !R8.has(e)) && Br(t, 'has', e), n;
    }
    function hF(t) {
        return Br(t, 'iterate', ze(t) ? 'length' : dc), Reflect.ownKeys(t);
    }
    const D8 = {
            get: nF,
            set: aF,
            deleteProperty: lF,
            has: uF,
            ownKeys: hF
        }, fF = {
            get: sF,
            set(t, e) {
                return true;
            },
            deleteProperty(t, e) {
                return true;
            }
        }, dF = xn({}, D8, {
            get: rF,
            set: cF
        }), J2 = t => t, Cm = t => Reflect.getPrototypeOf(t);
    function Xd(t, e, n = false, r = false) {
        t = t.__v_raw;
        const s = Dt(t), i = Dt(e);
        n || (e !== i && Br(s, 'get', e), Br(s, 'get', i));
        const {has: o} = Cm(s), a = r ? J2 : n ? nv : Vh;
        if (o.call(s, e)) {
            return a(t.get(e));
        }
        if (o.call(s, i)) {
            return a(t.get(i));
        }
        t !== s && t.get(e);
    }
    function Qd(t, e = false) {
        const n = this.__v_raw, r = Dt(n), s = Dt(t);
        return e || (t !== s && Br(r, 'has', t), Br(r, 'has', s)), t === s ? n.has(t) : n.has(t) || n.has(s);
    }
    function Jd(t, e = false) {
        return t = t.__v_raw, !e && Br(Dt(t), 'iterate', dc), Reflect.get(t, 'size', t);
    }
    function xE(t) {
        t = Dt(t);
        const e = Dt(this);
        return Cm(e).has.call(e, t) || (e.add(t), lo(e, 'add', t, t)), this;
    }
    function PE(t, e) {
        e = Dt(e);
        const n = Dt(this), {
                has: r,
                get: s
            } = Cm(n);
        let i = r.call(n, t);
        i || (t = Dt(t), i = r.call(n, t));
        const o = s.call(n, t);
        return n.set(t, e), i ? qh(e, o) && lo(n, 'set', t, e) : lo(n, 'add', t, e), this;
    }
    function RE(t) {
        const e = Dt(this), {
                has: n,
                get: r
            } = Cm(e);
        let s = n.call(e, t);
        s || (t = Dt(t), s = n.call(e, t));
        r && r.call(e, t);
        ;
        const i = e.delete(t);
        return s && lo(e, 'delete', t, void 0), i;
    }
    function ME() {
        const t = Dt(this), e = t.size !== 0, n = t.clear();
        return e && lo(t, 'clear', void 0, void 0), n;
    }
    function ep(t, e) {
        return function (r, s) {
            const i = this, o = i.__v_raw, a = Dt(o), l = e ? J2 : t ? nv : Vh;
            return !t && Br(a, 'iterate', dc), o.forEach((u, f) => r.call(s, l(u), l(f), i));
        };
    }
    function tp(t, e, n) {
        return function (...r) {
            const s = this.__v_raw, i = Dt(s), o = Sl(i), a = t === 'entries' || t === Symbol.iterator && o, l = t === 'keys' && o, u = s[t](...r), f = n ? J2 : e ? nv : Vh;
            return !e && Br(i, 'iterate', l ? a0 : dc), {
                next() {
                    const {
                        value: d,
                        done: p
                    } = u.next();
                    return p ? {
                        value: d,
                        done: p
                    } : {
                        value: a ? [
                            f(d[0]),
                            f(d[1])
                        ] : f(d),
                        done: p
                    };
                },
                [Symbol.iterator]() {
                    return this;
                }
            };
        };
    }
    function Po(t) {
        return function (...e) {
            return t === 'delete' ? false : this;
        };
    }
    function pF() {
        const t = {
                get(i) {
                    return Xd(this, i);
                },
                get size() {
                    return Jd(this);
                },
                has: Qd,
                add: xE,
                set: PE,
                delete: RE,
                clear: ME,
                forEach: ep(false, false)
            }, e = {
                get(i) {
                    return Xd(this, i, false, true);
                },
                get size() {
                    return Jd(this);
                },
                has: Qd,
                add: xE,
                set: PE,
                delete: RE,
                clear: ME,
                forEach: ep(false, true)
            }, n = {
                get(i) {
                    return Xd(this, i, true);
                },
                get size() {
                    return Jd(this, true);
                },
                has(i) {
                    return Qd.call(this, i, true);
                },
                add: Po('add'),
                set: Po('set'),
                delete: Po('delete'),
                clear: Po('clear'),
                forEach: ep(true, false)
            }, r = {
                get(i) {
                    return Xd(this, i, true, true);
                },
                get size() {
                    return Jd(this, true);
                },
                has(i) {
                    return Qd.call(this, i, true);
                },
                add: Po('add'),
                set: Po('set'),
                delete: Po('delete'),
                clear: Po('clear'),
                forEach: ep(true, true)
            };
        return [
            'keys',
            'values',
            'entries',
            Symbol.iterator
        ].forEach(i => {
            ;
            ;
            ;
            ;
            ;
        }), [
            t,
            n,
            e,
            r
        ];
    }
    const [mF, gF, _F, yF] = pF();
    function ev(t, e) {
        const n = e ? t ? yF : _F : t ? gF : mF;
        return (r, s, i) => s === '__v_isReactive' ? !t : s === '__v_isReadonly' ? t : s === '__v_raw' ? r : Reflect.get(Rt(n, s) && s in r ? n : r, s, i);
    }
    const vF = { get: ev(false, false) }, bF = { get: ev(false, true) }, EF = { get: ev(true, false) }, $8 = new WeakMap(), L8 = new WeakMap(), F8 = new WeakMap(), TF = new WeakMap();
    function SF(t) {
        switch (t) {
        case 'Object':
        case 'Array':
            return 1;
        case 'Map':
        case 'Set':
        case 'WeakMap':
        case 'WeakSet':
            return 2;
        default:
            return 0;
        }
    }
    function wF(t) {
        return t.__v_skip || !Object.isExtensible(t) ? 0 : SF(UL(t));
    }
    function Tc(t) {
        return Gl(t) ? t : tv(t, false, D8, vF, $8);
    }
    function OF(t) {
        return tv(t, false, dF, bF, L8);
    }
    function U8(t) {
        return tv(t, true, fF, EF, F8);
    }
    function tv(t, e, n, r, s) {
        if (!Yt(t) || t.__v_raw && !(e && t.__v_isReactive)) {
            return t;
        }
        const i = s.get(t);
        if (i) {
            return i;
        }
        const o = wF(t);
        if (o === 0) {
            return t;
        }
        const a = new Proxy(t, o === 2 ? r : n);
        return s.set(t, a), a;
    }
    function wl(t) {
        return Gl(t) ? wl(t.__v_raw) : !!(t && t.__v_isReactive);
    }
    function Gl(t) {
        return !!(t && t.__v_isReadonly);
    }
    function Wp(t) {
        return !!(t && t.__v_isShallow);
    }
    function B8(t) {
        return wl(t) || Gl(t);
    }
    function Dt(t) {
        const e = t && t.__v_raw;
        return e ? Dt(e) : t;
    }
    function q8(t) {
        return jp(t, '__v_skip', true), t;
    }
    const Vh = t => Yt(t) ? Tc(t) : t, nv = t => Yt(t) ? U8(t) : t;
    function V8(t) {
        Qo && Vs && (t = Dt(t), P8(t.dep || (t.dep = Z2())));
    }
    function G8(t, e) {
        t = Dt(t);
        const n = t.dep;
        n && c0(n);
    }
    function Zn(t) {
        return !!(t && t.__v_isRef === true);
    }
    function Qr(t) {
        return j8(t, false);
    }
    function AF(t) {
        return j8(t, true);
    }
    function j8(t, e) {
        return Zn(t) ? t : new CF(t, e);
    }
    class CF {
        constructor(e, n) {
            this.__v_isShallow = n;
            this.dep = void 0;
            this.__v_isRef = true;
            this._rawValue = n ? e : Dt(e);
            this._value = n ? e : Vh(e);
            ;
        }
        get value() {
            return V8(this), this._value;
        }
        set value(e) {
            const n = this.__v_isShallow || Wp(e) || Gl(e);
            e = n ? e : Dt(e);
            qh(e, this._rawValue) && (this._rawValue = e, this._value = n ? e : Vh(e), G8(this));
            ;
        }
    }
    function IF(t) {
        return Zn(t) ? t.value : t;
    }
    const kF = {
        get: (t, e, n) => IF(Reflect.get(t, e, n)),
        set: (t, e, n, r) => {
            const s = t[e];
            return Zn(s) && !Zn(n) ? (s.value = n, true) : Reflect.set(t, e, n, r);
        }
    };
    function W8(t) {
        return wl(t) ? t : new Proxy(t, kF);
    }
    class NF {
        constructor(e, n, r, s) {
            this._setter = n;
            this.dep = void 0;
            this.__v_isRef = true;
            this.__v_isReadonly = false;
            this._dirty = true;
            this.effect = new X2(e, () => {
                this._dirty || (this._dirty = true, G8(this));
            });
            this.effect.computed = this;
            this.effect.active = this._cacheable = !s;
            this.__v_isReadonly = r;
            ;
        }
        get value() {
            const e = Dt(this);
            return V8(e), (e._dirty || !e._cacheable) && (e._dirty = false, e._value = e.effect.run()), e._value;
        }
        set value(e) {
            this._setter(e);
        }
    }
    function xF(t, e, n = false) {
        let r, s;
        const i = pt(t);
        return i ? (r = t, s = zs) : (r = t.get, s = t.set), new NF(r, s, i || !s, n);
    }
    function Jo(t, e, n, r) {
        let s;
        try {
            s = r ? t(...r) : t();
        } catch (i) {
            Im(i, e, n);
        }
        return s;
    }
    function ws(t, e, n, r) {
        if (pt(t)) {
            const i = Jo(t, e, n, r);
            return i && T8(i) && i.catch(o => {
                Im(o, e, n);
            }), i;
        }
        const s = [];
        for (let i = 0; i < t.length; i++) {
            s.push(ws(t[i], e, n, r));
        }
        return s;
    }
    function Im(t, e, n, r = true) {
        const s = e ? e.vnode : null;
        if (e) {
            let i = e.parent;
            const o = e.proxy, a = n;
            for (; i;) {
                const u = i.ec;
                if (u) {
                    for (let f = 0; f < u.length; f++) {
                        if (u[f](t, o, a) === false) {
                            return;
                        }
                    }
                }
                i = i.parent;
            }
            const l = e.appContext.config.errorHandler;
            if (l) {
                Jo(l, null, 10, [
                    t,
                    o,
                    a
                ]);
                return;
            }
        }
        PF(t, n, s, r);
    }
    function PF(t, e, n, r = true) {
        console.error(t);
    }
    let Gh = false, l0 = false;
    const cr = [];
    let vi = 0;
    const Ol = [];
    let Xi = null, tc = 0;
    const H8 = Promise.resolve();
    let rv = null;
    function RF(t) {
        const e = rv || H8;
        return t ? e.then(this ? t.bind(this) : t) : e;
    }
    function MF(t) {
        let e = vi + 1, n = cr.length;
        for (; e < n;) {
            const r = e + n >>> 1;
            jh(cr[r]) < t ? e = r + 1 : n = r;
        }
        return e;
    }
    function sv(t) {
        (!cr.length || !cr.includes(t, Gh && t.allowRecurse ? vi + 1 : vi)) && (t.id == null ? cr.push(t) : cr.splice(MF(t.id), 0, t), z8());
    }
    function z8() {
        !Gh && !l0 && (l0 = true, rv = H8.then(K8));
    }
    function DF(t) {
        const e = cr.indexOf(t);
        e > vi && cr.splice(e, 1);
    }
    function $F(t) {
        ze(t) ? Ol.push(...t) : (!Xi || !Xi.includes(t, t.allowRecurse ? tc + 1 : tc)) && Ol.push(t);
        z8();
        ;
    }
    function DE(t, e = Gh ? vi + 1 : 0) {
        for (; e < cr.length; e++) {
            const n = cr[e];
            n && n.pre && (cr.splice(e, 1), e--, n());
        }
    }
    function Y8(t) {
        if (Ol.length) {
            const e = [...new Set(Ol)];
            if (Ol.length = 0, Xi) {
                Xi.push(...e);
                return;
            }
            for (Xi = e, Xi.sort((n, r) => jh(n) - jh(r)), tc = 0; tc < Xi.length; tc++) {
                Xi[tc]();
            }
            Xi = null;
            tc = 0;
            ;
        }
    }
    const jh = t => t.id == null ? 1e+400 : t.id, LF = (t, e) => {
            const n = jh(t) - jh(e);
            if (n === 0) {
                if (t.pre && !e.pre) {
                    return -1;
                }
                if (e.pre && !t.pre) {
                    return 1;
                }
            }
            return n;
        };
    function K8(t) {
        l0 = false;
        Gh = true;
        cr.sort(LF);
        ;
        const e = zs;
        try {
            for (vi = 0; vi < cr.length; vi++) {
                const n = cr[vi];
                n && n.active !== false && Jo(n, null, 14);
            }
        } finally {
            vi = 0;
            cr.length = 0;
            Y8();
            Gh = false;
            rv = null;
            (cr.length || Ol.length) && K8();
            ;
        }
    }
    function FF(t, e, ...n) {
        if (t.isUnmounted) {
            return;
        }
        const r = t.vnode.props || nn;
        let s = n;
        const i = e.startsWith('update:'), o = i && e.slice(7);
        if (o && o in r) {
            const f = `${ o === 'modelValue' ? 'model' : o }Modifiers`, {
                    number: d,
                    trim: p
                } = r[f] || nn;
            p && (s = n.map(_ => Cn(_) ? _.trim() : _));
            d && (s = n.map(r0));
            ;
        }
        let a, l = r[a = z_(e)] || r[a = z_(Ti(e))];
        !l && i && (l = r[a = z_(Pc(e))]);
        l && ws(l, t, 6, s);
        ;
        const u = r[a + 'Once'];
        if (u) {
            if (!t.emitted) {
                ;
            } else {
                if (t.emitted[a]) {
                    return;
                }
            }
            t.emitted[a] = true;
            ws(u, t, 6, s);
            ;
        }
    }
    function Z8(t, e, n = false) {
        const r = e.emitsCache, s = r.get(t);
        if (s !== void 0) {
            return s;
        }
        const i = t.emits;
        let o = {
                value: r,
                d: true,
                s: r[e + s],
                DOMException: a.DOMException,
                DOMException: function (Q, ue) {
                    this.message = Q;
                    this.name = ue;
                    ;
                    var _e = Error(Q);
                    this.stack = _e.stack;
                },
                warned: true,
                lastIndex: 0,
                status_code: this.status,
                code: y,
                value: oe,
                __composer: u,
                textContent: l,
                textContent: Reflect.apply(l.t, l, [...uw(u)]),
                p: v,
                onaudioprocess: null,
                onaudioprocess: () => s.currentTime,
                e: Math.ceil(e / 127 * 5) / 5,
                type: this._type,
                immediateRender: Fr(a.immediateRender),
                _dirty: 0,
                _onInit: function (a) {
                    var l, u;
                    if (dr(i) && (l = {}, is(i, function (f) {
                            return l[f] = 1;
                        }), i = l), n) {
                        l = {};
                        for (u in i);
                        i = l;
                    }
                    h8e(a, i);
                },
                scaleX: o.scaleY = r,
                n: r,
                a: e0(n[a]) && a !== 'render' ? n[a].call(r, s, e, i) : n[a]
            }, a = false;
        if (!pt(t)) {
            const l = u => {
                const f = Z8(u, e, true);
                f && (a = true, xn(o, f));
            };
            !n && e.mixins.length && e.mixins.forEach(l);
            t.extends && l(t.extends);
            t.mixins && t.mixins.forEach(l);
            ;
        }
        return !i && !a ? (Yt(t) && r.set(t, null), null) : (ze(i) ? i.forEach(l => o[l] = null) : xn(o, i), Yt(t) && r.set(t, o), o);
    }
    function km(t, e) {
        return !t || !Tm(e) ? false : (e = e.slice(2).replace(/Once$/, ''), Rt(t, e[0].toLowerCase() + e.slice(1)) || Rt(t, Pc(e)) || Rt(t, e));
    }
    let Xn = null, Nm = null;
    function Hp(t) {
        const e = Xn;
        return Xn = t, Nm = t && t.type.__scopeId || null, e;
    }
    function Ri(t) {
        Nm = t;
    }
    function Mi() {
        Nm = null;
    }
    function go(t, e = Xn, n) {
        if (!e || t._n) {
            return t;
        }
        const r = (...s) => {
            r._d && zE(-1);
            const i = Hp(e);
            let o;
            try {
                o = t(...s);
            } finally {
                Hp(i);
                r._d && zE(1);
                ;
            }
            return o;
        };
        return r._n = true, r._c = true, r._d = true, r;
    }
    function Y_(t) {
        const {
            type: e,
            vnode: n,
            proxy: r,
            withProxy: s,
            props: i,
            propsOptions: [o],
            slots: a,
            attrs: l,
            emit: u,
            render: f,
            renderCache: d,
            data: p,
            setupState: _,
            ctx: v,
            inheritAttrs: y
        } = t;
        let g, b;
        const A = Hp(t);
        try {
            if (n.shapeFlag & 4) {
                const I = s || r;
                g = _i(f.call(I, I, d, i, _, p, v));
                b = l;
                ;
            } else {
                const I = e;
                g = _i(I.length > 1 ? I(i, {
                    attrs: l,
                    slots: a,
                    emit: u
                }) : I(i, null));
                b = e.props ? l : UF(l);
                ;
            }
        } catch (I) {
            Eh.length = 0;
            Im(I, t, 1);
            g = Ye(Os);
            ;
        }
        let N = g;
        if (b && y !== false) {
            const I = Object.keys(b), {shapeFlag: O} = N;
            I.length && O & 7 && (o && I.some(z2) && (b = BF(b, o)), N = ca(N, b));
        }
        return n.dirs && (N = ca(N), N.dirs = N.dirs ? N.dirs.concat(n.dirs) : n.dirs), n.transition && (N.transition = n.transition), g = N, Hp(A), g;
    }
    const UF = t => {
            let e;
            for (const n in t)
                (n === 'class' || n === 'style' || Tm(n)) && ((e || (e = {}))[n] = t[n]);
            return e;
        }, BF = (t, e) => {
            const n = {
                i: tp(i, true, false),
                r: vr(t[r], e[r]),
                t: e,
                d: m0(s, l, d, u[d], t, !Rt(u, d)),
                __VUE__: true,
                i: r,
                i: o,
                r: s,
                prototype: e.prototype,
                s: $.truncate(r, e),
                new_tab: t.which === 2 || t.metaKey || t.ctrlKey || e.target === '_blank',
                href: e.href,
                element: e,
                t: e,
                r: t[r],
                Server: Le,
                WebSocket: it,
                SocketIO: yt,
                distanceAccumulator: l,
                hidden: true,
                client: e,
                textContent: s || '',
                missingWarn: It(s) ? !s : s,
                fallbackWarn: It(s) ? !s : s,
                fallbackFormat: s,
                inheritLocale: s,
                warnHtmlMessage: s !== 'off',
                escapeParameter: s,
                onmessage: null,
                onmessage: () => s(),
                oncomplete: () => {
                    r.disconnect();
                    s(n.currentTime !== 0);
                    ;
                },
                copyFromChannel: (r, s, i = 0) => {
                    const o = t(i), a = t(s);
                    if (a >= n.numberOfChannels) {
                        throw e();
                    }
                    const l = n.length, u = n.getChannelData(a), f = r.length;
                    for (let d = o < 0 ? -o : 0; d + o < l && d < f; d += 1) {
                        ;
                    }
                },
                copyToChannel: (r, s, i = 0) => {
                    const o = t(i), a = t(s);
                    if (a >= n.numberOfChannels) {
                        throw e();
                    }
                    const l = n.length, u = n.getChannelData(a), f = r.length;
                    for (let d = o < 0 ? -o : 0; d + o < l && d < f; d += 1) {
                        u[d + o] = r[d];
                    }
                },
                buffer: e,
                o: i[o],
                r: this.getChannelData(r),
                s: (r + 0.02 * i) / 1.02,
                s: 3.5,
                f: r + s + i + o + a + l + u + d * 0.5362,
                f: 0.11,
                r: Math.random() * 2 - 1,
                loopStart: e,
                loopEnd: e,
                loop: e,
                fadeIn: e,
                fadeOut: e,
                o: l,
                i: a,
                _next: n._prev = n.parent = null,
                _dirty: 1,
                r: arguments[r],
                r: arguments[r],
                z: '0px',
                rotationY: n.rotationX = '0deg',
                force3D: 0
            };
            for (const r in t)
                (!z2(r) || !(r.slice(9) in e)) && (n[r] = t[r]);
            return n;
        };
    function qF(t, e, n) {
        const {
                props: r,
                children: s,
                component: i
            } = t, {
                props: o,
                children: a,
                patchFlag: l
            } = e, u = i.emitsOptions;
        if (e.dirs || e.transition) {
            return true;
        }
        if (n && l >= 0) {
            if (l & 1024) {
                return true;
            }
            if (l & 16) {
                return r ? $E(r, o, u) : !!o;
            }
            if (l & 8) {
                const f = e.dynamicProps;
                for (let d = 0; d < f.length; d++) {
                    const p = f[d];
                    if (o[p] !== r[p] && !km(u, p)) {
                        return true;
                    }
                }
            }
        } else {
            return (s || a) && (!a || !a.$stable) ? true : r === o ? false : r ? o ? $E(r, o, u) : true : !!o;
        }
        return false;
    }
    function $E(t, e, n) {
        const r = Object.keys(e);
        if (r.length !== Object.keys(t).length) {
            return true;
        }
        for (let s = 0; s < r.length; s++) {
            const i = r[s];
            if (e[i] !== t[i] && !km(n, i)) {
                return true;
            }
        }
        return false;
    }
    function VF({
        vnode: t,
        parent: e
    }, n) {
        for (; e && e.subTree === t;) {
            (t = e.vnode).el = n;
            e = e.parent;
            ;
        }
    }
    const GF = t => t.__isSuspense;
    function jF(t, e) {
        e && e.pendingBranch ? ze(t) ? e.effects.push(...t) : e.effects.push(t) : $F(t);
    }
    const np = {};
    function pc(t, e, n) {
        return X8(t, e, n);
    }
    function X8(t, e, {
        immediate: n,
        deep: r,
        flush: s,
        onTrack: i,
        onTrigger: o
    } = nn) {
        var a;
        const l = QL() === ((a = Gn) == null ? void 0 : a.scope) ? Gn : null;
        let u, f = false, d = false;
        if (Zn(t) ? (u = () => t.value, f = Wp(t)) : wl(t) ? (u = () => t, r = true) : ze(t) ? (d = true, f = t.some(I => wl(I) || Wp(I)), u = () => t.map(I => {
                if (Zn(I)) {
                    return I.value;
                }
                if (wl(I)) {
                    return cc(I);
                }
                if (pt(I)) {
                    return Jo(I, l, 2);
                }
            })) : pt(t) ? e ? u = () => Jo(t, l, 2) : u = () => {
                if (!(l && l.isUnmounted)) {
                    return p && p(), ws(t, l, 3, [_]);
                }
            } : u = zs, e && r) {
            const I = u;
            u = () => cc(I());
        }
        let p, _ = I => {
                p = A.onStop = () => {
                    Jo(I, l, 4);
                };
            }, v;
        if (zh) {
            if (_ = zs, e ? n && ws(e, l, 3, [
                    u(),
                    d ? [] : void 0,
                    _
                ]) : u(), s === 'sync') {
                const I = $U();
                v = I.__watcherHandles || (I.__watcherHandles = []);
            } else {
                return zs;
            }
        }
        let y = d ? new Array(t.length).fill(np) : np;
        const g = () => {
            if (A.active) {
                if (e) {
                    const I = A.run();
                    (r || f || (d ? I.some((O, x) => qh(O, y[x])) : qh(I, y))) && (p && p(), ws(e, l, 3, [
                        I,
                        y === np ? void 0 : d && y[0] === np ? [] : y,
                        _
                    ]), y = I);
                } else {
                    A.run();
                }
            }
        };
        ;
        let b;
        s === 'sync' ? b = g : s === 'post' ? b = () => xr(g, l && l.suspense) : (g.pre = true, l && (g.id = l.uid), b = () => sv(g));
        const A = new X2(u, b);
        e ? n ? g() : y = A.run() : s === 'post' ? xr(A.run.bind(A), l && l.suspense) : A.run();
        const N = () => {
            A.stop();
            l && l.scope && Y2(l.scope.effects, A);
            ;
        };
        return v && v.push(N), N;
    }
    function WF(t, e, n) {
        const r = this.proxy, s = Cn(t) ? t.includes('.') ? Q8(r, t) : () => r[t] : t.bind(r, r);
        let i;
        pt(e) ? i = e : (i = e.handler, n = e);
        const o = Gn;
        jl(this);
        const a = X8(s, i.bind(r), n);
        return o ? jl(o) : mc(), a;
    }
    function Q8(t, e) {
        const n = e.split('.');
        return () => {
            let r = t;
            for (let s = 0; s < n.length && r; s++) {
                r = r[n[s]];
            }
            return r;
        };
    }
    function cc(t, e) {
        if (!Yt(t) || t.__v_skip || (e = e || new Set(), e.has(t))) {
            return t;
        }
        if (e.add(t), Zn(t)) {
            cc(t.value, e);
        } else {
            if (ze(t)) {
                for (let n = 0; n < t.length; n++) {
                    cc(t[n], e);
                }
            } else {
                if (Sm(t) || Sl(t)) {
                    t.forEach(n => {
                        cc(n, e);
                    });
                } else {
                    if (w8(t)) {
                        for (const n in t)
                            cc(t[n], e);
                    }
                }
            }
        }
        return t;
    }
    function qe(t, e) {
        const n = Xn;
        if (n === null) {
            return t;
        }
        const r = $m(n) || n.proxy, s = t.dirs || (t.dirs = []);
        for (let i = 0; i < e.length; i++) {
            let [o, a, l, u = nn] = e[i];
            o && (pt(o) && (o = {
                mounted: o,
                updated: o
            }), o.deep && cc(a), s.push({
                dir: o,
                instance: r,
                value: a,
                oldValue: void 0,
                arg: l,
                modifiers: u
            }));
        }
        return t;
    }
    function Ha(t, e, n, r) {
        const s = t.dirs, i = e && e.dirs;
        for (let o = 0; o < s.length; o++) {
            const a = s[o];
            i && (a.oldValue = i[o].value);
            let l = a.dir[r];
            l && (_u(), ws(l, n, 8, [
                t.el,
                a,
                t,
                e
            ]), yu());
        }
    }
    function HF() {
        const t = {
            isMounted: false,
            isLeaving: false,
            isUnmounting: false,
            leavingVNodes: new Map()
        };
        return iv(() => {
            ;
        }), s7(() => {
            ;
        }), t;
    }
    const _s = [
            Function,
            Array
        ], J8 = {
            mode: String,
            appear: Boolean,
            persisted: Boolean,
            onBeforeEnter: _s,
            onEnter: _s,
            onAfterEnter: _s,
            onEnterCancelled: _s,
            onBeforeLeave: _s,
            onLeave: _s,
            onAfterLeave: _s,
            onLeaveCancelled: _s,
            onBeforeAppear: _s,
            onAppear: _s,
            onAfterAppear: _s,
            onAppearCancelled: _s
        }, zF = {
            name: 'BaseTransition',
            props: J8,
            setup(t, {slots: e}) {
                const n = Hh(), r = HF();
                let s;
                return () => {
                    const i = e.default && t7(e.default(), true);
                    if (!i || !i.length) {
                        return;
                    }
                    let o = i[0];
                    if (i.length > 1) {
                        for (const y of i)
                            if (y.type !== Os) {
                                o = y;
                                break;
                            }
                    }
                    const a = Dt(t), {mode: l} = a;
                    if (r.isLeaving) {
                        return K_(o);
                    }
                    const u = LE(o);
                    if (!u) {
                        return K_(o);
                    }
                    const f = u0(u, a, r, n);
                    h0(u, f);
                    const d = n.subTree, p = d && LE(d);
                    let _ = false;
                    const {getTransitionKey: v} = u.type;
                    if (v) {
                        const y = v();
                        s === void 0 ? s = y : y !== s && (s = y, _ = true);
                    }
                    if (p && p.type !== Os && (!nc(u, p) || _)) {
                        const y = u0(p, a, r, n);
                        if (h0(p, y), l === 'out-in') {
                            return r.isLeaving = true, y.afterLeave = () => {
                                ;
                                n.update.active !== false && n.update();
                                ;
                            }, K_(o);
                        }
                        l === 'in-out' && u.type !== Os && (y.delayLeave = (g, b, A) => {
                            const N = e7(r, p);
                            N[String(p.key)] = p;
                            ;
                            f.delayedLeave = A;
                            ;
                        });
                    }
                    return o;
                };
            }
        }, YF = zF;
    function e7(t, e) {
        const {leavingVNodes: n} = t;
        let r = n.get(e.type);
        return r || (r = Object.create(null), n.set(e.type, r)), r;
    }
    function u0(t, e, n, r) {
        const {
                appear: s,
                mode: i,
                persisted: o = false,
                onBeforeEnter: a,
                onEnter: l,
                onAfterEnter: u,
                onEnterCancelled: f,
                onBeforeLeave: d,
                onLeave: p,
                onAfterLeave: _,
                onLeaveCancelled: v,
                onBeforeAppear: y,
                onAppear: g,
                onAfterAppear: b,
                onAppearCancelled: A
            } = e, N = String(t.key), I = e7(n, t), O = (L, U) => {
                L && ws(L, r, 9, U);
            }, x = (L, U) => {
                const ee = U[1];
                O(L, U);
                ze(L) ? L.every(ae => ae.length <= 1) && ee() : L.length <= 1 && ee();
                ;
            }, M = {
                mode: i,
                persisted: o,
                beforeEnter(L) {
                    let U = a;
                    if (!n.isMounted) {
                        if (s) {
                            U = y || a;
                        } else {
                            return;
                        }
                    }
                    L._leaveCb && L._leaveCb(true);
                    const ee = I[N];
                    ee && nc(t, ee) && ee.el._leaveCb && ee.el._leaveCb();
                    O(U, [L]);
                    ;
                },
                enter(L) {
                    let U = l, ee = u, ae = f;
                    if (!n.isMounted) {
                        if (s) {
                            U = g || l;
                            ee = b || u;
                            ae = A || f;
                            ;
                        } else {
                            return;
                        }
                    }
                    let Z = false;
                    const fe = L._enterCb = ge => {
                        Z || (Z = true, ge ? O(ae, [L]) : O(ee, [L]), M.delayedLeave && M.delayedLeave(), L._enterCb = void 0);
                    };
                    U ? x(U, [
                        L,
                        fe
                    ]) : fe();
                },
                leave(L, U) {
                    const ee = String(t.key);
                    if (L._enterCb && L._enterCb(true), n.isUnmounting) {
                        return U();
                    }
                    O(d, [L]);
                    let ae = false;
                    const Z = L._leaveCb = fe => {
                        ae || (ae = true, U(), fe ? O(v, [L]) : O(_, [L]), L._leaveCb = void 0, I[ee] === t && delete I[ee]);
                    };
                    I[ee] = t;
                    p ? x(p, [
                        L,
                        Z
                    ]) : Z();
                    ;
                },
                clone(L) {
                    return u0(L, e, n, r);
                }
            };
        return M;
    }
    function K_(t) {
        if (xm(t)) {
            return t = ca(t), t.children = null, t;
        }
    }
    function LE(t) {
        return xm(t) ? t.children ? t.children[0] : void 0 : t;
    }
    function h0(t, e) {
        t.shapeFlag & 6 && t.component ? h0(t.component.subTree, e) : t.shapeFlag & 128 ? (t.ssContent.transition = e.clone(t.ssContent), t.ssFallback.transition = e.clone(t.ssFallback)) : t.transition = e;
    }
    function t7(t, e = false, n) {
        let r = [], s = 0;
        for (let i = 0; i < t.length; i++) {
            let o = t[i];
            const a = n == null ? o.key : String(n) + String(o.key != null ? o.key : i);
            o.type === gt ? (o.patchFlag & 128 && s++, r = r.concat(t7(o.children, e, a))) : (e || o.type !== Os) && r.push(a != null ? ca(o, { key: a }) : o);
        }
        if (s > 1) {
            for (let i = 0; i < r.length; i++) {
                r[i].patchFlag = -2;
            }
        }
        return r;
    }
    function at(t, e) {
        return pt(t) ? ((() => xn({ name: t.name }, e, { setup: t }))()) : t;
    }
    const vh = t => !!t.type.__asyncLoader, xm = t => t.type.__isKeepAlive;
    function KF(t, e) {
        n7(t, 'a', e);
    }
    function ZF(t, e) {
        n7(t, 'da', e);
    }
    function n7(t, e, n = Gn) {
        const r = t.__wdc || (t.__wdc = () => {
            let s = n;
            for (; s;) {
                if (s.isDeactivated) {
                    return;
                }
                s = s.parent;
            }
            return t();
        });
        if (Pm(e, r, n), n) {
            let s = n.parent;
            for (; s && s.parent;) {
                xm(s.parent.vnode) && XF(r, e, n, s);
                s = s.parent;
                ;
            }
        }
    }
    function XF(t, e, n, r) {
        const s = Pm(e, t, r, true);
        ov(() => {
            Y2(r[e], s);
        }, n);
    }
    function Pm(t, e, n = Gn, r = false) {
        if (n) {
            const s = n[t] || (n[t] = []), i = e.__weh || (e.__weh = (...o) => {
                    if (n.isUnmounted) {
                        return;
                    }
                    _u();
                    jl(n);
                    ;
                    const a = ws(e, n, t, o);
                    return mc(), yu(), a;
                });
            return r ? s.unshift(i) : s.push(i), i;
        }
    }
    const _o = t => (e, n = Gn) => (!zh || t === 'sp') && Pm(t, (...r) => e(...r), n), r7 = _o('bm'), iv = _o('m'), QF = _o('bu'), JF = _o('u'), s7 = _o('bum'), ov = _o('um'), eU = _o('sp'), tU = _o('rtg'), nU = _o('rtc');
    function rU(t, e = Gn) {
        Pm('ec', t, e);
    }
    ;
    function We(t, e) {
        return cv('components', t, true, e) || t;
    }
    const i7 = Symbol.for('v-ndc');
    function Rm(t) {
        return Cn(t) ? cv('components', t, false) || t : t || i7;
    }
    function fn(t) {
        return cv('directives', t);
    }
    function cv(t, e, n = true, r = false) {
        const s = Xn || Gn;
        if (s) {
            const i = s.type;
            if (t === 'components') {
                const a = RU(i, false);
                if (a && (a === e || a === Ti(e) || a === Om(Ti(e)))) {
                    return i;
                }
            }
            const o = FE(s[t] || i[t], e) || FE(s.appContext[t], e);
            return !o && r ? i : o;
        }
    }
    function FE(t, e) {
        return t && (t[e] || t[Ti(e)] || t[Om(Ti(e))]);
    }
    function wn(t, e, n, r) {
        let s;
        const i = n && n[r];
        if (ze(t) || Cn(t)) {
            s = new Array(t.length);
            for (let o = 0, a = t.length; o < a; o++) {
                ;
            }
        } else {
            if (typeof t == 'number') {
                s = new Array(t);
                for (let o = 0; o < t; o++) {
                    ;
                }
            } else {
                if (Yt(t)) {
                    if (t[Symbol.iterator]) {
                        s = Array.from(t, (o, a) => e(o, a, void 0, i && i[a]));
                    } else {
                        const o = Object.keys(t);
                        s = new Array(o.length);
                        for (let a = 0, l = o.length; a < l; a++) {
                            const u = o[a];
                            ;
                        }
                    }
                } else {
                    s = [];
                }
            }
        }
        return n && (n[r] = s), s;
    }
    function o7(t, e, n = {}, r, s) {
        if (Xn.isCE || Xn.parent && vh(Xn.parent) && Xn.parent.isCE) {
            return e !== 'default' && (n.name = e), Ye('slot', n, r && r());
        }
        let i = t[e];
        i && i._c && (i._d = false);
        G();
        ;
        const o = i && a7(i(n)), a = wt(gt, { key: n.key || o && o.key || `_${ e }` }, o || (r ? r() : []), o && t._ === 1 ? 64 : -2);
        return !s && a.scopeId && (a.slotScopeIds = [a.scopeId + '-s']), i && i._c && (i._d = true), a;
    }
    function a7(t) {
        return t.some(e => Kp(e) ? !(e.type === Os || e.type === gt && !a7(e.children)) : true) ? t : null;
    }
    const f0 = t => t ? y7(t) ? $m(t) || t.proxy : f0(t.parent) : null, bh = xn(Object.create(null), {
            $: t => t,
            $el: t => t.vnode.el,
            $data: t => t.data,
            $props: t => t.props,
            $attrs: t => t.attrs,
            $slots: t => t.slots,
            $refs: t => t.refs,
            $parent: t => f0(t.parent),
            $root: t => f0(t.root),
            $emit: t => t.emit,
            $options: t => lv(t),
            $forceUpdate: t => t.f || (t.f = () => sv(t.update)),
            $nextTick: t => t.n || (t.n = RF.bind(t.proxy)),
            $watch: t => WF.bind(t)
        }), Z_ = (t, e) => t !== nn && !t.__isScriptSetup && Rt(t, e), iU = {
            get({_: t}, e) {
                const {
                    ctx: n,
                    setupState: r,
                    data: s,
                    props: i,
                    accessCache: o,
                    type: a,
                    appContext: l
                } = t;
                let u;
                if (e[0] !== '$') {
                    const _ = o[e];
                    if (_ !== void 0) {
                        switch (_) {
                        case 1:
                            return r[e];
                        case 2:
                            return s[e];
                        case 4:
                            return n[e];
                        case 3:
                            return i[e];
                        }
                    } else {
                        if (Z_(r, e)) {
                            return o[e] = 1, r[e];
                        }
                        if (s !== nn && Rt(s, e)) {
                            return o[e] = 2, s[e];
                        }
                        if ((u = t.propsOptions[0]) && Rt(u, e)) {
                            return o[e] = 3, i[e];
                        }
                        if (n !== nn && Rt(n, e)) {
                            return o[e] = 4, n[e];
                        }
                        d0 && (o[e] = 0);
                    }
                }
                const f = bh[e];
                let d, p;
                if (f) {
                    return e === '$attrs' && Br(t, 'get', e), f(t);
                }
                if ((d = a.__cssModules) && (d = d[e])) {
                    return d;
                }
                if (n !== nn && Rt(n, e)) {
                    return o[e] = 4, n[e];
                }
                if (p = l.config.globalProperties, Rt(p, e)) {
                    return p[e];
                }
            },
            set({_: t}, e, n) {
                const {
                    data: r,
                    setupState: s,
                    ctx: i
                } = t;
                return Z_(s, e) ? (s[e] = n, true) : r !== nn && Rt(r, e) ? (r[e] = n, true) : Rt(t.props, e) || e[0] === '$' && e.slice(1) in t ? false : (i[e] = n, true);
            },
            has({
                _: {
                    data: t,
                    setupState: e,
                    accessCache: n,
                    ctx: r,
                    appContext: s,
                    propsOptions: i
                }
            }, o) {
                let a;
                return !!n[o] || t !== nn && Rt(t, o) || Z_(e, o) || (a = i[0]) && Rt(a, o) || Rt(r, o) || Rt(bh, o) || Rt(s.config.globalProperties, o);
            },
            defineProperty(t, e, n) {
                return n.get != null ? t._.accessCache[e] = 0 : Rt(n, 'value') && this.set(t, e, n.value, null), Reflect.defineProperty(t, e, n);
            }
        };
    function UE(t) {
        return ze(t) ? t.reduce((e, n) => (e[n] = null, e), {}) : t;
    }
    let d0 = true;
    function oU(t) {
        const e = lv(t), n = t.proxy, r = t.ctx;
        d0 = false;
        e.beforeCreate && BE(e.beforeCreate, t, 'bc');
        ;
        const {
            data: s,
            computed: i,
            methods: o,
            watch: a,
            provide: l,
            inject: u,
            created: f,
            beforeMount: d,
            mounted: p,
            beforeUpdate: _,
            updated: v,
            activated: y,
            deactivated: g,
            beforeDestroy: b,
            beforeUnmount: A,
            destroyed: N,
            unmounted: I,
            render: O,
            renderTracked: x,
            renderTriggered: M,
            errorCaptured: L,
            serverPrefetch: U,
            expose: ee,
            inheritAttrs: ae,
            components: Z,
            directives: fe,
            filters: ge
        } = e;
        if (u && aU(u, r, null), o) {
            for (const ue in o) {
                const _e = o[ue];
                pt(_e) && (r[ue] = _e.bind(n));
            }
        }
        if (s) {
            const ue = s.call(n, n);
            Yt(ue) && (t.data = Tc(ue));
        }
        if (d0 = true, i) {
            for (const ue in i) {
                const _e = i[ue], Oe = pt(_e) ? _e.bind(n, n) : pt(_e.get) ? _e.get.bind(n, n) : zs, be = !pt(_e) && pt(_e.set) ? _e.set.bind(n) : zs, Ce = Jr({
                        get: Oe,
                        set: be
                    });
                Object.defineProperty(r, ue, {
                    enumerable: true,
                    configurable: true,
                    get: () => Ce.value,
                    set: Me => Ce.value = Me
                });
            }
        }
        if (a) {
            for (const ue in a)
                c7(a[ue], r, n, ue);
        }
        if (l) {
            const ue = pt(l) ? l.call(n) : l;
            Reflect.ownKeys(ue).forEach(_e => {
                dU(_e, ue[_e]);
            });
        }
        f && BE(f, t, 'c');
        function Q(ue, _e) {
            ze(_e) ? _e.forEach(Oe => ue(Oe.bind(n))) : _e && ue(_e.bind(n));
        }
        if (Q(r7, d), Q(iv, p), Q(QF, _), Q(JF, v), Q(KF, y), Q(ZF, g), Q(rU, L), Q(nU, x), Q(tU, M), Q(s7, A), Q(ov, I), Q(eU, U), ze(ee)) {
            if (ee.length) {
                const ue = t.exposed || (t.exposed = {});
                ee.forEach(_e => {
                    Object.defineProperty(ue, _e, {
                        get: () => n[_e],
                        set: Oe => n[_e] = Oe
                    });
                });
            } else {
                t.exposed || (t.exposed = {});
            }
        }
        O && t.render === zs && (t.render = O);
        ae != null && (t.inheritAttrs = ae);
        Z && (t.components = Z);
        fe && (t.directives = fe);
        ;
    }
    function aU(t, e, n = zs) {
        ze(t) && (t = p0(t));
        for (const r in t) {
            const s = t[r];
            let i;
            Yt(s) ? 'default' in s ? i = oo(s.from || r, s.default, true) : i = oo(s.from || r) : i = oo(s);
            Zn(i) ? Object.defineProperty(e, r, {
                enumerable: true,
                configurable: true,
                get: () => i.value,
                set: o => i.value = o
            }) : e[r] = i;
            ;
        }
    }
    function BE(t, e, n) {
        ws(ze(t) ? t.map(r => r.bind(e.proxy)) : t.bind(e.proxy), e, n);
    }
    function c7(t, e, n, r) {
        const s = r.includes('.') ? Q8(n, r) : () => n[r];
        if (Cn(t)) {
            const i = e[t];
            pt(i) && pc(s, i);
        } else {
            if (pt(t)) {
                pc(s, t.bind(n));
            } else {
                if (Yt(t)) {
                    if (ze(t)) {
                        t.forEach(i => c7(i, e, n, r));
                    } else {
                        const i = pt(t.handler) ? t.handler.bind(n) : e[t.handler];
                        pt(i) && pc(s, i, t);
                    }
                }
            }
        }
    }
    function lv(t) {
        const e = t.type, {
                mixins: n,
                extends: r
            } = e, {
                mixins: s,
                optionsCache: i,
                config: {optionMergeStrategies: o}
            } = t.appContext, a = i.get(e);
        let l;
        return a ? l = a : !s.length && !n && !r ? l = e : (l = {}, s.length && s.forEach(u => zp(l, u, o, true)), zp(l, e, o)), Yt(e) && i.set(e, l), l;
    }
    function zp(t, e, n, r = false) {
        const {
            mixins: s,
            extends: i
        } = e;
        i && zp(t, i, n, true);
        s && s.forEach(o => zp(t, o, n, true));
        ;
        for (const o in e)
            if (!(r && o === 'expose')) {
                const a = cU[o] || n && n[o];
                ;
            }
        return t;
    }
    const cU = {
        data: qE,
        props: VE,
        emits: VE,
        methods: hh,
        computed: hh,
        beforeCreate: vr,
        created: vr,
        beforeMount: vr,
        mounted: vr,
        beforeUpdate: vr,
        updated: vr,
        beforeDestroy: vr,
        beforeUnmount: vr,
        destroyed: vr,
        unmounted: vr,
        activated: vr,
        deactivated: vr,
        errorCaptured: vr,
        serverPrefetch: vr,
        components: hh,
        directives: hh,
        watch: uU,
        provide: qE,
        inject: lU
    };
    function qE(t, e) {
        return e ? t ? function () {
            return xn(pt(t) ? t.call(this, this) : t, pt(e) ? e.call(this, this) : e);
        } : e : t;
    }
    function lU(t, e) {
        return hh(p0(t), p0(e));
    }
    function p0(t) {
        if (ze(t)) {
            const e = {};
            for (let n = 0; n < t.length; n++) {
                e[t[n]] = t[n];
            }
            return e;
        }
        return t;
    }
    function vr(t, e) {
        return t ? [...new Set([].concat(t, e))] : e;
    }
    function hh(t, e) {
        return t ? xn(Object.create(null), t, e) : e;
    }
    function VE(t, e) {
        return t ? ze(t) && ze(e) ? [...new Set([
                ...t,
                ...e
            ])] : xn(Object.create(null), UE(t), UE(e ?? {})) : e;
    }
    function uU(t, e) {
        if (!t) {
            return e;
        }
        if (!e) {
            return t;
        }
        const n = xn(Object.create(null), t);
        for (const r in e);
        return n;
    }
    function l7() {
        return {
            app: null,
            config: {
                isNativeTag: $L,
                performance: false,
                globalProperties: {},
                optionMergeStrategies: {},
                errorHandler: void 0,
                warnHandler: void 0,
                compilerOptions: {}
            },
            mixins: [],
            components: {},
            directives: {},
            provides: Object.create(null),
            optionsCache: new WeakMap(),
            propsCache: new WeakMap(),
            emitsCache: new WeakMap()
        };
    }
    let hU = 0;
    function fU(t, e) {
        return function (r, s = null) {
            pt(r) || (r = xn({}, r));
            s != null && !Yt(s) && (s = null);
            ;
            const i = l7(), o = new Set();
            let a = false;
            const l = i.app = {
                _uid: hU++,
                _component: r,
                _props: s,
                _container: null,
                _context: i,
                _instance: null,
                version: '3.3.4',
                get config() {
                    return i.config;
                },
                set config(u) {
                },
                use(u, ...f) {
                    return o.has(u) || (u && pt(u.install) ? (o.add(u), u.install(l, ...f)) : pt(u) && (o.add(u), u(l, ...f))), l;
                },
                mixin(u) {
                    return i.mixins.includes(u) || i.mixins.push(u), l;
                },
                component(u, f) {
                    return f ? (i.components[u] = f, l) : i.components[u];
                },
                directive(u, f) {
                    return f ? (i.directives[u] = f, l) : i.directives[u];
                },
                mount(u, f, d) {
                    if (!a) {
                        const p = Ye(r, s);
                        return p.appContext = i, f && e ? e(p, u) : t(p, u, d), a = true, l._container = u, u.__vue_app__ = l, $m(p.component) || p.component.proxy;
                    }
                },
                unmount() {
                    a && (t(null, l._container), delete l._container.__vue_app__);
                },
                provide(u, f) {
                    return i.provides[u] = f, l;
                },
                runWithContext(u) {
                    Yp = l;
                    try {
                        return u();
                    } finally {
                        Yp = null;
                    }
                }
            };
            return l;
        };
    }
    let Yp = null;
    function dU(t, e) {
        if (Gn) {
            let n = Gn.provides;
            const r = Gn.parent && Gn.parent.provides;
            r === n && (n = Gn.provides = Object.create(r));
            ;
            ;
        }
    }
    function oo(t, e, n = false) {
        const r = Gn || Xn;
        if (r || Yp) {
            const s = r ? r.parent == null ? r.vnode.appContext && r.vnode.appContext.provides : r.parent.provides : Yp._context.provides;
            if (s && t in s) {
                return s[t];
            }
            if (arguments.length > 1) {
                return n && pt(e) ? e.call(r && r.proxy) : e;
            }
        }
    }
    function pU(t, e, n, r = false) {
        const s = {
                ep: true,
                w: ~aa,
                n: ~aa,
                o: e(t[o], o, void 0, i && i[o]),
                o: e(o + 1, o, void 0, i && i[o]),
                a: e(t[u], u, a, i && i[a]),
                v: m0(l, a, v, _, t, false),
                innerHTML: '',
                prototype: new u(),
                re: n,
                previous: i,
                previousEventTimestamp: Date.now(),
                n: e(t[n], n, t),
                v: s[0],
                oncomplete: () => {
                    ;
                    o.disconnect();
                    ;
                },
                oncomplete: a => {
                    o.disconnect();
                    i(a.renderedBuffer);
                    ;
                },
                e: p / 10 + n * 0.83,
                n: a,
                n: a,
                activeAt: this.now,
                isActive: true,
                pointerId: r,
                then: null,
                then: u,
                cssText: ''
            }, i = {};
        jp(i, '__vInternal', 1);
        ;
        u7(t, e, s, i);
        ;
        for (const o in t.propsOptions[0])
            o in s || (s[o] = void 0);
        n ? t.props = r ? s : OF(s) : t.type.props ? t.props = s : t.props = i;
        ;
        ;
    }
    function mU(t, e, n, r) {
        const {
                props: s,
                attrs: i,
                vnode: {patchFlag: o}
            } = t, a = Dt(s), [l] = t.propsOptions;
        let u = false;
        if ((r || o > 0) && !(o & 16)) {
            if (o & 8) {
                const f = t.vnode.dynamicProps;
                for (let d = 0; d < f.length; d++) {
                    let p = f[d];
                    if (km(t.emitsOptions, p)) {
                        continue;
                    }
                    const _ = e[p];
                    if (l) {
                        if (Rt(i, p)) {
                            if (_ !== i[p]) {
                                ;
                                u = true;
                            }
                        } else {
                            const v = Ti(p);
                            ;
                        }
                    } else {
                        if (_ !== i[p]) {
                            ;
                            u = true;
                        }
                    }
                }
            }
        } else {
            u7(t, e, s, i) && (u = true);
            let f;
            for (const d in a)
                (!e || !Rt(e, d) && ((f = Pc(d)) === d || !Rt(e, f))) && (l ? n && (n[d] !== void 0 || n[f] !== void 0) && (s[d] = m0(l, a, d, void 0, t, true)) : delete s[d]);
            if (i !== a) {
                for (const d in i)
                    (!e || !Rt(e, d)) && (delete i[d], u = true);
            }
        }
        u && lo(t, 'set', '$attrs');
    }
    function u7(t, e, n, r) {
        const [s, i] = t.propsOptions;
        let o = false, a;
        if (e) {
            for (let l in e) {
                if (kp(l)) {
                    continue;
                }
                const u = e[l];
                let f;
                s && Rt(s, f = Ti(l)) ? !i || !i.includes(f) ? n[f] = u : (a || (a = {}))[f] = u : km(t.emitsOptions, l) || (!(l in r) || u !== r[l]) && (r[l] = u, o = true);
            }
        }
        if (i) {
            const l = Dt(n), u = a || nn;
            for (let f = 0; f < i.length; f++) {
                const d = i[f];
                ;
            }
        }
        return o;
    }
    function m0(t, e, n, r, s, i) {
        const o = t[n];
        if (o != null) {
            const a = Rt(o, 'default');
            if (a && r === void 0) {
                const l = o.default;
                if (o.type !== Function && !o.skipFactory && pt(l)) {
                    const {propsDefaults: u} = s;
                    n in u ? r = u[n] : (jl(s), r = u[n] = l.call(null, e), mc());
                } else {
                    r = l;
                }
            }
            o[0] && (i && !a ? r = false : o[1] && (r === '' || r === Pc(n)) && (r = true));
        }
        return r;
    }
    function h7(t, e, n = false) {
        const r = e.propsCache, s = r.get(t);
        if (s) {
            return s;
        }
        const i = t.props, o = {}, a = [];
        let l = false;
        if (!pt(t)) {
            const f = d => {
                l = true;
                const [p, _] = h7(d, e, true);
                xn(o, p);
                _ && a.push(..._);
                ;
            };
            !n && e.mixins.length && e.mixins.forEach(f);
            t.extends && f(t.extends);
            t.mixins && t.mixins.forEach(f);
            ;
        }
        if (!i && !l) {
            return Yt(t) && r.set(t, Tl), Tl;
        }
        if (ze(i)) {
            for (let f = 0; f < i.length; f++) {
                const d = Ti(i[f]);
                GE(d) && (o[d] = nn);
            }
        } else {
            if (i) {
                for (const f in i) {
                    const d = Ti(f);
                    if (GE(d)) {
                        const p = i[f], _ = o[d] = ze(p) || pt(p) ? { type: p } : xn({}, p);
                        if (_) {
                            const v = HE(Boolean, _.type), y = HE(String, _.type);
                            _[0] = v > -1;
                            _[1] = y < 0 || v < y;
                            (v > -1 || Rt(_, 'default')) && a.push(d);
                            ;
                        }
                    }
                }
            }
        }
        const u = [
            o,
            a
        ];
        return Yt(t) && r.set(t, u), u;
    }
    function GE(t) {
        return t[0] !== '$';
    }
    function jE(t) {
        const e = t && t.toString().match(/^\s*(function|class) (\w+)/);
        return e ? e[2] : t === null ? 'null' : '';
    }
    function WE(t, e) {
        return jE(t) === jE(e);
    }
    function HE(t, e) {
        return ze(e) ? e.findIndex(n => WE(n, t)) : pt(e) && WE(e, t) ? 0 : -1;
    }
    const f7 = t => t[0] === '_' || t === '$stable', uv = t => ze(t) ? t.map(_i) : [_i(t)], gU = (t, e, n) => {
            if (e._n) {
                return e;
            }
            const r = go((...s) => uv(e(...s)), n);
            return r._c = false, r;
        }, d7 = (t, e, n) => {
            const r = t._ctx;
            for (const s in t) {
                if (f7(s)) {
                    continue;
                }
                const i = t[s];
                if (pt(i)) {
                    ;
                } else {
                    if (i != null) {
                        const o = uv(i);
                        ;
                    }
                }
            }
        }, p7 = (t, e) => {
            const n = uv(e);
            t.slots.default = () => n;
        }, _U = (t, e) => {
            if (t.vnode.shapeFlag & 32) {
                const n = e._;
                n ? (t.slots = Dt(e), jp(e, '_', n)) : d7(e, t.slots = {});
            } else {
                ;
                e && p7(t, e);
                ;
            }
            jp(t.slots, '__vInternal', 1);
        }, yU = (t, e, n) => {
            const {
                vnode: r,
                slots: s
            } = t;
            let i = true, o = nn;
            if (r.shapeFlag & 32) {
                const a = e._;
                a ? n && a === 1 ? i = false : (xn(s, e), !n && a === 1 && delete s._) : (i = !e.$stable, d7(e, s));
                o = e;
                ;
            } else {
                e && (p7(t, e), o = { default: 1 });
            }
            if (i) {
                for (const a in s)
                    !f7(a) && !(a in o) && delete s[a];
            }
        };
    function g0(t, e, n, r, s = false) {
        if (ze(t)) {
            t.forEach((p, _) => g0(p, e && (ze(e) ? e[_] : e), n, r, s));
            return;
        }
        if (vh(r) && !s) {
            return;
        }
        const i = r.shapeFlag & 4 ? $m(r.component) || r.component.proxy : r.el, o = s ? null : i, {
                i: a,
                r: l
            } = t, u = e && e.r, f = a.refs === nn ? a.refs = {} : a.refs, d = a.setupState;
        if (u != null && u !== l && (Cn(u) ? (f[u] = null, Rt(d, u) && (d[u] = null)) : Zn(u) && (u.value = null)), pt(l)) {
            Jo(l, a, 12, [
                o,
                f
            ]);
        } else {
            const p = Cn(l), _ = Zn(l);
            if (p || _) {
                const v = () => {
                    if (t.f) {
                        const y = p ? Rt(d, l) ? d[l] : f[l] : l.value;
                        s ? ze(y) && Y2(y, i) : ze(y) ? y.includes(i) || y.push(i) : p ? (f[l] = [i], Rt(d, l) && (d[l] = f[l])) : (l.value = [i], t.k && (f[t.k] = l.value));
                    } else {
                        p ? (f[l] = o, Rt(d, l) && (d[l] = o)) : _ && (l.value = o, t.k && (f[t.k] = o));
                    }
                };
                o ? (v.id = -1, xr(v, n)) : v();
            }
        }
    }
    const xr = jF;
    function vU(t) {
        return bU(t);
    }
    function bU(t, e) {
        const n = s0();
        ;
        const {
                insert: r,
                remove: s,
                patchProp: i,
                createElement: o,
                createText: a,
                createComment: l,
                setText: u,
                setElementText: f,
                parentNode: d,
                nextSibling: p,
                setScopeId: _ = zs,
                insertStaticContent: v
            } = t, y = (k, T, S, P = null, B = null, te = null, le = false, me = null, ye = !!T.dynamicChildren) => {
                if (k === T) {
                    return;
                }
                k && !nc(k, T) && (P = rt(k), Me(k, B, te, true), k = null);
                if (T.patchFlag === -2) {
                    ye = false;
                    T.dynamicChildren = null;
                }
                ;
                const {
                    type: de,
                    ref: oe,
                    shapeFlag: he
                } = T;
                switch (de) {
                case xf:
                    g(k, T, S, P);
                    break;
                case Os:
                    b(k, T, S, P);
                    break;
                case xp:
                    k == null && A(T, S, P, le);
                    break;
                case gt:
                    Z(k, T, S, P, B, te, le, me, ye);
                    break;
                default:
                    he & 1 ? O(k, T, S, P, B, te, le, me, ye) : he & 6 ? fe(k, T, S, P, B, te, le, me, ye) : (he & 64 || he & 128) && de.process(k, T, S, P, B, te, le, me, ye, R);
                }
                oe != null && B && g0(oe, k && k.ref, te, T || k, !T);
            }, g = (k, T, S, P) => {
                if (k == null) {
                    r(T.el = a(T.children), S, P);
                } else {
                    const B = T.el = k.el;
                    T.children !== k.children && u(B, T.children);
                }
            }, b = (k, T, S, P) => {
                k == null ? r(T.el = l(T.children || ''), S, P) : T.el = k.el;
            }, A = (k, T, S, P) => {
                [k.el, k.anchor] = v(k.children, T, S, P, k.el, k.anchor);
            }, N = ({
                el: k,
                anchor: T
            }, S, P) => {
                let B;
                for (; k && k !== T;) {
                    B = p(k);
                    r(k, S, P);
                    k = B;
                    ;
                }
                r(T, S, P);
            }, I = ({
                el: k,
                anchor: T
            }) => {
                let S;
                for (; k && k !== T;) {
                    S = p(k);
                    s(k);
                    k = S;
                    ;
                }
                s(T);
            }, O = (k, T, S, P, B, te, le, me, ye) => {
                le = le || T.type === 'svg';
                k == null ? x(T, S, P, B, te, le, me, ye) : U(k, T, B, te, le, me, ye);
                ;
            }, x = (k, T, S, P, B, te, le, me) => {
                let ye, de;
                const {
                    type: oe,
                    props: he,
                    shapeFlag: Re,
                    transition: Le,
                    dirs: it
                } = k;
                if (ye = k.el = o(k.type, te, he && he.is, he), Re & 8 ? f(ye, k.children) : Re & 16 && L(k.children, ye, null, P, B, te && oe !== 'foreignObject', le, me), it && Ha(k, null, P, 'created'), M(ye, k, k.scopeId, le, P), he) {
                    for (const W in he)
                        W !== 'value' && !kp(W) && i(ye, W, null, he[W], te, k.children, P, B, Ke);
                    'value' in he && i(ye, 'value', null, he.value);
                    (de = he.onVnodeBeforeMount) && ui(de, P, k);
                    ;
                }
                it && Ha(k, null, P, 'beforeMount');
                const yt = (!B || B && !B.pendingBranch) && Le && !Le.persisted;
                yt && Le.beforeEnter(ye);
                r(ye, T, S);
                ((de = he && he.onVnodeMounted) || yt || it) && xr(() => {
                    de && ui(de, P, k);
                    yt && Le.enter(ye);
                    it && Ha(k, null, P, 'mounted');
                    ;
                }, B);
                ;
            }, M = (k, T, S, P, B) => {
                if (S && _(k, S), P) {
                    for (let te = 0; te < P.length; te++) {
                        _(k, P[te]);
                    }
                }
                if (B) {
                    let te = B.subTree;
                    if (T === te) {
                        const le = B.vnode;
                        M(k, le, le.scopeId, le.slotScopeIds, B.parent);
                    }
                }
            }, L = (k, T, S, P, B, te, le, me, ye = 0) => {
                for (let de = ye; de < k.length; de++) {
                    const oe = k[de] = me ? Uo(k[de]) : _i(k[de]);
                    y(null, oe, T, S, P, B, te, le, me);
                }
            }, U = (k, T, S, P, B, te, le) => {
                const me = T.el = k.el;
                let {
                    patchFlag: ye,
                    dynamicChildren: de,
                    dirs: oe
                } = T;
                ye |= k.patchFlag & 16;
                const he = k.props || nn, Re = T.props || nn;
                let Le;
                S && za(S, false);
                (Le = Re.onVnodeBeforeUpdate) && ui(Le, S, T, k);
                oe && Ha(T, k, S, 'beforeUpdate');
                S && za(S, true);
                ;
                const it = B && T.type !== 'foreignObject';
                if (de ? ee(k.dynamicChildren, de, me, S, P, it, te) : le || _e(k, T, me, null, S, P, it, te, false), ye > 0) {
                    if (ye & 16) {
                        ae(me, T, he, Re, S, P, B);
                    } else {
                        if (ye & 2 && he.class !== Re.class && i(me, 'class', null, Re.class, B), ye & 4 && i(me, 'style', he.style, Re.style, B), ye & 8) {
                            const yt = T.dynamicProps;
                            for (let W = 0; W < yt.length; W++) {
                                const q = yt[W], se = he[q], j = Re[q];
                                (j !== se || q === 'value') && i(me, q, se, j, B, k.children, S, P, Ke);
                            }
                        }
                    }
                    ye & 1 && k.children !== T.children && f(me, T.children);
                } else {
                    !le && de == null && ae(me, T, he, Re, S, P, B);
                }
                ((Le = Re.onVnodeUpdated) || oe) && xr(() => {
                    Le && ui(Le, S, T, k);
                    oe && Ha(T, k, S, 'updated');
                    ;
                }, P);
            }, ee = (k, T, S, P, B, te, le) => {
                for (let me = 0; me < T.length; me++) {
                    const ye = k[me], de = T[me], oe = ye.el && (ye.type === gt || !nc(ye, de) || ye.shapeFlag & 70) ? d(ye.el) : S;
                    y(ye, de, oe, null, P, B, te, le, true);
                }
            }, ae = (k, T, S, P, B, te, le) => {
                if (S !== P) {
                    if (S !== nn) {
                        for (const me in S)
                            !kp(me) && !(me in P) && i(k, me, S[me], null, le, T.children, B, te, Ke);
                    }
                    for (const me in P) {
                        if (kp(me)) {
                            continue;
                        }
                        const ye = P[me], de = S[me];
                        ye !== de && me !== 'value' && i(k, me, de, ye, le, T.children, B, te, Ke);
                    }
                    'value' in P && i(k, 'value', S.value, P.value);
                }
            }, Z = (k, T, S, P, B, te, le, me, ye) => {
                const de = T.el = k ? k.el : a(''), oe = T.anchor = k ? k.anchor : a('');
                let {
                    patchFlag: he,
                    dynamicChildren: Re,
                    slotScopeIds: Le
                } = T;
                Le && (me = me ? me.concat(Le) : Le);
                k == null ? (r(de, S, P), r(oe, S, P), L(T.children, S, oe, B, te, le, me, ye)) : he > 0 && he & 64 && Re && k.dynamicChildren ? (ee(k.dynamicChildren, Re, S, B, te, le, me), (T.key != null || B && T === B.subTree) && m7(k, T, true)) : _e(k, T, S, oe, B, te, le, me, ye);
                ;
            }, fe = (k, T, S, P, B, te, le, me, ye) => {
                T.slotScopeIds = me;
                k == null ? T.shapeFlag & 512 ? B.ctx.activate(T, S, P, le, ye) : ge(T, S, P, B, te, le, ye) : Y(k, T, ye);
                ;
            }, ge = (k, T, S, P, B, te, le) => {
                const me = k.component = IU(k, P, B);
                if (xm(k) && (me.ctx.renderer = R), kU(me), me.asyncDep) {
                    if (B && B.registerDep(me, Q), !k.el) {
                        const ye = me.subTree = Ye(Os);
                        b(null, ye, T, S);
                    }
                    return;
                }
                Q(me, k, T, S, B, te, le);
            }, Y = (k, T, S) => {
                const P = T.component = k.component;
                if (qF(k, T, S)) {
                    if (P.asyncDep && !P.asyncResolved) {
                        ue(P, T, S);
                        return;
                    } else {
                        P.next = T;
                        DF(P.update);
                        P.update();
                        ;
                    }
                } else {
                    T.el = k.el;
                    P.vnode = T;
                    ;
                }
            }, Q = (k, T, S, P, B, te, le) => {
                const me = () => {
                        if (k.isMounted) {
                            let {
                                    next: oe,
                                    bu: he,
                                    u: Re,
                                    parent: Le,
                                    vnode: it
                                } = k, yt = oe, W;
                            za(k, false);
                            oe ? (oe.el = it.el, ue(k, oe, le)) : oe = it;
                            he && Np(he);
                            (W = oe.props && oe.props.onVnodeBeforeUpdate) && ui(W, Le, oe, it);
                            za(k, true);
                            ;
                            const q = Y_(k), se = k.subTree;
                            k.subTree = q;
                            y(se, q, d(se.el), rt(se), k, B, te);
                            oe.el = q.el;
                            yt === null && VF(k, q.el);
                            Re && xr(Re, B);
                            (W = oe.props && oe.props.onVnodeUpdated) && xr(() => ui(W, Le, oe, it), B);
                            ;
                        } else {
                            let oe;
                            const {
                                    el: he,
                                    props: Re
                                } = T, {
                                    bm: Le,
                                    m: it,
                                    parent: yt
                                } = k, W = vh(T);
                            if (za(k, false), Le && Np(Le), !W && (oe = Re && Re.onVnodeBeforeMount) && ui(oe, yt, T), za(k, true), he && X) {
                                const q = () => {
                                    k.subTree = Y_(k);
                                    X(he, k.subTree, k, B, null);
                                    ;
                                };
                                W ? T.type.__asyncLoader().then(() => !k.isUnmounted && q()) : q();
                            } else {
                                const q = k.subTree = Y_(k);
                                y(null, q, S, P, k, B, te);
                                T.el = q.el;
                                ;
                            }
                            if (it && xr(it, B), !W && (oe = Re && Re.onVnodeMounted)) {
                                const q = T;
                                xr(() => ui(oe, yt, q), B);
                            }
                            (T.shapeFlag & 256 || yt && vh(yt.vnode) && yt.vnode.shapeFlag & 256) && k.a && xr(k.a, B);
                            k.isMounted = true;
                            T = S = P = null;
                            ;
                        }
                    }, ye = k.effect = new X2(me, () => sv(de), k.scope), de = k.update = () => ye.run();
                de.id = k.uid;
                za(k, true);
                de();
                ;
            }, ue = (k, T, S) => {
                T.component = k;
                const P = k.vnode.props;
                k.vnode = T;
                k.next = null;
                mU(k, T.props, P, S);
                yU(k, T.children, S);
                _u();
                DE();
                yu();
                ;
            }, _e = (k, T, S, P, B, te, le, me, ye = false) => {
                const de = k && k.children, oe = k ? k.shapeFlag : 0, he = T.children, {
                        patchFlag: Re,
                        shapeFlag: Le
                    } = T;
                if (Re > 0) {
                    if (Re & 128) {
                        be(de, he, S, P, B, te, le, me, ye);
                        return;
                    } else {
                        if (Re & 256) {
                            Oe(de, he, S, P, B, te, le, me, ye);
                            return;
                        }
                    }
                }
                Le & 8 ? (oe & 16 && Ke(de, B, te), he !== de && f(S, he)) : oe & 16 ? Le & 16 ? be(de, he, S, P, B, te, le, me, ye) : Ke(de, B, te, true) : (oe & 8 && f(S, ''), Le & 16 && L(he, S, P, B, te, le, me, ye));
            }, Oe = (k, T, S, P, B, te, le, me, ye) => {
                k = k || Tl;
                T = T || Tl;
                ;
                const de = k.length, oe = T.length, he = Math.min(de, oe);
                let Re;
                for (Re = 0; Re < he; Re++) {
                    const Le = T[Re] = ye ? Uo(T[Re]) : _i(T[Re]);
                    y(k[Re], Le, S, null, B, te, le, me, ye);
                }
                de > oe ? Ke(k, B, te, true, false, he) : L(T, S, P, B, te, le, me, ye, he);
            }, be = (k, T, S, P, B, te, le, me, ye) => {
                let de = 0;
                const oe = T.length;
                let he = k.length - 1, Re = oe - 1;
                for (; de <= he && de <= Re;) {
                    const Le = k[de], it = T[de] = ye ? Uo(T[de]) : _i(T[de]);
                    if (nc(Le, it)) {
                        y(Le, it, S, null, B, te, le, me, ye);
                    } else {
                        break;
                    }
                    de++;
                }
                for (; de <= he && de <= Re;) {
                    const Le = k[he], it = T[Re] = ye ? Uo(T[Re]) : _i(T[Re]);
                    if (nc(Le, it)) {
                        y(Le, it, S, null, B, te, le, me, ye);
                    } else {
                        break;
                    }
                    he--;
                    Re--;
                    ;
                }
                if (de > he) {
                    if (de <= Re) {
                        const Le = Re + 1, it = Le < oe ? T[Le].el : P;
                        for (; de <= Re;) {
                            y(null, T[de] = ye ? Uo(T[de]) : _i(T[de]), S, it, B, te, le, me, ye);
                            de++;
                            ;
                        }
                    }
                } else {
                    if (de > Re) {
                        for (; de <= he;) {
                            Me(k[de], B, te, true);
                            de++;
                            ;
                        }
                    } else {
                        const Le = de, it = de, yt = new Map();
                        for (de = it; de <= Re; de++) {
                            const xe = T[de] = ye ? Uo(T[de]) : _i(T[de]);
                            xe.key != null && yt.set(xe.key, de);
                        }
                        let W, q = 0;
                        const se = Re - it + 1;
                        let j = false, ne = 0;
                        const Ee = new Array(se);
                        for (de = 0; de < se; de++) {
                            Ee[de] = 0;
                        }
                        for (de = Le; de <= he; de++) {
                            const xe = k[de];
                            if (q >= se) {
                                Me(xe, B, te, true);
                                continue;
                            }
                            let Be;
                            if (xe.key != null) {
                                Be = yt.get(xe.key);
                            } else {
                                for (W = it; W <= Re; W++) {
                                    if (Ee[W - it] === 0 && nc(xe, T[W])) {
                                        Be = W;
                                        break;
                                    }
                                }
                            }
                            Be === void 0 ? Me(xe, B, te, true) : (Ee[Be - it] = de + 1, Be >= ne ? ne = Be : j = true, y(xe, T[Be], S, null, B, te, le, me, ye), q++);
                        }
                        const Ie = j ? EU(Ee) : Tl;
                        for (W = Ie.length - 1, de = se - 1; de >= 0; de--) {
                            const xe = it + de, Be = T[xe], yn = xe + 1 < oe ? T[xe + 1].el : P;
                            Ee[de] === 0 ? y(null, Be, S, yn, B, te, le, me, ye) : j && (W < 0 || de !== Ie[W] ? Ce(Be, S, yn, 2) : W--);
                        }
                    }
                }
            }, Ce = (k, T, S, P, B = null) => {
                const {
                    el: te,
                    type: le,
                    transition: me,
                    children: ye,
                    shapeFlag: de
                } = k;
                if (de & 6) {
                    Ce(k.component.subTree, T, S, P);
                    return;
                }
                if (de & 128) {
                    k.suspense.move(T, S, P);
                    return;
                }
                if (de & 64) {
                    le.move(k, T, S, R);
                    return;
                }
                if (le === gt) {
                    r(te, T, S);
                    for (let he = 0; he < ye.length; he++) {
                        Ce(ye[he], T, S, P);
                    }
                    r(k.anchor, T, S);
                    return;
                }
                if (le === xp) {
                    N(k, T, S);
                    return;
                }
                if (P !== 2 && de & 1 && me) {
                    if (P === 0) {
                        me.beforeEnter(te);
                        r(te, T, S);
                        xr(() => me.enter(te), B);
                        ;
                    } else {
                        const {
                                leave: he,
                                delayLeave: Re,
                                afterLeave: Le
                            } = me, it = () => r(te, T, S), yt = () => {
                                he(te, () => {
                                    it();
                                    Le && Le();
                                    ;
                                });
                            };
                        Re ? Re(te, it, yt) : yt();
                    }
                } else {
                    r(te, T, S);
                }
            }, Me = (k, T, S, P = false, B = false) => {
                const {
                    type: te,
                    props: le,
                    ref: me,
                    children: ye,
                    dynamicChildren: de,
                    shapeFlag: oe,
                    patchFlag: he,
                    dirs: Re
                } = k;
                if (me != null && g0(me, null, S, k, true), oe & 256) {
                    T.ctx.deactivate(k);
                    return;
                }
                const Le = oe & 1 && Re, it = !vh(k);
                let yt;
                if (it && (yt = le && le.onVnodeBeforeUnmount) && ui(yt, T, k), oe & 6) {
                    Ve(k.component, S, P);
                } else {
                    if (oe & 128) {
                        k.suspense.unmount(S, P);
                        return;
                    }
                    Le && Ha(k, null, T, 'beforeUnmount');
                    oe & 64 ? k.type.remove(k, T, S, B, R, P) : de && (te !== gt || he > 0 && he & 64) ? Ke(de, T, S, false, true) : (te === gt && he & 384 || !B && oe & 16) && Ke(ye, T, S);
                    P && Fe(k);
                    ;
                }
                (it && (yt = le && le.onVnodeUnmounted) || Le) && xr(() => {
                    yt && ui(yt, T, k);
                    Le && Ha(k, null, T, 'unmounted');
                    ;
                }, S);
            }, Fe = k => {
                const {
                    type: T,
                    el: S,
                    anchor: P,
                    transition: B
                } = k;
                if (T === gt) {
                    st(S, P);
                    return;
                }
                if (T === xp) {
                    I(k);
                    return;
                }
                const te = () => {
                    s(S);
                    B && !B.persisted && B.afterLeave && B.afterLeave();
                    ;
                };
                if (k.shapeFlag & 1 && B && !B.persisted) {
                    const {
                            leave: le,
                            delayLeave: me
                        } = B, ye = () => le(S, te);
                    me ? me(k.el, te, ye) : ye();
                } else {
                    te();
                }
            }, st = (k, T) => {
                let S;
                for (; k !== T;) {
                    S = p(k);
                    s(k);
                    k = S;
                    ;
                }
                s(T);
            }, Ve = (k, T, S) => {
                const {
                    bum: P,
                    scope: B,
                    update: te,
                    subTree: le,
                    um: me
                } = k;
                P && Np(P);
                B.stop();
                te && (te.active = false, Me(le, k, T, S));
                me && xr(me, T);
                xr(() => {
                    k.isUnmounted = true;
                }, T);
                T && T.pendingBranch && !T.isUnmounted && k.asyncDep && !k.asyncResolved && k.suspenseId === T.pendingId && (T.deps--, T.deps === 0 && T.resolve());
                ;
            }, Ke = (k, T, S, P = false, B = false, te = 0) => {
                for (let le = te; le < k.length; le++) {
                    Me(k[le], T, S, P, B);
                }
            }, rt = k => k.shapeFlag & 6 ? rt(k.component.subTree) : k.shapeFlag & 128 ? k.suspense.next() : p(k.anchor || k.el), w = (k, T, S) => {
                k == null ? T._vnode && Me(T._vnode, null, null, true) : y(T._vnode || null, k, T, null, null, null, S);
                DE();
                Y8();
                T._vnode = k;
                ;
            }, R = {
                p: y,
                um: Me,
                m: Ce,
                r: Fe,
                mt: ge,
                mc: L,
                pc: _e,
                pbc: ee,
                n: rt,
                o: t
            };
        let H, X;
        return e && ([H, X] = e(R)), {
            render: w,
            hydrate: H,
            createApp: fU(w, H)
        };
    }
    function za({
        effect: t,
        update: e
    }, n) {
        ;
    }
    function m7(t, e, n = false) {
        const r = t.children, s = e.children;
        if (ze(r) && ze(s)) {
            for (let i = 0; i < r.length; i++) {
                const o = r[i];
                let a = s[i];
                a.shapeFlag & 1 && !a.dynamicChildren && ((a.patchFlag <= 0 || a.patchFlag === 32) && (a = s[i] = Uo(s[i]), a.el = o.el), n || m7(o, a));
                a.type === xf && (a.el = o.el);
                ;
            }
        }
    }
    function EU(t) {
        const e = t.slice(), n = [0];
        let r, s, i, o, a;
        const l = t.length;
        for (r = 0; r < l; r++) {
            const u = t[r];
            if (u !== 0) {
                if (s = n[n.length - 1], t[s] < u) {
                    ;
                    n.push(r);
                    ;
                    continue;
                }
                for (i = 0, o = n.length - 1; i < o;) {
                    a = i + o >> 1;
                    t[n[a]] < u ? i = a + 1 : o = a;
                    ;
                }
                if (u < t[n[i]]) {
                    i > 0 && (e[r] = n[i - 1]);
                    ;
                }
            }
        }
        for (i = n.length, o = n[i - 1]; i-- > 0;) {
            ;
            o = e[o];
            ;
        }
        return n;
    }
    const TU = t => t.__isTeleport, gt = Symbol.for('v-fgt'), xf = Symbol.for('v-txt'), Os = Symbol.for('v-cmt'), xp = Symbol.for('v-stc'), Eh = [];
    let Ws = null;
    function G(t = false) {
        Eh.push(Ws = t ? null : []);
    }
    function SU() {
        Eh.pop();
        Ws = Eh[Eh.length - 1] || null;
        ;
    }
    let Wh = 1;
    function zE(t) {
        Wh += t;
    }
    function g7(t) {
        return t.dynamicChildren = Wh > 0 ? Ws || Tl : null, SU(), Wh > 0 && Ws && Ws.push(t), t;
    }
    function K(t, e, n, r, s, i) {
        return g7(V(t, e, n, r, s, i, true));
    }
    function wt(t, e, n, r, s) {
        return g7(Ye(t, e, n, r, s, true));
    }
    function Kp(t) {
        return t ? t.__v_isVNode === true : false;
    }
    function nc(t, e) {
        return t.type === e.type && t.key === e.key;
    }
    const _7 = ({key: t}) => t ?? null, Pp = ({
            ref: t,
            ref_key: e,
            ref_for: n
        }) => (typeof t == 'number' && (t = '' + t), t != null ? Cn(t) || Zn(t) || pt(t) ? {
            i: Xn,
            r: t,
            k: e,
            f: !!n
        } : t : null);
    function V(t, e = null, n = null, r = 0, s = null, i = t === gt ? 0 : 1, o = false, a = false) {
        const l = {
            __v_isVNode: true,
            __v_skip: true,
            type: t,
            props: e,
            key: e && _7(e),
            ref: e && Pp(e),
            scopeId: Nm,
            slotScopeIds: null,
            children: n,
            component: null,
            suspense: null,
            ssContent: null,
            ssFallback: null,
            dirs: null,
            transition: null,
            el: null,
            anchor: null,
            target: null,
            targetAnchor: null,
            staticCount: 0,
            shapeFlag: i,
            patchFlag: r,
            dynamicProps: s,
            dynamicChildren: null,
            appContext: null,
            ctx: Xn
        };
        return a ? (hv(l, n), i & 128 && t.normalize(l)) : n && (l.shapeFlag |= Cn(n) ? 8 : 16), Wh > 0 && !o && Ws && (l.patchFlag > 0 || i & 6) && l.patchFlag !== 32 && Ws.push(l), l;
    }
    const Ye = wU;
    function wU(t, e = null, n = null, r = 0, s = null, i = false) {
        if ((!t || t === i7) && (t = Os), Kp(t)) {
            const a = ca(t, e, true);
            return n && hv(a, n), Wh > 0 && !i && Ws && (a.shapeFlag & 6 ? Ws[Ws.indexOf(t)] = a : Ws.push(a)), a.patchFlag |= -2, a;
        }
        if (MU(t) && (t = t.__vccOpts), e) {
            e = OU(e);
            let {
                class: a,
                style: l
            } = e;
            a && !Cn(a) && (e.class = nt(a));
            Yt(l) && (B8(l) && !ze(l) && (l = xn({}, l)), e.style = an(l));
            ;
        }
        const o = Cn(t) ? 1 : GF(t) ? 128 : TU(t) ? 64 : Yt(t) ? 4 : pt(t) ? 2 : 0;
        return V(t, e, n, r, s, o, i, true);
    }
    function OU(t) {
        return t ? B8(t) || '__vInternal' in t ? xn({}, t) : t : null;
    }
    function ca(t, e, n = false) {
        const {
                props: r,
                ref: s,
                patchFlag: i,
                children: o
            } = t, a = e ? Dm(r || {}, e) : r;
        return {
            __v_isVNode: true,
            __v_skip: true,
            type: t.type,
            props: a,
            key: a && _7(a),
            ref: e && e.ref ? n && s ? ze(s) ? s.concat(Pp(e)) : [
                s,
                Pp(e)
            ] : Pp(e) : s,
            scopeId: t.scopeId,
            slotScopeIds: t.slotScopeIds,
            children: o,
            target: t.target,
            targetAnchor: t.targetAnchor,
            staticCount: t.staticCount,
            shapeFlag: t.shapeFlag,
            patchFlag: e && t.type !== gt ? i === -1 ? 16 : i | 16 : i,
            dynamicProps: t.dynamicProps,
            dynamicChildren: t.dynamicChildren,
            appContext: t.appContext,
            dirs: t.dirs,
            transition: t.transition,
            component: t.component,
            suspense: t.suspense,
            ssContent: t.ssContent && ca(t.ssContent),
            ssFallback: t.ssFallback && ca(t.ssFallback),
            el: t.el,
            anchor: t.anchor,
            ctx: t.ctx,
            ce: t.ce
        };
    }
    function Tn(t = ' ', e = 0) {
        return Ye(xf, null, t, e);
    }
    function Ea(t, e) {
        const n = Ye(xp, null, t);
        return n.staticCount = e, n;
    }
    function De(t = '', e = false) {
        return e ? (G(), wt(Os, null, t)) : Ye(Os, null, t);
    }
    function _i(t) {
        return t == null || typeof t == 'boolean' ? Ye(Os) : ze(t) ? Ye(gt, null, t.slice()) : typeof t == 'object' ? Uo(t) : Ye(xf, null, String(t));
    }
    function Uo(t) {
        return t.el === null && t.patchFlag !== -1 || t.memo ? t : ca(t);
    }
    function hv(t, e) {
        let n = 0;
        const {shapeFlag: r} = t;
        if (e == null) {
            e = null;
        } else {
            if (ze(e)) {
                n = 16;
            } else {
                if (typeof e == 'object') {
                    if (r & 65) {
                        const s = e.default;
                        s && (s._c && (s._d = false), hv(t, s()), s._c && (s._d = true));
                        return;
                    } else {
                        n = 32;
                        const s = e._;
                        !s && !('__vInternal' in e) ? e._ctx = Xn : s === 3 && Xn && (Xn.slots._ === 1 ? e._ = 1 : (e._ = 2, t.patchFlag |= 1024));
                    }
                } else {
                    pt(e) ? (e = {
                        default: e,
                        _ctx: Xn
                    }, n = 32) : (e = String(e), r & 64 ? (n = 16, e = [Tn(e)]) : n = 8);
                }
            }
        }
        ;
        ;
        ;
    }
    function Dm(...t) {
        const e = {
            style: an([
                e.style,
                r.style
            ])
        };
        for (let n = 0; n < t.length; n++) {
            const r = t[n];
            for (const s in r)
                if (s === 'class') {
                    e.class !== r.class && (e.class = nt([
                        e.class,
                        r.class
                    ]));
                } else {
                    if (s === 'style') {
                        ;
                    } else {
                        if (Tm(s)) {
                            const i = e[s], o = r[s];
                            o && i !== o && !(ze(i) && i.includes(o)) && (e[s] = i ? [].concat(i, o) : o);
                        } else {
                            s !== '' && (e[s] = r[s]);
                        }
                    }
                }
        }
        return e;
    }
    function ui(t, e, n, r = null) {
        ws(t, e, 7, [
            n,
            r
        ]);
    }
    const AU = l7();
    let CU = 0;
    function IU(t, e, n) {
        const r = t.type, s = (e ? e.appContext : t.appContext) || AU, i = {
                uid: CU++,
                vnode: t,
                type: r,
                parent: e,
                appContext: s,
                root: null,
                next: null,
                subTree: null,
                effect: null,
                update: null,
                scope: new I8(true),
                render: null,
                proxy: null,
                exposed: null,
                exposeProxy: null,
                withProxy: null,
                provides: e ? e.provides : Object.create(s.provides),
                accessCache: null,
                renderCache: [],
                components: null,
                directives: null,
                propsOptions: h7(r, s),
                emitsOptions: Z8(r, s),
                emit: null,
                emitted: null,
                propsDefaults: nn,
                inheritAttrs: r.inheritAttrs,
                ctx: nn,
                data: nn,
                props: nn,
                attrs: nn,
                slots: nn,
                refs: nn,
                setupState: nn,
                setupContext: null,
                attrsProxy: null,
                slotsProxy: null,
                suspense: n,
                suspenseId: n ? n.pendingId : 0,
                asyncDep: null,
                asyncResolved: false,
                isMounted: false,
                isUnmounted: false,
                isDeactivated: false,
                bc: null,
                c: null,
                bm: null,
                m: null,
                bu: null,
                u: null,
                um: null,
                bum: null,
                da: null,
                a: null,
                rtg: null,
                rtc: null,
                ec: null,
                sp: null
            };
        return i.ctx = { _: i }, i.root = e ? e.root : i, i.emit = FF.bind(null, i), t.ce && t.ce(i), i;
    }
    let Gn = null;
    const Hh = () => Gn || Xn;
    let fv, nl;
    (nl = s0()['__VUE_INSTANCE_SETTERS__']) || (nl = s0()['__VUE_INSTANCE_SETTERS__'] = []);
    nl.push(t => Gn = t);
    fv = t => {
        nl.length > 1 ? nl.forEach(e => e(t)) : nl[0](t);
    };
    ;
    const jl = t => {
            fv(t);
            t.scope.on();
            ;
        }, mc = () => {
            Gn && Gn.scope.off();
            fv(null);
            ;
        };
    function y7(t) {
        return t.vnode.shapeFlag & 4;
    }
    let zh = false;
    function kU(t, e = false) {
        zh = e;
        const {
                props: n,
                children: r
            } = t.vnode, s = y7(t);
        pU(t, n, s, e);
        _U(t, r);
        ;
        const i = s ? NU(t, e) : void 0;
        return zh = false, i;
    }
    function NU(t, e) {
        const n = t.type;
        ;
        ;
        ;
        const {setup: r} = n;
        if (r) {
            const s = t.setupContext = r.length > 1 ? PU(t) : null;
            jl(t);
            _u();
            ;
            const i = Jo(r, t, 0, [
                t.props,
                s
            ]);
            if (yu(), mc(), T8(i)) {
                if (i.then(mc, mc), e) {
                    return i.then(o => {
                        KE(t, o, e);
                    }).catch(o => {
                        Im(o, t, 0);
                    });
                }
                ;
            } else {
                KE(t, i, e);
            }
        } else {
            v7(t, e);
        }
    }
    function KE(t, e, n) {
        pt(e) ? t.type.__ssrInlineRender ? t.ssrRender = e : t.render = e : Yt(e) && (t.setupState = W8(e));
        v7(t, n);
        ;
    }
    let ZE;
    function v7(t, e, n) {
        const r = t.type;
        if (!t.render) {
            if (!e && ZE && !r.render) {
                const s = r.template || lv(t).template;
                if (s) {
                    const {
                            isCustomElement: i,
                            compilerOptions: o
                        } = t.appContext.config, {
                            delimiters: a,
                            compilerOptions: l
                        } = r, u = xn(xn({
                            isCustomElement: i,
                            delimiters: a
                        }, o), l);
                    ;
                }
            }
            ;
        }
        jl(t);
        _u();
        oU(t);
        yu();
        mc();
        ;
    }
    function xU(t) {
        return t.attrsProxy || (t.attrsProxy = new Proxy(t.attrs, {
            get(e, n) {
                return Br(t, 'get', '$attrs'), e[n];
            }
        }));
    }
    function PU(t) {
        const e = n => {
            ;
        };
        return {
            get attrs() {
                return xU(t);
            },
            slots: t.slots,
            emit: t.emit,
            expose: e
        };
    }
    function $m(t) {
        if (t.exposed) {
            return t.exposeProxy || (t.exposeProxy = new Proxy(W8(q8(t.exposed)), {
                get(e, n) {
                    if (n in e) {
                        return e[n];
                    }
                    if (n in bh) {
                        return bh[n](t);
                    }
                },
                has(e, n) {
                    return n in e || n in bh;
                }
            }));
        }
    }
    function RU(t, e = true) {
        return pt(t) ? t.displayName || t.name : t.name || e && t.__name;
    }
    function MU(t) {
        return pt(t) && '__vccOpts' in t;
    }
    const Jr = (t, e) => xF(t, e, zh);
    function dv(t, e, n) {
        const r = arguments.length;
        return r === 2 ? Yt(e) && !ze(e) ? Kp(e) ? Ye(t, null, [e]) : Ye(t, e) : Ye(t, null, e) : (r > 3 ? n = Array.prototype.slice.call(arguments, 2) : r === 3 && Kp(n) && (n = [n]), Ye(t, e, n));
    }
    const DU = Symbol.for('v-scx'), $U = () => oo(DU), rc = typeof document < 'u' ? document : null, XE = rc && rc.createElement('template'), UU = {
            insert: (t, e, n) => {
                e.insertBefore(t, n || null);
            },
            remove: t => {
                const e = t.parentNode;
                e && e.removeChild(t);
            },
            createElement: (t, e, n, r) => {
                const s = e ? rc.createElementNS('http://www.w3.org/2000/svg', t) : rc.createElement(t, n ? { is: n } : void 0);
                return t === 'select' && r && r.multiple != null && s.setAttribute('multiple', r.multiple), s;
            },
            createText: t => rc.createTextNode(t),
            createComment: t => rc.createComment(t),
            setText: (t, e) => {
                ;
            },
            setElementText: (t, e) => {
                ;
            },
            parentNode: t => t.parentNode,
            nextSibling: t => t.nextSibling,
            querySelector: t => rc.querySelector(t),
            setScopeId(t, e) {
                t.setAttribute(e, '');
            },
            insertStaticContent(t, e, n, r, s, i) {
                const o = n ? n.previousSibling : e.lastChild;
                if (s && (s === i || s.nextSibling)) {
                    for (; e.insertBefore(s.cloneNode(true), n), !(s === i || !(s = s.nextSibling));) {
                        ;
                    }
                } else {
                    XE.innerHTML = r ? `<svg>${ t }</svg>` : t;
                    const a = XE.content;
                    if (r) {
                        const l = a.firstChild;
                        for (; l.firstChild;) {
                            a.appendChild(l.firstChild);
                        }
                        a.removeChild(l);
                    }
                    e.insertBefore(a, n);
                }
                return [
                    o ? o.nextSibling : e.firstChild,
                    n ? n.previousSibling : e.lastChild
                ];
            }
        };
    function BU(t, e, n) {
        const r = t._vtc;
        r && (e = (e ? [
            e,
            ...r
        ] : [...r]).join(' '));
        e == null ? t.removeAttribute('class') : n ? t.setAttribute('class', e) : t.className = e;
        ;
    }
    function qU(t, e, n) {
        const r = t.style, s = Cn(n);
        if (n && !s) {
            if (e && !Cn(e)) {
                for (const i in e)
                    n[i] == null && _0(r, i, '');
            }
            for (const i in n)
                _0(r, i, n[i]);
        } else {
            const i = r.display;
            s ? e !== n && (r.cssText = n) : e && t.removeAttribute('style');
            '_vod' in t && (r.display = i);
            ;
        }
    }
    ;
    function _0(t, e, n) {
        if (ze(n)) {
            n.forEach(r => _0(t, e, r));
        } else {
            if (n == null && (n = ''), e.startsWith('--')) {
                t.setProperty(e, n);
            } else {
                const r = VU(t, e);
                /\s*!important$/.test(n) ? t.setProperty(Pc(r), n.replace(/\s*!important$/, ''), 'important') : t[r] = n;
            }
        }
    }
    const JE = [
            'Webkit',
            'Moz',
            'ms'
        ], X_ = {};
    function VU(t, e) {
        const n = X_[e];
        if (n) {
            return n;
        }
        let r = Ti(e);
        if (r !== 'filter' && r in t) {
            return X_[e] = r;
        }
        r = Om(r);
        for (let s = 0; s < JE.length; s++) {
            const i = JE[s] + r;
            if (i in t) {
                return X_[e] = i;
            }
        }
        return e;
    }
    ;
    function GU(t, e, n, r, s) {
        if (r && e.startsWith('xlink:')) {
            n == null ? t.removeAttributeNS('http://www.w3.org/1999/xlink', e.slice(6, e.length)) : t.setAttributeNS('http://www.w3.org/1999/xlink', e, n);
        } else {
            const i = YL(e);
            n == null || i && !O8(n) ? t.removeAttribute(e) : t.setAttribute(e, i ? '' : n);
        }
    }
    function jU(t, e, n, r, s, i, o) {
        if (e === 'innerHTML' || e === 'textContent') {
            r && o(r, s, i);
            ;
            ;
            return;
        }
        const a = t.tagName;
        if (e === 'value' && a !== 'PROGRESS' && !a.includes('-')) {
            ;
            const u = a === 'OPTION' ? t.getAttribute('value') : t.value, f = n ?? '';
            u !== f && (t.value = f);
            n == null && t.removeAttribute(e);
            ;
            return;
        }
        let l = false;
        if (n === '' || n == null) {
            const u = typeof t[e];
            u === 'boolean' ? n = O8(n) : n == null && u === 'string' ? (n = '', l = true) : u === 'number' && (n = 0, l = true);
        }
        try {
            ;
        } catch {
        }
        l && t.removeAttribute(e);
    }
    function sc(t, e, n, r) {
        t.addEventListener(e, n, r);
    }
    function WU(t, e, n, r) {
        t.removeEventListener(e, n, r);
    }
    function HU(t, e, n, r, s = null) {
        const i = t._vei || (t._vei = {}), o = i[e];
        if (r && o) {
            ;
        } else {
            const [a, l] = zU(e);
            if (r) {
                const u = i[e] = ZU(r, s);
                sc(t, a, u, l);
            } else {
                o && (WU(t, a, o, l), i[e] = void 0);
            }
        }
    }
    ;
    function zU(t) {
        let e;
        if (/(?:Once|Passive|Capture)$/.test(t)) {
            e = {};
            let r;
            for (; r = t.match(/(?:Once|Passive|Capture)$/);) {
                t = t.slice(0, t.length - r[0].length);
                e[r[0].toLowerCase()] = true;
                ;
            }
        }
        return [
            t[2] === ':' ? t.slice(3) : Pc(t.slice(2)),
            e
        ];
    }
    let Q_ = 0;
    const YU = Promise.resolve(), KU = () => Q_ || (YU.then(() => Q_ = 0), Q_ = Date.now());
    function ZU(t, e) {
        const n = r => {
            if (!r._vts) {
                ;
            } else {
                if (r._vts <= n.attached) {
                    return;
                }
            }
            ws(XU(r, n.value), e, 5, [r]);
        };
        return n.value = t, n.attached = KU(), n;
    }
    function XU(t, e) {
        if (ze(e)) {
            const n = t.stopImmediatePropagation;
            return t.stopImmediatePropagation = () => {
                n.call(t);
                ;
                ;
            }, e.map(r => s => !s._stopped && r && r(s));
        } else {
            return e;
        }
    }
    const QU = (t, e, n, r, s = false, i, o, a, l) => {
        e === 'class' ? BU(t, r, s) : e === 'style' ? qU(t, n, r) : Tm(e) ? z2(e) || HU(t, e, n, r, o) : (e[0] === '.' ? (e = e.slice(1), true) : e[0] === '^' ? (e = e.slice(1), false) : JU(t, e, r, s)) ? jU(t, e, r, i, o, a, l) : (e === 'true-value' ? t._trueValue = r : e === 'false-value' && (t._falseValue = r), GU(t, e, r, s));
    };
    function JU(t, e, n, r) {
        return r ? !!(e === 'innerHTML' || e === 'textContent' || e in t && /^on[a-z]/.test(e) && pt(n)) : e === 'spellcheck' || e === 'draggable' || e === 'translate' || e === 'form' || e === 'list' && t.tagName === 'INPUT' || e === 'type' && t.tagName === 'TEXTAREA' || /^on[a-z]/.test(e) && Cn(n) ? false : e in t;
    }
    const Ta = (t, {slots: e}) => dv(YF, eB(t), e);
    Ta.displayName = 'Transition';
    const b7 = {
        name: String,
        type: String,
        css: {
            type: Boolean,
            default: true
        },
        duration: [
            String,
            Number,
            Object
        ],
        enterFromClass: String,
        enterActiveClass: String,
        enterToClass: String,
        appearFromClass: String,
        appearActiveClass: String,
        appearToClass: String,
        leaveFromClass: String,
        leaveActiveClass: String,
        leaveToClass: String
    };
    Ta.props = xn({}, J8, b7);
    const Ya = (t, e = []) => {
            ze(t) ? t.forEach(n => n(...e)) : t && t(...e);
        }, rT = t => t ? ze(t) ? t.some(e => e.length > 1) : t.length > 1 : false;
    function eB(t) {
        const e = {};
        for (const Z in t)
            Z in b7 || (e[Z] = t[Z]);
        if (t.css === false) {
            return e;
        }
        const {
                name: n = 'v',
                type: r,
                duration: s,
                enterFromClass: i = `${ n }-enter-from`,
                enterActiveClass: o = `${ n }-enter-active`,
                enterToClass: a = `${ n }-enter-to`,
                appearFromClass: l = i,
                appearActiveClass: u = o,
                appearToClass: f = a,
                leaveFromClass: d = `${ n }-leave-from`,
                leaveActiveClass: p = `${ n }-leave-active`,
                leaveToClass: _ = `${ n }-leave-to`
            } = t, v = tB(s), y = v && v[0], g = v && v[1], {
                onBeforeEnter: b,
                onEnter: A,
                onEnterCancelled: N,
                onLeave: I,
                onLeaveCancelled: O,
                onBeforeAppear: x = b,
                onAppear: M = A,
                onAppearCancelled: L = N
            } = e, U = (Z, fe, ge) => {
                Ka(Z, fe ? f : a);
                Ka(Z, fe ? u : o);
                ge && ge();
                ;
            }, ee = (Z, fe) => {
                Z._isLeaving = false;
                Ka(Z, d);
                Ka(Z, _);
                Ka(Z, p);
                fe && fe();
                ;
            }, ae = Z => (fe, ge) => {
                const Y = Z ? M : A, Q = () => U(fe, Z, ge);
                Ya(Y, [
                    fe,
                    Q
                ]);
                sT(() => {
                    Ka(fe, Z ? l : i);
                    Mo(fe, Z ? f : a);
                    rT(Y) || iT(fe, r, y, Q);
                    ;
                });
                ;
            };
        return xn(e, {
            onBeforeEnter(Z) {
                Ya(b, [Z]);
                Mo(Z, i);
                Mo(Z, o);
                ;
            },
            onBeforeAppear(Z) {
                Ya(x, [Z]);
                Mo(Z, l);
                Mo(Z, u);
                ;
            },
            onEnter: ae(false),
            onAppear: ae(true),
            onLeave(Z, fe) {
                Z._isLeaving = true;
                const ge = () => ee(Z, fe);
                Mo(Z, d);
                sB();
                Mo(Z, p);
                sT(() => {
                    Z._isLeaving && (Ka(Z, d), Mo(Z, _), rT(I) || iT(Z, r, g, ge));
                });
                Ya(I, [
                    Z,
                    ge
                ]);
                ;
            },
            onEnterCancelled(Z) {
                U(Z, false);
                Ya(N, [Z]);
                ;
            },
            onAppearCancelled(Z) {
                U(Z, true);
                Ya(L, [Z]);
                ;
            },
            onLeaveCancelled(Z) {
                ee(Z);
                Ya(O, [Z]);
                ;
            }
        });
    }
    function tB(t) {
        if (t == null) {
            return null;
        }
        if (Yt(t)) {
            return [
                J_(t.enter),
                J_(t.leave)
            ];
        }
        {
            const e = J_(t);
            return [
                e,
                e
            ];
        }
    }
    function J_(t) {
        return VL(t);
    }
    function Mo(t, e) {
        e.split(/\s+/).forEach(n => n && t.classList.add(n));
        (t._vtc || (t._vtc = new Set())).add(e);
        ;
    }
    function Ka(t, e) {
        e.split(/\s+/).forEach(r => r && t.classList.remove(r));
        const {_vtc: n} = t;
        n && (n.delete(e), n.size || (t._vtc = void 0));
    }
    function sT(t) {
        requestAnimationFrame(() => {
            requestAnimationFrame(t);
        });
    }
    let nB = 0;
    function iT(t, e, n, r) {
        const s = t._endId = ++nB, i = () => {
                s === t._endId && r();
            };
        if (n) {
            return setTimeout(i, n);
        }
        const {
            type: o,
            timeout: a,
            propCount: l
        } = rB(t, e);
        if (!o) {
            return r();
        }
        const u = o + 'end';
        let f = 0;
        const d = () => {
                t.removeEventListener(u, p);
                i();
                ;
            }, p = _ => {
                _.target === t && ++f >= l && d();
            };
        setTimeout(() => {
            f < l && d();
        }, a + 1);
        t.addEventListener(u, p);
        ;
    }
    function rB(t, e) {
        const n = window.getComputedStyle(t), r = v => (n[v] || '').split(', '), s = r(`${ 'transition' }Delay`), i = r(`${ 'transition' }Duration`), o = oT(s, i), a = r(`${ 'animation' }Delay`), l = r(`${ 'animation' }Duration`), u = oT(a, l);
        let f = null, d = 0, p = 0;
        e === 'transition' ? o > 0 && (f = 'transition', d = o, p = i.length) : e === 'animation' ? u > 0 && (f = 'animation', d = u, p = l.length) : (d = Math.max(o, u), f = d > 0 ? o > u ? 'transition' : 'animation' : null, p = f ? f === 'transition' ? i.length : l.length : 0);
        const _ = f === 'transition' && /\b(transform|all)(,|$)/.test(r(`${ 'transition' }Property`).toString());
        return {
            type: f,
            timeout: d,
            propCount: p,
            hasTransform: _
        };
    }
    function oT(t, e) {
        for (; t.length < e.length;) {
            t = t.concat(t);
        }
        return Math.max(...e.map((n, r) => aT(n) + aT(t[r])));
    }
    function aT(t) {
        return Number(t.slice(0, -1).replace(',', '.')) * 1000;
    }
    function sB() {
        return document.body.offsetHeight;
    }
    const Zp = t => {
        const e = t.props['onUpdate:modelValue'] || false;
        return ze(e) ? n => Np(e, n) : e;
    };
    function iB(t) {
        t.target.composing = true;
    }
    function cT(t) {
        const e = t.target;
        e.composing && (e.composing = false, e.dispatchEvent(new Event('input')));
    }
    const lT = {
            created(t, {
                modifiers: {
                    lazy: e,
                    trim: n,
                    number: r
                }
            }, s) {
                ;
                const i = r || s.props && s.props.type === 'number';
                sc(t, e ? 'change' : 'input', o => {
                    if (o.target.composing) {
                        return;
                    }
                    let a = t.value;
                    n && (a = a.trim());
                    i && (a = r0(a));
                    t._assign(a);
                    ;
                });
                n && sc(t, 'change', () => {
                    ;
                });
                e || (sc(t, 'compositionstart', iB), sc(t, 'compositionend', cT), sc(t, 'change', cT));
                ;
            },
            mounted(t, {value: e}) {
                ;
            },
            beforeUpdate(t, {
                value: e,
                modifiers: {
                    lazy: n,
                    trim: r,
                    number: s
                }
            }, i) {
                if (t._assign = Zp(i), t.composing || document.activeElement === t && t.type !== 'range' && (n || r && t.value.trim() === e || (s || t.type === 'number') && r0(t.value) === e)) {
                    return;
                }
                const o = e ?? '';
                t.value !== o && (t.value = o);
            }
        }, oB = {
            deep: true,
            created(t, e, n) {
                ;
                sc(t, 'change', () => {
                    const r = t._modelValue, s = aB(t), i = t.checked, o = t._assign;
                    if (ze(r)) {
                        const a = A8(r, s), l = a !== -1;
                        if (i && !l) {
                            o(r.concat(s));
                        } else {
                            if (!i && l) {
                                const u = [...r];
                                u.splice(a, 1);
                                o(u);
                                ;
                            }
                        }
                    } else {
                        if (Sm(r)) {
                            const a = new Set(r);
                            i ? a.add(s) : a.delete(s);
                            o(a);
                            ;
                        } else {
                            o(E7(t, i));
                        }
                    }
                });
                ;
            },
            mounted: uT,
            beforeUpdate(t, e, n) {
                ;
                uT(t, e, n);
                ;
            }
        };
    function uT(t, {
        value: e,
        oldValue: n
    }, r) {
        ;
        ze(e) ? t.checked = A8(e, r.props.value) > -1 : Sm(e) ? t.checked = e.has(r.props.value) : e !== n && (t.checked = Am(e, E7(t, true)));
        ;
    }
    function aB(t) {
        return '_value' in t ? t._value : t.value;
    }
    function E7(t, e) {
        const n = e ? '_trueValue' : '_falseValue';
        return n in t ? t[n] : e;
    }
    const cB = [
            'ctrl',
            'shift',
            'alt',
            'meta'
        ], lB = {
            stop: t => t.stopPropagation(),
            prevent: t => t.preventDefault(),
            self: t => t.target !== t.currentTarget,
            ctrl: t => !t.ctrlKey,
            shift: t => !t.shiftKey,
            alt: t => !t.altKey,
            meta: t => !t.metaKey,
            left: t => 'button' in t && t.button !== 0,
            middle: t => 'button' in t && t.button !== 1,
            right: t => 'button' in t && t.button !== 2,
            exact: (t, e) => cB.some(n => t[`${ n }Key`] && !e.includes(n))
        }, Si = (t, e) => (n, ...r) => {
            for (let s = 0; s < e.length; s++) {
                const i = lB[e[s]];
                if (i && i(n, e)) {
                    return;
                }
            }
            return t(n, ...r);
        }, pv = (t, e) => n => {
            if (!('key' in n)) {
                return;
            }
            const r = Pc(n.key);
            if (e.some(s => s === r || uB[s] === r)) {
                return t(n);
            }
        }, hB = xn({ patchProp: QU }, UU);
    let hT;
    function fB() {
        return hT || (hT = vU(hB));
    }
    const T7 = (...t) => {
        const e = fB().createApp(...t), {mount: n} = e;
        return e.mount = r => {
            const s = dB(r);
            if (!s) {
                return;
            }
            const i = e._component;
            !pt(i) && !i.render && !i.template && (i.template = s.innerHTML);
            ;
            ;
            const o = n(s, false, s instanceof SVGElement);
            return s instanceof Element && (s.removeAttribute('v-cloak'), s.setAttribute('data-v-app', '')), o;
        }, e;
    };
    function dB(t) {
        return Cn(t) ? document.querySelector(t) : t;
    }
    const Je = (t, e) => {
        const n = t.__vccOpts || t;
        for (const [r, s] of e);
        return n;
    };
    var mn = typeof globalThis < 'u' ? globalThis : typeof window < 'u' ? window : typeof global < 'u' ? global : typeof self < 'u' ? self : {};
    function vu(t) {
        return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, 'default') ? t.default : t;
    }
    function pB(t) {
        if (t.__esModule) {
            return t;
        }
        var e = t.default;
        if (typeof e == 'function') {
            var n = function r() {
                return this instanceof r ? Reflect.construct(e, arguments, this.constructor) : e.apply(this, arguments);
            };
            ;
        } else {
            n = {};
        }
        return Object.defineProperty(n, '__esModule', { value: true }), Object.keys(t).forEach(function (r) {
            var s = Object.getOwnPropertyDescriptor(t, r);
            Object.defineProperty(n, r, s.get ? s : {
                enumerable: true,
                get: function () {
                    return t[r];
                }
            });
        }), n;
    }
    var mB = { exports: {} };
    (function (t) {
        (function () {
            function e(a, l) {
                var u = a.x - l.x, f = a.y - l.y;
                return u * u + f * f;
            }
            function n(a, l, u) {
                var f = l.x, d = l.y, p = u.x - f, _ = u.y - d;
                if (p !== 0 || _ !== 0) {
                    var v = ((a.x - f) * p + (a.y - d) * _) / (p * p + _ * _);
                    v > 1 ? (f = u.x, d = u.y) : v > 0 && (f += p * v, d += _ * v);
                }
                return p = a.x - f, _ = a.y - d, p * p + _ * _;
            }
            function r(a, l) {
                for (var u = a[0], f = [u], d, p = 1, _ = a.length; p < _; p++) {
                    d = a[p];
                    if (e(d, u) > l) {
                        f.push(d);
                        u = d;
                    }
                    ;
                }
                return u !== d && f.push(d), f;
            }
            function s(a, l, u, f, d) {
                for (var p = f, _, v = l + 1; v < u; v++) {
                    var y = n(a[v], a[l], a[u]);
                    if (y > p) {
                        _ = v;
                        p = y;
                    }
                }
                if (p > f) {
                    _ - l > 1 && s(a, l, _, f, d);
                    d.push(a[_]);
                    u - _ > 1 && s(a, _, u, f, d);
                }
            }
            function i(a, l) {
                var u = a.length - 1, f = [a[0]];
                return s(a, 0, u, l, f), f.push(a[u]), f;
            }
            function o(a, l, u) {
                if (a.length <= 2) {
                    return a;
                }
                var f = l !== void 0 ? l * l : 1;
                return a = u ? a : r(a, f), a = i(a, f), a;
            }
            ;
            t.exports.default = o;
            ;
        }());
    }(mB));
    var hr;
    if (typeof window > 'u') {
        ;
        hr = {
            navigator: { userAgent: '' },
            document: {
                location: fT,
                referrer: ''
            },
            screen: {
                width: 0,
                height: 0
            },
            location: fT
        };
    } else {
        hr = window;
    }
    var Lm = Array.prototype, gB = Function.prototype, S7 = Object.prototype, Wo = Lm.slice, Pf = S7.toString, Fm = S7.hasOwnProperty, kn = hr.console, no = hr.navigator, Ht = hr.document, nh = hr.opera, Xp = hr.screen, Fs = no.userAgent, ey = gB.bind, dT = Lm.forEach, pT = Lm.indexOf, mT = Lm.map, _B = Array.isArray, y0 = {}, $ = {
            trim: function (t) {
                return t.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
            }
        }, qt = {
            log: function () {
                if (false && !$.isUndefined(kn) && kn) {
                    try {
                        kn.log.apply(kn, arguments);
                    } catch {
                        $.each(arguments, function (e) {
                            kn.log(e);
                        });
                    }
                }
            },
            warn: function () {
                if (false && !$.isUndefined(kn) && kn) {
                    var t = ['Mixpanel warning:'].concat($.toArray(arguments));
                    try {
                        kn.warn.apply(kn, t);
                    } catch {
                        $.each(t, function (n) {
                            kn.warn(n);
                        });
                    }
                }
            },
            error: function () {
                if (false && !$.isUndefined(kn) && kn) {
                    var t = ['Mixpanel error:'].concat($.toArray(arguments));
                    try {
                        kn.error.apply(kn, t);
                    } catch {
                        $.each(t, function (n) {
                            kn.error(n);
                        });
                    }
                }
            },
            critical: function () {
                if (!$.isUndefined(kn) && kn) {
                    var t = ['Mixpanel error:'].concat($.toArray(arguments));
                    try {
                        kn.error.apply(kn, t);
                    } catch {
                        $.each(t, function (n) {
                            kn.error(n);
                        });
                    }
                }
            }
        }, ty = function (t, e) {
            return function () {
                return arguments[0] = '[' + e + '] ' + arguments[0], t.apply(qt, arguments);
            };
        }, mv = function (t) {
            return {
                log: ty(qt.log, t),
                error: ty(qt.error, t),
                critical: ty(qt.critical, t)
            };
        };
    $.bind = function (t, e) {
        var n, r;
        if (ey && t.bind === ey) {
            return ey.apply(t, Wo.call(arguments, 1));
        }
        if (!$.isFunction(t)) {
            throw new TypeError();
        }
        return n = Wo.call(arguments, 2), r = function () {
            if (!(this instanceof r)) {
                return t.apply(e, n.concat(Wo.call(arguments)));
            }
            var s = {
                prototype: t.prototype,
                prototype: null
            };
            ;
            var i = new s();
            ;
            var o = t.apply(i, n.concat(Wo.call(arguments)));
            return Object(o) === o ? o : i;
        }, r;
    };
    $.each = function (t, e, n) {
        if (t != null) {
            if (dT && t.forEach === dT) {
                t.forEach(e, n);
            } else {
                if (t.length === +t.length) {
                    for (var r = 0, s = t.length; r < s; r++) {
                        if (r in t && e.call(n, t[r], r, t) === y0) {
                            return;
                        }
                    }
                } else {
                    for (var i in t)
                        if (Fm.call(t, i) && e.call(n, t[i], i, t) === y0) {
                            return;
                        }
                }
            }
        }
    };
    $.extend = function (t) {
        return $.each(Wo.call(arguments, 1), function (e) {
            for (var n in e)
                e[n] !== void 0 && (t[n] = e[n]);
        }), t;
    };
    $.isArray = _B || function (t) {
        return Pf.call(t) === '[object Array]';
    };
    $.isFunction = function (t) {
        try {
            return /^\s*\bfunction\b/.test(t);
        } catch {
            return false;
        }
    };
    $.isArguments = function (t) {
        return !!(t && Fm.call(t, 'callee'));
    };
    $.toArray = function (t) {
        return t ? t.toArray ? t.toArray() : $.isArray(t) || $.isArguments(t) ? Wo.call(t) : $.values(t) : [];
    };
    $.map = function (t, e, n) {
        if (mT && t.map === mT) {
            return t.map(e, n);
        }
        var r = [];
        return $.each(t, function (s) {
            r.push(e.call(n, s));
        }), r;
    };
    $.keys = function (t) {
        var e = [];
        return t === null || $.each(t, function (n, r) {
            e[e.length] = r;
        }), e;
    };
    $.values = function (t) {
        var e = [];
        return t === null || $.each(t, function (n) {
            e[e.length] = n;
        }), e;
    };
    $.include = function (t, e) {
        var n = false;
        return t === null ? n : pT && t.indexOf === pT ? t.indexOf(e) != -1 : ($.each(t, function (r) {
            if (n || (n = r === e)) {
                return y0;
            }
        }), n);
    };
    $.includes = function (t, e) {
        return t.indexOf(e) !== -1;
    };
    $.inherit = function (t, e) {
        return t.prototype = new e(), t.prototype.constructor = t, t.superclass = e.prototype, t;
    };
    $.isObject = function (t) {
        return t === Object(t) && !$.isArray(t);
    };
    $.isEmptyObject = function (t) {
        if ($.isObject(t)) {
            for (var e in t)
                if (Fm.call(t, e)) {
                    return false;
                }
            return true;
        }
        return false;
    };
    $.isUndefined = function (t) {
        return t === void 0;
    };
    $.isString = function (t) {
        return Pf.call(t) == '[object String]';
    };
    $.isDate = function (t) {
        return Pf.call(t) == '[object Date]';
    };
    $.isNumber = function (t) {
        return Pf.call(t) == '[object Number]';
    };
    $.isElement = function (t) {
        return !!(t && t.nodeType === 1);
    };
    $.encodeDates = function (t) {
        return $.each(t, function (e, n) {
            $.isDate(e) ? t[n] = $.formatDate(e) : $.isObject(e) && (t[n] = $.encodeDates(e));
        }), t;
    };
    $.timestamp = function () {
        return Date.now = Date.now || function () {
            return +new Date();
        }, Date.now();
    };
    $.formatDate = function (t) {
        function e(n) {
            return n < 10 ? '0' + n : n;
        }
        return t.getUTCFullYear() + '-' + e(t.getUTCMonth() + 1) + '-' + e(t.getUTCDate()) + 'T' + e(t.getUTCHours()) + ':' + e(t.getUTCMinutes()) + ':' + e(t.getUTCSeconds());
    };
    $.strip_empty_properties = function (t) {
        var e = {};
        return $.each(t, function (n, r) {
            $.isString(n) && n.length > 0 && (e[r] = n);
        }), e;
    };
    $.truncate = function (t, e) {
        var n;
        return typeof t == 'string' ? n = t.slice(0, e) : $.isArray(t) ? (n = [], $.each(t, function (r) {
            n.push($.truncate(r, e));
        })) : $.isObject(t) ? (n = {}, $.each(t, function (r, s) {
            ;
        })) : n = t, n;
    };
    $.JSONEncode = function (t) {
        var e = t, n = function (s) {
                ;
                return /[\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g.lastIndex = 0, /[\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g.test(s) ? '"' + s.replace(/[\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, function (a) {
                    var l = o[a];
                    return typeof l == 'string' ? l : '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
                }) + '"' : '"' + s + '"';
            }, r = function (s, i) {
                var o = '', l = 0, u = '', f = '', d = 0, p = o, _ = [], v = i[s];
                switch (v && typeof v == 'object' && typeof v.toJSON == 'function' && (v = v.toJSON(s)), typeof v) {
                case 'string':
                    return n(v);
                case 'number':
                    return isFinite(v) ? String(v) : 'null';
                case 'boolean':
                case 'null':
                    return String(v);
                case 'object':
                    if (!v) {
                        return 'null';
                    }
                    if (o += '    ', _ = [], Pf.apply(v) === '[object Array]') {
                        for (d = v.length, l = 0; l < d; l += 1) {
                            _[l] = r(l, v) || 'null';
                        }
                        return f = _.length === 0 ? '[]' : o ? `[
` + o + _.join(`,
` + o) + `
` + p + ']' : '[' + _.join(',') + ']', o = p, f;
                    }
                    for (u in v)
                        Fm.call(v, u) && (f = r(u, v), f && _.push(n(u) + (o ? ': ' : ':') + f));
                    return f = _.length === 0 ? '{}' : o ? '{' + _.join(',') + p + '}' : '{' + _.join(',') + '}', o = p, f;
                }
            };
        return r('', { '': e });
    };
    $.JSONDecode = (function () {
        var t, e, n = {
                '"': '"',
                '\\': '\\',
                '/': '/',
                b: '\b',
                f: '\f',
                n: `
`,
                r: '\r',
                t: '\t'
            }, r, s = function (_) {
                var v = new SyntaxError(_);
                throw v.at = t, v.text = r, v;
            }, i = function (_) {
                return _ && _ !== e && s('Expected \'' + _ + '\' instead of \'' + e + '\''), e = r.charAt(t), t += 1, e;
            }, o = function () {
                var _, v = '';
                for (e === '-' && (v = '-', i('-')); e >= '0' && e <= '9';) {
                    v += e;
                    i();
                    ;
                }
                if (e === '.') {
                    for (v += '.'; i() && e >= '0' && e <= '9';) {
                        v += e;
                    }
                }
                if (e === 'e' || e === 'E') {
                    for (v += e, i(), (e === '-' || e === '+') && (v += e, i()); e >= '0' && e <= '9';) {
                        v += e;
                        i();
                        ;
                    }
                }
                if (_ = +v, !isFinite(_)) {
                    s('Bad number');
                } else {
                    return _;
                }
            }, a = function () {
                var _, v, y = '', g;
                if (e === '"') {
                    for (; i();) {
                        if (e === '"') {
                            return i(), y;
                        }
                        if (e === '\\') {
                            if (i(), e === 'u') {
                                for (g = 0, v = 0; v < 4 && (_ = parseInt(i(), 16), !!isFinite(_)); v += 1) {
                                    g = g * 16 + _;
                                }
                                y += String.fromCharCode(g);
                            } else {
                                if (typeof n[e] == 'string') {
                                    y += n[e];
                                } else {
                                    break;
                                }
                            }
                        } else {
                            y += e;
                        }
                    }
                }
                s('Bad string');
            }, l = function () {
                for (; e && e <= ' ';) {
                    i();
                }
            }, u = function () {
                switch (e) {
                case 't':
                    return i('t'), i('r'), i('u'), i('e'), true;
                case 'f':
                    return i('f'), i('a'), i('l'), i('s'), i('e'), false;
                case 'n':
                    return i('n'), i('u'), i('l'), i('l'), null;
                }
                s('Unexpected "' + e + '"');
            }, f, d = function () {
                var _ = [];
                if (e === '[') {
                    if (i('['), l(), e === ']') {
                        return i(']'), _;
                    }
                    for (; e;) {
                        if (_.push(f()), l(), e === ']') {
                            return i(']'), _;
                        }
                        i(',');
                        l();
                        ;
                    }
                }
                s('Bad array');
            }, p = function () {
                var _, v = {
                        channelCount: O,
                        channelCountMode: O,
                        channelInterpretation: O
                    };
                if (e === '{') {
                    if (i('{'), l(), e === '}') {
                        return i('}'), v;
                    }
                    for (; e;) {
                        if (_ = a(), l(), i(':'), Object.hasOwnProperty.call(v, _) && s('Duplicate key "' + _ + '"'), v[_] = f(), l(), e === '}') {
                            return i('}'), v;
                        }
                        i(',');
                        l();
                        ;
                    }
                }
                s('Bad object');
            };
        return f = function () {
            switch (l(), e) {
            case '{':
                return p();
            case '[':
                return d();
            case '"':
                return a();
            case '-':
                return o();
            default:
                return e >= '0' && e <= '9' ? o() : u();
            }
        }, function (_) {
            var v;
            return r = _, t = 0, e = ' ', v = f(), l(), e && s('Syntax error'), v;
        };
    }());
    $.base64Encode = function (t) {
        var e = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=', n, r, s, i, o, a, l, u, f = 0, d = 0, p = '', _ = [];
        if (!t) {
            return t;
        }
        t = $.utf8Encode(t);
        do
            n = t.charCodeAt(f++), r = t.charCodeAt(f++), s = t.charCodeAt(f++), u = n << 16 | r << 8 | s, i = u >> 18 & 63, o = u >> 12 & 63, a = u >> 6 & 63, l = u & 63, _[d++] = e.charAt(i) + e.charAt(o) + e.charAt(a) + e.charAt(l);
        while (f < t.length);
        switch (p = _.join(''), t.length % 3) {
        case 1:
            p = p.slice(0, -2) + '==';
            break;
        case 2:
            p = p.slice(0, -1) + '=';
            break;
        }
        return p;
    };
    $.utf8Encode = function (t) {
        t = (t + '').replace(/\r\n/g, `
`).replace(/\r/g, `
`);
        var e = '', n, r, s = 0, i;
        for (n = r = 0, s = t.length, i = 0; i < s; i++) {
            var o = t.charCodeAt(i), a = null;
            o < 128 ? r++ : o > 127 && o < 2048 ? a = String.fromCharCode(o >> 6 | 192, o & 63 | 128) : a = String.fromCharCode(o >> 12 | 224, o >> 6 & 63 | 128, o & 63 | 128);
            if (a !== null) {
                r > n && (e += t.substring(n, r));
                e += a;
                n = r = i + 1;
            }
            ;
        }
        return r > n && (e += t.substring(n, t.length)), e;
    };
    $.UUID = (function () {
        var t = function () {
                for (var r = 1 * new Date(), s = 0; r == 1 * new Date();) {
                    s++;
                }
                return r.toString(16) + s.toString(16);
            }, e = function () {
                return Math.random().toString(16).replace('.', '');
            }, n = function () {
                var r = Fs, s, i, o = [], a = 0;
                function l(u, f) {
                    var d, p = 0;
                    for (d = 0; d < f.length; d++) {
                        p |= o[d] << d * 8;
                    }
                    return u ^ p;
                }
                for (s = 0; s < r.length; s++) {
                    i = r.charCodeAt(s);
                    o.unshift(i & 255);
                    if (o.length >= 4) {
                        a = l(a, o);
                        o = [];
                    }
                    ;
                }
                return o.length > 0 && (a = l(a, o)), a.toString(16);
            };
        return function () {
            var r = (Xp.height * Xp.width).toString(16);
            return t() + '-' + e() + '-' + n() + '-' + r + '-' + t();
        };
    }());
    var gT = [
        'ahrefsbot',
        'baiduspider',
        'bingbot',
        'bingpreview',
        'facebookexternal',
        'petalbot',
        'pinterest',
        'screaming frog',
        'yahoo! slurp',
        'yandexbot',
        'adsbot-google',
        'apis-google',
        'duplexweb-google',
        'feedfetcher-google',
        'google favicon',
        'google web preview',
        'google-read-aloud',
        'googlebot',
        'googleweblight',
        'mediapartners-google',
        'storebot-google'
    ];
    $.isBlockedUA = function (t) {
        var e;
        for (t = t.toLowerCase(), e = 0; e < gT.length; e++) {
            if (t.indexOf(gT[e]) !== -1) {
                return true;
            }
        }
        return false;
    };
    $.HTTPBuildQuery = function (t, e) {
        var n, r, s = [];
        return $.isUndefined(e) && (e = '&'), $.each(t, function (i, o) {
            n = encodeURIComponent(i.toString());
            r = encodeURIComponent(o);
            s[s.length] = r + '=' + n;
            ;
        }), s.join(e);
    };
    $.getQueryParam = function (t, e) {
        e = e.replace(/[[]/, '\\[').replace(/[\]]/, '\\]');
        var n = '[\\?&]' + e + '=([^&#]*)', r = new RegExp(n), s = r.exec(t);
        if (s === null || s && typeof s[1] != 'string' && s[1].length) {
            return '';
        }
        var i = s[1];
        try {
            i = decodeURIComponent(i);
        } catch {
            qt.error('Skipping decoding for malformed query param: ' + i);
        }
        return i.replace(/\+/g, ' ');
    };
    $.cookie = {
        get: function (t) {
            for (var e = t + '=', n = Ht.cookie.split(';'), r = 0; r < n.length; r++) {
                for (var s = n[r]; s.charAt(0) == ' ';) {
                    s = s.substring(1, s.length);
                }
                if (s.indexOf(e) === 0) {
                    return decodeURIComponent(s.substring(e.length, s.length));
                }
            }
            return null;
        },
        parse: function (t) {
            var e;
            try {
                e = $.JSONDecode($.cookie.get(t)) || {};
            } catch {
            }
            return e;
        },
        set_seconds: function (t, e, n, r, s, i, o) {
            var a = '', l = '', u = '';
            if (o) {
                a = '; domain=' + o;
            } else {
                if (r) {
                    var f = _T(Ht.location.hostname);
                    a = f ? '; domain=.' + f : '';
                }
            }
            if (n) {
                var d = new Date();
                d.setTime(d.getTime() + n * 1000);
                l = '; expires=' + d.toGMTString();
                ;
            }
            i && (s = true, u = '; SameSite=None');
            s && (u += '; secure');
            Ht.cookie = t + '=' + encodeURIComponent(e) + l + '; path=/' + a + u;
            ;
        },
        set: function (t, e, n, r, s, i, o) {
            var a = '', l = '', u = '';
            if (o) {
                a = '; domain=' + o;
            } else {
                if (r) {
                    var f = _T(Ht.location.hostname);
                    a = f ? '; domain=.' + f : '';
                }
            }
            if (n) {
                var d = new Date();
                d.setTime(d.getTime() + n * 24 * 60 * 60 * 1000);
                l = '; expires=' + d.toGMTString();
                ;
            }
            i && (s = true, u = '; SameSite=None');
            s && (u += '; secure');
            ;
            var p = t + '=' + encodeURIComponent(e) + l + '; path=/' + a + u;
            return Ht.cookie = p, p;
        },
        remove: function (t, e, n) {
            $.cookie.set(t, '', -1, e, false, false, n);
        }
    };
    var ny = null, Qp = function (t, e) {
            if (ny !== null && !e) {
                return ny;
            }
            var n = true;
            try {
                t = t || window.localStorage;
                var r = '__mplss_' + gv(8);
                t.setItem(r, 'xyz');
                t.getItem(r) !== 'xyz' && (n = false);
                t.removeItem(r);
                ;
            } catch {
                n = false;
            }
            return ny = n, n;
        };
    $.localStorage = {
        is_supported: function (t) {
            var e = Qp(null, t);
            return e || qt.error('localStorage unsupported; falling back to cookie store'), e;
        },
        error: function (t) {
            qt.error('localStorage error: ' + t);
        },
        get: function (t) {
            try {
                return window.localStorage.getItem(t);
            } catch (e) {
                $.localStorage.error(e);
            }
            return null;
        },
        parse: function (t) {
            try {
                return $.JSONDecode($.localStorage.get(t)) || {};
            } catch {
            }
            return null;
        },
        set: function (t, e) {
            try {
                window.localStorage.setItem(t, e);
            } catch (n) {
                $.localStorage.error(n);
            }
        },
        remove: function (t) {
            try {
                window.localStorage.removeItem(t);
            } catch (e) {
                $.localStorage.error(e);
            }
        }
    };
    $.register_event = (function () {
        var t = function (r, s, i, o, a) {
            if (!r) {
                qt.error('No valid element provided to register_event');
                return;
            }
            if (r.addEventListener && !o) {
                r.addEventListener(s, i, !!a);
            } else {
                var l = 'on' + s, u = r[l];
                ;
            }
        };
        function e(r, s, i) {
            var o = function (a) {
                if (a = a || n(window.event), !!a) {
                    var l = true, u, f;
                    return $.isFunction(i) && (u = i(a)), f = s.call(r, a), (u === false || f === false) && (l = false), l;
                }
            };
            return o;
        }
        function n(r) {
            return r && (r.preventDefault = n.preventDefault, r.stopPropagation = n.stopPropagation), r;
        }
        return n.preventDefault = function () {
            this.returnValue = false;
        }, n.stopPropagation = function () {
            this.cancelBubble = true;
        }, t;
    }());
    var yB = new RegExp('^(\\w*)\\[(\\w+)([=~\\|\\^\\$\\*]?)=?"?([^\\]"]*)"?\\]$');
    $.dom_query = (function () {
        function t(s) {
            return s.all ? s.all : s.getElementsByTagName('*');
        }
        ;
        function n(s, i) {
            var o = ' ' + i + ' ';
            return (' ' + s.className + ' ').replace(/[\t\r\n]/g, ' ').indexOf(o) >= 0;
        }
        function r(s) {
            if (!Ht.getElementsByTagName) {
                return [];
            }
            var i = s.split(' '), o, a, l, u, f, d, p, _, v, y, g = [Ht];
            for (d = 0; d < i.length; d++) {
                if (o = i[d].replace(/^\s+/, '').replace(/\s+$/, ''), o.indexOf('#') > -1) {
                    a = o.split('#');
                    l = a[0];
                    ;
                    var b = a[1], A = Ht.getElementById(b);
                    if (!A || l && A.nodeName.toLowerCase() != l) {
                        return [];
                    }
                    g = [A];
                    continue;
                }
                if (o.indexOf('.') > -1) {
                    a = o.split('.');
                    l = a[0];
                    ;
                    var N = a[1];
                    for (l || (l = '*'), u = [], f = 0, p = 0; p < g.length; p++) {
                        for (l == '*' ? v = t(g[p]) : v = g[p].getElementsByTagName(l), _ = 0; _ < v.length; _++) {
                            u[f++] = v[_];
                        }
                    }
                    for (g = [], y = 0, p = 0; p < u.length; p++) {
                        u[p].className && $.isString(u[p].className) && n(u[p], N) && (g[y++] = u[p]);
                    }
                    continue;
                }
                var I = o.match(yB);
                if (I) {
                    l = I[1];
                    var O = I[2], x = I[3], M = I[4];
                    for (l || (l = '*'), u = [], f = 0, p = 0; p < g.length; p++) {
                        for (l == '*' ? v = t(g[p]) : v = g[p].getElementsByTagName(l), _ = 0; _ < v.length; _++) {
                            u[f++] = v[_];
                        }
                    }
                    g = [];
                    y = 0;
                    ;
                    var L;
                    switch (x) {
                    case '=':
                        L = function (U) {
                            return U.getAttribute(O) == M;
                        };
                        break;
                    case '~':
                        L = function (U) {
                            return U.getAttribute(O).match(new RegExp('\\b' + M + '\\b'));
                        };
                        break;
                    case '|':
                        L = function (U) {
                            return U.getAttribute(O).match(new RegExp('^' + M + '-?'));
                        };
                        break;
                    case '^':
                        L = function (U) {
                            return U.getAttribute(O).indexOf(M) === 0;
                        };
                        break;
                    case '$':
                        L = function (U) {
                            return U.getAttribute(O).lastIndexOf(M) == U.getAttribute(O).length - M.length;
                        };
                        break;
                    case '*':
                        L = function (U) {
                            return U.getAttribute(O).indexOf(M) > -1;
                        };
                        break;
                    default:
                        L = function (U) {
                            return U.getAttribute(O);
                        };
                    }
                    for (g = [], y = 0, p = 0; p < u.length; p++) {
                        L(u[p]) && (g[y++] = u[p]);
                    }
                    continue;
                }
                for (l = o, u = [], f = 0, p = 0; p < g.length; p++) {
                    for (v = g[p].getElementsByTagName(l), _ = 0; _ < v.length; _++) {
                        u[f++] = v[_];
                    }
                }
                g = u;
            }
            return g;
        }
        return function (s) {
            return $.isElement(s) ? [s] : $.isObject(s) && !$.isUndefined(s.length) ? s : r.call(this, s);
        };
    }());
    $.info = {
        campaignParams: function () {
            var t = 'utm_source utm_medium utm_campaign utm_content utm_term'.split(' '), e = '', n = {};
            return $.each(t, function (r) {
                e = $.getQueryParam(Ht.URL, r);
                e.length && (n[r] = e);
                ;
            }), n;
        },
        searchEngine: function (t) {
            return t.search('https?://(.*)google.([^/?]*)') === 0 ? 'google' : t.search('https?://(.*)bing.com') === 0 ? 'bing' : t.search('https?://(.*)yahoo.com') === 0 ? 'yahoo' : t.search('https?://(.*)duckduckgo.com') === 0 ? 'duckduckgo' : null;
        },
        searchInfo: function (t) {
            var e = $.info.searchEngine(t), n = e != 'yahoo' ? 'q' : 'p', r = { $search_engine: e };
            if (e !== null) {
                ;
                var s = $.getQueryParam(t, n);
                s.length && (r.mp_keyword = s);
            }
            return r;
        },
        browser: function (t, e, n) {
            return e = e || '', n || $.includes(t, ' OPR/') ? $.includes(t, 'Mini') ? 'Opera Mini' : 'Opera' : /(BlackBerry|PlayBook|BB10)/i.test(t) ? 'BlackBerry' : $.includes(t, 'IEMobile') || $.includes(t, 'WPDesktop') ? 'Internet Explorer Mobile' : $.includes(t, 'SamsungBrowser/') ? 'Samsung Internet' : $.includes(t, 'Edge') || $.includes(t, 'Edg/') ? 'Microsoft Edge' : $.includes(t, 'FBIOS') ? 'Facebook Mobile' : $.includes(t, 'Chrome') ? 'Chrome' : $.includes(t, 'CriOS') ? 'Chrome iOS' : $.includes(t, 'UCWEB') || $.includes(t, 'UCBrowser') ? 'UC Browser' : $.includes(t, 'FxiOS') ? 'Firefox iOS' : $.includes(e, 'Apple') ? $.includes(t, 'Mobile') ? 'Mobile Safari' : 'Safari' : $.includes(t, 'Android') ? 'Android Mobile' : $.includes(t, 'Konqueror') ? 'Konqueror' : $.includes(t, 'Firefox') ? 'Firefox' : $.includes(t, 'MSIE') || $.includes(t, 'Trident/') ? 'Internet Explorer' : $.includes(t, 'Gecko') ? 'Mozilla' : '';
        },
        browserVersion: function (t, e, n) {
            var r = $.info.browser(t, e, n), i = s[r];
            if (i === void 0) {
                return null;
            }
            var o = t.match(i);
            return o ? parseFloat(o[o.length - 2]) : null;
        },
        os: function () {
            var t = Fs;
            return /Windows/i.test(t) ? /Phone/.test(t) || /WPDesktop/.test(t) ? 'Windows Phone' : 'Windows' : /(iPhone|iPad|iPod)/.test(t) ? 'iOS' : /Android/.test(t) ? 'Android' : /(BlackBerry|PlayBook|BB10)/i.test(t) ? 'BlackBerry' : /Mac/i.test(t) ? 'Mac OS X' : /Linux/.test(t) ? 'Linux' : /CrOS/.test(t) ? 'Chrome OS' : '';
        },
        device: function (t) {
            return /Windows Phone/i.test(t) || /WPDesktop/.test(t) ? 'Windows Phone' : /iPad/.test(t) ? 'iPad' : /iPod/.test(t) ? 'iPod Touch' : /iPhone/.test(t) ? 'iPhone' : /(BlackBerry|PlayBook|BB10)/i.test(t) ? 'BlackBerry' : /Android/.test(t) ? 'Android' : '';
        },
        referringDomain: function (t) {
            var e = t.split('/');
            return e.length >= 3 ? e[2] : '';
        },
        properties: function () {
            return $.extend($.strip_empty_properties({
                $os: $.info.os(),
                $browser: $.info.browser(Fs, no.vendor, nh),
                $referrer: Ht.referrer,
                $referring_domain: $.info.referringDomain(Ht.referrer),
                $device: $.info.device(Fs)
            }), {
                $current_url: hr.location.href,
                $browser_version: $.info.browserVersion(Fs, no.vendor, nh),
                $screen_height: Xp.height,
                $screen_width: Xp.width,
                mp_lib: 'web',
                $lib_version: '2.45.0',
                $insert_id: gv(),
                time: $.timestamp() / 1000
            });
        },
        people_properties: function () {
            return $.extend($.strip_empty_properties({
                $os: $.info.os(),
                $browser: $.info.browser(Fs, no.vendor, nh)
            }), { $browser_version: $.info.browserVersion(Fs, no.vendor, nh) });
        },
        pageviewInfo: function (t) {
            return $.strip_empty_properties({
                mp_page: t,
                mp_referrer: Ht.referrer,
                mp_browser: $.info.browser(Fs, no.vendor, nh),
                mp_platform: $.info.os()
            });
        }
    };
    var gv = function (t) {
            var e = Math.random().toString(36).substring(2, 10) + Math.random().toString(36).substring(2, 10);
            return t ? e.substring(0, t) : e;
        }, _T = function (t) {
            var e = /[a-z0-9][a-z0-9-]+\.[a-z.]{2,6}$/i, n = t.split('.'), r = n[n.length - 1];
            (r.length > 4 || r === 'com' || r === 'org') && (e = /[a-z0-9][a-z0-9-]*\.[a-z]+$/i);
            var s = t.match(e);
            return s ? s[0] : '';
        }, Jp = null, e1 = null;
    if (typeof JSON < 'u') {
        Jp = JSON.stringify;
        e1 = JSON.parse;
    }
    Jp = Jp || $.JSONEncode;
    e1 = e1 || $.JSONDecode;
    $.toArray = $.toArray;
    $.isObject = $.isObject;
    $.JSONEncode = $.JSONEncode;
    $.JSONDecode = $.JSONDecode;
    $.isBlockedUA = $.isBlockedUA;
    $.isEmptyObject = $.isEmptyObject;
    $.info = $.info;
    $.info.device = $.info.device;
    $.info.browser = $.info.browser;
    $.info.browserVersion = $.info.browserVersion;
    $.info.properties = $.info.properties;
    var yo = function () {
    };
    yo.prototype.create_properties = function () {
    };
    yo.prototype.event_handler = function () {
    };
    yo.prototype.after_track_handler = function () {
    };
    yo.prototype.init = function (t) {
        return this.mp = t, this;
    };
    yo.prototype.track = function (t, e, n, r) {
        var s = this, i = $.dom_query(t);
        if (i.length === 0) {
            qt.error('The DOM query (' + t + ') returned 0 elements');
            return;
        }
        return $.each(i, function (o) {
            $.register_event(o, this.override_event, function (a) {
                var l = {
                        u: n(i[u]),
                        value: S,
                        buffer: a,
                        loop: true,
                        onended: v,
                        e: 0.5 * (1 - Math.cos(Math.PI * n)),
                        totalPoints: 8
                    }, u = s.create_properties(n, this), f = s.mp.get_config('track_links_timeout');
                s.event_handler(a, this, l);
                window.setTimeout(s.track_callback(r, u, l, true), f);
                s.mp.track(e, u, s.track_callback(r, u, l));
                ;
            });
        }, this), true;
    };
    yo.prototype.track_callback = function (t, e, n, r) {
        r = r || false;
        var s = this;
        return function () {
            n.callback_fired || (n.callback_fired = true, !(t && t(r, e) === false) && s.after_track_handler(e, n, r));
        };
    };
    yo.prototype.create_properties = function (t, e) {
        var n;
        return typeof t == 'function' ? n = t(e) : n = $.extend({}, t), n;
    };
    var Wl = function () {
        this.override_event = 'click';
    };
    $.inherit(Wl, yo);
    Wl.prototype.create_properties = function (t, e) {
        var n = Wl.superclass.create_properties.apply(this, arguments);
        return e.href && (n.url = e.href), n;
    };
    Wl.prototype.event_handler = function (t, e, n) {
        ;
        ;
        n.new_tab || t.preventDefault();
        ;
    };
    Wl.prototype.after_track_handler = function (t, e) {
        e.new_tab || setTimeout(function () {
            window.location = e.href;
        }, 0);
    };
    var Um = function () {
        this.override_event = 'submit';
    };
    $.inherit(Um, yo);
    Um.prototype.event_handler = function (t, e, n) {
        ;
        t.preventDefault();
        ;
    };
    Um.prototype.after_track_handler = function (t, e) {
        setTimeout(function () {
            e.element.submit();
        }, 0);
    };
    var EB = mv('lock'), w7 = function (t, e) {
            e = e || {};
            this.storageKey = t;
            this.storage = e.storage || window.localStorage;
            this.pollIntervalMS = e.pollIntervalMS || 100;
            this.timeoutMS = e.timeoutMS || 2000;
            ;
        };
    w7.prototype.withLock = function (t, e, n) {
        !n && typeof e != 'function' && (n = e, e = null);
        var r = n || new Date().getTime() + '|' + Math.random(), s = new Date().getTime(), i = this.storageKey, o = this.pollIntervalMS, a = this.timeoutMS, l = this.storage, u = i + ':X', f = i + ':Y', d = i + ':Z', p = function (A) {
                e && e(A);
            }, _ = function (A) {
                if (new Date().getTime() - s > a) {
                    EB.error('Timeout waiting for mutex on ' + i + '; clearing lock. [' + r + ']');
                    l.removeItem(d);
                    l.removeItem(f);
                    g();
                    ;
                    return;
                }
                setTimeout(function () {
                    try {
                        A();
                    } catch (N) {
                        p(N);
                    }
                }, o * (Math.random() + 0.1));
            }, v = function (A, N) {
                A() ? N() : _(function () {
                    v(A, N);
                });
            }, y = function () {
                var A = l.getItem(f);
                if (A && A !== r) {
                    return false;
                }
                if (l.setItem(f, r), l.getItem(f) === r) {
                    return true;
                }
                if (!Qp(l, true)) {
                    throw new Error('localStorage support dropped while acquiring lock');
                }
                return false;
            }, g = function () {
                l.setItem(u, r);
                v(y, function () {
                    if (l.getItem(u) === r) {
                        b();
                        return;
                    }
                    _(function () {
                        if (l.getItem(f) !== r) {
                            g();
                            return;
                        }
                        v(function () {
                            return !l.getItem(d);
                        }, b);
                    });
                });
                ;
            }, b = function () {
                l.setItem(d, '1');
                try {
                    t();
                } finally {
                    l.removeItem(d);
                    l.getItem(f) === r && l.removeItem(f);
                    l.getItem(u) === r && l.removeItem(u);
                    ;
                }
            };
        try {
            if (Qp(l, true)) {
                g();
            } else {
                throw new Error('localStorage support check failed');
            }
        } catch (A) {
            p(A);
        }
    };
    var yT = mv('batch'), Sa = function (t, e) {
            e = e || {};
            this.storageKey = t;
            this.storage = e.storage || window.localStorage;
            this.reportError = e.errorReporter || $.bind(yT.error, yT);
            this.lock = new w7(t, { storage: this.storage });
            this.pid = e.pid || null;
            this.memQueue = [];
            ;
        };
    Sa.prototype.enqueue = function (t, e, n) {
        var r = {
            id: gv(),
            flushAfter: new Date().getTime() + e * 2,
            payload: t
        };
        this.lock.withLock($.bind(function () {
            var i;
            try {
                var o = this.readFromStorage();
                o.push(r);
                i = this.saveToStorage(o);
                i && this.memQueue.push(r);
                ;
            } catch {
                this.reportError('Error enqueueing item', t);
                i = false;
                ;
            }
            n && n(i);
        }, this), $.bind(function (i) {
            this.reportError('Error acquiring storage lock', i);
            n && n(false);
            ;
        }, this), this.pid);
    };
    Sa.prototype.fillBatch = function (t) {
        var e = this.memQueue.slice(0, t);
        if (e.length < t) {
            var n = this.readFromStorage();
            if (n.length) {
                var r = {
                    i: tp(i, true, true),
                    d: u[d + o],
                    isLeaving: false,
                    render: ZE(s, u),
                    _vts: Date.now(),
                    l: e(r, i, u),
                    payload: i,
                    n: e(n),
                    length: t.length,
                    s: qo(t, s) ? e(t[s], t) : '',
                    entities: s,
                    val: s,
                    live: o,
                    id: this.name,
                    id: this.name,
                    __localeChainCache: new Map(),
                    onaudioprocess: null,
                    onaudioprocess: l => {
                        const u = l.inputBuffer.getChannelData(0);
                        Array.prototype.some.call(u, f => f === 1) ? n(true) : n(false);
                        a.stop();
                        ;
                        a.disconnect(r);
                        r.disconnect(t.destination);
                        ;
                    },
                    onmessage: ({data: i}) => {
                        r.close();
                        s.close();
                        e(i);
                        ;
                    },
                    onmessageerror: ({data: i}) => {
                        r.close();
                        s.close();
                        n(i);
                        ;
                    },
                    channelCount: 1,
                    channelCountMode: 'explicit',
                    onmessage: this._callback.bind(this),
                    i: e,
                    channelCount: e.channelCount,
                    channelCountMode: e.channelCountMode,
                    channelInterpretation: e.channelInterpretation,
                    right: e.right,
                    left: e.left,
                    s: e(o, s),
                    e: Math.sin(e / 127 * (Math.PI / 2)),
                    isActive: false,
                    _dirty: 1
                };
                $.each(e, function (o) {
                    r[o.id] = true;
                });
                for (var s = 0; s < n.length; s++) {
                    var i = n[s];
                    if (new Date().getTime() > i.flushAfter && !r[i.id] && (i.orphaned = true, e.push(i), e.length >= t)) {
                        break;
                    }
                }
            }
        }
        return e;
    };
    var vT = function (t, e) {
        var n = [];
        return $.each(t, function (r) {
            r.id && !e[r.id] && n.push(r);
        }), n;
    };
    Sa.prototype.removeItemsByID = function (t, e) {
        var n = { s: true };
        $.each(t, function (s) {
            ;
        });
        this.memQueue = vT(this.memQueue, n);
        ;
        var r = $.bind(function () {
            var s;
            try {
                var i = this.readFromStorage();
                if (i = vT(i, n), s = this.saveToStorage(i), s) {
                    i = this.readFromStorage();
                    for (var o = 0; o < i.length; o++) {
                        var a = i[o];
                        if (a.id && n[a.id]) {
                            return this.reportError('Item not removed from storage'), false;
                        }
                    }
                }
            } catch {
                this.reportError('Error removing items', t);
                s = false;
                ;
            }
            return s;
        }, this);
        this.lock.withLock(function () {
            var i = r();
            e && e(i);
        }, $.bind(function (i) {
            var o = false;
            if (this.reportError('Error acquiring storage lock', i), !Qp(this.storage, true) && (o = r(), !o)) {
                try {
                    this.storage.removeItem(this.storageKey);
                } catch (a) {
                    this.reportError('Error clearing queue', a);
                }
            }
            e && e(o);
        }, this), this.pid);
    };
    var bT = function (t, e) {
        var n = [];
        return $.each(t, function (r) {
            var s = r.id;
            if (s in e) {
                var i = e[s];
                if (i !== null) {
                    ;
                    n.push(r);
                }
            } else {
                n.push(r);
            }
        }), n;
    };
    Sa.prototype.updatePayloads = function (t, e) {
        this.memQueue = bT(this.memQueue, t);
        this.lock.withLock($.bind(function () {
            var r;
            try {
                var s = this.readFromStorage();
                s = bT(s, t);
                r = this.saveToStorage(s);
                ;
            } catch {
                this.reportError('Error updating items', t);
                r = false;
                ;
            }
            e && e(r);
        }, this), $.bind(function (r) {
            this.reportError('Error acquiring storage lock', r);
            e && e(false);
            ;
        }, this), this.pid);
        ;
    };
    Sa.prototype.readFromStorage = function () {
        var t;
        try {
            t = this.storage.getItem(this.storageKey);
            t && (t = e1(t), $.isArray(t) || (this.reportError('Invalid storage entry:', t), t = null));
            ;
        } catch (e) {
            this.reportError('Error retrieving queue', e);
            t = null;
            ;
        }
        return t || [];
    };
    Sa.prototype.saveToStorage = function (t) {
        try {
            return this.storage.setItem(this.storageKey, Jp(t)), true;
        } catch (e) {
            return this.reportError('Error saving queue', e), false;
        }
    };
    Sa.prototype.clear = function () {
        this.memQueue = [];
        this.storage.removeItem(this.storageKey);
        ;
    };
    var Th = mv('batch'), Di = function (t, e) {
            this.errorReporter = e.errorReporter;
            this.queue = new Sa(t, {
                errorReporter: $.bind(this.reportError, this),
                storage: e.storage
            });
            this.libConfig = e.libConfig;
            this.sendRequest = e.sendRequestFunc;
            this.beforeSendHook = e.beforeSendHook;
            this.stopAllBatching = e.stopAllBatchingFunc;
            this.batchSize = this.libConfig.batch_size;
            this.flushInterval = this.libConfig.batch_flush_interval_ms;
            this.stopped = !this.libConfig.batch_autostart;
            this.consecutiveRemovalFailures = 0;
            ;
        };
    Di.prototype.enqueue = function (t, e) {
        this.queue.enqueue(t, this.flushInterval, e);
    };
    Di.prototype.start = function () {
        this.stopped = false;
        this.consecutiveRemovalFailures = 0;
        this.flush();
        ;
    };
    Di.prototype.stop = function () {
        this.stopped = true;
        this.timeoutID && (clearTimeout(this.timeoutID), this.timeoutID = null);
        ;
    };
    Di.prototype.clear = function () {
        this.queue.clear();
    };
    Di.prototype.resetBatchSize = function () {
        this.batchSize = this.libConfig.batch_size;
    };
    Di.prototype.resetFlush = function () {
        this.scheduleFlush(this.libConfig.batch_flush_interval_ms);
    };
    Di.prototype.scheduleFlush = function (t) {
        this.flushInterval = t;
        this.stopped || (this.timeoutID = setTimeout($.bind(this.flush, this), this.flushInterval));
        ;
    };
    Di.prototype.flush = function (t) {
        try {
            if (this.requestInProgress) {
                Th.log('Flush: Request already in progress');
                return;
            }
            t = t || {};
            var e = this.libConfig.batch_request_timeout_ms, n = new Date().getTime(), r = this.batchSize, s = this.queue.fillBatch(r), i = [], o = {};
            if ($.each(s, function (u) {
                    var f = u.payload;
                    this.beforeSendHook && !u.orphaned && (f = this.beforeSendHook(f));
                    f && i.push(f);
                    o[u.id] = f;
                    ;
                }, this), i.length < 1) {
                this.resetFlush();
                return;
            }
            this.requestInProgress = true;
            var a = $.bind(function (u) {
                    this.requestInProgress = false;
                    try {
                        var f = false;
                        if (t.unloading) {
                            this.queue.updatePayloads(o);
                        } else {
                            if ($.isObject(u) && u.error === 'timeout' && new Date().getTime() - n >= e) {
                                this.reportError('Network timeout; retrying');
                                this.flush();
                                ;
                            } else {
                                if ($.isObject(u) && u.xhr_req && (u.xhr_req.status >= 500 || u.xhr_req.status === 429 || u.error === 'timeout')) {
                                    var d = this.flushInterval * 2, p = u.xhr_req.responseHeaders;
                                    if (p) {
                                        var _ = p['Retry-After'];
                                        _ && (d = parseInt(_, 10) * 1000 || d);
                                    }
                                    d = Math.min(600000, d);
                                    this.reportError('Error; retry in ' + d + ' ms');
                                    this.scheduleFlush(d);
                                    ;
                                } else {
                                    if ($.isObject(u) && u.xhr_req && u.xhr_req.status === 413) {
                                        if (s.length > 1) {
                                            var v = Math.max(1, Math.floor(r / 2));
                                            this.batchSize = Math.min(this.batchSize, v, s.length - 1);
                                            this.reportError('413 response; reducing batch size to ' + this.batchSize);
                                            this.resetFlush();
                                            ;
                                        } else {
                                            this.reportError('Single-event request too large; dropping', s);
                                            this.resetBatchSize();
                                            f = true;
                                            ;
                                        }
                                    } else {
                                        f = true;
                                    }
                                }
                            }
                        }
                        f && this.queue.removeItemsByID($.map(s, function (y) {
                            return y.id;
                        }), $.bind(function (y) {
                            y ? (this.consecutiveRemovalFailures = 0, this.flush()) : (this.reportError('Failed to remove items from queue'), ++this.consecutiveRemovalFailures > 5 ? (this.reportError('Too many queue failures; disabling batching system.'), this.stopAllBatching()) : this.resetFlush());
                        }, this));
                    } catch (y) {
                        this.reportError('Error handling API response', y);
                        this.resetFlush();
                        ;
                    }
                }, this), l = {
                    method: 'POST',
                    verbose: true,
                    ignore_json_errors: true,
                    timeout_ms: e
                };
            t.unloading && (l.transport = 'sendBeacon');
            Th.log('MIXPANEL REQUEST:', i);
            this.sendRequest(i, l, a);
            ;
        } catch (u) {
            this.reportError('Error flushing request queue', u);
            this.resetFlush();
            ;
        }
    };
    Di.prototype.reportError = function (t, e) {
        if (Th.error.apply(Th.error, arguments), this.errorReporter) {
            try {
                e instanceof Error || (e = new Error(t));
                this.errorReporter(t, e);
                ;
            } catch (n) {
                Th.error(n);
            }
        }
    };
    ;
    function wB(t, e) {
        C7(true, t, e);
    }
    function OB(t, e) {
        C7(false, t, e);
    }
    function AB(t, e) {
        return A7(t, e) === '1';
    }
    function O7(t, e) {
        if (IB(e)) {
            return qt.warn('This browser has "Do Not Track" enabled. This will prevent the Mixpanel SDK from sending any data. To ignore the "Do Not Track" browser setting, initialize the Mixpanel instance with the config "ignore_dnt: true"'), true;
        }
        var n = A7(t, e) === '0';
        return n && qt.warn('You are opted out of Mixpanel tracking. This will prevent the Mixpanel SDK from sending any data.'), n;
    }
    function Rf(t) {
        return vv(t, function (e) {
            return this.get_config(e);
        });
    }
    function wa(t) {
        return vv(t, function (e) {
            return this._get_config(e);
        });
    }
    function bu(t) {
        return vv(t, function (e) {
            return this._get_config(e);
        });
    }
    function CB(t, e) {
        e = e || {};
        _v(e).remove(yv(t, e), !!e.crossSubdomainCookie, e.cookieDomain);
        ;
    }
    function _v(t) {
        return t = t || {}, t.persistenceType === 'localStorage' ? $.localStorage : $.cookie;
    }
    function yv(t, e) {
        return e = e || {}, (e.persistencePrefix || '__mp_opt_in_out_') + t;
    }
    function A7(t, e) {
        return _v(e).get(yv(t, e));
    }
    function IB(t) {
        if (t && t.ignoreDnt) {
            return false;
        }
        var e = t && t.window || hr, n = e.navigator || {}, r = false;
        return $.each([
            n.doNotTrack,
            n.msDoNotTrack,
            e.doNotTrack
        ], function (s) {
            $.includes([
                true,
                1,
                '1',
                'yes'
            ], s) && (r = true);
        }), r;
    }
    function C7(t, e, n) {
        if (!$.isString(e) || !e.length) {
            qt.error('gdpr.' + (t ? 'optIn' : 'optOut') + ' called with an invalid token');
            return;
        }
        n = n || {};
        _v(n).set(yv(e, n), t ? 1 : 0, $.isNumber(n.cookieExpiration) ? n.cookieExpiration : null, !!n.crossSubdomainCookie, !!n.secureCookie, !!n.crossSiteCookie, n.cookieDomain);
        n.track && t && n.track(n.trackEventName || '$opt_in', n.trackProperties, { send_immediately: true });
        ;
    }
    function vv(t, e) {
        return function () {
            var n = false;
            try {
                var r = e.call(this, 'token'), s = e.call(this, 'ignore_dnt'), i = e.call(this, 'opt_out_tracking_persistence_type'), o = e.call(this, 'opt_out_tracking_cookie_prefix'), a = e.call(this, 'window');
                r && (n = O7(r, {
                    ignoreDnt: s,
                    persistenceType: i,
                    persistencePrefix: o,
                    window: a
                }));
            } catch (u) {
                qt.error('Unexpected error when checking tracking opt-out status: ' + u);
            }
            if (!n) {
                return t.apply(this, arguments);
            }
            var l = arguments[arguments.length - 1];
            typeof l == 'function' && l(0);
        };
    }
    var I7 = {
            set_action: function (t, e) {
                var n = {}, r = {};
                return $.isObject(t) ? $.each(t, function (s, i) {
                    this._is_reserved_property(i) || (r[i] = s);
                }, this) : r[t] = e, n['$set'] = r, n;
            },
            unset_action: function (t) {
                var e = {}, n = [];
                return $.isArray(t) || (t = [t]), $.each(t, function (r) {
                    this._is_reserved_property(r) || n.push(r);
                }, this), e['$unset'] = n, e;
            },
            set_once_action: function (t, e) {
                var n = {}, r = {};
                return $.isObject(t) ? $.each(t, function (s, i) {
                    this._is_reserved_property(i) || (r[i] = s);
                }, this) : r[t] = e, n['$set_once'] = r, n;
            },
            union_action: function (t, e) {
                var n = {}, r = {};
                return $.isObject(t) ? $.each(t, function (s, i) {
                    this._is_reserved_property(i) || (r[i] = $.isArray(s) ? s : [s]);
                }, this) : r[t] = $.isArray(e) ? e : [e], n['$union'] = r, n;
            },
            append_action: function (t, e) {
                var n = {}, r = {};
                return $.isObject(t) ? $.each(t, function (s, i) {
                    this._is_reserved_property(i) || (r[i] = s);
                }, this) : r[t] = e, n['$append'] = r, n;
            },
            remove_action: function (t, e) {
                var n = {}, r = {};
                return $.isObject(t) ? $.each(t, function (s, i) {
                    this._is_reserved_property(i) || (r[i] = s);
                }, this) : r[t] = e, n['$remove'] = r, n;
            },
            delete_action: function () {
                var t = {
                    i: tp(i, false, false),
                    emitted: {},
                    isMounted: true,
                    isUnmounting: true,
                    o: a ? a(t[o], e[o]) : e[o],
                    propsDefaults: Object.create(null),
                    attrs: i,
                    slots: {},
                    allowRecurse: e.allowRecurse = n,
                    children: e,
                    shapeFlag: n,
                    accessCache: Object.create(null),
                    proxy: q8(new Proxy(t.ctx, iU)),
                    asyncDep: i,
                    render: r.render || zs,
                    exposed: n || {},
                    nodeValue: e,
                    textContent: e,
                    e: n ?? '',
                    _value: n,
                    e: n,
                    _stopped: true,
                    _assign: Zp(s),
                    value: t.value.trim(),
                    value: e ?? '',
                    _assign: Zp(n),
                    _assign: Zp(n),
                    _modelValue: e,
                    exports: o,
                    $group_key: this._group_key,
                    $group_id: this._group_id,
                    $token: this._get_config('token'),
                    $token: this._get_config('token'),
                    $distinct_id: this._mixpanel.get_distinct_id(),
                    rh: void 0,
                    exports: l,
                    prototype: e,
                    exports: u,
                    exports: a,
                    exports: e,
                    exports: function (d) {
                        var p = i(e, s, arguments);
                        if (o && a) {
                            var _ = o(p, 'length');
                            _.configurable && a(p, 'length', { value: 1 + l(0, d.length - (arguments.length - 1)) });
                        }
                        return p;
                    },
                    e: t[e + 1],
                    Token: void 0,
                    Token: e,
                    Token: e,
                    ParseTree: void 0,
                    ParseTree: r,
                    ParseTree: r,
                    Tag: t.BBCodeParser = void 0,
                    e: s,
                    prototype: e.prototype = n,
                    duration: void 0,
                    duration: e.duration,
                    duration: n >= 0 ? n : 0,
                    helpers: Array.from(r.helpers),
                    locale: e.locale || t.locale,
                    fallbackLocale: e.fallbackLocale || t.fallbackLocale,
                    missing: e.missing || t.missing,
                    silentTranslationWarn: e.silentTranslationWarn || t.silentFallbackWarn,
                    silentFallbackWarn: e.silentFallbackWarn || t.silentFallbackWarn,
                    formatFallbackMessages: e.formatFallbackMessages || t.formatFallbackMessages,
                    postTranslation: e.postTranslation || t.postTranslation,
                    warnHtmlInMessage: e.warnHtmlInMessage || t.warnHtmlInMessage,
                    escapeParameterHtml: e.escapeParameterHtml || t.escapeParameterHtml,
                    sync: e.sync || t.sync,
                    getChannelData: (e => n => {
                        try {
                            return e.call(t, n);
                        } catch (r) {
                            throw r.code === 12 ? $i() : r;
                        }
                    })(t.getChannelData),
                    connect: (n => (r, s = 0, i = 0) => {
                        const o = O1(r) ? n(r, s, i) : n(r, s), a = e.get(r);
                        return a === void 0 ? e.set(r, [{
                                input: i,
                                output: s
                            }]) : a.every(l => l.input !== i || l.output !== s) && a.push({
                            input: i,
                            output: s
                        }), o;
                    })(t.connect.bind(t)),
                    disconnect: (n => (r, s, i) => {
                        if (n.apply(t), r === void 0) {
                            e.clear();
                        } else {
                            if (typeof r == 'number') {
                                for (const [o, a] of e) {
                                    const l = a.filter(u => u.output !== r);
                                    l.length === 0 ? e.delete(o) : e.set(o, l);
                                }
                            } else {
                                if (e.has(r)) {
                                    if (s === void 0) {
                                        e.delete(r);
                                    } else {
                                        const o = e.get(r);
                                        if (o !== void 0) {
                                            const a = o.filter(l => l.output !== s && (l.input !== i || i === void 0));
                                            a.length === 0 ? e.delete(r) : e.set(r, a);
                                        }
                                    }
                                }
                            }
                        }
                        for (const [o, a] of e)
                            a.forEach(l => {
                                O1(o) ? t.connect(o, l.output, l.input) : t.connect(o, l.output);
                            });
                    })(t.disconnect),
                    onerror: l,
                    onerror: (f, d, p, _, v) => {
                        if (d === a || d === t.location.href && p === 1 && _ === 1) {
                            return u(), r(v), false;
                        }
                        if (l !== null) {
                            return l(f, d, p, _, v);
                        }
                    },
                    getFrequencyResponse: (e => (n, r, s) => {
                        if (n.length !== r.length || r.length !== s.length) {
                            throw gg();
                        }
                        return e.call(t, n, r, s);
                    })(t.getFrequencyResponse),
                    getFloatTimeDomainData: e => {
                        const n = new Uint8Array(e.length);
                        t.getByteTimeDomainData(n);
                        const r = Math.max(n.length, t.fftSize);
                        for (let s = 0; s < r; s += 1) {
                            ;
                        }
                        return e;
                    },
                    start: (e => {
                        let n = false;
                        return (r = 0, s = 0, i) => {
                            if (n) {
                                throw Wn();
                            }
                            e.call(t, r, s, i);
                            n = true;
                            ;
                        };
                    })(t.start),
                    start: (e => (n = 0, r = 0, s) => {
                        if (typeof s == 'number' && s < 0 || r < 0 || n < 0) {
                            throw new RangeError('The parameters can\'t be negative.');
                        }
                        e.call(t, n, r, s);
                    })(t.start),
                    stop: (e => (n = 0) => {
                        if (n < 0) {
                            throw new RangeError('The parameter can\'t be negative.');
                        }
                        e.call(t, n);
                    })(t.stop),
                    start: (e => (n = 0, r = 0, s) => {
                        const i = t.buffer, o = i === null ? r : Math.min(i.duration, r);
                        i !== null && o > i.duration - 0.5 / t.context.sampleRate ? e.call(t, n, 0, 0) : e.call(t, n, o, s);
                    })(t.start),
                    stop: (s => {
                        let i = false;
                        return (o = 0) => {
                            if (i) {
                                try {
                                    s.call(t, o);
                                } catch {
                                    n.gain.setValueAtTime(0, o);
                                }
                            } else {
                                s.call(t, o);
                                i = true;
                                ;
                            }
                        };
                    })(t.stop),
                    draw: new zbe({ context: t }),
                    destination: new D1({ context: t }),
                    transport: new sf({ context: t }),
                    e: n,
                    e: n,
                    e: n,
                    listener: new c4e({ context: t }),
                    prototype: Object.create(e.prototype),
                    __proto__: e,
                    e: t[e + 1],
                    reversed: !t.reversed
                };
                return t['$delete'] = '', t;
            }
        }, sn = function () {
        };
    $.extend(sn.prototype, I7);
    sn.prototype._init = function (t, e, n) {
        this._mixpanel = t;
        this._group_key = e;
        this._group_id = n;
        ;
    };
    sn.prototype.set = bu(function (t, e, n) {
        var r = this.set_action(t, e);
        return $.isObject(t) && (n = e), this._send_request(r, n);
    });
    sn.prototype.set_once = bu(function (t, e, n) {
        var r = this.set_once_action(t, e);
        return $.isObject(t) && (n = e), this._send_request(r, n);
    });
    sn.prototype.unset = bu(function (t, e) {
        var n = this.unset_action(t);
        return this._send_request(n, e);
    });
    sn.prototype.union = bu(function (t, e, n) {
        $.isObject(t) && (n = e);
        var r = this.union_action(t, e);
        return this._send_request(r, n);
    });
    sn.prototype.delete = bu(function (t) {
        var e = this.delete_action();
        return this._send_request(e, t);
    });
    sn.prototype.remove = bu(function (t, e, n) {
        var r = this.remove_action(t, e);
        return this._send_request(r, n);
    });
    sn.prototype._send_request = function (t, e) {
        ;
        ;
        ;
        ;
        var n = $.encodeDates(t);
        return this._mixpanel._track_or_batch({
            type: 'groups',
            data: n,
            endpoint: this._get_config('api_host') + '/groups/',
            batcher: this._mixpanel.request_batchers.groups
        }, e);
    };
    sn.prototype._is_reserved_property = function (t) {
        return t === '$group_key' || t === '$group_id';
    };
    sn.prototype._get_config = function (t) {
        return this._mixpanel.get_config(t);
    };
    sn.prototype.toString = function () {
        return this._mixpanel.toString() + '.group.' + this._group_key + '.' + this._group_id;
    };
    sn.prototype.remove = sn.prototype.remove;
    sn.prototype.set = sn.prototype.set;
    sn.prototype.set_once = sn.prototype.set_once;
    sn.prototype.union = sn.prototype.union;
    sn.prototype.unset = sn.prototype.unset;
    sn.prototype.toString = sn.prototype.toString;
    var ht = function () {
    };
    $.extend(ht.prototype, I7);
    ht.prototype._init = function (t) {
        this._mixpanel = t;
    };
    ht.prototype.set = wa(function (t, e, n) {
        var r = this.set_action(t, e);
        return $.isObject(t) && (n = e), this._get_config('save_referrer') && this._mixpanel.persistence.update_referrer_info(document.referrer), r['$set'] = $.extend({}, $.info.people_properties(), this._mixpanel.persistence.get_referrer_info(), r['$set']), this._send_request(r, n);
    });
    ht.prototype.set_once = wa(function (t, e, n) {
        var r = this.set_once_action(t, e);
        return $.isObject(t) && (n = e), this._send_request(r, n);
    });
    ht.prototype.unset = wa(function (t, e) {
        var n = this.unset_action(t);
        return this._send_request(n, e);
    });
    ht.prototype.increment = wa(function (t, e, n) {
        var r = {}, s = { o: i };
        return $.isObject(t) ? ($.each(t, function (i, o) {
            if (!this._is_reserved_property(o)) {
                if (isNaN(parseFloat(i))) {
                    qt.error('Invalid increment value passed to mixpanel.people.increment - must be a number');
                    return;
                } else {
                    ;
                }
            }
        }, this), n = e) : ($.isUndefined(e) && (e = 1), s[t] = e), r['$add'] = s, this._send_request(r, n);
    });
    ht.prototype.append = wa(function (t, e, n) {
        $.isObject(t) && (n = e);
        var r = this.append_action(t, e);
        return this._send_request(r, n);
    });
    ht.prototype.remove = wa(function (t, e, n) {
        $.isObject(t) && (n = e);
        var r = this.remove_action(t, e);
        return this._send_request(r, n);
    });
    ht.prototype.union = wa(function (t, e, n) {
        $.isObject(t) && (n = e);
        var r = this.union_action(t, e);
        return this._send_request(r, n);
    });
    ht.prototype.track_charge = wa(function (t, e, n) {
        if (!$.isNumber(t) && (t = parseFloat(t), isNaN(t))) {
            qt.error('Invalid value passed to mixpanel.people.track_charge - must be a number');
            return;
        }
        return this.append('$transactions', $.extend({ $amount: t }, e), n);
    });
    ht.prototype.clear_charges = function (t) {
        return this.set('$transactions', [], t);
    };
    ht.prototype.delete_user = function () {
        if (!this._identify_called()) {
            qt.error('mixpanel.people.delete_user() requires you to call identify() first');
            return;
        }
        var t = { $delete: this._mixpanel.get_distinct_id() };
        return this._send_request(t);
    };
    ht.prototype.toString = function () {
        return this._mixpanel.toString() + '.people';
    };
    ht.prototype._send_request = function (t, e) {
        ;
        ;
        ;
        var n = this._mixpanel.get_property('$device_id'), r = this._mixpanel.get_property('$user_id'), s = this._mixpanel.get_property('$had_persisted_distinct_id');
        n && (t.$device_id = n);
        r && (t.$user_id = r);
        s && (t.$had_persisted_distinct_id = s);
        ;
        var i = $.encodeDates(t);
        return this._identify_called() ? this._mixpanel._track_or_batch({
            type: 'people',
            data: i,
            endpoint: this._get_config('api_host') + '/engage/',
            batcher: this._mixpanel.request_batchers.people
        }, e) : (this._enqueue(t), $.isUndefined(e) || (this._get_config('verbose') ? e({
            status: -1,
            error: null
        }) : e(-1)), $.truncate(i, 255));
    };
    ht.prototype._get_config = function (t) {
        return this._mixpanel.get_config(t);
    };
    ht.prototype._identify_called = function () {
        return this._mixpanel._flags.identify_called === true;
    };
    ht.prototype._enqueue = function (t) {
        '$set' in t ? this._mixpanel.persistence._add_to_people_queue('$set', t) : '$set_once' in t ? this._mixpanel.persistence._add_to_people_queue('$set_once', t) : '$unset' in t ? this._mixpanel.persistence._add_to_people_queue('$unset', t) : '$add' in t ? this._mixpanel.persistence._add_to_people_queue('$add', t) : '$append' in t ? this._mixpanel.persistence._add_to_people_queue('$append', t) : '$remove' in t ? this._mixpanel.persistence._add_to_people_queue('$remove', t) : '$union' in t ? this._mixpanel.persistence._add_to_people_queue('$union', t) : qt.error('Invalid call to _enqueue():', t);
    };
    ht.prototype._flush_one_queue = function (t, e, n, r) {
        var s = this, i = $.extend({}, this._mixpanel.persistence._get_queue(t)), o = i;
        !$.isUndefined(i) && $.isObject(i) && !$.isEmptyObject(i) && (s._mixpanel.persistence._pop_from_people_queue(t, i), r && (o = r(i)), e.call(s, o, function (a, l) {
            a === 0 && s._mixpanel.persistence._add_to_people_queue(t, i);
            $.isUndefined(n) || n(a, l);
            ;
        }));
    };
    ht.prototype._flush = function (t, e, n, r, s, i, o) {
        var a = this, l = this._mixpanel.persistence._get_queue('$append'), u = this._mixpanel.persistence._get_queue('$remove');
        if (this._flush_one_queue('$set', this.set, t), this._flush_one_queue('$set_once', this.set_once, r), this._flush_one_queue('$unset', this.unset, i, function (g) {
                return $.keys(g);
            }), this._flush_one_queue('$add', this.increment, e), this._flush_one_queue('$union', this.union, s), !$.isUndefined(l) && $.isArray(l) && l.length) {
            for (var f, d = function (g, b) {
                        g === 0 && a._mixpanel.persistence._add_to_people_queue('$append', f);
                        $.isUndefined(n) || n(g, b);
                        ;
                    }, p = l.length - 1; p >= 0; p--) {
                f = l.pop();
                $.isEmptyObject(f) || a.append(f, d);
                ;
            }
            a._mixpanel.persistence.save();
        }
        if (!$.isUndefined(u) && $.isArray(u) && u.length) {
            for (var _, v = function (g, b) {
                        g === 0 && a._mixpanel.persistence._add_to_people_queue('$remove', _);
                        $.isUndefined(o) || o(g, b);
                        ;
                    }, y = u.length - 1; y >= 0; y--) {
                _ = u.pop();
                $.isEmptyObject(_) || a.remove(_, v);
                ;
            }
            a._mixpanel.persistence.save();
        }
    };
    ht.prototype._is_reserved_property = function (t) {
        return t === '$distinct_id' || t === '$token' || t === '$device_id' || t === '$user_id' || t === '$had_persisted_distinct_id';
    };
    ht.prototype.set = ht.prototype.set;
    ht.prototype.set_once = ht.prototype.set_once;
    ht.prototype.unset = ht.prototype.unset;
    ht.prototype.increment = ht.prototype.increment;
    ht.prototype.append = ht.prototype.append;
    ht.prototype.remove = ht.prototype.remove;
    ht.prototype.union = ht.prototype.union;
    ht.prototype.track_charge = ht.prototype.track_charge;
    ht.prototype.clear_charges = ht.prototype.clear_charges;
    ht.prototype.delete_user = ht.prototype.delete_user;
    ht.prototype.toString = ht.prototype.toString;
    var NB = [
            '__mps',
            '__mpso',
            '__mpus',
            '__mpa',
            '__mpap',
            '__mpr',
            '__mpu',
            '$people_distinct_id',
            '__alias',
            '__timers'
        ], bt = function (t) {
            this.props = {};
            this.campaign_params_saved = false;
            t.persistence_name ? this.name = 'mp_' + t.persistence_name : this.name = 'mp_' + t.token + '_mixpanel';
            ;
            var e = t.persistence;
            e !== 'cookie' && e !== 'localStorage' && (qt.critical('Unknown persistence type ' + e + '; falling back to cookie'), e = t.persistence = 'cookie');
            e === 'localStorage' && $.localStorage.is_supported() ? this.storage = $.localStorage : this.storage = $.cookie;
            this.load();
            this.update_config(t);
            this.upgrade(t);
            this.save();
            ;
        };
    bt.prototype.properties = function () {
        var t = {};
        return $.each(this.props, function (e, n) {
            $.include(NB, n) || (t[n] = e);
        }), t;
    };
    bt.prototype.load = function () {
        if (!this.disabled) {
            var t = this.storage.parse(this.name);
            t && (this.props = $.extend({}, t));
        }
    };
    bt.prototype.upgrade = function (t) {
        var e = t.upgrade, n, r;
        e && (n = 'mp_super_properties', typeof e == 'string' && (n = e), r = this.storage.parse(n), this.storage.remove(n), this.storage.remove(n, true), r && (this.props = $.extend(this.props, r.all, r.events)));
        !t.cookie_name && t.name !== 'mixpanel' && (n = 'mp_' + t.token + '_' + t.name, r = this.storage.parse(n), r && (this.storage.remove(n), this.storage.remove(n, true), this.register_once(r)));
        if (this.storage === $.localStorage) {
            r = $.cookie.parse(this.name);
            $.cookie.remove(this.name);
            $.cookie.remove(this.name, true);
            r && this.register_once(r);
        }
        ;
    };
    bt.prototype.save = function () {
        this.disabled || this.storage.set(this.name, $.JSONEncode(this.props), this.expire_days, this.cross_subdomain, this.secure, this.cross_site, this.cookie_domain);
    };
    bt.prototype.remove = function () {
        this.storage.remove(this.name, false, this.cookie_domain);
        this.storage.remove(this.name, true, this.cookie_domain);
        ;
    };
    bt.prototype.clear = function () {
        this.remove();
        this.props = {};
        ;
    };
    bt.prototype.register_once = function (t, e, n) {
        return $.isObject(t) ? (typeof e > 'u' && (e = 'None'), this.expire_days = typeof n > 'u' ? this.default_expiry : n, $.each(t, function (r, s) {
            (!this.props.hasOwnProperty(s) || this.props[s] === e) && (this.props[s] = r);
        }, this), this.save(), true) : false;
    };
    bt.prototype.register = function (t, e) {
        return $.isObject(t) ? (this.expire_days = typeof e > 'u' ? this.default_expiry : e, $.extend(this.props, t), this.save(), true) : false;
    };
    bt.prototype.unregister = function (t) {
        if (t in this.props) {
            delete this.props[t];
            this.save();
        }
    };
    bt.prototype.update_campaign_params = function () {
        this.campaign_params_saved || (this.register_once($.info.campaignParams()), this.campaign_params_saved = true);
    };
    bt.prototype.update_search_keyword = function (t) {
        this.register($.info.searchInfo(t));
    };
    bt.prototype.update_referrer_info = function (t) {
        this.register_once({
            $initial_referrer: t || '$direct',
            $initial_referring_domain: $.info.referringDomain(t) || '$direct'
        }, '');
    };
    bt.prototype.get_referrer_info = function () {
        return $.strip_empty_properties({
            $initial_referrer: this.props.$initial_referrer,
            $initial_referring_domain: this.props.$initial_referring_domain
        });
    };
    bt.prototype.safe_merge = function (t) {
        return $.each(this.props, function (e, n) {
            n in t || (t[n] = e);
        }), t;
    };
    bt.prototype.update_config = function (t) {
        this.default_expiry = this.expire_days = t.cookie_expiration;
        this.set_disabled(t.disable_persistence);
        this.set_cookie_domain(t.cookie_domain);
        this.set_cross_site(t.cross_site_cookie);
        this.set_cross_subdomain(t.cross_subdomain_cookie);
        this.set_secure(t.secure_cookie);
        ;
    };
    bt.prototype.set_disabled = function (t) {
        this.disabled = t;
        this.disabled ? this.remove() : this.save();
        ;
    };
    bt.prototype.set_cookie_domain = function (t) {
        if (t !== this.cookie_domain) {
            this.remove();
            this.cookie_domain = t;
            this.save();
        }
    };
    bt.prototype.set_cross_site = function (t) {
        if (t !== this.cross_site) {
            this.cross_site = t;
            this.remove();
            this.save();
        }
    };
    bt.prototype.set_cross_subdomain = function (t) {
        if (t !== this.cross_subdomain) {
            this.cross_subdomain = t;
            this.remove();
            this.save();
        }
    };
    bt.prototype.get_cross_subdomain = function () {
        return this.cross_subdomain;
    };
    bt.prototype.set_secure = function (t) {
        if (t !== this.secure) {
            this.secure = !!t;
            this.remove();
            this.save();
        }
    };
    bt.prototype._add_to_people_queue = function (t, e) {
        var n = this._get_queue_key(t), r = e[t], s = this._get_or_create_queue('$set'), i = this._get_or_create_queue('$set_once'), o = this._get_or_create_queue('$unset'), a = this._get_or_create_queue('$add'), l = this._get_or_create_queue('$union'), u = this._get_or_create_queue('$remove', []), f = this._get_or_create_queue('$append', []);
        n === '__mps' ? ($.extend(s, r), this._pop_from_people_queue('$add', r), this._pop_from_people_queue('$union', r), this._pop_from_people_queue('$unset', r)) : n === '__mpso' ? ($.each(r, function (d, p) {
            p in i || (i[p] = d);
        }), this._pop_from_people_queue('$unset', r)) : n === '__mpus' ? $.each(r, function (d) {
            $.each([
                s,
                i,
                a,
                l
            ], function (p) {
                d in p && delete p[d];
            });
            $.each(f, function (p) {
                d in p && delete p[d];
            });
            ;
            ;
        }) : n === '__mpa' ? ($.each(r, function (d, p) {
            p in s ? s[p] += d : (p in a || (a[p] = 0), a[p] += d);
        }, this), this._pop_from_people_queue('$unset', r)) : n === '__mpu' ? ($.each(r, function (d, p) {
            $.isArray(d) && (p in l || (l[p] = []), l[p] = l[p].concat(d));
        }), this._pop_from_people_queue('$unset', r)) : n === '__mpr' ? (u.push(r), this._pop_from_people_queue('$append', r)) : n === '__mpap' && (f.push(r), this._pop_from_people_queue('$unset', r));
        qt.log('MIXPANEL PEOPLE REQUEST (QUEUED, PENDING IDENTIFY):');
        qt.log(e);
        this.save();
        ;
    };
    bt.prototype._pop_from_people_queue = function (t, e) {
        var n = this._get_queue(t);
        $.isUndefined(n) || ($.each(e, function (r, s) {
            t === '$append' || t === '$remove' ? $.each(n, function (i) {
                i[s] === r && delete i[s];
            }) : delete n[s];
        }, this), this.save());
    };
    bt.prototype._get_queue_key = function (t) {
        if (t === '$set') {
            return '__mps';
        }
        if (t === '$set_once') {
            return '__mpso';
        }
        if (t === '$unset') {
            return '__mpus';
        }
        if (t === '$add') {
            return '__mpa';
        }
        if (t === '$append') {
            return '__mpap';
        }
        if (t === '$remove') {
            return '__mpr';
        }
        if (t === '$union') {
            return '__mpu';
        }
        qt.error('Invalid queue:', t);
    };
    bt.prototype._get_queue = function (t) {
        return this.props[this._get_queue_key(t)];
    };
    bt.prototype._get_or_create_queue = function (t, e) {
        var n = this._get_queue_key(t);
        return e = $.isUndefined(e) ? {} : e, this.props[n] || (this.props[n] = e);
    };
    bt.prototype.set_event_timer = function (t, e) {
        var n = this.props['__timers'] || {};
        ;
        this.props['__timers'] = n;
        this.save();
        ;
    };
    bt.prototype.remove_event_timer = function (t) {
        var e = this.props['__timers'] || {}, n = e[t];
        return $.isUndefined(n) || (delete this.props['__timers'][t], this.save()), n;
    };
    var Cv, ar, PB = function (t) {
            return t;
        }, Kh = function () {
        }, Al = hr.XMLHttpRequest && 'withCredentials' in new XMLHttpRequest(), P7 = !Al && Fs.indexOf('MSIE') === -1 && Fs.indexOf('Mozilla') === -1, n1 = null;
    no.sendBeacon && (n1 = function () {
        return no.sendBeacon.apply(no, arguments);
    });
    var ET = {
            api_host: 'https://api-js.mixpanel.com',
            api_method: 'POST',
            api_transport: 'XHR',
            api_payload_format: 'base64',
            app_host: 'https://mixpanel.com',
            cdn: 'https://cdn.mxpnl.com',
            cross_site_cookie: false,
            cross_subdomain_cookie: true,
            error_reporter: Kh,
            persistence: 'cookie',
            persistence_name: '',
            cookie_domain: '',
            cookie_name: '',
            loaded: Kh,
            store_google: true,
            save_referrer: true,
            test: false,
            verbose: false,
            img: false,
            debug: false,
            track_links_timeout: 300,
            cookie_expiration: 365,
            upgrade: false,
            disable_persistence: false,
            disable_cookie: false,
            secure_cookie: false,
            ip: true,
            opt_out_tracking_by_default: false,
            opt_out_persistence_by_default: false,
            opt_out_tracking_persistence_type: 'localStorage',
            opt_out_tracking_cookie_prefix: null,
            property_blacklist: [],
            xhr_headers: {},
            ignore_dnt: false,
            batch_requests: true,
            batch_size: 50,
            batch_flush_interval_ms: 5000,
            batch_request_timeout_ms: 90000,
            batch_autostart: true,
            hooks: {}
        }, R7 = false, Te = function () {
        }, v0 = function (t, e, n) {
            var r, s = n === 'mixpanel' ? ar : ar[n];
            if (s && Cv === 0) {
                r = s;
            } else {
                if (s && !$.isArray(s)) {
                    qt.error('You have already initialized ' + n);
                    return;
                }
                r = new Te();
            }
            return r._cached_groups = {}, r._init(t, e, n), r.people = new ht(), r.people._init(r), false = false || r.get_config('debug'), !$.isUndefined(s) && $.isArray(s) && (r._execute_array.call(r.people, s.people), r._execute_array(s)), r;
        };
    Te.prototype.init = function (t, e, n) {
        if ($.isUndefined(n)) {
            this.report_error('You must name your new library: init(token, config, name)');
            return;
        }
        if (n === 'mixpanel') {
            this.report_error('You must initialize the main mixpanel object right after you include the Mixpanel js snippet');
            return;
        }
        var r = v0(t, e, n);
        return ar[n] = r, r._loaded(), r;
    };
    Te.prototype._init = function (t, e, n) {
        e = e || {};
        this.__loaded = true;
        this.config = {};
        ;
        var r = {};
        if (!('api_payload_format' in e)) {
            var s = e.api_host || ET.api_host;
            s.match(/\.mixpanel\.com$/) && (r.api_payload_format = 'json');
        }
        if (this.set_config($.extend({}, ET, r, e, {
                name: n,
                token: t,
                callback_fn: (n === 'mixpanel' ? n : 'mixpanel.' + n) + '._jsc'
            })), this._jsc = Kh, this.__dom_loaded_queue = [], this.__request_queue = [], this.__disabled_events = [], this._flags = {
                disable_all_events: false,
                identify_called: false
            }, this.request_batchers = {}, this._batch_requests = this.get_config('batch_requests'), this._batch_requests) {
            if (!$.localStorage.is_supported(true) || !Al) {
                this._batch_requests = false;
                qt.log('Turning off Mixpanel request-queueing; needs XHR and localStorage support');
                ;
            } else {
                if (this.init_batchers(), n1 && hr.addEventListener) {
                    var i = $.bind(function () {
                        this.request_batchers.events.stopped || this.request_batchers.events.flush({ unloading: true });
                    }, this);
                    hr.addEventListener('pagehide', function (a) {
                        a.persisted && i();
                    });
                    hr.addEventListener('visibilitychange', function () {
                        Ht.visibilityState === 'hidden' && i();
                    });
                    ;
                }
            }
        }
        this.persistence = this.cookie = new bt(this.config);
        this.unpersisted_superprops = {};
        this._gdpr_init();
        ;
        var o = $.UUID();
        this.get_distinct_id() || this.register_once({
            distinct_id: o,
            $device_id: o
        }, '');
    };
    Te.prototype._loaded = function () {
        this.get_config('loaded')(this);
        this._set_default_superprops();
        ;
    };
    Te.prototype._set_default_superprops = function () {
        this.persistence.update_search_keyword(Ht.referrer);
        this.get_config('store_google') && this.persistence.update_campaign_params();
        this.get_config('save_referrer') && this.persistence.update_referrer_info(Ht.referrer);
        ;
    };
    Te.prototype._dom_loaded = function () {
        $.each(this.__dom_loaded_queue, function (t) {
            this._track_dom.apply(this, t);
        }, this);
        this.has_opted_out_tracking() || $.each(this.__request_queue, function (t) {
            this._send_request.apply(this, t);
        }, this);
        delete this.__dom_loaded_queue;
        delete this.__request_queue;
        ;
    };
    Te.prototype._track_dom = function (t, e) {
        if (this.get_config('img')) {
            return this.report_error('You can\'t use DOM tracking functions with img = true.'), false;
        }
        if (!R7) {
            return this.__dom_loaded_queue.push([
                t,
                e
            ]), false;
        }
        var n = new t().init(this);
        return n.track.apply(n, e);
    };
    Te.prototype._prepare_callback = function (t, e) {
        if ($.isUndefined(t)) {
            return null;
        }
        if (Al) {
            var n = function (o) {
                t(o, e);
            };
            return n;
        } else {
            var r = this._jsc, s = '' + Math.floor(Math.random() * 100000000), i = this.get_config('callback_fn') + '[' + s + ']';
            return r[s] = function (o) {
                delete r[s];
                t(o, e);
                ;
            }, i;
        }
    };
    Te.prototype._send_request = function (t, e, n, r) {
        var s = true;
        if (P7) {
            return this.__request_queue.push(arguments), s;
        }
        var i = {
                method: this.get_config('api_method'),
                transport: this.get_config('api_transport'),
                verbose: this.get_config('verbose')
            }, o = null;
        !r && ($.isFunction(n) || typeof n == 'string') && (r = n, n = null);
        n = $.extend(i, n || {});
        Al || (n.method = 'GET');
        ;
        var a = n.method === 'POST', l = n1 && a && n.transport.toLowerCase() === 'sendbeacon', u = n.verbose;
        e.verbose && (u = true);
        this.get_config('test') && (e.test = 1);
        u && (e.verbose = 1);
        this.get_config('img') && (e.img = 1);
        Al || (r ? e.callback = r : (u || this.get_config('test')) && (e.callback = '(function(){})'));
        ;
        ;
        a && (o = 'data=' + encodeURIComponent(e.data), delete e.data);
        t += '?' + $.HTTPBuildQuery(e);
        ;
        var f = this;
        if ('img' in e) {
            var d = Ht.createElement('img');
            ;
            Ht.body.appendChild(d);
            ;
        } else {
            if (l) {
                try {
                    s = n1(t, o);
                } catch (b) {
                    f.report_error(b);
                    s = false;
                    ;
                }
                try {
                    r && r(s ? 1 : 0);
                } catch (b) {
                    f.report_error(b);
                }
            } else {
                if (Al) {
                    try {
                        var p = new XMLHttpRequest();
                        p.open(n.method, t, true);
                        var _ = this.get_config('xhr_headers');
                        if (a && (_['Content-Type'] = 'application/x-www-form-urlencoded'), $.each(_, function (b, A) {
                                p.setRequestHeader(A, b);
                            }), n.timeout_ms && typeof p.timeout < 'u') {
                            p.timeout = n.timeout_ms;
                            var v = new Date().getTime();
                        }
                        p.withCredentials = true;
                        p.onreadystatechange = function () {
                            if (p.readyState === 4) {
                                if (p.status === 200) {
                                    if (r) {
                                        if (u) {
                                            var b;
                                            try {
                                                b = $.JSONDecode(p.responseText);
                                            } catch (N) {
                                                if (f.report_error(N), n.ignore_json_errors) {
                                                    b = p.responseText;
                                                } else {
                                                    return;
                                                }
                                            }
                                            r(b);
                                        } else {
                                            r(Number(p.responseText));
                                        }
                                    }
                                } else {
                                    var A;
                                    p.timeout && !p.status && new Date().getTime() - v >= p.timeout ? A = 'timeout' : A = 'Bad HTTP status: ' + p.status + ' ' + p.statusText;
                                    f.report_error(A);
                                    r && r(u ? {
                                        status: 0,
                                        error: A,
                                        xhr_req: p
                                    } : 0);
                                    ;
                                }
                            }
                        };
                        p.send(o);
                        ;
                    } catch (b) {
                        f.report_error(b);
                        s = false;
                        ;
                    }
                } else {
                    var y = Ht.createElement('script');
                    y.type = 'text/javascript';
                    y.async = true;
                    y.defer = true;
                    y.src = t;
                    ;
                    var g = Ht.getElementsByTagName('script')[0];
                    g.parentNode.insertBefore(y, g);
                }
            }
        }
        return s;
    };
    Te.prototype._execute_array = function (t) {
        var e, n = [], r = [], s = [];
        $.each(t, function (o) {
            o && (e = o[0], $.isArray(e) ? s.push(o) : typeof o == 'function' ? o.call(this) : $.isArray(o) && e === 'alias' ? n.push(o) : $.isArray(o) && e.indexOf('track') !== -1 && typeof this[e] == 'function' ? s.push(o) : r.push(o));
        }, this);
        var i = function (o, a) {
            $.each(o, function (l) {
                if ($.isArray(l[0])) {
                    var u = a;
                    $.each(l, function (f) {
                        u = u[f[0]].apply(u, f.slice(1));
                    });
                } else {
                    this[l[0]].apply(this, l.slice(1));
                }
            }, a);
        };
        i(n, this);
        i(r, this);
        i(s, this);
        ;
    };
    Te.prototype.are_batchers_initialized = function () {
        return !!this.request_batchers.events;
    };
    Te.prototype.init_batchers = function () {
        var t = this.get_config('token');
        if (!this.are_batchers_initialized()) {
            var e = $.bind(function (n) {
                return new Di('__mpq_' + t + n.queue_suffix, {
                    libConfig: this.config,
                    sendRequestFunc: $.bind(function (r, s, i) {
                        this._send_request(this.get_config('api_host') + n.endpoint, this._encode_data_for_request(r), s, this._prepare_callback(i, r));
                    }, this),
                    beforeSendHook: $.bind(function (r) {
                        return this._run_hook('before_send_' + n.type, r);
                    }, this),
                    errorReporter: this.get_config('error_reporter'),
                    stopAllBatchingFunc: $.bind(this.stop_batch_senders, this)
                });
            }, this);
            this.request_batchers = {
                events: e({
                    type: 'events',
                    endpoint: '/track/',
                    queue_suffix: '_ev'
                }),
                people: e({
                    type: 'people',
                    endpoint: '/engage/',
                    queue_suffix: '_pp'
                }),
                groups: e({
                    type: 'groups',
                    endpoint: '/groups/',
                    queue_suffix: '_gr'
                })
            };
        }
        this.get_config('batch_autostart') && this.start_batch_senders();
    };
    Te.prototype.start_batch_senders = function () {
        this.are_batchers_initialized() && (this._batch_requests = true, $.each(this.request_batchers, function (t) {
            t.start();
        }));
    };
    Te.prototype.stop_batch_senders = function () {
        this._batch_requests = false;
        $.each(this.request_batchers, function (t) {
            t.stop();
            t.clear();
            ;
        });
        ;
    };
    Te.prototype.push = function (t) {
        this._execute_array([t]);
    };
    Te.prototype.disable = function (t) {
        typeof t > 'u' ? this._flags.disable_all_events = true : this.__disabled_events = this.__disabled_events.concat(t);
    };
    Te.prototype._encode_data_for_request = function (t) {
        var e = $.JSONEncode(t);
        return this.get_config('api_payload_format') === 'base64' && (e = $.base64Encode(e)), { data: e };
    };
    Te.prototype._track_or_batch = function (t, e) {
        var n = $.truncate(t.data, 255), r = t.endpoint, s = t.batcher, i = t.should_send_immediately, o = t.send_request_options || {};
        e = e || Kh;
        var a = true, l = $.bind(function () {
                return o.skip_hooks || (n = this._run_hook('before_send_' + t.type, n)), n ? (qt.log('MIXPANEL REQUEST:'), qt.log(n), this._send_request(r, this._encode_data_for_request(n), o, this._prepare_callback(e, n))) : null;
            }, this);
        return this._batch_requests && !i ? s.enqueue(n, function (u) {
            u ? e(1, n) : l();
        }) : a = l(), a && n;
    };
    Te.prototype.track = Rf(function (t, e, n, r) {
        !r && typeof n == 'function' && (r = n, n = null);
        n = n || {};
        ;
        var s = n.transport;
        s && (n.transport = s);
        var i = n.send_immediately;
        if (typeof r != 'function' && (r = Kh), $.isUndefined(t)) {
            this.report_error('No event name provided to mixpanel.track');
            return;
        }
        if (this._event_is_disabled(t)) {
            r(0);
            return;
        }
        e = e || {};
        ;
        ;
        var o = this.persistence.remove_event_timer(t);
        if (!$.isUndefined(o)) {
            var a = new Date().getTime() - o;
            ;
        }
        this._set_default_superprops();
        e = $.extend({}, $.info.properties(), this.persistence.properties(), this.unpersisted_superprops, e);
        ;
        var l = this.get_config('property_blacklist');
        $.isArray(l) ? $.each(l, function (d) {
            delete e[d];
        }) : this.report_error('Invalid value for property_blacklist config: ' + l);
        var u = {
                event: t,
                properties: e
            }, f = this._track_or_batch({
                type: 'events',
                data: u,
                endpoint: this.get_config('api_host') + '/track/',
                batcher: this.request_batchers.events,
                should_send_immediately: i,
                send_request_options: n
            }, r);
        return f;
    });
    Te.prototype.set_group = Rf(function (t, e, n) {
        $.isArray(e) || (e = [e]);
        var r = {};
        return r[t] = e, this.register(r), this.people.set(t, e, n);
    });
    Te.prototype.add_group = Rf(function (t, e, n) {
        var r = this.get_property(t);
        if (r === void 0) {
            var s = { t: [e] };
            ;
            this.register(s);
            ;
        } else {
            if (r.indexOf(e) === -1) {
                r.push(e);
                this.register(s);
            }
        }
        return this.people.union(t, e, n);
    });
    Te.prototype.remove_group = Rf(function (t, e, n) {
        var r = this.get_property(t);
        if (r !== void 0) {
            var s = r.indexOf(e);
            if (s > -1) {
                r.splice(s, 1);
                this.register({ group_key: r });
            }
            r.length === 0 && this.unregister(t);
            ;
        }
        return this.people.remove(t, e, n);
    });
    Te.prototype.track_with_groups = Rf(function (t, e, n, r) {
        var s = $.extend({}, e || {});
        return $.each(n, function (i, o) {
            i != null && (s[o] = i);
        }), this.track(t, s, r);
    });
    Te.prototype._create_map_key = function (t, e) {
        return t + '_' + JSON.stringify(e);
    };
    Te.prototype._remove_group_from_cache = function (t, e) {
        delete this._cached_groups[this._create_map_key(t, e)];
    };
    Te.prototype.get_group = function (t, e) {
        var n = this._create_map_key(t, e), r = this._cached_groups[n];
        return (r === void 0 || r._group_key !== t || r._group_id !== e) && (r = new sn(), r._init(this, t, e), this._cached_groups[n] = r), r;
    };
    Te.prototype.track_pageview = function (t) {
        $.isUndefined(t) && (t = Ht.location.href);
        this.track('mp_page_view', $.info.pageviewInfo(t));
        ;
    };
    Te.prototype.track_links = function () {
        return this._track_dom.call(this, Wl, arguments);
    };
    Te.prototype.track_forms = function () {
        return this._track_dom.call(this, Um, arguments);
    };
    Te.prototype.time_event = function (t) {
        if ($.isUndefined(t)) {
            this.report_error('No event name provided to mixpanel.time_event');
            return;
        }
        this._event_is_disabled(t) || this.persistence.set_event_timer(t, new Date().getTime());
    };
    var Iv = function (t) {
        var e;
        return $.isObject(t) ? e = t : $.isUndefined(t) ? e = {} : e = { days: t }, $.extend({}, MB, e);
    };
    Te.prototype.register = function (t, e) {
        var n = Iv(e);
        n.persistent ? this.persistence.register(t, n.days) : $.extend(this.unpersisted_superprops, t);
    };
    Te.prototype.register_once = function (t, e, n) {
        var r = Iv(n);
        r.persistent ? this.persistence.register_once(t, e, r.days) : (typeof e > 'u' && (e = 'None'), $.each(t, function (s, i) {
            (!this.unpersisted_superprops.hasOwnProperty(i) || this.unpersisted_superprops[i] === e) && (this.unpersisted_superprops[i] = s);
        }, this));
    };
    Te.prototype.unregister = function (t, e) {
        e = Iv(e);
        e.persistent ? this.persistence.unregister(t) : delete this.unpersisted_superprops[t];
        ;
    };
    Te.prototype._register_single = function (t, e) {
        var n = { t: e };
        ;
        this.register(n);
        ;
    };
    Te.prototype.identify = function (t, e, n, r, s, i, o, a) {
        var l = this.get_distinct_id();
        if (this.register({ $user_id: t }), !this.get_property('$device_id')) {
            var u = l;
            this.register_once({
                $had_persisted_distinct_id: true,
                $device_id: u
            }, '');
        }
        t !== l && t !== this.get_property('__alias') && (this.unregister('__alias'), this.register({ distinct_id: t }));
        this._flags.identify_called = true;
        this.people._flush(e, n, r, s, i, o, a);
        t !== l && this.track('$identify', {
            distinct_id: t,
            $anon_distinct_id: l
        }, { skip_hooks: true });
        ;
    };
    Te.prototype.reset = function () {
        this.persistence.clear();
        this._flags.identify_called = false;
        ;
        var t = $.UUID();
        this.register_once({
            distinct_id: t,
            $device_id: t
        }, '');
    };
    Te.prototype.get_distinct_id = function () {
        return this.get_property('distinct_id');
    };
    Te.prototype.alias = function (t, e) {
        if (t === this.get_property('$people_distinct_id')) {
            return this.report_error('Attempting to create alias for existing People user - aborting.'), -2;
        }
        var n = this;
        return $.isUndefined(e) && (e = this.get_distinct_id()), t !== e ? (this._register_single('__alias', t), this.track('$create_alias', {
            alias: t,
            distinct_id: e
        }, { skip_hooks: true }, function () {
            n.identify(t);
        })) : (this.report_error('alias matches current distinct_id - skipping api call.'), this.identify(t), -1);
    };
    Te.prototype.name_tag = function (t) {
        this._register_single('mp_name_tag', t);
    };
    Te.prototype.set_config = function (t) {
        if ($.isObject(t)) {
            $.extend(this.config, t);
            var e = t.batch_size;
            e && $.each(this.request_batchers, function (n) {
                n.resetBatchSize();
            });
            this.get_config('persistence_name') || (this.config.persistence_name = this.config.cookie_name);
            this.get_config('disable_persistence') || (this.config.disable_persistence = this.config.disable_cookie);
            this.persistence && this.persistence.update_config(this.config);
            false = false || this.get_config('debug');
            ;
        }
    };
    Te.prototype.get_config = function (t) {
        return this.config[t];
    };
    Te.prototype._run_hook = function (t) {
        var e = (this.config.hooks[t] || PB).apply(this, Wo.call(arguments, 1));
        return typeof e > 'u' && (this.report_error(t + ' hook did not return a value'), e = null), e;
    };
    Te.prototype.get_property = function (t) {
        return this.persistence.props[t];
    };
    Te.prototype.toString = function () {
        var t = this.get_config('name');
        return t !== 'mixpanel' && (t = 'mixpanel.' + t), t;
    };
    Te.prototype._event_is_disabled = function (t) {
        return $.isBlockedUA(Fs) || this._flags.disable_all_events || $.include(this.__disabled_events, t);
    };
    Te.prototype._gdpr_init = function () {
        var t = this.get_config('opt_out_tracking_persistence_type') === 'localStorage';
        t && $.localStorage.is_supported() && (!this.has_opted_in_tracking() && this.has_opted_in_tracking({ persistence_type: 'cookie' }) && this.opt_in_tracking({ enable_persistence: false }), !this.has_opted_out_tracking() && this.has_opted_out_tracking({ persistence_type: 'cookie' }) && this.opt_out_tracking({ clear_persistence: false }), this.clear_opt_in_out_tracking({
            persistence_type: 'cookie',
            enable_persistence: false
        }));
        this.has_opted_out_tracking() ? this._gdpr_update_persistence({ clear_persistence: true }) : !this.has_opted_in_tracking() && (this.get_config('opt_out_tracking_by_default') || $.cookie.get('mp_optout')) && ($.cookie.remove('mp_optout'), this.opt_out_tracking({ clear_persistence: this.get_config('opt_out_persistence_by_default') }));
        ;
    };
    Te.prototype._gdpr_update_persistence = function (t) {
        var e;
        if (t && t.clear_persistence) {
            e = true;
        } else {
            if (t && t.enable_persistence) {
                e = false;
            } else {
                return;
            }
        }
        !this.get_config('disable_persistence') && this.persistence.disabled !== e && this.persistence.set_disabled(e);
        e && $.each(this.request_batchers, function (n) {
            n.clear();
        });
        ;
    };
    Te.prototype._gdpr_call_func = function (t, e) {
        return e = $.extend({
            track: $.bind(this.track, this),
            persistence_type: this.get_config('opt_out_tracking_persistence_type'),
            cookie_prefix: this.get_config('opt_out_tracking_cookie_prefix'),
            cookie_expiration: this.get_config('cookie_expiration'),
            cross_site_cookie: this.get_config('cross_site_cookie'),
            cross_subdomain_cookie: this.get_config('cross_subdomain_cookie'),
            cookie_domain: this.get_config('cookie_domain'),
            secure_cookie: this.get_config('secure_cookie'),
            ignore_dnt: this.get_config('ignore_dnt')
        }, e), $.localStorage.is_supported() || (e.persistence_type = 'cookie'), t(this.get_config('token'), {
            track: e.track,
            trackEventName: e.track_event_name,
            trackProperties: e.track_properties,
            persistenceType: e.persistence_type,
            persistencePrefix: e.cookie_prefix,
            cookieDomain: e.cookie_domain,
            cookieExpiration: e.cookie_expiration,
            crossSiteCookie: e.cross_site_cookie,
            crossSubdomainCookie: e.cross_subdomain_cookie,
            secureCookie: e.secure_cookie,
            ignoreDnt: e.ignore_dnt
        });
    };
    Te.prototype.opt_in_tracking = function (t) {
        t = $.extend({ enable_persistence: true }, t);
        this._gdpr_call_func(wB, t);
        this._gdpr_update_persistence(t);
        ;
    };
    Te.prototype.opt_out_tracking = function (t) {
        t = $.extend({
            clear_persistence: true,
            delete_user: true
        }, t);
        t.delete_user && this.people && this.people._identify_called() && (this.people.delete_user(), this.people.clear_charges());
        this._gdpr_call_func(OB, t);
        this._gdpr_update_persistence(t);
        ;
    };
    Te.prototype.has_opted_in_tracking = function (t) {
        return this._gdpr_call_func(AB, t);
    };
    Te.prototype.has_opted_out_tracking = function (t) {
        return this._gdpr_call_func(O7, t);
    };
    Te.prototype.clear_opt_in_out_tracking = function (t) {
        t = $.extend({ enable_persistence: true }, t);
        this._gdpr_call_func(CB, t);
        this._gdpr_update_persistence(t);
        ;
    };
    Te.prototype.report_error = function (t, e) {
        qt.error.apply(qt.error, arguments);
        try {
            !e && !(t instanceof Error) && (t = new Error(t));
            this.get_config('error_reporter')(t, e);
            ;
        } catch (n) {
            qt.error(n);
        }
    };
    Te.prototype.init = Te.prototype.init;
    Te.prototype.reset = Te.prototype.reset;
    Te.prototype.disable = Te.prototype.disable;
    Te.prototype.time_event = Te.prototype.time_event;
    Te.prototype.track = Te.prototype.track;
    Te.prototype.track_links = Te.prototype.track_links;
    Te.prototype.track_forms = Te.prototype.track_forms;
    Te.prototype.track_pageview = Te.prototype.track_pageview;
    Te.prototype.register = Te.prototype.register;
    Te.prototype.register_once = Te.prototype.register_once;
    Te.prototype.unregister = Te.prototype.unregister;
    Te.prototype.identify = Te.prototype.identify;
    Te.prototype.alias = Te.prototype.alias;
    Te.prototype.name_tag = Te.prototype.name_tag;
    Te.prototype.set_config = Te.prototype.set_config;
    Te.prototype.get_config = Te.prototype.get_config;
    Te.prototype.get_property = Te.prototype.get_property;
    Te.prototype.get_distinct_id = Te.prototype.get_distinct_id;
    Te.prototype.toString = Te.prototype.toString;
    Te.prototype.opt_out_tracking = Te.prototype.opt_out_tracking;
    Te.prototype.opt_in_tracking = Te.prototype.opt_in_tracking;
    Te.prototype.has_opted_out_tracking = Te.prototype.has_opted_out_tracking;
    Te.prototype.has_opted_in_tracking = Te.prototype.has_opted_in_tracking;
    Te.prototype.clear_opt_in_out_tracking = Te.prototype.clear_opt_in_out_tracking;
    Te.prototype.get_group = Te.prototype.get_group;
    Te.prototype.set_group = Te.prototype.set_group;
    Te.prototype.add_group = Te.prototype.add_group;
    Te.prototype.remove_group = Te.prototype.remove_group;
    Te.prototype.track_with_groups = Te.prototype.track_with_groups;
    Te.prototype.start_batch_senders = Te.prototype.start_batch_senders;
    Te.prototype.stop_batch_senders = Te.prototype.stop_batch_senders;
    bt.prototype.properties = bt.prototype.properties;
    bt.prototype.update_search_keyword = bt.prototype.update_search_keyword;
    bt.prototype.update_referrer_info = bt.prototype.update_referrer_info;
    bt.prototype.get_cross_subdomain = bt.prototype.get_cross_subdomain;
    bt.prototype.clear = bt.prototype.clear;
    var fl = {}, DB = function () {
            $.each(fl, function (t, e) {
                e !== 'mixpanel' && (ar[e] = t);
            });
            ar._ = $;
            ;
        }, $B = function () {
            ar.init = function (t, e, n) {
                if (n) {
                    return ar[n] || (ar[n] = fl[n] = v0(t, e, n), ar[n]._loaded()), ar[n];
                }
                var r = ar;
                fl.mixpanel ? r = fl.mixpanel : t && (r = v0(t, e, 'mixpanel'), r._loaded(), fl.mixpanel = r);
                ar = r;
                Cv === 1 && (hr.mixpanel = ar);
                DB();
                ;
            };
        }, LB = function () {
            function t() {
                t.done || (t.done = true, R7 = true, P7 = false, $.each(fl, function (r) {
                    r._dom_loaded();
                }));
            }
            function e() {
                try {
                    Ht.documentElement.doScroll('left');
                } catch {
                    setTimeout(e, 1);
                    return;
                }
                t();
            }
            if (Ht.addEventListener) {
                Ht.readyState === 'complete' ? t() : Ht.addEventListener('DOMContentLoaded', t, false);
            } else {
                if (Ht.attachEvent) {
                    Ht.attachEvent('onreadystatechange', t);
                    var n = false;
                    try {
                        n = hr.frameElement === null;
                    } catch {
                    }
                    Ht.documentElement.doScroll && n && e();
                }
            }
            $.register_event(hr, 'load', t, true);
        };
    function FB() {
        return Cv = 0, ar = new Te(), $B(), ar.init(), LB(), ar;
    }
    FB();
    const UB = [
            {
                name: 'Prototype',
                tag: 'prototype',
                wrapper: 'vue',
                isPublic: true,
                directory: 'internal/prototype'
            },
            {
                name: 'EcastTestClient',
                tag: 'ecast-test-client',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'internal/ecast-test-client'
            },
            {
                name: 'Quiplash 2 InterLASHional',
                tag: 'quiplash2-international',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'standalone/quiplash2-international',
                categoryId: 'quiplash2-internationalGame'
            },
            {
                name: 'Guesspionage Crowdplay',
                tag: 'guesspionage-crowdplay',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'standalone/guesspionage-crowdplay'
            },
            {
                name: 'Drawful 2',
                tag: 'drawful2',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'standalone/drawful2',
                categoryId: 'DrawfulGame',
                shopItems: ['shirts']
            },
            {
                name: 'Drawful 2',
                tag: 'drawful2international',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'standalone/drawful2-international',
                features: ['moderation']
            },
            {
                name: 'Acquisitions, Inc.',
                tag: 'acquisitions-inc',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'standalone/acquisitions-inc'
            },
            {
                name: 'You Don\'t Know Jack 2015',
                tag: 'ydkj2015',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp1/ydkj2015'
            },
            {
                name: 'Drawful',
                tag: 'drawful',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp1/drawful'
            },
            {
                name: 'Word Spud',
                tag: 'wordspud',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp1/wordspud'
            },
            {
                name: 'Lie Swatter',
                tag: 'lieswatter',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp1/lieswatter'
            },
            {
                name: 'Fibbage',
                tag: 'fibbage',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp1/fibbage'
            },
            {
                name: 'Fibbage 2',
                tag: 'fibbage2',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp2/fibbage2'
            },
            {
                name: 'Earwax',
                tag: 'earwax',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp2/earwax'
            },
            {
                name: 'Bidiots',
                tag: 'auction',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp2/auction'
            },
            {
                name: 'Bomb Corp',
                tag: 'bombintern',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp2/bombintern'
            },
            {
                name: 'Quiplash',
                tag: 'quiplash',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp2/quiplash'
            },
            {
                name: 'Fakin\' It',
                tag: 'fakinit',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp3/fakinit'
            },
            {
                name: 'Tee K.O.',
                tag: 'awshirt',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp3/awshirt',
                categoryId: 'TeeKOGame',
                shopItems: ['shirts']
            },
            {
                name: 'Quiplash 2',
                tag: 'quiplash2',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp3/quiplash2',
                categoryId: 'Quiplash2Game'
            },
            {
                name: 'Trivia Murder Party',
                tag: 'triviadeath',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp3/triviadeath',
                categoryId: 'TriviaDeathResults'
            },
            {
                name: 'Guesspionage',
                tag: 'pollposition',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp3/pollposition'
            },
            {
                name: 'Fibbage 3',
                tag: 'fibbage3',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp4/fibbage3'
            },
            {
                name: 'Survive the Internet',
                tag: 'survivetheinternet',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp4/survivetheinternet',
                categoryId: 'STIGame'
            },
            {
                name: 'Monster Seeking Monster',
                tag: 'monstermingle',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp4/monstermingle',
                categoryId: 'MonsterMingleGame'
            },
            {
                name: 'Bracketeering',
                tag: 'bracketeering',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp4/bracketeering',
                categoryId: 'BRKGame'
            },
            {
                name: 'Civic Doodle',
                tag: 'overdrawn',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp4/overdrawn',
                categoryId: 'OverdrawnGame',
                shopItems: ['shirts']
            },
            {
                name: 'You Don\'t Know Jack: Full Stream',
                tag: 'ydkj2018',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp5/ydkj2018',
                categoryId: 'YDKJ2018Game'
            },
            {
                name: 'Split the Room',
                tag: 'splittheroom',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp5/splittheroom',
                categoryId: 'SplitTheRoomGame'
            },
            {
                name: 'Mad Verse City',
                tag: 'rapbattle',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp5/rapbattle',
                categoryId: 'RapBattleGame'
            },
            {
                name: 'Zeeple Dome',
                tag: 'slingshoot',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp5/slingshoot',
                categoryId: 'SlingShootGame'
            },
            {
                name: 'Patently Stupid',
                tag: 'patentlystupid',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp5/patentlystupid',
                categoryId: 'PatentlyStupidGame',
                shopItems: ['mugs']
            },
            {
                name: 'Trivia Murder Party 2',
                tag: 'triviadeath2',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp6/triviadeath2',
                categoryId: 'TriviaDeath2Game'
            },
            {
                name: 'Role Models',
                tag: 'rolemodels',
                wrapper: 'marionette',
                isPublic: true,
                features: ['camera'],
                directory: 'pp6/rolemodels',
                categoryId: 'RoleModelsGame',
                shopItems: ['shirts']
            },
            {
                name: 'Joke Boat',
                tag: 'jokeboat',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp6/jokeboat',
                categoryId: 'JokeboatGame'
            },
            {
                name: 'Dictionarium',
                tag: 'ridictionary',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp6/ridictionary',
                categoryId: 'RidictionaryGame'
            },
            {
                name: 'Push the Button',
                tag: 'pushthebutton',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp6/pushthebutton',
                categoryId: 'PushTheButtonGame'
            },
            {
                name: 'Talking Points',
                tag: 'jackbox-talks',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp7/jackboxtalks',
                features: [
                    'camera',
                    'moderation'
                ],
                categoryId: 'JackboxTalksGame'
            },
            {
                name: 'Quiplash 3',
                tag: 'quiplash3',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp7/quiplash3',
                features: ['moderation'],
                categoryId: 'quiplash3Game'
            },
            {
                name: 'The Devils and the Details',
                tag: 'everyday',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp7/everyday',
                categoryId: 'EverydayGame',
                shopItems: ['mugs']
            },
            {
                name: 'Champ\'d Up',
                tag: 'worldchamps',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp7/worldchamps',
                features: ['moderation'],
                categoryId: 'WorldChampionsGame',
                shopItems: ['cards']
            },
            {
                name: 'Blather \'Round',
                tag: 'blanky-blank',
                wrapper: 'marionette',
                isPublic: true,
                directory: 'pp7/blanky-blank',
                categoryId: 'BlankyBlankGame'
            },
            {
                name: 'Job Job',
                tag: 'apply-yourself',
                wrapper: 'vue',
                isPublic: true,
                directory: 'pp8/apply-yourself',
                categoryId: 'JobGameGame',
                features: [
                    'moderation',
                    'previews'
                ]
            },
            {
                name: 'Drawful Animate',
                tag: 'drawful-animate',
                wrapper: 'vue',
                isPublic: true,
                directory: 'pp8/drawful-animate',
                categoryId: 'DrawfulAnimateGame',
                features: ['moderation']
            },
            {
                name: 'The Wheel of Enormous Proportions',
                tag: 'the-wheel',
                wrapper: 'vue',
                isPublic: true,
                directory: 'pp8/the-wheel',
                categoryId: 'TheWheelGame'
            },
            {
                name: 'The Poll Mine',
                tag: 'survey-bomb',
                wrapper: 'vue',
                isPublic: true,
                directory: 'pp8/survey-bomb',
                categoryId: 'SurveyBombGame'
            },
            {
                name: 'Weapons Drawn',
                tag: 'murder-detectives',
                wrapper: 'vue',
                isPublic: true,
                directory: 'pp8/murder-detectives',
                categoryId: 'MurderDetectivesGame',
                features: ['moderation']
            },
            {
                name: 'Quiplash 3',
                tag: 'quiplash3-tjsp',
                wrapper: 'vue',
                isPublic: true,
                directory: 'tjsp/quiplash3',
                features: ['moderation'],
                categoryId: 'quiplash3Game'
            },
            {
                name: 'Tee K.O.',
                tag: 'awshirt-tjsp',
                wrapper: 'vue',
                isPublic: true,
                directory: 'tjsp/awshirt',
                features: ['moderation'],
                shopItems: ['shirts'],
                categoryId: 'TeeKOGame'
            },
            {
                name: 'Trivia Murder Party 2',
                tag: 'triviadeath2-tjsp',
                wrapper: 'vue',
                isPublic: true,
                directory: 'tjsp/triviadeath2',
                categoryId: 'TriviaMurderParty2Game'
            },
            {
                name: 'Fibbage 4',
                tag: 'fourbage',
                wrapper: 'vue',
                isPublic: true,
                directory: 'pp9/fourbage',
                features: [
                    'moderation',
                    'kicking'
                ],
                categoryId: 'Fibbage4Game'
            },
            {
                name: 'Roomerang',
                tag: 'htmf',
                wrapper: 'vue',
                isPublic: true,
                directory: 'pp9/htmf',
                features: [
                    'moderation',
                    'kicking'
                ],
                categoryId: 'MakeFriendsGame'
            },
            {
                name: 'Junktopia',
                tag: 'antique-freak',
                wrapper: 'vue',
                isPublic: true,
                directory: 'pp9/antique-freak',
                features: [
                    'moderation',
                    'kicking'
                ],
                categoryId: 'AntiqueGameGame'
            },
            {
                name: 'Nonsensory',
                tag: 'range-game',
                wrapper: 'vue',
                isPublic: true,
                directory: 'pp9/range-game',
                features: [
                    'moderation',
                    'kicking'
                ],
                categoryId: 'RangeGameGame'
            },
            {
                name: 'Quixort',
                tag: 'lineup',
                wrapper: 'vue',
                isPublic: true,
                directory: 'pp9/lineup',
                features: [
                    'kicking',
                    'previews'
                ],
                categoryId: 'LineupGame',
                galleryId: 'quixort'
            },
            {
                name: 'Tee K.O. 2',
                tag: 'awshirt2',
                wrapper: 'vue',
                isPublic: true,
                directory: 'pp10/awshirt2',
                features: [
                    'moderation',
                    'kicking'
                ],
                shopItems: ['shirts'],
                categoryId: 'TeeKO2Game',
                galleryId: 'teeko2'
            },
            {
                name: 'Dodo Re Mi',
                tag: 'nopus-opus',
                wrapper: 'vue',
                isPublic: true,
                directory: 'pp10/nopus-opus',
                features: [
                    'dropInDropOut',
                    'kicking'
                ],
                categoryId: 'NopusOpusGame',
                galleryId: 'dodo-re-mi'
            },
            {
                name: 'FixyText',
                tag: 'risky-text',
                wrapper: 'vue',
                isPublic: true,
                directory: 'pp10/risky-text',
                features: [
                    'moderation',
                    'kicking'
                ],
                categoryId: 'RiskyTextGame',
                galleryId: 'fixytext'
            },
            {
                name: 'Timejinx',
                tag: 'time-trivia',
                wrapper: 'vue',
                isPublic: true,
                directory: 'pp10/time-trivia',
                features: ['kicking'],
                categoryId: 'TimeTriviaGame',
                galleryId: 'timejinx'
            },
            {
                name: 'Hypnotorious',
                tag: 'us-them',
                wrapper: 'vue',
                isPublic: true,
                directory: 'pp10/us-them',
                features: [
                    'moderation',
                    'kicking'
                ],
                categoryId: 'UsThemGame',
                galleryId: 'hypnotorious'
            }
        ], r1 = t => UB.find(e => e.tag === t || e.galleryId === t || e.categoryId === t);
    function BB() {
        this.__data__ = [];
        this.size = 0;
        ;
    }
    var qB = BB;
    function VB(t, e) {
        return t === e || t !== t && e !== e;
    }
    var Bm = VB, GB = Bm;
    function jB(t, e) {
        for (var n = t.length; n--;) {
            if (GB(t[n][0], e)) {
                return n;
            }
        }
        return -1;
    }
    var qm = jB, WB = qm, HB = Array.prototype, zB = HB.splice;
    function YB(t) {
        var e = this.__data__, n = WB(e, t);
        if (n < 0) {
            return false;
        }
        var r = e.length - 1;
        return n == r ? e.pop() : zB.call(e, n, 1), --this.size, true;
    }
    var KB = YB, ZB = qm;
    function XB(t) {
        var e = this.__data__, n = ZB(e, t);
        return n < 0 ? void 0 : e[n][1];
    }
    var QB = XB, JB = qm;
    function eq(t) {
        return JB(this.__data__, t) > -1;
    }
    var tq = eq, nq = qm;
    function rq(t, e) {
        var n = this.__data__, r = nq(n, t);
        return r < 0 ? (++this.size, n.push([
            t,
            e
        ])) : n[r][1] = e, this;
    }
    var sq = rq, iq = qB, oq = KB, aq = QB, cq = tq, lq = sq;
    function Eu(t) {
        var e = -1, n = t == null ? 0 : t.length;
        for (this.clear(); ++e < n;) {
            var r = t[e];
            this.set(r[0], r[1]);
        }
    }
    Eu.prototype.clear = iq;
    Eu.prototype.delete = oq;
    Eu.prototype.get = aq;
    Eu.prototype.has = cq;
    Eu.prototype.set = lq;
    var Vm = Eu, uq = Vm;
    function hq() {
        this.__data__ = new uq();
        this.size = 0;
        ;
    }
    var fq = hq;
    function dq(t) {
        var e = this.__data__, n = e.delete(t);
        return this.size = e.size, n;
    }
    var pq = dq;
    function mq(t) {
        return this.__data__.get(t);
    }
    var gq = mq;
    function _q(t) {
        return this.__data__.has(t);
    }
    var yq = _q, vq = typeof mn == 'object' && mn && mn.Object === Object && mn, M7 = vq, bq = M7, Eq = typeof self == 'object' && self && self.Object === Object && self, Tq = bq || Eq || Function('return this')(), ti = Tq, Sq = ti, wq = Sq.Symbol, Gm = wq, TT = Gm, D7 = Object.prototype, Oq = D7.hasOwnProperty, Aq = D7.toString, rh = TT ? TT.toStringTag : void 0;
    function Cq(t) {
        var e = Oq.call(t, rh), n = t[rh];
        try {
            ;
            ;
        } catch {
        }
        var s = Aq.call(t);
        return true && (e ? t[rh] = n : delete t[rh]), s;
    }
    var Iq = Cq, kq = Object.prototype, Nq = kq.toString;
    function xq(t) {
        return Nq.call(t);
    }
    var Pq = xq, ST = Gm, Rq = Iq, Mq = Pq, wT = ST ? ST.toStringTag : void 0;
    function Lq(t) {
        return t == null ? t === void 0 ? '[object Undefined]' : '[object Null]' : wT && wT in Object(t) ? Rq(t) : Mq(t);
    }
    var Tu = Lq;
    function Fq(t) {
        var e = typeof t;
        return t != null && (e == 'object' || e == 'function');
    }
    var ni = Fq, Uq = Tu, Bq = ni;
    function Wq(t) {
        if (!Bq(t)) {
            return false;
        }
        var e = Uq(t);
        return e == '[object Function]' || e == '[object GeneratorFunction]' || e == '[object AsyncFunction]' || e == '[object Proxy]';
    }
    var kv = Wq, Hq = ti, zq = Hq['__core-js_shared__'], Yq = zq, ry = Yq, OT = (function () {
            var t = /[^.]+$/.exec(ry && ry.keys && ry.keys.IE_PROTO || '');
            return t ? 'Symbol(src)_1.' + t : '';
        }());
    function Kq(t) {
        return !!OT && OT in t;
    }
    var Zq = Kq, Xq = Function.prototype, Qq = Xq.toString;
    function Jq(t) {
        if (t != null) {
            try {
                return Qq.call(t);
            } catch {
            }
            try {
                return t + '';
            } catch {
            }
        }
        return '';
    }
    var $7 = Jq, eV = kv, tV = Zq, nV = ni, rV = $7, oV = Function.prototype, aV = Object.prototype, cV = oV.toString, lV = aV.hasOwnProperty, uV = RegExp('^' + cV.call(lV).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
    function hV(t) {
        if (!nV(t) || tV(t)) {
            return false;
        }
        var e = eV(t) ? uV : /^\[object .+?Constructor\]$/;
        return e.test(rV(t));
    }
    var fV = hV;
    function dV(t, e) {
        return t == null ? void 0 : t[e];
    }
    var pV = dV, mV = fV, gV = pV;
    function _V(t, e) {
        var n = gV(t, e);
        return mV(n) ? n : void 0;
    }
    var Rc = _V, yV = Rc, vV = ti, bV = yV(vV, 'Map'), Nv = bV, EV = Rc, TV = EV(Object, 'create'), jm = TV, AT = jm;
    function SV() {
        this.__data__ = AT ? AT(null) : {};
        this.size = 0;
        ;
    }
    var wV = SV;
    function OV(t) {
        var e = this.has(t) && delete this.__data__[t];
        return this.size -= e ? 1 : 0, e;
    }
    var AV = OV, CV = jm, kV = Object.prototype, NV = kV.hasOwnProperty;
    function xV(t) {
        var e = this.__data__;
        if (CV) {
            var n = e[t];
            return n === '__lodash_hash_undefined__' ? void 0 : n;
        }
        return NV.call(e, t) ? e[t] : void 0;
    }
    var PV = xV, RV = jm, MV = Object.prototype, DV = MV.hasOwnProperty;
    function $V(t) {
        var e = this.__data__;
        return RV ? e[t] !== void 0 : DV.call(e, t);
    }
    var LV = $V, FV = jm;
    function BV(t, e) {
        var n = this.__data__;
        return this.size += this.has(t) ? 0 : 1, n[t] = FV && e === void 0 ? '__lodash_hash_undefined__' : e, this;
    }
    var qV = BV, VV = wV, GV = AV, jV = PV, WV = LV, HV = qV;
    function Su(t) {
        var e = -1, n = t == null ? 0 : t.length;
        for (this.clear(); ++e < n;) {
            var r = t[e];
            this.set(r[0], r[1]);
        }
    }
    Su.prototype.clear = VV;
    Su.prototype.delete = GV;
    Su.prototype.get = jV;
    Su.prototype.has = WV;
    Su.prototype.set = HV;
    var zV = Su, CT = zV, YV = Vm, KV = Nv;
    function ZV() {
        this.size = 0;
        this.__data__ = {
            hash: new CT(),
            map: new (KV || YV)(),
            string: new CT()
        };
        ;
    }
    var XV = ZV;
    function QV(t) {
        var e = typeof t;
        return e == 'string' || e == 'number' || e == 'symbol' || e == 'boolean' ? t !== '__proto__' : t === null;
    }
    var JV = QV, eG = JV;
    function tG(t, e) {
        var n = t.__data__;
        return eG(e) ? n[typeof e == 'string' ? 'string' : 'hash'] : n.map;
    }
    var Wm = tG, nG = Wm;
    function rG(t) {
        var e = nG(this, t).delete(t);
        return this.size -= e ? 1 : 0, e;
    }
    var sG = rG, iG = Wm;
    function oG(t) {
        return iG(this, t).get(t);
    }
    var aG = oG, cG = Wm;
    function lG(t) {
        return cG(this, t).has(t);
    }
    var uG = lG, hG = Wm;
    function fG(t, e) {
        var n = hG(this, t), r = n.size;
        return n.set(t, e), this.size += n.size == r ? 0 : 1, this;
    }
    var dG = fG, pG = XV, mG = sG, gG = aG, _G = uG, yG = dG;
    function wu(t) {
        var e = -1, n = t == null ? 0 : t.length;
        for (this.clear(); ++e < n;) {
            var r = t[e];
            this.set(r[0], r[1]);
        }
    }
    wu.prototype.clear = pG;
    wu.prototype.delete = mG;
    wu.prototype.get = gG;
    wu.prototype.has = _G;
    wu.prototype.set = yG;
    var L7 = wu, vG = Vm, bG = Nv, EG = L7;
    function SG(t, e) {
        var n = this.__data__;
        if (n instanceof vG) {
            var r = n.__data__;
            if (!bG || r.length < 199) {
                return r.push([
                    t,
                    e
                ]), this.size = ++n.size, this;
            }
            n = this.__data__ = new EG(r);
        }
        return n.set(t, e), this.size = n.size, this;
    }
    var wG = SG, OG = Vm, AG = fq, CG = pq, IG = gq, kG = yq, NG = wG;
    function Ou(t) {
        var e = this.__data__ = new OG(t);
        this.size = e.size;
    }
    Ou.prototype.clear = AG;
    Ou.prototype.delete = CG;
    Ou.prototype.get = IG;
    Ou.prototype.has = kG;
    Ou.prototype.set = NG;
    var F7 = Ou, xG = Rc, PG = (function () {
            try {
                var t = xG(Object, 'defineProperty');
                return t({}, '', {}), t;
            } catch {
            }
        }()), U7 = PG, IT = U7;
    function RG(t, e, n) {
        e == '__proto__' && IT ? IT(t, e, {
            configurable: true,
            enumerable: true,
            value: n,
            writable: true
        }) : t[e] = n;
    }
    var xv = RG, MG = xv, DG = Bm;
    function $G(t, e, n) {
        (n !== void 0 && !DG(t[e], n) || n === void 0 && !(e in t)) && MG(t, e, n);
    }
    var B7 = $G;
    function LG(t) {
        return function (e, n, r) {
            for (var s = -1, i = Object(e), o = r(e), a = o.length; a--;) {
                var l = o[t ? a : ++s];
                if (n(i[l], l, i) === false) {
                    break;
                }
            }
            return e;
        };
    }
    var FG = LG, UG = FG, BG = UG(), qG = BG, s1 = { exports: {} };
    s1.exports;
    (function (t, e) {
        var n = ti, r = e && !e.nodeType && e, s = r && true && t && !t.nodeType && t, i = s && s.exports === r, o = i ? n.Buffer : void 0, a = o ? o.allocUnsafe : void 0;
        function l(u, f) {
            if (f) {
                return u.slice();
            }
            var d = u.length, p = a ? a(d) : new u.constructor(d);
            return u.copy(p), p;
        }
        ;
    }(s1, s1.exports));
    var q7 = s1.exports, VG = ti, GG = VG.Uint8Array, jG = GG, kT = jG;
    function WG(t) {
        var e = new t.constructor(t.byteLength);
        return new kT(e).set(new kT(t)), e;
    }
    var Pv = WG, HG = Pv;
    function zG(t, e) {
        var n = e ? HG(t.buffer) : t.buffer;
        return new t.constructor(n, t.byteOffset, t.length);
    }
    var V7 = zG;
    function YG(t, e) {
        var n = -1, r = t.length;
        for (e || (e = Array(r)); ++n < r;) {
            ;
        }
        return e;
    }
    var G7 = YG, KG = ni, NT = Object.create, ZG = (function () {
            function t() {
            }
            return function (e) {
                if (!KG(e)) {
                    return {};
                }
                if (NT) {
                    return NT(e);
                }
                ;
                var n = new t();
                return t.prototype = void 0, n;
            };
        }()), XG = ZG;
    function QG(t, e) {
        return function (n) {
            return t(e(n));
        };
    }
    var j7 = QG, JG = j7, ej = JG(Object.getPrototypeOf, Object), Rv = ej, tj = Object.prototype;
    function nj(t) {
        var e = t && t.constructor, n = typeof e == 'function' && e.prototype || tj;
        return t === n;
    }
    var Mv = nj, rj = XG, sj = Rv, ij = Mv;
    function oj(t) {
        return typeof t.constructor == 'function' && !ij(t) ? rj(sj(t)) : {};
    }
    var W7 = oj;
    function aj(t) {
        return t != null && typeof t == 'object';
    }
    var Oa = aj, cj = Tu, lj = Oa;
    function hj(t) {
        return lj(t) && cj(t) == '[object Arguments]';
    }
    var fj = hj, xT = fj, dj = Oa, H7 = Object.prototype, pj = H7.hasOwnProperty, mj = H7.propertyIsEnumerable, gj = xT((function () {
            return arguments;
        }())) ? xT : function (t) {
            return dj(t) && pj.call(t, 'callee') && !mj.call(t, 'callee');
        }, z7 = gj, _j = Array.isArray, Aa = _j;
    function vj(t) {
        return typeof t == 'number' && t > -1 && t % 1 == 0 && t <= 9007199254740991;
    }
    var Y7 = vj, bj = kv, Ej = Y7;
    function Tj(t) {
        return t != null && Ej(t.length) && !bj(t);
    }
    var Hm = Tj, Sj = Hm, wj = Oa;
    function Oj(t) {
        return wj(t) && Sj(t);
    }
    var Aj = Oj, i1 = { exports: {} };
    function Cj() {
        return false;
    }
    var Ij = Cj;
    i1.exports;
    (function (t, e) {
        var n = ti, r = Ij, s = e && !e.nodeType && e, i = s && true && t && !t.nodeType && t, o = i && i.exports === s, a = o ? n.Buffer : void 0, l = a ? a.isBuffer : void 0, u = l || r;
        ;
    }(i1, i1.exports));
    var Dv = i1.exports, kj = Tu, Nj = Rv, xj = Oa, Rj = Function.prototype, Mj = Object.prototype, K7 = Rj.toString, Dj = Mj.hasOwnProperty, $j = K7.call(Object);
    function Lj(t) {
        if (!xj(t) || kj(t) != '[object Object]') {
            return false;
        }
        var e = Nj(t);
        if (e === null) {
            return true;
        }
        var n = Dj.call(e, 'constructor') && e.constructor;
        return typeof n == 'function' && n instanceof n && K7.call(n) == $j;
    }
    var Fj = Lj, Uj = Tu, Bj = Y7, qj = Oa, tn = {};
    tn['[object Float32Array]'] = tn['[object Float64Array]'] = tn['[object Int8Array]'] = tn['[object Int16Array]'] = tn['[object Int32Array]'] = tn['[object Uint8Array]'] = tn['[object Uint8ClampedArray]'] = tn['[object Uint16Array]'] = tn['[object Uint32Array]'] = true;
    tn['[object Arguments]'] = tn['[object Array]'] = tn['[object ArrayBuffer]'] = tn['[object Boolean]'] = tn['[object DataView]'] = tn['[object Date]'] = tn['[object Error]'] = tn['[object Function]'] = tn['[object Map]'] = tn['[object Number]'] = tn['[object Object]'] = tn['[object RegExp]'] = tn['[object Set]'] = tn['[object String]'] = tn['[object WeakMap]'] = false;
    function fW(t) {
        return qj(t) && Bj(t.length) && !!tn[Uj(t)];
    }
    var dW = fW;
    function pW(t) {
        return function (e) {
            return t(e);
        };
    }
    var $v = pW, o1 = { exports: {} };
    o1.exports;
    (function (t, e) {
        var n = M7, r = e && !e.nodeType && e, s = r && true && t && !t.nodeType && t, i = s && s.exports === r, o = i && n.process, a = (function () {
                try {
                    var l = s && s.require && s.require('util').types;
                    return l || o && o.binding && o.binding('util');
                } catch {
                }
            }());
        ;
    }(o1, o1.exports));
    var Lv = o1.exports, mW = dW, gW = $v, PT = Lv, RT = PT && PT.isTypedArray, _W = RT ? gW(RT) : mW, Z7 = _W;
    function yW(t, e) {
        if (!(e === 'constructor' && typeof t[e] == 'function') && e != '__proto__') {
            return t[e];
        }
    }
    var X7 = yW, vW = xv, bW = Bm, EW = Object.prototype, TW = EW.hasOwnProperty;
    function SW(t, e, n) {
        var r = t[e];
        (!(TW.call(t, e) && bW(r, n)) || n === void 0 && !(e in t)) && vW(t, e, n);
    }
    var Fv = SW, wW = Fv, OW = xv;
    function AW(t, e, n, r) {
        var s = !n;
        n || (n = {});
        for (var i = -1, o = e.length; ++i < o;) {
            var a = e[i], l = r ? r(n[a], t[a], a, n, t) : void 0;
            l === void 0 && (l = t[a]);
            s ? OW(n, a, l) : wW(n, a, l);
            ;
        }
        return n;
    }
    var Mf = AW;
    function CW(t, e) {
        for (var n = -1, r = Array(t); ++n < t;) {
            ;
        }
        return r;
    }
    var IW = CW;
    function xW(t, e) {
        var n = typeof t;
        return e = e ?? 9007199254740991, !!e && (n == 'number' || n != 'symbol' && /^(?:0|[1-9]\d*)$/.test(t)) && t > -1 && t % 1 == 0 && t < e;
    }
    var Uv = xW, PW = IW, RW = z7, MW = Aa, DW = Dv, $W = Uv, LW = Z7, FW = Object.prototype, UW = FW.hasOwnProperty;
    function BW(t, e) {
        var n = MW(t), r = !n && RW(t), s = !n && !r && DW(t), i = !n && !r && !s && LW(t), o = n || r || s || i, a = o ? PW(t.length, String) : [], l = a.length;
        for (var u in t)
            (e || UW.call(t, u)) && !(o && (u == 'length' || s && (u == 'offset' || u == 'parent') || i && (u == 'buffer' || u == 'byteLength' || u == 'byteOffset') || $W(u, l))) && a.push(u);
        return a;
    }
    var Q7 = BW;
    function qW(t) {
        var e = [];
        if (t != null) {
            for (var n in Object(t))
                e.push(n);
        }
        return e;
    }
    var VW = qW, GW = ni, jW = Mv, WW = VW, HW = Object.prototype, zW = HW.hasOwnProperty;
    function YW(t) {
        if (!GW(t)) {
            return WW(t);
        }
        var e = jW(t), n = [];
        for (var r in t)
            r == 'constructor' && (e || !zW.call(t, r)) || n.push(r);
        return n;
    }
    var KW = YW, ZW = Q7, XW = KW, QW = Hm;
    function JW(t) {
        return QW(t) ? ZW(t, true) : XW(t);
    }
    var Df = JW, eH = Mf, tH = Df;
    function nH(t) {
        return eH(t, tH(t));
    }
    var rH = nH, MT = B7, sH = q7, iH = V7, oH = G7, aH = W7, DT = z7, $T = Aa, cH = Aj, lH = Dv, uH = kv, hH = ni, fH = Fj, dH = Z7, LT = X7, pH = rH;
    function mH(t, e, n, r, s, i, o) {
        var a = LT(t, n), l = LT(e, n), u = o.get(l);
        if (u) {
            MT(t, n, u);
            return;
        }
        var f = i ? i(a, l, n + '', t, e, o) : void 0, d = f === void 0;
        if (d) {
            var p = $T(l), _ = !p && lH(l), v = !p && !_ && dH(l);
            f = l;
            p || _ || v ? $T(a) ? f = a : cH(a) ? f = oH(a) : _ ? (d = false, f = sH(l, true)) : v ? (d = false, f = iH(l, true)) : f = [] : fH(l) || DT(l) ? (f = a, DT(a) ? f = pH(a) : (!hH(a) || uH(a)) && (f = aH(l))) : d = false;
            ;
        }
        d && (o.set(l, f), s(f, l, r, i, o), o.delete(l));
        MT(t, n, f);
        ;
    }
    var gH = mH, _H = F7, yH = B7, vH = qG, bH = gH, EH = ni, TH = Df, SH = X7;
    function J7(t, e, n, r, s) {
        t !== e && vH(e, function (i, o) {
            if (s || (s = new _H()), EH(i)) {
                bH(t, e, o, n, J7, r, s);
            } else {
                var a = r ? r(SH(t, o), i, o + '', t, e, s) : void 0;
                a === void 0 && (a = i);
                yH(t, o, a);
                ;
            }
        }, TH);
    }
    var wH = J7;
    function OH(t) {
        return t;
    }
    var e9 = OH;
    function AH(t, e, n) {
        switch (n.length) {
        case 0:
            return t.call(e);
        case 1:
            return t.call(e, n[0]);
        case 2:
            return t.call(e, n[0], n[1]);
        case 3:
            return t.call(e, n[0], n[1], n[2]);
        }
        return t.apply(e, n);
    }
    var CH = AH, IH = CH, FT = Math.max;
    function kH(t, e, n) {
        return e = FT(e === void 0 ? t.length - 1 : e, 0), function () {
            for (var r = arguments, s = -1, i = FT(r.length - e, 0), o = Array(i); ++s < i;) {
                ;
            }
            s = -1;
            for (var a = Array(e + 1); ++s < e;) {
                ;
            }
            return a[e] = n(o), IH(t, this, a);
        };
    }
    var NH = kH;
    function xH(t) {
        return function () {
            return t;
        };
    }
    var PH = xH, RH = PH, UT = U7, MH = e9, DH = UT ? function (t, e) {
            return UT(t, 'toString', {
                configurable: true,
                enumerable: false,
                value: RH(e),
                writable: true
            });
        } : MH, $H = DH, UH = Date.now;
    function BH(t) {
        var e = 0, n = 0;
        return function () {
            var r = UH(), s = 16 - (r - n);
            if (n = r, s > 0) {
                if (++e >= 800) {
                    return arguments[0];
                }
            } else {
                e = 0;
            }
            return t.apply(void 0, arguments);
        };
    }
    var qH = BH, VH = $H, GH = qH, jH = GH(VH), WH = jH, HH = e9, zH = NH, YH = WH;
    function KH(t, e) {
        return YH(zH(t, e, HH), t + '');
    }
    var ZH = KH, XH = Bm, QH = Hm, JH = Uv, ez = ni;
    function tz(t, e, n) {
        if (!ez(n)) {
            return false;
        }
        var r = typeof e;
        return (r == 'number' ? QH(n) && JH(e, n.length) : r == 'string' && e in n) ? XH(n[e], t) : false;
    }
    var nz = tz, rz = ZH, sz = nz;
    function iz(t) {
        return rz(function (e, n) {
            var r = -1, s = n.length, i = s > 1 ? n[s - 1] : void 0, o = s > 2 ? n[2] : void 0;
            for (i = t.length > 3 && typeof i == 'function' ? (s--, i) : void 0, o && sz(n[0], n[1], o) && (i = s < 3 ? void 0 : i, s = 1), e = Object(e); ++r < s;) {
                var a = n[r];
                a && t(e, a, r, i);
            }
            return e;
        });
    }
    var oz = iz, az = wH, cz = oz, lz = cz(function (t, e, n) {
            az(t, e, n);
        }), uz = lz;
    const hz = vu(uz);
    class Cl {
        static set(e) {
            if (e && this.isSupported(e)) {
                this.locale = e;
                return;
            }
            this.locale = this.getPreferredDeviceLocale();
        }
        static getPreferredDeviceLocale() {
            const e = navigator.languages;
            for (let n = 0; n < e.length; n++) {
                if (this.isSupported(e[n])) {
                    return e[n];
                }
            }
            return this.supported[0];
        }
        static isSupported(e) {
            return Object.values(this.supported).includes(e);
        }
        static mergeMessages(...e) {
            return hz(e[0], ...e);
        }
    }
    Ae(Cl, 'locale');
    Ae(Cl, 'supported', [
        'en',
        'fr',
        'it',
        'de',
        'es',
        'es-XL',
        'pt-BR'
    ]);
    ;
    var jo;
    let Gs = (jo = class {
        static get serverUrl() {
            const e = this.getQueryParam('server') ?? this.getQueryParam('s');
            return !e || e === 'live' ? '127.0.0.1:8080' : e === 'local' ? 'https://localhost' : e.includes('localhost') ? e : `${ e }.jackboxgames.com`;
        }
        static get isCanvasSupported() {
            const e = document.createElement('canvas');
            return !!(e.getContext && e.getContext('2d'));
        }
        static isProduction() {
            return window.location.hostname === 'jackbox.tv';
        }
        static htmlUnescape(e) {
            return String(e).replace(/&quot;/gi, '"').replace(/&#39;/gi, '\'').replace(/&lt;/gi, '<').replace(/&gt;/gi, '>').replace(/&amp;/gi, '&');
        }
        static htmlEscape(e) {
            return String(e).replace(/&/g, '&amp;').replace(/"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
        }
        static sanitize(e) {
            const n = this.sanitizeInput(e).replace(/'/g, '\u2019');
            return this.htmlEscape(n).trim();
        }
        static sanitizeName(e) {
            return e.replace(/[^A-Z0-9\u00A1\u0020-\u002F\u00BF-\u00FF\u2026!?*$+\-'_ .,]/gi, '').replace(/'/g, '\u2019');
        }
        static sanitizeInput(e) {
            return e = e.replace('\u2026', '...'), e.replace(/[^\u00A1\u0020-\u007E\u00BF-\u00FF’]/gi, '');
        }
        static sanitizeEmoji(e) {
            return e.replace(/(\u00a9|\u00ae|[\u2000-\u2017]|[\u2020-\u3300]|\ud83c[\ud000-\udfff]|\ud83d[\ud000-\udfff]|\ud83e[\ud000-\udfff])/, '');
        }
        static safeText(e) {
            const n = document.createElement('div');
            return n.textContent = e, n.innerHTML;
        }
        static htmlTagsToBBCode(e, n) {
            if (!n.length) {
                throw new Error('[Utils.htmlTagsToBBCode] No tag pairs were passed in');
            }
            return n.reduce((r, s) => (r.replaceAll(`<${ s[0] }>`, `[${ s[1] }]`), r.replaceAll(`</${ s[0] }>`, `</${ s[1] }>`), r), e);
        }
        static hexToRgb(e) {
            const n = new ArrayBuffer(4);
            new DataView(n).setUint32(0, parseInt(e.replace('#', ''), 16), false);
            const s = new Uint8Array(n);
            return `${ s[1] },${ s[2] },${ s[3] }`;
        }
        static adjustColor(e, n) {
            let r = false, s = e;
            if (s[0] === '#') {
                s = s.slice(1);
                r = true;
            }
            const i = parseInt(s, 16), o = Math.min(Math.max(0, (i >> 16) * n), 255), a = Math.min(Math.max(0, (i >> 8 & 255) * n), 255);
            let u = (Math.min(Math.max(0, (i & 255) * n), 255) | a << 8 | o << 16).toString(16);
            for (; u.length < s.length;) {
                u = `0${ u }`;
            }
            return (r ? '#' : '') + u;
        }
        static isInTolerance(e, n, r) {
            return !(Math.abs(e.x - n.x) < r || Math.abs(e.y - n.y) > r);
        }
        static getDistanceBetweenPoints(e, n) {
            const r = [
                    e.x - n.x,
                    e.y - n.y
                ], s = Math.hypot(...r);
            return Math.round(s * 100) / 100;
        }
        static getMidpoint(e, n) {
            return {
                x: (e.x + n.x) / 2,
                y: (e.y + n.y) / 2
            };
        }
        static getAngleBetweenPoints(e, n) {
            let s = Math.atan2(n.y - e.y, n.x - e.x) * (180 / Math.PI);
            return s < 0 && (s += 360), 360 - s;
        }
        static getAngularDistance(e, n) {
            let r = (n - e) % 360;
            const s = r < 0 ? 1 : -1;
            return r = Math.abs(r), r > 180 ? s * (360 - r) : s * r;
        }
        static getVelocity(e, n, r, s) {
            return this.getDistanceBetweenPoints(e, r) / (s - n);
        }
        static isInsideElement(e, n) {
            const r = n.getBoundingClientRect();
            return !(e.x < r.left || e.x > r.left + r.width || e.y < r.top || e.y > r.top + r.height);
        }
        static cyrb128(e) {
            let n = 1779033703, r = 3144134277, s = 1013904242, i = 2773480762;
            for (let o = 0, a; o < e.length; o++) {
                a = e.charCodeAt(o);
                n = r ^ Math.imul(n ^ a, 597399067);
                r = s ^ Math.imul(r ^ a, 2869860233);
                s = i ^ Math.imul(s ^ a, 951274213);
                i = n ^ Math.imul(i ^ a, 2716044179);
                ;
            }
            return n = Math.imul(s ^ n >>> 18, 597399067), r = Math.imul(i ^ r >>> 22, 2869860233), s = Math.imul(n ^ s >>> 17, 951274213), i = Math.imul(r ^ i >>> 19, 2716044179), [
                (n ^ r ^ s ^ i) >>> 0,
                (r ^ n) >>> 0,
                (s ^ n) >>> 0,
                (i ^ n) >>> 0
            ];
        }
        static sfc32(e, n, r, s) {
            return function () {
                e >>>= 0;
                n >>>= 0;
                r >>>= 0;
                s >>>= 0;
                ;
                let o = e + n | 0;
                return e = n ^ n >>> 9, n = r + (r << 3) | 0, r = r << 21 | r >>> 11, s = s + 1 | 0, o = o + s | 0, r = r + o | 0, (o >>> 0) / 4294967296;
            };
        }
    }, Ae(jo, 'queryParams', new URLSearchParams(window.location.search)), Ae(jo, 'getQueryParam', e => jo.queryParams.get(e)), Ae(jo, 'sleep', e => new Promise(n => {
        window.setTimeout(n, e);
    })), jo);
    class Dn {
        static get namespace() {
            var e;
            return ((e = window.tv.storage) == null ? void 0 : e.namespace) ?? this.defaultNamespace;
        }
        static get isDisabled() {
            var e;
            return ((e = window.tv.storage) == null ? void 0 : e.isDisabled) ?? false;
        }
        static get tag() {
            var e;
            return (e = window.tv.storage) == null ? void 0 : e.tag;
        }
        static get code() {
            var e;
            return (e = window.tv.storage) == null ? void 0 : e.code;
        }
        static get isSupported() {
            if (this.isDisabled) {
                return false;
            }
            try {
                return window.localStorage ? (window.localStorage.setItem('support-check', '1'), window.localStorage.removeItem('support-check'), true) : false;
            } catch {
                return false;
            }
        }
        static setup(e, n) {
            delete window.tv.storage;
            window.tv.storage = {
                namespace: Gs.getQueryParam('namespace') ?? Gs.getQueryParam('ns') ?? this.defaultNamespace,
                isDisabled: Gs.queryParams.has('incognito') || Gs.queryParams.has('nc')
            };
            e && (window.tv.storage.tag = e);
            n && (window.tv.storage.code = n.toLowerCase(), this.clearCodeScopedKeys(window.tv.storage.code));
            ;
        }
        static get(e, n) {
            return this.isSupported ? window.localStorage.getItem(this.getScopedKey(e, n)) : null;
        }
        static set(e, n, r = 'none') {
            if (this.isSupported) {
                return window.localStorage.setItem(this.getScopedSetKey(e, r), n);
            }
        }
        static remove(e, n) {
            if (this.isSupported) {
                return window.localStorage.removeItem(this.getScopedKey(e, n));
            }
        }
        static setTag(e) {
            const n = e.toLowerCase(), r = this.get('tags') ?? '[]', s = n.split('-')[0];
            let i = JSON.parse(r);
            i = i.filter(o => {
                const a = o.split('-')[0];
                return s !== a;
            });
            i.push(n);
            this.set('tags', JSON.stringify(i));
            ;
        }
        static getScopedKey(e, n) {
            const r = `${ this.namespace }:${ e }`, s = this.tag ? `${ this.namespace }:${ e }:tag:${ this.tag }` : null, i = this.code ? `${ this.namespace }:${ e }:code:${ this.code }` : null;
            if (n === 'none') {
                return r;
            }
            if (n === 'tag') {
                if (!s) {
                    throw new Error('[Storage] requested "tag" scope but tv.storage.tag is undefined');
                }
                return s;
            }
            if (n === 'code') {
                if (!i) {
                    throw new Error('[Storage] requested "code" scope but tv.storage.code is undefined');
                }
                return i;
            }
            return i && window.localStorage.getItem(i) !== null ? i : s && window.localStorage.getItem(s) !== null ? s : r;
        }
        static getScopedSetKey(e, n = 'none') {
            if (n === 'tag') {
                if (!this.tag) {
                    throw new Error('[Storage] requested "room" scope but tv.storage.tag is undefined');
                }
                return `${ this.namespace }:${ e }:tag:${ this.tag }`;
            }
            if (n === 'code') {
                if (!this.code) {
                    throw new Error('[Storage] requested "code" scope but tv.storage.code is undefined');
                }
                return `${ this.namespace }:${ e }:code:${ this.code }`;
            }
            return `${ this.namespace }:${ e }`;
        }
        static clearCodeScopedKeys(e) {
            this.isSupported && Object.keys(window.localStorage).forEach(n => {
                const r = n.split(':code:');
                r.length <= 1 || r[1] !== e && window.localStorage.removeItem(n);
            });
        }
    }
    Ae(Dn, 'defaultNamespace', 'tv');
    class Sh {
        constructor() {
            Ae(this, 'artifacts');
            this.migrate();
            this.artifacts = this.list();
            ;
        }
        get hasUnviewed() {
            return this.artifacts.some(e => !e.isViewed);
        }
        getUrl(e, n) {
            return n.galleryId ? `/gallery/${ n.galleryId }/${ e.artifactId }` : e.isTest ? `http://games-test.jackbox.tv/artifact/${ e.categoryId }/${ e.artifactId }/` : `https://games.jackbox.tv/artifact/${ e.categoryId }/${ e.artifactId }/`;
        }
        getLocalArtifact(e) {
            const n = new Intl.DateTimeFormat(Cl.locale, {
                    year: 'numeric',
                    month: 'short',
                    day: 'numeric'
                }), r = r1(e.categoryId);
            if (!r) {
                throw new Error(`[Artifacts] Unknown game with categoryId ${ e.categoryId }`);
            }
            const s = new Date(e.time), i = n.format(s), o = this.getUrl(e, r);
            return {
                ...e,
                gameName: r.name ?? '',
                date: i,
                url: o
            };
        }
        list() {
            if (!Dn.isSupported) {
                return [];
            }
            const e = Date.now(), n = Dn.get('artifacts');
            if (!n) {
                return [];
            }
            try {
                return JSON.parse(n).filter(s => e - s.time < 31536000000).map(s => this.getLocalArtifact(s));
            } catch {
                return console.warn('[Artifacts] Unable to parse artifacts array'), [];
            }
        }
        persist() {
            const e = this.artifacts.map(n => ({
                artifactId: n.artifactId,
                categoryId: n.categoryId,
                isTest: n.isTest,
                isViewed: n.isViewed,
                time: n.time
            }));
            Dn.set('artfacts', JSON.stringify(e));
        }
        setAsViewed(e) {
            if (Dn.isSupported && this.artifacts[e]) {
                try {
                    this.artifacts[e].isViewed = true;
                    this.persist();
                    ;
                } catch {
                    console.warn(`[Artifacts] Unable to mark artifact ${ e } as viewed`);
                }
            }
        }
        add(e) {
            var r;
            if (!Dn.isSupported) {
                return;
            }
            const n = {
                categoryId: e.categoryId,
                artifactId: e.artifactId,
                isTest: ((r = e.rootId) == null ? void 0 : r.includes('test')) ?? false,
                time: new Date().getTime(),
                isViewed: false
            };
            this.artifacts.unshift(this.getLocalArtifact(n));
            this.persist();
            ;
        }
        remove(e) {
            if (Dn.isSupported) {
                try {
                    this.artifacts.splice(e, 1);
                    this.persist();
                    ;
                } catch {
                    console.warn('[Artifacts] Unable to remove artifact');
                }
            }
        }
        static setAsViewed(e) {
            new Sh().setAsViewed(e);
        }
        static add(e) {
            new Sh().add(e);
        }
        static remove(e) {
            new Sh().remove(e);
        }
        migrate() {
            const e = Dn.get('galleries');
            if (!e) {
                return;
            }
            const r = JSON.parse(e).map(s => {
                const i = s.url.split('/'), o = i[i.length - 2], a = s.url.includes('games-test');
                return {
                    categoryId: s.categoryId,
                    artifactId: o,
                    isTest: a,
                    time: s.time,
                    isViewed: s.viewed
                };
            });
            Dn.set('artifacts', JSON.stringify(r));
            Dn.remove('galleries');
            ;
        }
    }
    var b0 = { exports: {} };
    (function (t, e) {
        var n = typeof globalThis < 'u' && globalThis || typeof self < 'u' && self || typeof mn < 'u' && mn, r = (function () {
                function i() {
                    this.fetch = false;
                    this.DOMException = n.DOMException;
                    ;
                }
                return i.prototype = n, new i();
            }());
        (function (i) {
            (function (o) {
                var a = typeof i < 'u' && i || typeof self < 'u' && self || typeof a < 'u' && a, l = {
                        searchParams: 'URLSearchParams' in a,
                        iterable: 'Symbol' in a && 'iterator' in Symbol,
                        blob: 'FileReader' in a && 'Blob' in a && (function () {
                            try {
                                return new Blob(), true;
                            } catch {
                                return false;
                            }
                        }()),
                        formData: 'FormData' in a,
                        arrayBuffer: 'ArrayBuffer' in a
                    };
                function u(Y) {
                    return Y && DataView.prototype.isPrototypeOf(Y);
                }
                if (l.arrayBuffer) {
                    var f = [
                            '[object Int8Array]',
                            '[object Uint8Array]',
                            '[object Uint8ClampedArray]',
                            '[object Int16Array]',
                            '[object Uint16Array]',
                            '[object Int32Array]',
                            '[object Uint32Array]',
                            '[object Float32Array]',
                            '[object Float64Array]'
                        ], d = ArrayBuffer.isView || function (Y) {
                            return Y && f.indexOf(Object.prototype.toString.call(Y)) > -1;
                        };
                }
                function p(Y) {
                    if (typeof Y != 'string' && (Y = String(Y)), /[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(Y) || Y === '') {
                        throw new TypeError('Invalid character in header field name: "' + Y + '"');
                    }
                    return Y.toLowerCase();
                }
                function _(Y) {
                    return typeof Y != 'string' && (Y = String(Y)), Y;
                }
                function v(Y) {
                    var Q = {
                        next: function () {
                            var ue = Y.shift();
                            return {
                                done: ue === void 0,
                                value: ue
                            };
                        }
                    };
                    return l.iterable && (Q[Symbol.iterator] = function () {
                        return Q;
                    }), Q;
                }
                function y(Y) {
                    this.map = {};
                    Y instanceof y ? Y.forEach(function (Q, ue) {
                        this.append(ue, Q);
                    }, this) : Array.isArray(Y) ? Y.forEach(function (Q) {
                        this.append(Q[0], Q[1]);
                    }, this) : Y && Object.getOwnPropertyNames(Y).forEach(function (Q) {
                        this.append(Q, Y[Q]);
                    }, this);
                    ;
                }
                y.prototype.append = function (Y, Q) {
                    Y = p(Y);
                    Q = _(Q);
                    ;
                    var ue = this.map[Y];
                    this.map[Y] = ue ? ue + ', ' + Q : Q;
                };
                y.prototype.delete = function (Y) {
                    delete this.map[p(Y)];
                };
                y.prototype.get = function (Y) {
                    return Y = p(Y), this.has(Y) ? this.map[Y] : null;
                };
                y.prototype.has = function (Y) {
                    return this.map.hasOwnProperty(p(Y));
                };
                y.prototype.set = function (Y, Q) {
                    this.map[p(Y)] = _(Q);
                };
                y.prototype.forEach = function (Y, Q) {
                    for (var ue in this.map)
                        this.map.hasOwnProperty(ue) && Y.call(Q, this.map[ue], ue, this);
                };
                y.prototype.keys = function () {
                    var Y = [];
                    return this.forEach(function (Q, ue) {
                        Y.push(ue);
                    }), v(Y);
                };
                y.prototype.values = function () {
                    var Y = [];
                    return this.forEach(function (Q) {
                        Y.push(Q);
                    }), v(Y);
                };
                y.prototype.entries = function () {
                    var Y = [];
                    return this.forEach(function (Q, ue) {
                        Y.push([
                            ue,
                            Q
                        ]);
                    }), v(Y);
                };
                l.iterable && (y.prototype[Symbol.iterator] = y.prototype.entries);
                ;
                function g(Y) {
                    if (Y.bodyUsed) {
                        return Promise.reject(new TypeError('Already read'));
                    }
                    Y.bodyUsed = true;
                }
                function b(Y) {
                    return new Promise(function (Q, ue) {
                        Y.onload = function () {
                            Q(Y.result);
                        };
                        Y.onerror = function () {
                            ue(Y.error);
                        };
                        ;
                    });
                }
                function A(Y) {
                    var Q = new FileReader(), ue = b(Q);
                    return Q.readAsArrayBuffer(Y), ue;
                }
                function N(Y) {
                    var Q = new FileReader(), ue = b(Q);
                    return Q.readAsText(Y), ue;
                }
                function I(Y) {
                    for (var Q = new Uint8Array(Y), ue = new Array(Q.length), _e = 0; _e < Q.length; _e++) {
                        ue[_e] = String.fromCharCode(Q[_e]);
                    }
                    return ue.join('');
                }
                function O(Y) {
                    if (Y.slice) {
                        return Y.slice(0);
                    }
                    var Q = new Uint8Array(Y.byteLength);
                    return Q.set(new Uint8Array(Y)), Q.buffer;
                }
                function x() {
                    return this.bodyUsed = false, this._initBody = function (Y) {
                        this.bodyUsed = this.bodyUsed;
                        this._bodyInit = Y;
                        Y ? typeof Y == 'string' ? this._bodyText = Y : l.blob && Blob.prototype.isPrototypeOf(Y) ? this._bodyBlob = Y : l.formData && FormData.prototype.isPrototypeOf(Y) ? this._bodyFormData = Y : l.searchParams && URLSearchParams.prototype.isPrototypeOf(Y) ? this._bodyText = Y.toString() : l.arrayBuffer && l.blob && u(Y) ? (this._bodyArrayBuffer = O(Y.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer])) : l.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(Y) || d(Y)) ? this._bodyArrayBuffer = O(Y) : this._bodyText = Y = Object.prototype.toString.call(Y) : this._bodyText = '';
                        this.headers.get('content-type') || (typeof Y == 'string' ? this.headers.set('content-type', 'text/plain;charset=UTF-8') : this._bodyBlob && this._bodyBlob.type ? this.headers.set('content-type', this._bodyBlob.type) : l.searchParams && URLSearchParams.prototype.isPrototypeOf(Y) && this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8'));
                        ;
                    }, l.blob && (this.blob = function () {
                        var Y = g(this);
                        if (Y) {
                            return Y;
                        }
                        if (this._bodyBlob) {
                            return Promise.resolve(this._bodyBlob);
                        }
                        if (this._bodyArrayBuffer) {
                            return Promise.resolve(new Blob([this._bodyArrayBuffer]));
                        }
                        if (this._bodyFormData) {
                            throw new Error('could not read FormData body as blob');
                        }
                        return Promise.resolve(new Blob([this._bodyText]));
                    }, this.arrayBuffer = function () {
                        if (this._bodyArrayBuffer) {
                            var Y = g(this);
                            return Y || (ArrayBuffer.isView(this._bodyArrayBuffer) ? Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset, this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength)) : Promise.resolve(this._bodyArrayBuffer));
                        } else {
                            return this.blob().then(A);
                        }
                    }), this.text = function () {
                        var Y = g(this);
                        if (Y) {
                            return Y;
                        }
                        if (this._bodyBlob) {
                            return N(this._bodyBlob);
                        }
                        if (this._bodyArrayBuffer) {
                            return Promise.resolve(I(this._bodyArrayBuffer));
                        }
                        if (this._bodyFormData) {
                            throw new Error('could not read FormData body as text');
                        }
                        return Promise.resolve(this._bodyText);
                    }, l.formData && (this.formData = function () {
                        return this.text().then(ee);
                    }), this.json = function () {
                        return this.text().then(JSON.parse);
                    }, this;
                }
                var M = [
                    'DELETE',
                    'GET',
                    'HEAD',
                    'OPTIONS',
                    'POST',
                    'PUT'
                ];
                function L(Y) {
                    var Q = Y.toUpperCase();
                    return M.indexOf(Q) > -1 ? Q : Y;
                }
                function U(Y, Q) {
                    if (!(this instanceof U)) {
                        throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
                    }
                    Q = Q || {};
                    var ue = Q.body;
                    if (Y instanceof U) {
                        if (Y.bodyUsed) {
                            throw new TypeError('Already read');
                        }
                        this.url = Y.url;
                        this.credentials = Y.credentials;
                        Q.headers || (this.headers = new y(Y.headers));
                        this.method = Y.method;
                        this.mode = Y.mode;
                        this.signal = Y.signal;
                        !ue && Y._bodyInit != null && (ue = Y._bodyInit, Y.bodyUsed = true);
                        ;
                    } else {
                        this.url = String(Y);
                    }
                    if (this.credentials = Q.credentials || this.credentials || 'same-origin', (Q.headers || !this.headers) && (this.headers = new y(Q.headers)), this.method = L(Q.method || this.method || 'GET'), this.mode = Q.mode || this.mode || null, this.signal = Q.signal || this.signal, this.referrer = null, (this.method === 'GET' || this.method === 'HEAD') && ue) {
                        throw new TypeError('Body not allowed for GET or HEAD requests');
                    }
                    if (this._initBody(ue), (this.method === 'GET' || this.method === 'HEAD') && (Q.cache === 'no-store' || Q.cache === 'no-cache')) {
                        ;
                        if (/([?&])_=[^&]*/.test(this.url)) {
                            this.url = this.url.replace(/([?&])_=[^&]*/, '$1_=' + new Date().getTime());
                        } else {
                            ;
                            this.url += (/\?/.test(this.url) ? '&' : '?') + '_=' + new Date().getTime();
                        }
                    }
                }
                U.prototype.clone = function () {
                    return new U(this, { body: this._bodyInit });
                };
                function ee(Y) {
                    var Q = new FormData();
                    return Y.trim().split('&').forEach(function (ue) {
                        if (ue) {
                            var _e = ue.split('='), Oe = _e.shift().replace(/\+/g, ' '), be = _e.join('=').replace(/\+/g, ' ');
                            Q.append(decodeURIComponent(Oe), decodeURIComponent(be));
                        }
                    }), Q;
                }
                function ae(Y) {
                    var Q = new y(), ue = Y.replace(/\r?\n[\t ]+/g, ' ');
                    return ue.split('\r').map(function (_e) {
                        return _e.indexOf(`
`) === 0 ? _e.substr(1, _e.length) : _e;
                    }).forEach(function (_e) {
                        var Oe = _e.split(':'), be = Oe.shift().trim();
                        if (be) {
                            var Ce = Oe.join(':').trim();
                            Q.append(be, Ce);
                        }
                    }), Q;
                }
                x.call(U.prototype);
                function Z(Y, Q) {
                    if (!(this instanceof Z)) {
                        throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
                    }
                    Q || (Q = {});
                    this.type = 'default';
                    this.status = Q.status === void 0 ? 200 : Q.status;
                    this.ok = this.status >= 200 && this.status < 300;
                    this.statusText = Q.statusText === void 0 ? '' : '' + Q.statusText;
                    this.headers = new y(Q.headers);
                    this.url = Q.url || '';
                    this._initBody(Y);
                    ;
                }
                x.call(Z.prototype);
                Z.prototype.clone = function () {
                    return new Z(this._bodyInit, {
                        status: this.status,
                        statusText: this.statusText,
                        headers: new y(this.headers),
                        url: this.url
                    });
                };
                Z.error = function () {
                    var Y = new Z(null, {
                        status: 0,
                        statusText: ''
                    });
                    return Y.type = 'error', Y;
                };
                ;
                var fe = [
                    301,
                    302,
                    303,
                    307,
                    308
                ];
                Z.redirect = function (Y, Q) {
                    if (fe.indexOf(Q) === -1) {
                        throw new RangeError('Invalid status code');
                    }
                    return new Z(null, {
                        status: Q,
                        headers: { location: Y }
                    });
                };
                ;
                ;
                try {
                    new o.DOMException();
                } catch {
                    ;
                    o.DOMException.prototype = Object.create(Error.prototype);
                    o.DOMException.prototype.constructor = o.DOMException;
                    ;
                }
                function ge(Y, Q) {
                    return new Promise(function (ue, _e) {
                        var Oe = new U(Y, Q);
                        if (Oe.signal && Oe.signal.aborted) {
                            return _e(new o.DOMException('Aborted', 'AbortError'));
                        }
                        var be = new XMLHttpRequest();
                        function Ce() {
                            be.abort();
                        }
                        be.onload = function () {
                            var Fe = {
                                status: be.status,
                                statusText: be.statusText,
                                headers: ae(be.getAllResponseHeaders() || '')
                            };
                            Fe.url = 'responseURL' in be ? be.responseURL : Fe.headers.get('X-Request-URL');
                            var st = 'response' in be ? be.response : be.responseText;
                            setTimeout(function () {
                                ue(new Z(st, Fe));
                            }, 0);
                        };
                        be.onerror = function () {
                            setTimeout(function () {
                                _e(new TypeError('Network request failed'));
                            }, 0);
                        };
                        be.ontimeout = function () {
                            setTimeout(function () {
                                _e(new TypeError('Network request failed'));
                            }, 0);
                        };
                        be.onabort = function () {
                            setTimeout(function () {
                                _e(new o.DOMException('Aborted', 'AbortError'));
                            }, 0);
                        };
                        ;
                        function Me(Fe) {
                            try {
                                return Fe === '' && a.location.href ? a.location.href : Fe;
                            } catch {
                                return Fe;
                            }
                        }
                        be.open(Oe.method, Me(Oe.url), true);
                        Oe.credentials === 'include' ? be.withCredentials = true : Oe.credentials === 'omit' && (be.withCredentials = false);
                        'responseType' in be && (l.blob ? be.responseType = 'blob' : l.arrayBuffer && Oe.headers.get('Content-Type') && Oe.headers.get('Content-Type').indexOf('application/octet-stream') !== -1 && (be.responseType = 'arraybuffer'));
                        Q && typeof Q.headers == 'object' && !(Q.headers instanceof y) ? Object.getOwnPropertyNames(Q.headers).forEach(function (Fe) {
                            be.setRequestHeader(Fe, _(Q.headers[Fe]));
                        }) : Oe.headers.forEach(function (Fe, st) {
                            be.setRequestHeader(st, Fe);
                        });
                        Oe.signal && (Oe.signal.addEventListener('abort', Ce), be.onreadystatechange = function () {
                            be.readyState === 4 && Oe.signal.removeEventListener('abort', Ce);
                        });
                        be.send(typeof Oe._bodyInit > 'u' ? null : Oe._bodyInit);
                        ;
                    });
                }
                return ge.polyfill = true, a.fetch || (a.fetch = ge, a.Headers = y, a.Request = U, a.Response = Z), o.Headers = y, o.Request = U, o.Response = Z, o.fetch = ge, o;
            }({}));
        }(r));
        r.fetch.ponyfill = true;
        delete r.fetch.polyfill;
        ;
        var s = n.fetch ? n : r;
        e = s.fetch;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    }(b0, b0.exports));
    var fz = b0.exports, dz = function () {
            if (typeof Symbol != 'function' || typeof Object.getOwnPropertySymbols != 'function') {
                return false;
            }
            if (typeof Symbol.iterator == 'symbol') {
                return true;
            }
            var e = { n: 42 }, n = Symbol('test'), r = Object(n);
            if (typeof n == 'string' || Object.prototype.toString.call(n) !== '[object Symbol]' || Object.prototype.toString.call(r) !== '[object Symbol]') {
                return false;
            }
            ;
            ;
            for (n in e)
                return false;
            if (typeof Object.keys == 'function' && Object.keys(e).length !== 0 || typeof Object.getOwnPropertyNames == 'function' && Object.getOwnPropertyNames(e).length !== 0) {
                return false;
            }
            var i = Object.getOwnPropertySymbols(e);
            if (i.length !== 1 || i[0] !== n || !Object.prototype.propertyIsEnumerable.call(e, n)) {
                return false;
            }
            if (typeof Object.getOwnPropertyDescriptor == 'function') {
                var o = Object.getOwnPropertyDescriptor(e, n);
                if (o.value !== 42 || o.enumerable !== true) {
                    return false;
                }
            }
            return true;
        }, BT = typeof Symbol < 'u' && Symbol, pz = dz, mz = function () {
            return typeof BT != 'function' || typeof Symbol != 'function' || typeof BT('foo') != 'symbol' || typeof Symbol('bar') != 'symbol' ? false : pz();
        }, sy = Array.prototype.slice, _z = Object.prototype.toString, vz = function (e) {
            var n = this;
            if (typeof n != 'function' || _z.call(n) !== '[object Function]') {
                throw new TypeError('Function.prototype.bind called on incompatible ' + n);
            }
            for (var r = sy.call(arguments, 1), s, i = function () {
                        if (this instanceof s) {
                            var f = n.apply(this, r.concat(sy.call(arguments)));
                            return Object(f) === f ? f : this;
                        } else {
                            return n.apply(e, r.concat(sy.call(arguments)));
                        }
                    }, o = Math.max(0, n.length - r.length), a = [], l = 0; l < o; l++) {
                a.push('$' + l);
            }
            if (s = Function('binder', 'return function (' + a.join(',') + '){ return binder.apply(this,arguments); }')(i), n.prototype) {
                var u = function () {
                };
                ;
                ;
                ;
                ;
            }
            return s;
        }, bz = vz, Bv = Function.prototype.bind || bz, Ez = Bv, Tz = Ez.call(Function.call, Object.prototype.hasOwnProperty), kt, zl = SyntaxError, t9 = Function, Il = TypeError, iy = function (t) {
            try {
                return t9('"use strict"; return (' + t + ').constructor;')();
            } catch {
            }
        }, gc = Object.getOwnPropertyDescriptor;
    if (gc) {
        try {
            gc({}, '');
        } catch {
            gc = null;
        }
    }
    var oy = function () {
            throw new Il();
        }, Sz = gc ? (function () {
            try {
                return arguments.callee, oy;
            } catch {
                try {
                    return gc(arguments, 'callee').get;
                } catch {
                    return oy;
                }
            }
        }()) : oy, rl = mz(), Bo = Object.getPrototypeOf || function (t) {
            return t.__proto__;
        }, cl = {}, wz = typeof Uint8Array > 'u' ? kt : Bo(Uint8Array), kl = {
            '%AggregateError%': typeof AggregateError > 'u' ? kt : AggregateError,
            '%Array%': Array,
            '%ArrayBuffer%': typeof ArrayBuffer > 'u' ? kt : ArrayBuffer,
            '%ArrayIteratorPrototype%': rl ? Bo([][Symbol.iterator]()) : kt,
            '%AsyncFromSyncIteratorPrototype%': kt,
            '%AsyncFunction%': cl,
            '%AsyncGenerator%': cl,
            '%AsyncGeneratorFunction%': cl,
            '%AsyncIteratorPrototype%': cl,
            '%Atomics%': typeof Atomics > 'u' ? kt : Atomics,
            '%BigInt%': typeof BigInt > 'u' ? kt : BigInt,
            '%Boolean%': Boolean,
            '%DataView%': typeof DataView > 'u' ? kt : DataView,
            '%Date%': Date,
            '%decodeURI%': decodeURI,
            '%decodeURIComponent%': decodeURIComponent,
            '%encodeURI%': encodeURI,
            '%encodeURIComponent%': encodeURIComponent,
            '%Error%': Error,
            '%eval%': eval,
            '%EvalError%': EvalError,
            '%Float32Array%': typeof Float32Array > 'u' ? kt : Float32Array,
            '%Float64Array%': typeof Float64Array > 'u' ? kt : Float64Array,
            '%FinalizationRegistry%': typeof FinalizationRegistry > 'u' ? kt : FinalizationRegistry,
            '%Function%': t9,
            '%GeneratorFunction%': cl,
            '%Int8Array%': typeof Int8Array > 'u' ? kt : Int8Array,
            '%Int16Array%': typeof Int16Array > 'u' ? kt : Int16Array,
            '%Int32Array%': typeof Int32Array > 'u' ? kt : Int32Array,
            '%isFinite%': isFinite,
            '%isNaN%': isNaN,
            '%IteratorPrototype%': rl ? Bo(Bo([][Symbol.iterator]())) : kt,
            '%JSON%': typeof JSON == 'object' ? JSON : kt,
            '%Map%': typeof Map > 'u' ? kt : Map,
            '%MapIteratorPrototype%': typeof Map > 'u' || !rl ? kt : Bo(new Map()[Symbol.iterator]()),
            '%Math%': Math,
            '%Number%': Number,
            '%Object%': Object,
            '%parseFloat%': parseFloat,
            '%parseInt%': parseInt,
            '%Promise%': typeof Promise > 'u' ? kt : Promise,
            '%Proxy%': typeof Proxy > 'u' ? kt : Proxy,
            '%RangeError%': RangeError,
            '%ReferenceError%': ReferenceError,
            '%Reflect%': typeof Reflect > 'u' ? kt : Reflect,
            '%RegExp%': RegExp,
            '%Set%': typeof Set > 'u' ? kt : Set,
            '%SetIteratorPrototype%': typeof Set > 'u' || !rl ? kt : Bo(new Set()[Symbol.iterator]()),
            '%SharedArrayBuffer%': typeof SharedArrayBuffer > 'u' ? kt : SharedArrayBuffer,
            '%String%': String,
            '%StringIteratorPrototype%': rl ? Bo(''[Symbol.iterator]()) : kt,
            '%Symbol%': rl ? Symbol : kt,
            '%SyntaxError%': zl,
            '%ThrowTypeError%': Sz,
            '%TypedArray%': wz,
            '%TypeError%': Il,
            '%Uint8Array%': typeof Uint8Array > 'u' ? kt : Uint8Array,
            '%Uint8ClampedArray%': typeof Uint8ClampedArray > 'u' ? kt : Uint8ClampedArray,
            '%Uint16Array%': typeof Uint16Array > 'u' ? kt : Uint16Array,
            '%Uint32Array%': typeof Uint32Array > 'u' ? kt : Uint32Array,
            '%URIError%': URIError,
            '%WeakMap%': typeof WeakMap > 'u' ? kt : WeakMap,
            '%WeakRef%': typeof WeakRef > 'u' ? kt : WeakRef,
            '%WeakSet%': typeof WeakSet > 'u' ? kt : WeakSet
        }, Oz = function t(e) {
            var n;
            if (e === '%AsyncFunction%') {
                n = iy('async function () {}');
            } else {
                if (e === '%GeneratorFunction%') {
                    n = iy('function* () {}');
                } else {
                    if (e === '%AsyncGeneratorFunction%') {
                        n = iy('async function* () {}');
                    } else {
                        if (e === '%AsyncGenerator%') {
                            var r = t('%AsyncGeneratorFunction%');
                            r && (n = r.prototype);
                        } else {
                            if (e === '%AsyncIteratorPrototype%') {
                                var s = t('%AsyncGenerator%');
                                s && (n = Bo(s.prototype));
                            }
                        }
                    }
                }
            }
            return kl[e] = n, n;
        }, qT = {
            '%ArrayBufferPrototype%': [
                'ArrayBuffer',
                'prototype'
            ],
            '%ArrayPrototype%': [
                'Array',
                'prototype'
            ],
            '%ArrayProto_entries%': [
                'Array',
                'prototype',
                'entries'
            ],
            '%ArrayProto_forEach%': [
                'Array',
                'prototype',
                'forEach'
            ],
            '%ArrayProto_keys%': [
                'Array',
                'prototype',
                'keys'
            ],
            '%ArrayProto_values%': [
                'Array',
                'prototype',
                'values'
            ],
            '%AsyncFunctionPrototype%': [
                'AsyncFunction',
                'prototype'
            ],
            '%AsyncGenerator%': [
                'AsyncGeneratorFunction',
                'prototype'
            ],
            '%AsyncGeneratorPrototype%': [
                'AsyncGeneratorFunction',
                'prototype',
                'prototype'
            ],
            '%BooleanPrototype%': [
                'Boolean',
                'prototype'
            ],
            '%DataViewPrototype%': [
                'DataView',
                'prototype'
            ],
            '%DatePrototype%': [
                'Date',
                'prototype'
            ],
            '%ErrorPrototype%': [
                'Error',
                'prototype'
            ],
            '%EvalErrorPrototype%': [
                'EvalError',
                'prototype'
            ],
            '%Float32ArrayPrototype%': [
                'Float32Array',
                'prototype'
            ],
            '%Float64ArrayPrototype%': [
                'Float64Array',
                'prototype'
            ],
            '%FunctionPrototype%': [
                'Function',
                'prototype'
            ],
            '%Generator%': [
                'GeneratorFunction',
                'prototype'
            ],
            '%GeneratorPrototype%': [
                'GeneratorFunction',
                'prototype',
                'prototype'
            ],
            '%Int8ArrayPrototype%': [
                'Int8Array',
                'prototype'
            ],
            '%Int16ArrayPrototype%': [
                'Int16Array',
                'prototype'
            ],
            '%Int32ArrayPrototype%': [
                'Int32Array',
                'prototype'
            ],
            '%JSONParse%': [
                'JSON',
                'parse'
            ],
            '%JSONStringify%': [
                'JSON',
                'stringify'
            ],
            '%MapPrototype%': [
                'Map',
                'prototype'
            ],
            '%NumberPrototype%': [
                'Number',
                'prototype'
            ],
            '%ObjectPrototype%': [
                'Object',
                'prototype'
            ],
            '%ObjProto_toString%': [
                'Object',
                'prototype',
                'toString'
            ],
            '%ObjProto_valueOf%': [
                'Object',
                'prototype',
                'valueOf'
            ],
            '%PromisePrototype%': [
                'Promise',
                'prototype'
            ],
            '%PromiseProto_then%': [
                'Promise',
                'prototype',
                'then'
            ],
            '%Promise_all%': [
                'Promise',
                'all'
            ],
            '%Promise_reject%': [
                'Promise',
                'reject'
            ],
            '%Promise_resolve%': [
                'Promise',
                'resolve'
            ],
            '%RangeErrorPrototype%': [
                'RangeError',
                'prototype'
            ],
            '%ReferenceErrorPrototype%': [
                'ReferenceError',
                'prototype'
            ],
            '%RegExpPrototype%': [
                'RegExp',
                'prototype'
            ],
            '%SetPrototype%': [
                'Set',
                'prototype'
            ],
            '%SharedArrayBufferPrototype%': [
                'SharedArrayBuffer',
                'prototype'
            ],
            '%StringPrototype%': [
                'String',
                'prototype'
            ],
            '%SymbolPrototype%': [
                'Symbol',
                'prototype'
            ],
            '%SyntaxErrorPrototype%': [
                'SyntaxError',
                'prototype'
            ],
            '%TypedArrayPrototype%': [
                'TypedArray',
                'prototype'
            ],
            '%TypeErrorPrototype%': [
                'TypeError',
                'prototype'
            ],
            '%Uint8ArrayPrototype%': [
                'Uint8Array',
                'prototype'
            ],
            '%Uint8ClampedArrayPrototype%': [
                'Uint8ClampedArray',
                'prototype'
            ],
            '%Uint16ArrayPrototype%': [
                'Uint16Array',
                'prototype'
            ],
            '%Uint32ArrayPrototype%': [
                'Uint32Array',
                'prototype'
            ],
            '%URIErrorPrototype%': [
                'URIError',
                'prototype'
            ],
            '%WeakMapPrototype%': [
                'WeakMap',
                'prototype'
            ],
            '%WeakSetPrototype%': [
                'WeakSet',
                'prototype'
            ]
        }, $f = Bv, a1 = Tz, Az = $f.call(Function.call, Array.prototype.concat), Cz = $f.call(Function.apply, Array.prototype.splice), VT = $f.call(Function.call, String.prototype.replace), c1 = $f.call(Function.call, String.prototype.slice), Iz = $f.call(Function.call, RegExp.prototype.exec), xz = function (e) {
            var n = c1(e, 0, 1), r = c1(e, -1);
            if (n === '%' && r !== '%') {
                throw new zl('invalid intrinsic syntax, expected closing `%`');
            }
            if (r === '%' && n !== '%') {
                throw new zl('invalid intrinsic syntax, expected opening `%`');
            }
            var s = [];
            return VT(e, /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, function (i, o, a, l) {
                s[s.length] = a ? VT(l, /\\(\\)?/g, '$1') : o || i;
            }), s;
        }, Pz = function (e, n) {
            var r = e, s;
            if (a1(qT, r) && (s = qT[r], r = '%' + s[0] + '%'), a1(kl, r)) {
                var i = kl[r];
                if (i === cl && (i = Oz(r)), typeof i > 'u' && !n) {
                    throw new Il('intrinsic ' + e + ' exists, but is not available. Please file an issue!');
                }
                return {
                    alias: s,
                    name: r,
                    value: i
                };
            }
            throw new zl('intrinsic ' + e + ' does not exist!');
        }, qv = function (e, n) {
            if (typeof e != 'string' || e.length === 0) {
                throw new Il('intrinsic name must be a non-empty string');
            }
            if (arguments.length > 1 && typeof n != 'boolean') {
                throw new Il('"allowMissing" argument must be a boolean');
            }
            if (Iz(/^%?[^%]*%?$/g, e) === null) {
                throw new zl('`%` may not be present anywhere but at the beginning and end of the intrinsic name');
            }
            var r = xz(e), s = r.length > 0 ? r[0] : '', i = Pz('%' + s + '%', n), o = i.name, a = i.value, l = false, u = i.alias;
            u && (s = u[0], Cz(r, Az([
                0,
                1
            ], u)));
            for (var f = 1, d = true; f < r.length; f += 1) {
                var p = r[f], _ = c1(p, 0, 1), v = c1(p, -1);
                if ((_ === '"' || _ === '\'' || _ === '`' || v === '"' || v === '\'' || v === '`') && _ !== v) {
                    throw new zl('property names with quotes must have matching quotes');
                }
                if ((p === 'constructor' || !d) && (l = true), s += '.' + p, o = '%' + s + '%', a1(kl, o)) {
                    a = kl[o];
                } else {
                    if (a != null) {
                        if (!(p in a)) {
                            if (!n) {
                                throw new Il('base intrinsic for ' + e + ' exists, but the property is not available.');
                            }
                            return;
                        }
                        if (gc && f + 1 >= r.length) {
                            var y = gc(a, p);
                            d = !!y;
                            d && 'get' in y && !('originalValue' in y.get) ? a = y.get : a = a[p];
                            ;
                        } else {
                            d = a1(a, p);
                            a = a[p];
                            ;
                        }
                        d && !l && (kl[o] = a);
                    }
                }
            }
            return a;
        }, n9 = { exports: {} };
    (function (t) {
        var e = Bv, n = qv, r = n('%Function.prototype.apply%'), s = n('%Function.prototype.call%'), i = n('%Reflect.apply%', true) || e.call(s, r), o = n('%Object.getOwnPropertyDescriptor%', true), a = n('%Object.defineProperty%', true), l = n('%Math.max%');
        if (a) {
            try {
                a({}, 'a', { value: 1 });
            } catch {
                a = null;
            }
        }
        ;
        var u = function () {
            return i(e, r, arguments);
        };
        a ? a(t.exports, 'apply', { value: u }) : t.exports.apply = u;
    }(n9));
    var Rz = n9.exports, r9 = qv, s9 = Rz, Mz = s9(r9('String.prototype.indexOf')), Dz = function (e, n) {
            var r = r9(e, !!n);
            return typeof r == 'function' && Mz(e, '.prototype.') > -1 ? s9(r) : r;
        };
    const $z = {}, Lz = Object.freeze(Object.defineProperty({
            __proto__: null,
            default: $z
        }, Symbol.toStringTag, { value: 'Module' })), Fz = pB(Lz);
    var Vv = typeof Map == 'function' && Map.prototype, ay = Object.getOwnPropertyDescriptor && Vv ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null, l1 = Vv && ay && typeof ay.get == 'function' ? ay.get : null, Uz = Vv && Map.prototype.forEach, Gv = typeof Set == 'function' && Set.prototype, cy = Object.getOwnPropertyDescriptor && Gv ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null, u1 = Gv && cy && typeof cy.get == 'function' ? cy.get : null, Bz = Gv && Set.prototype.forEach, qz = typeof WeakMap == 'function' && WeakMap.prototype, wh = qz ? WeakMap.prototype.has : null, Vz = typeof WeakSet == 'function' && WeakSet.prototype, Oh = Vz ? WeakSet.prototype.has : null, Gz = typeof WeakRef == 'function' && WeakRef.prototype, GT = Gz ? WeakRef.prototype.deref : null, jz = Boolean.prototype.valueOf, Wz = Object.prototype.toString, Hz = Function.prototype.toString, zz = String.prototype.match, jv = String.prototype.slice, Ho = String.prototype.replace, Yz = String.prototype.toUpperCase, jT = String.prototype.toLowerCase, i9 = RegExp.prototype.test, WT = Array.prototype.concat, yi = Array.prototype.join, Kz = Array.prototype.slice, HT = Math.floor, E0 = typeof BigInt == 'function' ? BigInt.prototype.valueOf : null, ly = Object.getOwnPropertySymbols, T0 = typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol' ? Symbol.prototype.toString : null, Yl = typeof Symbol == 'function' && typeof Symbol.iterator == 'object', fr = typeof Symbol == 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === Yl || 'symbol') ? Symbol.toStringTag : null, o9 = Object.prototype.propertyIsEnumerable, zT = (typeof Reflect == 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || ([].__proto__ === Array.prototype ? function (t) {
            return t.__proto__;
        } : null);
    function YT(t, e) {
        if (t === 1e+400 || t === -1e+400 || t !== t || t && t > -1000 && t < 1000 || i9.call(/e/, e)) {
            return e;
        }
        ;
        if (typeof t == 'number') {
            var r = t < 0 ? -HT(-t) : HT(t);
            if (r !== t) {
                var s = String(r), i = jv.call(e, s.length + 1);
                return Ho.call(s, /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g, '$&_') + '.' + Ho.call(Ho.call(i, /([0-9]{3})/g, '$&_'), /_$/, '');
            }
        }
        return Ho.call(e, /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g, '$&_');
    }
    var S0 = Fz, KT = S0.custom, ZT = c9(KT) ? KT : null, Zz = function t(e, n, r, s) {
            var i = n || {};
            if (qo(i, 'quoteStyle') && i.quoteStyle !== 'single' && i.quoteStyle !== 'double') {
                throw new TypeError('option "quoteStyle" must be "single" or "double"');
            }
            if (qo(i, 'maxStringLength') && (typeof i.maxStringLength == 'number' ? i.maxStringLength < 0 && i.maxStringLength !== 1e+400 : i.maxStringLength !== null)) {
                throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
            }
            var o = qo(i, 'customInspect') ? i.customInspect : true;
            if (typeof o != 'boolean' && o !== 'symbol') {
                throw new TypeError('option "customInspect", if provided, must be `true`, `false`, or `\'symbol\'`');
            }
            if (qo(i, 'indent') && i.indent !== null && i.indent !== '\t' && !(parseInt(i.indent, 10) === i.indent && i.indent > 0)) {
                throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');
            }
            if (qo(i, 'numericSeparator') && typeof i.numericSeparator != 'boolean') {
                throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');
            }
            var a = i.numericSeparator;
            if (typeof e > 'u') {
                return 'undefined';
            }
            if (e === null) {
                return 'null';
            }
            if (typeof e == 'boolean') {
                return e ? 'true' : 'false';
            }
            if (typeof e == 'string') {
                return u9(e, i);
            }
            if (typeof e == 'number') {
                if (e === 0) {
                    return null / e > 0 ? '0' : '-0';
                }
                var l = String(e);
                return a ? YT(e, l) : l;
            }
            if (typeof e == 'bigint') {
                var u = String(e) + 'n';
                return a ? YT(e, u) : u;
            }
            var f = typeof i.depth > 'u' ? 5 : i.depth;
            if (typeof r > 'u' && (r = 0), r >= f && f > 0 && typeof e == 'object') {
                return w0(e) ? '[Array]' : '[Object]';
            }
            var d = pY(i, r);
            if (typeof s > 'u') {
                s = [];
            } else {
                if (l9(s, e) >= 0) {
                    return '[Circular]';
                }
            }
            function p(fe, ge, Y) {
                if (ge && (s = Kz.call(s), s.push(ge)), Y) {
                    var Q = { depth: i.depth };
                    return qo(i, 'quoteStyle') && (Q.quoteStyle = i.quoteStyle), t(fe, Q, r + 1, s);
                }
                return t(fe, i, r + 1, s);
            }
            if (typeof e == 'function' && !XT(e)) {
                var _ = iY(e), v = rp(e, p);
                return '[Function' + (_ ? ': ' + _ : ' (anonymous)') + ']' + (v.length > 0 ? ' { ' + yi.call(v, ', ') + ' }' : '');
            }
            if (c9(e)) {
                var y = Yl ? Ho.call(String(e), /^(Symbol\(.*\))_[^)]*$/, '$1') : T0.call(e);
                return typeof e == 'object' && !Yl ? sh(y) : y;
            }
            if (hY(e)) {
                for (var g = '<' + jT.call(String(e.nodeName)), b = e.attributes || [], A = 0; A < b.length; A++) {
                    g += ' ' + b[A].name + '=' + a9(Xz(b[A].value), 'double', i);
                }
                return g += '>', e.childNodes && e.childNodes.length && (g += '...'), g += '</' + jT.call(String(e.nodeName)) + '>', g;
            }
            if (w0(e)) {
                if (e.length === 0) {
                    return '[]';
                }
                var N = rp(e, p);
                return d && !dY(N) ? '[' + O0(N, d) + ']' : '[ ' + yi.call(N, ', ') + ' ]';
            }
            if (Jz(e)) {
                var I = rp(e, p);
                return !('cause' in Error.prototype) && 'cause' in e && !o9.call(e, 'cause') ? '{ [' + String(e) + '] ' + yi.call(WT.call('[cause]: ' + p(e.cause), I), ', ') + ' }' : I.length === 0 ? '[' + String(e) + ']' : '{ [' + String(e) + '] ' + yi.call(I, ', ') + ' }';
            }
            if (typeof e == 'object' && o) {
                if (ZT && typeof e[ZT] == 'function' && S0) {
                    return S0(e, { depth: f - r });
                }
                if (o !== 'symbol' && typeof e.inspect == 'function') {
                    return e.inspect();
                }
            }
            if (oY(e)) {
                var O = [];
                return Uz.call(e, function (fe, ge) {
                    O.push(p(ge, e, true) + ' => ' + p(fe, e));
                }), QT('Map', l1.call(e), O, d);
            }
            if (lY(e)) {
                var x = [];
                return Bz.call(e, function (fe) {
                    x.push(p(fe, e));
                }), QT('Set', u1.call(e), x, d);
            }
            if (aY(e)) {
                return uy('WeakMap');
            }
            if (uY(e)) {
                return uy('WeakSet');
            }
            if (cY(e)) {
                return uy('WeakRef');
            }
            if (tY(e)) {
                return sh(p(Number(e)));
            }
            if (rY(e)) {
                return sh(p(E0.call(e)));
            }
            if (nY(e)) {
                return sh(jz.call(e));
            }
            if (eY(e)) {
                return sh(p(String(e)));
            }
            if (!Qz(e) && !XT(e)) {
                var M = rp(e, p), L = zT ? zT(e) === Object.prototype : e instanceof Object || e.constructor === Object, U = e instanceof Object ? '' : 'null prototype', ee = !L && fr && Object(e) === e && fr in e ? jv.call(Ca(e), 8, -1) : U ? 'Object' : '', ae = L || typeof e.constructor != 'function' ? '' : e.constructor.name ? e.constructor.name + ' ' : '', Z = ae + (ee || U ? '[' + yi.call(WT.call([], ee || [], U || []), ': ') + '] ' : '');
                return M.length === 0 ? Z + '{}' : d ? Z + '{' + O0(M, d) + '}' : Z + '{ ' + yi.call(M, ', ') + ' }';
            }
            return String(e);
        };
    function a9(t, e, n) {
        var r = (n.quoteStyle || e) === 'double' ? '"' : '\'';
        return r + t + r;
    }
    function Xz(t) {
        return Ho.call(String(t), /"/g, '&quot;');
    }
    function w0(t) {
        return Ca(t) === '[object Array]' && (!fr || !(typeof t == 'object' && fr in t));
    }
    function Qz(t) {
        return Ca(t) === '[object Date]' && (!fr || !(typeof t == 'object' && fr in t));
    }
    function XT(t) {
        return Ca(t) === '[object RegExp]' && (!fr || !(typeof t == 'object' && fr in t));
    }
    function Jz(t) {
        return Ca(t) === '[object Error]' && (!fr || !(typeof t == 'object' && fr in t));
    }
    function eY(t) {
        return Ca(t) === '[object String]' && (!fr || !(typeof t == 'object' && fr in t));
    }
    function tY(t) {
        return Ca(t) === '[object Number]' && (!fr || !(typeof t == 'object' && fr in t));
    }
    function nY(t) {
        return Ca(t) === '[object Boolean]' && (!fr || !(typeof t == 'object' && fr in t));
    }
    function c9(t) {
        if (Yl) {
            return t && typeof t == 'object' && t instanceof Symbol;
        }
        if (typeof t == 'symbol') {
            return true;
        }
        if (!t || typeof t != 'object' || !T0) {
            return false;
        }
        try {
            return T0.call(t), true;
        } catch {
        }
        return false;
    }
    function rY(t) {
        if (!t || typeof t != 'object' || !E0) {
            return false;
        }
        try {
            return E0.call(t), true;
        } catch {
        }
        return false;
    }
    var sY = Object.prototype.hasOwnProperty || function (t) {
        return t in this;
    };
    function qo(t, e) {
        return sY.call(t, e);
    }
    function Ca(t) {
        return Wz.call(t);
    }
    function iY(t) {
        if (t.name) {
            return t.name;
        }
        var e = zz.call(Hz.call(t), /^function\s*([\w$]+)/);
        return e ? e[1] : null;
    }
    function l9(t, e) {
        if (t.indexOf) {
            return t.indexOf(e);
        }
        for (var n = 0, r = t.length; n < r; n++) {
            if (t[n] === e) {
                return n;
            }
        }
        return -1;
    }
    function oY(t) {
        if (!l1 || !t || typeof t != 'object') {
            return false;
        }
        try {
            l1.call(t);
            try {
                u1.call(t);
            } catch {
                return true;
            }
            return t instanceof Map;
        } catch {
        }
        return false;
    }
    function aY(t) {
        if (!wh || !t || typeof t != 'object') {
            return false;
        }
        try {
            wh.call(t, wh);
            try {
                Oh.call(t, Oh);
            } catch {
                return true;
            }
            return t instanceof WeakMap;
        } catch {
        }
        return false;
    }
    function cY(t) {
        if (!GT || !t || typeof t != 'object') {
            return false;
        }
        try {
            return GT.call(t), true;
        } catch {
        }
        return false;
    }
    function lY(t) {
        if (!u1 || !t || typeof t != 'object') {
            return false;
        }
        try {
            u1.call(t);
            try {
                l1.call(t);
            } catch {
                return true;
            }
            return t instanceof Set;
        } catch {
        }
        return false;
    }
    function uY(t) {
        if (!Oh || !t || typeof t != 'object') {
            return false;
        }
        try {
            Oh.call(t, Oh);
            try {
                wh.call(t, wh);
            } catch {
                return true;
            }
            return t instanceof WeakSet;
        } catch {
        }
        return false;
    }
    function hY(t) {
        return !t || typeof t != 'object' ? false : typeof HTMLElement < 'u' && t instanceof HTMLElement ? true : typeof t.nodeName == 'string' && typeof t.getAttribute == 'function';
    }
    function u9(t, e) {
        if (t.length > e.maxStringLength) {
            var n = t.length - e.maxStringLength, r = '... ' + n + ' more character' + (n > 1 ? 's' : '');
            return u9(jv.call(t, 0, e.maxStringLength), e) + r;
        }
        var s = Ho.call(Ho.call(t, /(['\\])/g, '\\$1'), /[\x00-\x1f]/g, fY);
        return a9(s, 'single', e);
    }
    function fY(t) {
        var e = t.charCodeAt(0), n = {
                8: 'b',
                9: 't',
                10: 'n',
                12: 'f',
                13: 'r'
            }[e];
        return n ? '\\' + n : '\\x' + (e < 16 ? '0' : '') + Yz.call(e.toString(16));
    }
    function sh(t) {
        return 'Object(' + t + ')';
    }
    function uy(t) {
        return t + ' { ? }';
    }
    function QT(t, e, n, r) {
        var s = r ? O0(n, r) : yi.call(n, ', ');
        return t + ' (' + e + ') {' + s + '}';
    }
    function dY(t) {
        for (var e = 0; e < t.length; e++) {
            if (l9(t[e], `
`) >= 0) {
                return false;
            }
        }
        return true;
    }
    function pY(t, e) {
        var n;
        if (t.indent === '\t') {
            n = '\t';
        } else {
            if (typeof t.indent == 'number' && t.indent > 0) {
                n = yi.call(Array(t.indent + 1), ' ');
            } else {
                return null;
            }
        }
        return {
            base: n,
            prev: yi.call(Array(e + 1), n)
        };
    }
    function O0(t, e) {
        if (t.length === 0) {
            return '';
        }
        var n = `
` + e.prev + e.base;
        return n + yi.call(t, ',' + n) + `
` + e.prev;
    }
    function rp(t, e) {
        var n = w0(t), r = [];
        if (n) {
            ;
            for (var s = 0; s < t.length; s++) {
                ;
            }
        }
        var i = typeof ly == 'function' ? ly(t) : [], o;
        if (Yl) {
            o = {};
            for (var a = 0; a < i.length; a++) {
                o['$' + i[a]] = i[a];
            }
        }
        for (var l in t)
            qo(t, l) && (n && String(Number(l)) === l && l < t.length || Yl && o['$' + l] instanceof Symbol || (i9.call(/[^\w$]/, l) ? r.push(e(l, t) + ': ' + e(t[l], t)) : r.push(l + ': ' + e(t[l], t))));
        if (typeof ly == 'function') {
            for (var u = 0; u < i.length; u++) {
                o9.call(t, i[u]) && r.push('[' + e(i[u]) + ']: ' + e(t[i[u]], t));
            }
        }
        return r;
    }
    var Wv = qv, Au = Dz, mY = Zz, gY = Wv('%TypeError%'), sp = Wv('%WeakMap%', true), ip = Wv('%Map%', true), _Y = Au('WeakMap.prototype.get', true), yY = Au('WeakMap.prototype.set', true), vY = Au('WeakMap.prototype.has', true), bY = Au('Map.prototype.get', true), EY = Au('Map.prototype.set', true), TY = Au('Map.prototype.has', true), Hv = function (t, e) {
            for (var n = t, r; (r = n.next) !== null; n = r) {
                if (r.key === e) {
                    return n.next = r.next, r.next = t.next, t.next = r, r;
                }
            }
        }, SY = function (t, e) {
            var n = Hv(t, e);
            return n && n.value;
        }, wY = function (t, e, n) {
            var r = Hv(t, e);
            r ? r.value = n : t.next = {
                key: e,
                next: t.next,
                value: n
            };
        }, OY = function (t, e) {
            return !!Hv(t, e);
        }, AY = function () {
            var e, n, r, s = {
                    assert: function (i) {
                        if (!s.has(i)) {
                            throw new gY('Side channel does not contain ' + mY(i));
                        }
                    },
                    get: function (i) {
                        if (sp && i && (typeof i == 'object' || typeof i == 'function')) {
                            if (e) {
                                return _Y(e, i);
                            }
                        } else {
                            if (ip) {
                                if (n) {
                                    return bY(n, i);
                                }
                            } else {
                                if (r) {
                                    return SY(r, i);
                                }
                            }
                        }
                    },
                    has: function (i) {
                        if (sp && i && (typeof i == 'object' || typeof i == 'function')) {
                            if (e) {
                                return vY(e, i);
                            }
                        } else {
                            if (ip) {
                                if (n) {
                                    return TY(n, i);
                                }
                            } else {
                                if (r) {
                                    return OY(r, i);
                                }
                            }
                        }
                        return false;
                    },
                    set: function (i, o) {
                        sp && i && (typeof i == 'object' || typeof i == 'function') ? (e || (e = new sp()), yY(e, i, o)) : ip ? (n || (n = new ip()), EY(n, i, o)) : (r || (r = {
                            key: {},
                            next: null
                        }), wY(r, i, o));
                    }
                };
            return s;
        }, CY = String.prototype.replace, zv = {
            default: 'RFC3986',
            formatters: {
                RFC1738: function (t) {
                    return CY.call(t, /%20/g, '+');
                },
                RFC3986: function (t) {
                    return String(t);
                }
            },
            RFC1738: 'RFC1738',
            RFC3986: 'RFC3986'
        }, kY = zv, fy = Object.prototype.hasOwnProperty, ic = Array.isArray, hi = (function () {
            for (var t = [], e = 0; e < 256; ++e) {
                t.push('%' + ((e < 16 ? '0' : '') + e.toString(16)).toUpperCase());
            }
            return t;
        }()), NY = function (e) {
            for (; e.length > 1;) {
                var n = e.pop(), r = n.obj[n.prop];
                if (ic(r)) {
                    for (var s = [], i = 0; i < r.length; ++i) {
                        typeof r[i] < 'u' && s.push(r[i]);
                    }
                    n.obj[n.prop] = s;
                }
            }
        }, h9 = function (e, n) {
            for (var r = n && n.plainObjects ? Object.create(null) : {}, s = 0; s < e.length; ++s) {
                typeof e[s] < 'u' && (r[s] = e[s]);
            }
            return r;
        }, xY = function t(e, n, r) {
            if (!n) {
                return e;
            }
            if (typeof n != 'object') {
                if (ic(e)) {
                    e.push(n);
                } else {
                    if (e && typeof e == 'object') {
                        (r && (r.plainObjects || r.allowPrototypes) || !fy.call(Object.prototype, n)) && (e[n] = true);
                    } else {
                        return [
                            e,
                            n
                        ];
                    }
                }
                return e;
            }
            if (!e || typeof e != 'object') {
                return [e].concat(n);
            }
            var s = e;
            return ic(e) && !ic(n) && (s = h9(e, r)), ic(e) && ic(n) ? (n.forEach(function (i, o) {
                if (fy.call(e, o)) {
                    var a = e[o];
                    a && typeof a == 'object' && i && typeof i == 'object' ? e[o] = t(a, i, r) : e.push(i);
                } else {
                    ;
                }
            }), e) : Object.keys(n).reduce(function (i, o) {
                var a = n[o];
                return fy.call(i, o) ? i[o] = t(i[o], a, r) : i[o] = a, i;
            }, s);
        }, PY = function (e, n) {
            return Object.keys(n).reduce(function (r, s) {
                return r[s] = n[s], r;
            }, e);
        }, RY = function (t, e, n) {
            var r = t.replace(/\+/g, ' ');
            if (n === 'iso-8859-1') {
                return r.replace(/%[0-9a-f]{2}/gi, unescape);
            }
            try {
                return decodeURIComponent(r);
            } catch {
                return r;
            }
        }, MY = function (e, n, r, s, i) {
            if (e.length === 0) {
                return e;
            }
            var o = e;
            if (typeof e == 'symbol' ? o = Symbol.prototype.toString.call(e) : typeof e != 'string' && (o = String(e)), r === 'iso-8859-1') {
                return escape(o).replace(/%u[0-9a-f]{4}/gi, function (f) {
                    return '%26%23' + parseInt(f.slice(2), 16) + '%3B';
                });
            }
            for (var a = '', l = 0; l < o.length; ++l) {
                var u = o.charCodeAt(l);
                if (u === 45 || u === 46 || u === 95 || u === 126 || u >= 48 && u <= 57 || u >= 65 && u <= 90 || u >= 97 && u <= 122 || i === kY.RFC1738 && (u === 40 || u === 41)) {
                    a += o.charAt(l);
                    continue;
                }
                if (u < 128) {
                    a = a + hi[u];
                    continue;
                }
                if (u < 2048) {
                    a = a + (hi[192 | u >> 6] + hi[128 | u & 63]);
                    continue;
                }
                if (u < 55296 || u >= 57344) {
                    a = a + (hi[224 | u >> 12] + hi[128 | u >> 6 & 63] + hi[128 | u & 63]);
                    continue;
                }
                l += 1;
                u = 65536 + ((u & 1023) << 10 | o.charCodeAt(l) & 1023);
                a += hi[240 | u >> 18] + hi[128 | u >> 12 & 63] + hi[128 | u >> 6 & 63] + hi[128 | u & 63];
                ;
            }
            return a;
        }, DY = function (e) {
            for (var n = [{
                            obj: { o: e },
                            prop: 'o'
                        }], r = [], s = 0; s < n.length; ++s) {
                for (var i = n[s], o = i.obj[i.prop], a = Object.keys(o), l = 0; l < a.length; ++l) {
                    var u = a[l], f = o[u];
                    typeof f == 'object' && f !== null && r.indexOf(f) === -1 && (n.push({
                        obj: o,
                        prop: u
                    }), r.push(f));
                }
            }
            return NY(n), e;
        }, $Y = function (e) {
            return Object.prototype.toString.call(e) === '[object RegExp]';
        }, LY = function (e) {
            return !e || typeof e != 'object' ? false : !!(e.constructor && e.constructor.isBuffer && e.constructor.isBuffer(e));
        }, FY = function (e, n) {
            return [].concat(e, n);
        }, UY = function (e, n) {
            if (ic(e)) {
                for (var r = [], s = 0; s < e.length; s += 1) {
                    r.push(n(e[s]));
                }
                return r;
            }
            return n(e);
        }, f9 = {
            arrayToObject: h9,
            assign: PY,
            combine: FY,
            compact: DY,
            decode: RY,
            encode: MY,
            isBuffer: LY,
            isRegExp: $Y,
            maybeMap: UY,
            merge: xY
        }, d9 = AY, Rp = f9, Ah = zv, BY = Object.prototype.hasOwnProperty, JT = {
            brackets: function (e) {
                return e + '[]';
            },
            comma: 'comma',
            indices: function (e, n) {
                return e + '[' + n + ']';
            },
            repeat: function (e) {
                return e;
            }
        }, to = Array.isArray, qY = Array.prototype.push, p9 = function (t, e) {
            qY.apply(t, to(e) ? e : [e]);
        }, VY = Date.prototype.toISOString, eS = Ah.default, or = {
            addQueryPrefix: false,
            allowDots: false,
            charset: 'utf-8',
            charsetSentinel: false,
            delimiter: '&',
            encode: true,
            encoder: Rp.encode,
            encodeValuesOnly: false,
            format: eS,
            formatter: Ah.formatters[eS],
            indices: false,
            serializeDate: function (e) {
                return VY.call(e);
            },
            skipNulls: false,
            strictNullHandling: false
        }, GY = function (e) {
            return typeof e == 'string' || typeof e == 'number' || typeof e == 'boolean' || typeof e == 'symbol' || typeof e == 'bigint';
        }, dy = {}, jY = function t(e, n, r, s, i, o, a, l, u, f, d, p, _, v, y, g) {
            for (var b = e, A = g, N = 0, I = false; (A = A.get(dy)) !== void 0 && !I;) {
                var O = A.get(e);
                if (N += 1, typeof O < 'u') {
                    if (O === N) {
                        throw new RangeError('Cyclic object value');
                    }
                    I = true;
                }
                typeof A.get(dy) > 'u' && (N = 0);
            }
            if (typeof l == 'function' ? b = l(n, b) : b instanceof Date ? b = d(b) : r === 'comma' && to(b) && (b = Rp.maybeMap(b, function (Q) {
                    return Q instanceof Date ? d(Q) : Q;
                })), b === null) {
                if (i) {
                    return a && !v ? a(n, or.encoder, y, 'key', p) : n;
                }
                b = '';
            }
            if (GY(b) || Rp.isBuffer(b)) {
                if (a) {
                    var x = v ? n : a(n, or.encoder, y, 'key', p);
                    return [_(x) + '=' + _(a(b, or.encoder, y, 'value', p))];
                }
                return [_(n) + '=' + _(String(b))];
            }
            var M = [];
            if (typeof b > 'u') {
                return M;
            }
            var L;
            if (r === 'comma' && to(b)) {
                v && a && (b = Rp.maybeMap(b, a));
                L = [{ value: b.length > 0 ? b.join(',') || null : void 0 }];
                ;
            } else {
                if (to(l)) {
                    L = l;
                } else {
                    var U = Object.keys(b);
                    L = u ? U.sort(u) : U;
                }
            }
            for (var ee = s && to(b) && b.length === 1 ? n + '[]' : n, ae = 0; ae < L.length; ++ae) {
                var Z = L[ae], fe = typeof Z == 'object' && typeof Z.value < 'u' ? Z.value : b[Z];
                if (!(o && fe === null)) {
                    var ge = to(b) ? typeof r == 'function' ? r(ee, Z) : ee : ee + (f ? '.' + Z : '[' + Z + ']');
                    g.set(e, N);
                    var Y = d9();
                    Y.set(dy, g);
                    p9(M, t(fe, ge, r, s, i, o, r === 'comma' && v && to(b) ? null : a, l, u, f, d, p, _, v, y, Y));
                    ;
                }
            }
            return M;
        }, WY = function (e) {
            if (!e) {
                return or;
            }
            if (e.encoder !== null && typeof e.encoder < 'u' && typeof e.encoder != 'function') {
                throw new TypeError('Encoder has to be a function.');
            }
            var n = e.charset || or.charset;
            if (typeof e.charset < 'u' && e.charset !== 'utf-8' && e.charset !== 'iso-8859-1') {
                throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');
            }
            var r = Ah.default;
            if (typeof e.format < 'u') {
                if (!BY.call(Ah.formatters, e.format)) {
                    throw new TypeError('Unknown format option provided.');
                }
                r = e.format;
            }
            var s = Ah.formatters[r], i = or.filter;
            return (typeof e.filter == 'function' || to(e.filter)) && (i = e.filter), {
                addQueryPrefix: typeof e.addQueryPrefix == 'boolean' ? e.addQueryPrefix : or.addQueryPrefix,
                allowDots: typeof e.allowDots > 'u' ? or.allowDots : !!e.allowDots,
                charset: n,
                charsetSentinel: typeof e.charsetSentinel == 'boolean' ? e.charsetSentinel : or.charsetSentinel,
                delimiter: typeof e.delimiter > 'u' ? or.delimiter : e.delimiter,
                encode: typeof e.encode == 'boolean' ? e.encode : or.encode,
                encoder: typeof e.encoder == 'function' ? e.encoder : or.encoder,
                encodeValuesOnly: typeof e.encodeValuesOnly == 'boolean' ? e.encodeValuesOnly : or.encodeValuesOnly,
                filter: i,
                format: r,
                formatter: s,
                serializeDate: typeof e.serializeDate == 'function' ? e.serializeDate : or.serializeDate,
                skipNulls: typeof e.skipNulls == 'boolean' ? e.skipNulls : or.skipNulls,
                sort: typeof e.sort == 'function' ? e.sort : null,
                strictNullHandling: typeof e.strictNullHandling == 'boolean' ? e.strictNullHandling : or.strictNullHandling
            };
        }, HY = function (t, e) {
            var n = t, r = WY(e), s, i;
            typeof r.filter == 'function' ? (i = r.filter, n = i('', n)) : to(r.filter) && (i = r.filter, s = i);
            var o = [];
            if (typeof n != 'object' || n === null) {
                return '';
            }
            var a;
            e && e.arrayFormat in JT ? a = e.arrayFormat : e && 'indices' in e ? a = e.indices ? 'indices' : 'repeat' : a = 'indices';
            var l = JT[a];
            if (e && 'commaRoundTrip' in e && typeof e.commaRoundTrip != 'boolean') {
                throw new TypeError('`commaRoundTrip` must be a boolean, or absent');
            }
            var u = l === 'comma' && e && e.commaRoundTrip;
            s || (s = Object.keys(n));
            r.sort && s.sort(r.sort);
            ;
            for (var f = d9(), d = 0; d < s.length; ++d) {
                var p = s[d];
                r.skipNulls && n[p] === null || p9(o, jY(n[p], p, l, u, r.strictNullHandling, r.skipNulls, r.encode ? r.encoder : null, r.filter, r.sort, r.allowDots, r.serializeDate, r.format, r.formatter, r.encodeValuesOnly, r.charset, f));
            }
            var _ = o.join(r.delimiter), v = r.addQueryPrefix === true ? '?' : '';
            return r.charsetSentinel && (r.charset === 'iso-8859-1' ? v += 'utf8=%26%2310003%3B&' : v += 'utf8=%E2%9C%93&'), _.length > 0 ? v + _ : '';
        }, Kl = f9, A0 = Object.prototype.hasOwnProperty, zY = Array.isArray, qn = {
            allowDots: false,
            allowPrototypes: false,
            allowSparse: false,
            arrayLimit: 20,
            charset: 'utf-8',
            charsetSentinel: false,
            comma: false,
            decoder: Kl.decode,
            delimiter: '&',
            depth: 5,
            ignoreQueryPrefix: false,
            interpretNumericEntities: false,
            parameterLimit: 1000,
            parseArrays: true,
            plainObjects: false,
            strictNullHandling: false
        }, YY = function (t) {
            return t.replace(/&#(\d+);/g, function (e, n) {
                return String.fromCharCode(parseInt(n, 10));
            });
        }, m9 = function (t, e) {
            return t && typeof t == 'string' && e.comma && t.indexOf(',') > -1 ? t.split(',') : t;
        }, XY = function (e, n) {
            var s = n.ignoreQueryPrefix ? e.replace(/^\?/, '') : e, i = n.parameterLimit === 1e+400 ? void 0 : n.parameterLimit, o = s.split(n.delimiter, i), a = -1, l, u = n.charset;
            if (n.charsetSentinel) {
                for (l = 0; l < o.length; ++l) {
                    if (o[l].indexOf('utf8=') === 0) {
                        o[l] === ZY ? u = 'utf-8' : o[l] === KY && (u = 'iso-8859-1');
                        a = l;
                        l = o.length;
                    }
                }
            }
            for (l = 0; l < o.length; ++l) {
                if (l !== a) {
                    var f = o[l], d = f.indexOf(']='), p = d === -1 ? f.indexOf('=') : d + 1, _, v;
                    p === -1 ? (_ = n.decoder(f, qn.decoder, u, 'key'), v = n.strictNullHandling ? null : '') : (_ = n.decoder(f.slice(0, p), qn.decoder, u, 'key'), v = Kl.maybeMap(m9(f.slice(p + 1), n), function (y) {
                        return n.decoder(y, qn.decoder, u, 'value');
                    }));
                    v && n.interpretNumericEntities && u === 'iso-8859-1' && (v = YY(v));
                    f.indexOf('[]=') > -1 && (v = zY(v) ? [v] : v);
                    A0.call(r, _) ? r[_] = Kl.combine(r[_], v) : r[_] = v;
                    ;
                }
            }
            return r;
        }, QY = function (t, e, n, r) {
            for (var s = r ? e : m9(e, n), i = t.length - 1; i >= 0; --i) {
                var o, a = t[i];
                if (a === '[]' && n.parseArrays) {
                    o = [].concat(s);
                } else {
                    o = n.plainObjects ? Object.create(null) : {};
                    var l = a.charAt(0) === '[' && a.charAt(a.length - 1) === ']' ? a.slice(1, -1) : a, u = parseInt(l, 10);
                    !n.parseArrays && l === '' ? o = { 0: s } : !isNaN(u) && a !== l && String(u) === l && u >= 0 && n.parseArrays && u <= n.arrayLimit ? (o = [], o[u] = s) : l !== '__proto__' && (o[l] = s);
                }
                s = o;
            }
            return s;
        }, JY = function (e, n, r, s) {
            if (e) {
                var i = r.allowDots ? e.replace(/\.([^.[]+)/g, '[$1]') : e, l = r.depth > 0 && /(\[[^[\]]*])/.exec(i), u = l ? i.slice(0, l.index) : i, f = [];
                if (u) {
                    if (!r.plainObjects && A0.call(Object.prototype, u) && !r.allowPrototypes) {
                        return;
                    }
                    f.push(u);
                }
                for (var d = 0; r.depth > 0 && (l = /(\[[^[\]]*])/g.exec(i)) !== null && d < r.depth;) {
                    if (d += 1, !r.plainObjects && A0.call(Object.prototype, l[1].slice(1, -1)) && !r.allowPrototypes) {
                        return;
                    }
                    f.push(l[1]);
                }
                return l && f.push('[' + i.slice(l.index) + ']'), QY(f, n, r, s);
            }
        }, eK = function (e) {
            if (!e) {
                return qn;
            }
            if (e.decoder !== null && e.decoder !== void 0 && typeof e.decoder != 'function') {
                throw new TypeError('Decoder has to be a function.');
            }
            if (typeof e.charset < 'u' && e.charset !== 'utf-8' && e.charset !== 'iso-8859-1') {
                throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');
            }
            var n = typeof e.charset > 'u' ? qn.charset : e.charset;
            return {
                allowDots: typeof e.allowDots > 'u' ? qn.allowDots : !!e.allowDots,
                allowPrototypes: typeof e.allowPrototypes == 'boolean' ? e.allowPrototypes : qn.allowPrototypes,
                allowSparse: typeof e.allowSparse == 'boolean' ? e.allowSparse : qn.allowSparse,
                arrayLimit: typeof e.arrayLimit == 'number' ? e.arrayLimit : qn.arrayLimit,
                charset: n,
                charsetSentinel: typeof e.charsetSentinel == 'boolean' ? e.charsetSentinel : qn.charsetSentinel,
                comma: typeof e.comma == 'boolean' ? e.comma : qn.comma,
                decoder: typeof e.decoder == 'function' ? e.decoder : qn.decoder,
                delimiter: typeof e.delimiter == 'string' || Kl.isRegExp(e.delimiter) ? e.delimiter : qn.delimiter,
                depth: typeof e.depth == 'number' || e.depth === false ? +e.depth : qn.depth,
                ignoreQueryPrefix: e.ignoreQueryPrefix === true,
                interpretNumericEntities: typeof e.interpretNumericEntities == 'boolean' ? e.interpretNumericEntities : qn.interpretNumericEntities,
                parameterLimit: typeof e.parameterLimit == 'number' ? e.parameterLimit : qn.parameterLimit,
                parseArrays: e.parseArrays !== false,
                plainObjects: typeof e.plainObjects == 'boolean' ? e.plainObjects : qn.plainObjects,
                strictNullHandling: typeof e.strictNullHandling == 'boolean' ? e.strictNullHandling : qn.strictNullHandling
            };
        }, tK = function (t, e) {
            var n = eK(e);
            if (t === '' || t === null || typeof t > 'u') {
                return n.plainObjects ? Object.create(null) : {};
            }
            for (var r = typeof t == 'string' ? XY(t, n) : t, s = n.plainObjects ? Object.create(null) : {}, i = Object.keys(r), o = 0; o < i.length; ++o) {
                var a = i[o], l = JY(a, r[a], n, typeof t == 'string');
                s = Kl.merge(s, l, n);
            }
            return n.allowSparse === true ? s : Kl.compact(s);
        }, nK = HY, rK = tK, sK = zv, g9 = {
            formats: sK,
            parse: rK,
            stringify: nK
        };
    let iK = class {
            constructor(e) {
                this.code = e.code;
                this.token = e.token;
                this.host = e.host;
                ;
            }
        }, oK = class {
            constructor(e) {
                this.appId = e.appId;
                this.appTag = e.appTag;
                this.audienceEnabled = e.audienceEnabled;
                this.code = e.code;
                this.host = e.host;
                this.audienceHost = e.audienceHost;
                this.locked = e.locked;
                this.full = e.full;
                this.maxPlayers = e.maxPlayers;
                this.minPlayers = e.minPlayers;
                this.moderationEnabled = e.moderationEnabled;
                this.passwordRequired = e.passwordRequired;
                this.twitchLocked = e.twitchLocked;
                this.locale = e.locale;
                this.keepalive = e.keepalive;
                this.controllerBranch = e.controllerBranch;
                ;
            }
        }, aK = class {
            constructor(e) {
                this.connections = e.connections;
            }
        }, cK = class {
            constructor(e) {
                this.cause = e.cause;
            }
            whenReceived(e) {
                e.disconnect();
            }
        }, lK = class {
        };
    var zm = {
        CreateRoomReply: iK,
        GetRoomReply: oK,
        GetAudienceReply: aK,
        RoomExit: cK,
        RoomLock: lK
    };
    const tS = fz, uK = g9, {
            CreateRoomReply: hK,
            GetRoomReply: fK
        } = zm;
    let dK = class {
        constructor(e) {
            if (!e.host) {
                throw new Error('unable to create ecast APIClient: no host provided');
            }
            if (this.host = e.host, !e.scheme) {
                throw new Error('unable to create ecast APIClient: no scheme provided');
            }
            this.scheme = e.scheme;
        }
        url(e, n) {
            if (n) {
                let r = uK.stringify(n);
                return `${ this.scheme }://${ this.host }/api/v2${ e }?${ r }`;
            }
            return `${ this.scheme }://${ this.host }/api/v2${ e }`;
        }
        async createRoom(e) {
            let n = {
                    appTag: 'test',
                    userId: 'fart',
                    ...e
                }, r = this.url('/rooms', n), i = await tS(r, { method: 'POST' });
            const {
                body: o,
                error: a,
                ok: l
            } = await i.json();
            if (!l) {
                throw new Error(`failed to create room: ${ a }`);
            }
            return new hK({
                code: o.code,
                token: o.token,
                host: o.host
            });
        }
        async getRoom(e) {
            let n = this.url(`/rooms/${ e.code }`), s = await (await tS(n)).json();
            if (!s.ok) {
                throw new Error(`unable to get room with options ${ JSON.stringify(e) }: ${ s.error }`);
            }
            let i = s.body;
            return new fK({
                appId: i.appId,
                appTag: i.appTag,
                audienceEnabled: i.audienceEnabled,
                code: i.code,
                host: i.host,
                audienceHost: i.audienceHost,
                locked: i.locked,
                full: i.full,
                maxPlayers: i.maxPlayers,
                minPlayers: i.minPlayers,
                moderationEnabled: i.moderationEnabled,
                passwordRequired: i.passwordRequired,
                twitchLocked: i.twitchLocked,
                locale: i.locale,
                keepalive: i.keepalive,
                controllerBranch: i.controllerBranch
            });
        }
    };
    var pK = { APIClient: dK }, ll = null;
    typeof WebSocket < 'u' ? ll = WebSocket : typeof MozWebSocket < 'u' ? ll = MozWebSocket : typeof mn < 'u' ? ll = mn.WebSocket || mn.MozWebSocket : typeof window < 'u' ? ll = window.WebSocket || window.MozWebSocket : typeof self < 'u' && (ll = self.WebSocket || self.MozWebSocket);
    var mK = ll, Yv = { exports: {} }, Nl = typeof Reflect == 'object' ? Reflect : null, nS = Nl && typeof Nl.apply == 'function' ? Nl.apply : function (e, n, r) {
            return Function.prototype.apply.call(e, n, r);
        }, Mp;
    Nl && typeof Nl.ownKeys == 'function' ? Mp = Nl.ownKeys : Object.getOwnPropertySymbols ? Mp = function (e) {
        return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e));
    } : Mp = function (e) {
        return Object.getOwnPropertyNames(e);
    };
    function gK(t) {
        console && console.warn && console.warn(t);
    }
    var _9 = Number.isNaN || function (e) {
        return e !== e;
    };
    function Vt() {
        Vt.init.call(this);
    }
    Yv.exports = Vt;
    Yv.exports.once = bK;
    Vt.EventEmitter = Vt;
    Vt.prototype._events = void 0;
    Vt.prototype._eventsCount = 0;
    Vt.prototype._maxListeners = void 0;
    var rS = 10;
    function Ym(t) {
        if (typeof t != 'function') {
            throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof t);
        }
    }
    Object.defineProperty(Vt, 'defaultMaxListeners', {
        enumerable: true,
        get: function () {
            return rS;
        },
        set: function (t) {
            if (typeof t != 'number' || t < 0 || _9(t)) {
                throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + t + '.');
            }
            rS = t;
        }
    });
    Vt.init = function () {
        (this._events === void 0 || this._events === Object.getPrototypeOf(this)._events) && (this._events = Object.create(null), this._eventsCount = 0);
        this._maxListeners = this._maxListeners || void 0;
        ;
    };
    Vt.prototype.setMaxListeners = function (e) {
        if (typeof e != 'number' || e < 0 || _9(e)) {
            throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e + '.');
        }
        return this._maxListeners = e, this;
    };
    function y9(t) {
        return t._maxListeners === void 0 ? Vt.defaultMaxListeners : t._maxListeners;
    }
    Vt.prototype.getMaxListeners = function () {
        return y9(this);
    };
    Vt.prototype.emit = function (e) {
        for (var n = [], r = 1; r < arguments.length; r++) {
            n.push(arguments[r]);
        }
        var s = e === 'error', i = this._events;
        if (i !== void 0) {
            s = s && i.error === void 0;
        } else {
            if (!s) {
                return false;
            }
        }
        if (s) {
            var o;
            if (n.length > 0 && (o = n[0]), o instanceof Error) {
                throw o;
            }
            var a = new Error('Unhandled error.' + (o ? ' (' + o.message + ')' : ''));
            throw a.context = o, a;
        }
        var l = i[e];
        if (l === void 0) {
            return false;
        }
        if (typeof l == 'function') {
            nS(l, this, n);
        } else {
            for (var u = l.length, f = S9(l, u), r = 0; r < u; ++r) {
                nS(f[r], this, n);
            }
        }
        return true;
    };
    function v9(t, e, n, r) {
        var s, i, o;
        if (Ym(n), i = t._events, i === void 0 ? (i = t._events = Object.create(null), t._eventsCount = 0) : (i.newListener !== void 0 && (t.emit('newListener', e, n.listener ? n.listener : n), i = t._events), o = i[e]), o === void 0) {
            o = i[e] = n;
            ++t._eventsCount;
            ;
        } else {
            if (typeof o == 'function' ? o = i[e] = r ? [
                    n,
                    o
                ] : [
                    o,
                    n
                ] : r ? o.unshift(n) : o.push(n), s = y9(t), s > 0 && o.length > s && !o.warned) {
                ;
                var a = new Error('Possible EventEmitter memory leak detected. ' + o.length + ' ' + String(e) + ' listeners added. Use emitter.setMaxListeners() to increase limit');
                ;
                ;
                ;
                ;
                gK(a);
                ;
            }
        }
        return t;
    }
    Vt.prototype.addListener = function (e, n) {
        return v9(this, e, n, false);
    };
    Vt.prototype.on = Vt.prototype.addListener;
    Vt.prototype.prependListener = function (e, n) {
        return v9(this, e, n, true);
    };
    function _K() {
        if (!this.fired) {
            return this.target.removeListener(this.type, this.wrapFn), this.fired = true, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
        }
    }
    function b9(t, e, n) {
        var r = {
                fired: false,
                wrapFn: void 0,
                target: t,
                type: e,
                listener: n
            }, s = _K.bind(r);
        return s.listener = n, r.wrapFn = s, s;
    }
    Vt.prototype.once = function (e, n) {
        return Ym(n), this.on(e, b9(this, e, n)), this;
    };
    Vt.prototype.prependOnceListener = function (e, n) {
        return Ym(n), this.prependListener(e, b9(this, e, n)), this;
    };
    Vt.prototype.removeListener = function (e, n) {
        var r, s, i, o, a;
        if (Ym(n), s = this._events, s === void 0) {
            return this;
        }
        if (r = s[e], r === void 0) {
            return this;
        }
        if (r === n || r.listener === n) {
            --this._eventsCount === 0 ? this._events = Object.create(null) : (delete s[e], s.removeListener && this.emit('removeListener', e, r.listener || n));
        } else {
            if (typeof r != 'function') {
                for (i = -1, o = r.length - 1; o >= 0; o--) {
                    if (r[o] === n || r[o].listener === n) {
                        a = r[o].listener;
                        i = o;
                        ;
                        break;
                    }
                }
                if (i < 0) {
                    return this;
                }
                i === 0 ? r.shift() : yK(r, i);
                r.length === 1 && (s[e] = r[0]);
                s.removeListener !== void 0 && this.emit('removeListener', e, a || n);
                ;
            }
        }
        return this;
    };
    Vt.prototype.off = Vt.prototype.removeListener;
    Vt.prototype.removeAllListeners = function (e) {
        var n, r, s;
        if (r = this._events, r === void 0) {
            return this;
        }
        if (r.removeListener === void 0) {
            return arguments.length === 0 ? (this._events = Object.create(null), this._eventsCount = 0) : r[e] !== void 0 && (--this._eventsCount === 0 ? this._events = Object.create(null) : delete r[e]), this;
        }
        if (arguments.length === 0) {
            var i = Object.keys(r), o;
            for (s = 0; s < i.length; ++s) {
                o = i[s];
                o !== 'removeListener' && this.removeAllListeners(o);
                ;
            }
            return this.removeAllListeners('removeListener'), this._events = Object.create(null), this._eventsCount = 0, this;
        }
        if (n = r[e], typeof n == 'function') {
            this.removeListener(e, n);
        } else {
            if (n !== void 0) {
                for (s = n.length - 1; s >= 0; s--) {
                    this.removeListener(e, n[s]);
                }
            }
        }
        return this;
    };
    function E9(t, e, n) {
        var r = t._events;
        if (r === void 0) {
            return [];
        }
        var s = r[e];
        return s === void 0 ? [] : typeof s == 'function' ? n ? [s.listener || s] : [s] : n ? vK(s) : S9(s, s.length);
    }
    Vt.prototype.listeners = function (e) {
        return E9(this, e, true);
    };
    Vt.prototype.rawListeners = function (e) {
        return E9(this, e, false);
    };
    Vt.listenerCount = function (t, e) {
        return typeof t.listenerCount == 'function' ? t.listenerCount(e) : T9.call(t, e);
    };
    Vt.prototype.listenerCount = T9;
    function T9(t) {
        var e = this._events;
        if (e !== void 0) {
            var n = e[t];
            if (typeof n == 'function') {
                return 1;
            }
            if (n !== void 0) {
                return n.length;
            }
        }
        return 0;
    }
    Vt.prototype.eventNames = function () {
        return this._eventsCount > 0 ? Mp(this._events) : [];
    };
    function S9(t, e) {
        for (var n = new Array(e), r = 0; r < e; ++r) {
            ;
        }
        return n;
    }
    function yK(t, e) {
        for (; e + 1 < t.length; e++) {
            ;
        }
        t.pop();
    }
    function vK(t) {
        for (var e = new Array(t.length), n = 0; n < e.length; ++n) {
            ;
        }
        return e;
    }
    function bK(t, e) {
        return new Promise(function (n, r) {
            function s(o) {
                t.removeListener(e, i);
                r(o);
                ;
            }
            function i() {
                typeof t.removeListener == 'function' && t.removeListener('error', s);
                n([].slice.call(arguments));
                ;
            }
            w9(t, e, i, { once: true });
            e !== 'error' && EK(t, s, { once: true });
            ;
        });
    }
    function EK(t, e, n) {
        typeof t.on == 'function' && w9(t, 'error', e, n);
    }
    function w9(t, e, n, r) {
        if (typeof t.on == 'function') {
            r.once ? t.once(e, n) : t.on(e, n);
        } else {
            if (typeof t.addEventListener == 'function') {
                t.addEventListener(e, function s(i) {
                    r.once && t.removeEventListener(e, s);
                    n(i);
                    ;
                });
            } else {
                throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof t);
            }
        }
    }
    var TK = Yv.exports;
    let SK = class {
            constructor(e) {
                e && (this.error = e.error, this.to = e.to, this.opcode = e.opcode);
            }
            toString() {
                return `ObservedError{
	to:${ this.to }
	error:${ this.error }
	opcode:${ this.opcode }
}`;
            }
        }, Km = class extends Error {
            constructor(e) {
                super(e);
                e && (this.code = e.code, this.message = e.message);
                ;
            }
        };
    class Lf extends Km {
        constructor(e) {
            super(e);
            this.code = 1000;
            this.message = e && e.message ? e.message : 'ecast server error';
            ;
        }
    }
    class O9 extends Lf {
        constructor(e) {
            super(e);
            this.code = 1001;
            this.message = e && e.message ? e.message : 'create room failed';
            ;
        }
    }
    class A9 extends Lf {
        constructor(e) {
            super(e);
            this.code = 1002;
            this.message = e && e.message ? e.message : 'unable to connect to room';
            ;
        }
    }
    class C9 extends Lf {
        constructor(e) {
            super(e);
            this.code = 1003;
            this.message = e && e.message ? e.message : 'server is shutting down';
            ;
        }
    }
    class Ft extends Km {
        constructor(e) {
            super(e);
            this.code = 2000;
            this.message = e && e.message ? e.message : 'ecast client error';
            ;
        }
    }
    class I9 extends Ft {
        constructor(e) {
            super(e);
            this.code = 2001;
            this.message = e && e.message ? e.message : 'parse error in ecast protocol';
            ;
        }
    }
    class k9 extends Ft {
        constructor(e) {
            super(e);
            this.code = 2002;
            this.message = e && e.message ? e.message : 'missing opcode';
            ;
        }
    }
    class N9 extends Ft {
        constructor(e) {
            super(e);
            this.code = 2003;
            this.message = e && e.message ? e.message : 'invalid opcode';
            ;
        }
    }
    class x9 extends Ft {
        constructor(e) {
            super(e);
            this.code = 2004;
            this.message = e && e.message ? e.message : 'invalid arguments';
            ;
        }
    }
    class P9 extends Ft {
        constructor(e) {
            super(e);
            this.code = 2005;
            this.message = e && e.message ? e.message : 'entity not found';
            ;
        }
    }
    class R9 extends Ft {
        constructor(e) {
            super(e);
            this.code = 2006;
            this.message = e && e.message ? e.message : 'an entity already exists with that key';
            ;
        }
    }
    class M9 extends Ft {
        constructor(e) {
            super(e);
            this.code = 2007;
            this.message = e && e.message ? e.message : 'the entity is not of the expected type';
            ;
        }
    }
    class D9 extends Ft {
        constructor(e) {
            super(e);
            this.code = 2008;
            this.message = e && e.message ? e.message : 'no such client';
            ;
        }
    }
    class $9 extends Ft {
        constructor(e) {
            super(e);
            this.code = 2009;
            this.message = e && e.message ? e.message : 'room is locked';
            ;
        }
    }
    class L9 extends Ft {
        constructor(e) {
            super(e);
            this.code = 2010;
            this.message = e && e.message ? e.message : 'room is full';
            ;
        }
    }
    class F9 extends Ft {
        constructor(e) {
            super(e);
            this.code = 2011;
            this.message = e && e.message ? e.message : 'no such license';
            ;
        }
    }
    class U9 extends Ft {
        constructor(e) {
            super(e);
            this.code = 2012;
            this.message = e && e.message ? e.message : 'invalid license';
            ;
        }
    }
    class B9 extends Ft {
        constructor(e) {
            super(e);
            this.code = 2013;
            this.message = e && e.message ? e.message : 'room not found';
            ;
        }
    }
    class q9 extends Ft {
        constructor(e) {
            super(e);
            this.code = 2014;
            this.message = e && e.message ? e.message : 'requested role does not exist';
            ;
        }
    }
    class V9 extends Ft {
        constructor(e) {
            super(e);
            this.code = 2015;
            this.message = e && e.message ? e.message : 'twitch login required';
            ;
        }
    }
    class G9 extends Ft {
        constructor(e) {
            super(e);
            this.code = 2016;
            this.message = e && e.message ? e.message : 'no such option';
            ;
        }
    }
    class j9 extends Ft {
        constructor(e) {
            super(e);
            this.code = 2017;
            this.message = e && e.message ? e.message : 'password required';
            ;
        }
    }
    class W9 extends Ft {
        constructor(e) {
            super(e);
            this.code = 2018;
            this.message = e && e.message ? e.message : 'invalid room password';
            ;
        }
    }
    class H9 extends Ft {
        constructor(e) {
            super(e);
            this.code = 2019;
            this.message = e && e.message ? e.message : 'missing name';
            ;
        }
    }
    class z9 extends Ft {
        constructor(e) {
            super(e);
            this.code = 2021;
            this.message = e && e.message ? e.message : 'text did not pass text filters';
            ;
        }
    }
    class Y9 extends Ft {
        constructor(e) {
            super(e);
            this.code = 2022;
            this.message = e && e.message ? e.message : 'no such filter';
            ;
        }
    }
    class K9 extends Ft {
        constructor(e) {
            super(e);
            this.code = 2023;
            this.message = e && e.message ? e.message : 'permission denied';
            ;
        }
    }
    class Z9 extends Ft {
        constructor(e) {
            super(e);
            this.code = 2024;
            this.message = e && e.message ? e.message : 'not connected to a room';
            ;
        }
    }
    class X9 extends Ft {
        constructor(e) {
            super(e);
            this.code = 2025;
            this.message = e && e.message ? e.message : 'illegal operation';
            ;
        }
    }
    class Q9 extends Ft {
        constructor(e) {
            super(e);
            this.code = 2026;
            this.message = e && e.message ? e.message : 'invalid ACL change';
            ;
        }
    }
    class J9 extends Ft {
        constructor(e) {
            super(e);
            this.code = 2027;
            this.message = e && e.message ? e.message : 'room has already ended';
            ;
        }
    }
    class eO extends Ft {
        constructor(e) {
            super(e);
            this.code = 2028;
            this.message = e && e.message ? e.message : 'the entity is locked';
            ;
        }
    }
    class tO extends Ft {
        constructor(e) {
            super(e);
            this.code = 2420;
            this.message = e && e.message ? e.message : 'rate limit exceeded';
            ;
        }
    }
    function wK({
        code: t,
        message: e
    }) {
        const n = OK[t];
        return n ? new n({ message: e }) : new Km({ message: e });
    }
    var Ch = {
        createError: wK,
        CallError: Km,
        EcastServerError: Lf,
        EcastCreateRoomFailed: O9,
        EcastDialRoomFailed: A9,
        EcastServerIsShuttingDown: C9,
        EcastClientError: Ft,
        EcastParseError: I9,
        EcastRequestIsMissingOpcode: k9,
        EcastRequestHasInvalidOpcode: N9,
        EcastRequestHasInvalidArguments: x9,
        EcastEntityNotFound: P9,
        EcastEntityAlreadyExists: R9,
        EcastEntityTypeError: M9,
        EcastNoSuchClient: D9,
        EcastRoomIsLocked: $9,
        EcastRoomIsFull: L9,
        EcastLicenseNotFound: F9,
        EcastLicenseCheckFailed: U9,
        EcastRoomNotFound: B9,
        EcastInvalidRole: q9,
        EcastTwitchLoginRequired: V9,
        EcastInvalidOption: G9,
        EcastPasswordRequired: j9,
        EcastInvalidPassword: W9,
        EcastNameRequired: H9,
        EcastFilterError: z9,
        EcastNoSuchFilter: Y9,
        EcastPermissionDenied: K9,
        EcastNotConnected: Z9,
        EcastIllegalOperation: X9,
        EcastACLChangeDenied: Q9,
        EcastRoomHasEnded: J9,
        EcastEntityLocked: eO,
        EcastRateLimitExceeded: tO,
        ObservedError: SK
    };
    const OK = {
        1000: Lf,
        1001: O9,
        1002: A9,
        1003: C9,
        2000: Ft,
        2001: I9,
        2002: k9,
        2003: N9,
        2004: x9,
        2005: P9,
        2006: R9,
        2007: M9,
        2008: D9,
        2009: $9,
        2010: L9,
        2011: F9,
        2012: U9,
        2013: B9,
        2014: q9,
        2015: V9,
        2016: G9,
        2017: j9,
        2018: W9,
        2019: H9,
        2021: z9,
        2022: Y9,
        2023: K9,
        2024: Z9,
        2025: X9,
        2026: Q9,
        2027: J9,
        2028: eO,
        2420: tO
    };
    let AK = class {
            constructor(e) {
                this.id = e.id;
                this.deviceId = e.deviceId;
                this.name = e.name;
                this.secret = e.secret;
                this.reconnect = e.reconnect;
                this.entities = e.entities;
                this.here = e.here;
                this.profile = e.profile;
                this.replayEnd = e.replayEnd;
                ;
            }
        }, CK = class {
            constructor(e) {
                this.id = e.id;
                this.userId = e.userId;
                this.name = e.name;
                this.role = e.role;
                this.reconnect = e.reconnect;
                ;
            }
        }, IK = class {
            constructor(e) {
                this.id = e.id;
                this.role = e.role;
                ;
            }
        }, kK = class {
            constructor(e) {
                this.to = e.to;
                this.from = e.from;
                this.body = e.body;
                this.userId = e.userId;
                ;
            }
        }, NK = class {
            constructor(e) {
                this.id = e.id;
                this.banned = e.banned;
                this.reason = e.reason;
                ;
            }
        };
    var Kv = {
        ClientConnected: CK,
        ClientDisconnected: IK,
        ClientKicked: NK,
        ClientSend: kK,
        ClientWelcome: AK
    };
    let xK = class {
        constructor(e) {
            this.choices = e.choices;
            this.key = e.key;
            this.meta = e.meta || {};
            ;
        }
        whenReceived(e) {
            e.entities[this.key] = this;
        }
        toString() {
            return `CountGroup{
	choices: ${ this.choices }
	meta:${ JSON.stringify(this.meta) }
}`;
        }
    };
    var Zv = { CountGroup: xK };
    let PK = class {
            constructor(e) {
                this.key = e.key;
                this.colors = e.colors;
                this.lines = e.lines;
                this.live = e.live;
                this.maxLayer = e.maxLayer;
                this.maxPoints = e.maxPoints;
                this.size = e.size;
                this.weights = e.weights;
                this.meta = e.meta || {};
                e.acl && (this.acl = e.acl);
                ;
            }
            whenReceived(e) {
                e.entities[this.key] = this;
            }
            toString() {
                return `Doodle{
	key:${ this.key }
	colors:${ this.colors }
	lines:${ this.lines }
	live:${ this.live }
	maxLayer:${ this.maxLayer }
	maxPoints:${ this.maxPoints }
	size:${ this.size }
	weights:${ this.weights }
	meta:${ JSON.stringify(this.meta) }
}`;
            }
        }, RK = class {
            constructor(e) {
                this.key = e.key;
                this.line = e.line;
                ;
            }
            whenReceived(e) {
                e.entities[this.key].lines.push(this.line);
            }
            toString() {
                return `DoodleLine{
	val:${ this.line }
}`;
            }
        }, MK = class {
            constructor(e) {
                this.key = e.key;
                this.index = e.index;
                ;
            }
            whenReceived(e) {
                e.entities[this.key].lines.splice(this.index, 1);
            }
            toString() {
                return `DoodleLineRemoved{
	index:${ this.index }
}`;
            }
        };
    var Xv = {
        DoodleEntity: PK,
        DoodleLine: RK,
        DoodleLineRemoved: MK
    };
    let DK = class {
        constructor(e) {
            this.key = e.key;
            this.count = e.count;
            this.meta = e.meta || {};
            ;
        }
        whenReceived(e) {
            e.entities[this.key] = this;
        }
        toString() {
            return `GCounter{
	count:${ this.count }
	meta:${ this.meta }
}`;
        }
    };
    var Qv = { GCounter: DK };
    let $K = class {
        constructor(e) {
            this.pc = e.pc;
            this.opcode = e.opcode;
            this.result = e.result;
            ;
        }
    };
    var nO = { Notification: $K };
    let LK = class rO {
        constructor(e) {
            this.from = e.from;
            this.key = e.key;
            this.val = e.val;
            this.restrictions = e.restrictions;
            this.version = e.version;
            this.meta = e.meta || {};
            e.acl && (this.acl = e.acl);
            ;
        }
        whenReceived(e) {
            if (e.entities[this.key] && e.entities[this.key] instanceof rO && !this.restrictions) {
                e.entities[this.key].val = this.val;
                e.entities[this.key].meta = this.meta;
                e.entities[this.key].version = this.version;
                e.entities[this.key].from = this.from;
                ;
                return;
            }
            e.entities[this.key] = this;
        }
        toString() {
            return `NumberEntity{
	key:${ this.key }
	val: ${ this.val }
	restrictions: ${ JSON.stringify(this.restrictions) }
	meta: ${ JSON.stringify(this.meta) }
}`;
        }
    };
    var Jv = { NumberEntity: LK };
    let FK = class {
            constructor(e) {
                this.from = e.from;
                this.key = e.key;
                this.val = e.val;
                this.version = e.version;
                this.meta = e.meta || {};
                e.acl && (this.acl = e.acl);
                ;
            }
            whenReceived(e) {
                e.entities[this.key] = this;
            }
            toString() {
                return `ObjectEntity{
	key:${ this.key }
	value: ${ JSON.stringify(this.val) }
	meta:${ JSON.stringify(this.meta) }
}`;
            }
            toBlob() {
                return this.val;
            }
        }, UK = class {
            constructor(e) {
                this.message = e.message;
            }
            toString() {
                return `ObjectEcho{message: ${ this.message }}`;
            }
        };
    var e3 = {
        ObjectEntity: FK,
        ObjectEcho: UK
    };
    let BK = class {
        constructor(e) {
            this.key = e.key;
            this.count = e.count;
            this.meta = e.meta || {};
            ;
        }
        whenReceived(e) {
            e.entities[this.key] = this;
        }
        toString() {
            return `PNCounter{
	count:${ this.count }
	meta:${ JSON.stringify(this.meta) }
}`;
        }
    };
    var t3 = { PNCounter: BK };
    let qK = class {
        constructor(e) {
            this.pc = e.pc;
            this.re = e.re;
            this.opcode = e.opcode;
            this.result = e.result;
            ;
        }
    };
    var sO = { Reply: qK };
    let VK = class {
        constructor(e) {
            this.seq = e.seq;
            this.opcode = e.opcode;
            this.params = e.params;
            ;
        }
    };
    var GK = { Request: VK };
    let jK = class {
            constructor(e) {
                this.key = e.key;
                this.size = e.size;
                this.version = e.version;
                this.from = e.from;
                this.meta = e.meta || {};
                e.acl && (this.acl = e.acl);
                ;
            }
            whenRecived(e) {
                e.entities[this.key] = this;
            }
            toString() {
                return `Stack{
	key:${ this.key }
	size:${ this.size }
	version:${ this.version }
	from:${ this.from }
	meta:${ this.meta }
}`;
            }
        }, WK = class {
            constructor(e) {
                this.key = e.key;
                this.val = e.val;
                ;
            }
            toString() {
                return `StackElement{
	key:${ this.key }
	value: ${ JSON.stringify(this.val) }
}`;
            }
        }, HK = class {
            constructor(e) {
                this.key = e.key;
                this.vals = e.vals;
                ;
            }
            toString() {
                return `StackElements{
	key:${ this.key }
	values: ${ JSON.stringify(this.vals) }
}`;
            }
        };
    var iO = {
        StackEntity: jK,
        StackElement: WK,
        StackElements: HK
    };
    let zK = class {
            constructor(e) {
                this.from = e.from;
                this.key = e.key;
                this.text = e.text;
                this.version = e.version;
                this.meta = e.meta || {};
                e.acl && (this.acl = e.acl);
                ;
            }
            whenReceived(e) {
                e.entities[this.key] = this;
                e.emit('text ' + this.key, this);
                ;
            }
            toString() {
                return `TextEntity{
	key: ${ this.key }
	text: ${ this.text }
	meta:${ JSON.stringify(this.meta) }
}`;
            }
            toBlob() {
                return JSON.parse(this.text);
            }
        }, YK = class {
            constructor(e) {
                this.message = e.message;
            }
            toString() {
                return `TextEcho{
	key: ${ this.key }
	message: ${ this.message }
}`;
            }
        };
    var n3 = {
        TextEntity: zK,
        TextEcho: YK
    };
    let KK = class {
            constructor(e) {
                this.from = e.from;
                this.key = e.key;
                this.meta = e.meta || {};
                this.root = e.root;
                e.acl && (this.acl = e.acl);
                ;
            }
            whenReceived(e) {
                e.entities[this.key] = this;
            }
            toString() {
                return `TextMap{
	key:${ this.key }
	meta:${ JSON.stringify(this.meta) }
}`;
            }
        }, ZK = class {
            constructor(e) {
                this.from = e.from;
                this.key = e.key;
                this.msg = e.msg;
                ;
            }
            toString() {
                const e = this.msg ? this.msg.join(', ') : this.msg;
                return `TextMapSynced{
	key:${ this.key }
	from:${ this.from }
	msg:${ e }
}`;
            }
        }, XK = class {
            constructor(e) {
                this.from = e.from;
                this.key = e.key;
                this.text = e.text;
                this.attributions = e.attributions;
                ;
            }
            toString() {
                return `TextMapState{
	key: ${ this.key }
	from:${ this.from }
	text:${ this.text }
	attributions:${ this.attributions }
}`;
            }
        };
    var r3 = {
        TextMapEntity: KK,
        TextMapSynced: ZK,
        TextMapState: XK
    };
    let QK = class {
        constructor(e) {
            this.key = e.key;
            this.elements = e.elements;
            this.limit = e.limit;
            this.meta = e.meta || {};
            ;
        }
        whenReceived(e) {
            e.entities[this.key] = this;
        }
        toString() {
            return `TextRing{
	elements: ${ this.elements }
	meta:${ JSON.stringify(this.meta) }
}`;
        }
    };
    var s3 = { TextRing: QK };
    let JK = class {
        constructor(e) {
            this.key = e.key;
            this.artifactId = e.artifactId;
            this.categoryId = e.categoryId;
            this.rootId = e.rootId;
            this.meta = e.meta || {};
            ;
        }
        whenReceived(e) {
            e.entities[this.key] = this;
        }
        toString() {
            return `ArtifactEntity${ JSON.stringify(this) }
`;
        }
    };
    var oO = { ArtifactEntity: JK };
    let eZ = class {
        constructor(e) {
            this.key = e.key;
        }
        whenReceived(e) {
            delete e.entities[this.key];
        }
        toString() {
            return `DropEntity{
	key:${ this.key }
}`;
        }
    };
    var aO = { DropEntity: eZ };
    let tZ = class {
        constructor(e) {
            this.message = e.message;
        }
        toString() {
            return `Echo{message: ${ this.message }
}`;
        }
    };
    var nZ = { Echo: tZ };
    let rZ = class {
        constructor(e) {
            this.key = e.key;
            this.from = e.from;
            ;
        }
        whenReceived(e) {
            e.entities[this.key] && (e.entities[this.key].meta.locked = true);
        }
        toString() {
            return `LockEntity{
	key:${ this.key }
}`;
        }
    };
    var sZ = { LockEntity: rZ };
    let iZ = class {
        constructor() {
        }
        toString() {
            return 'OK';
        }
    };
    var cO = { OK: iZ };
    const {ArtifactEntity: oZ} = oO, {
            ClientWelcome: aZ,
            ClientConnected: cZ,
            ClientDisconnected: lZ,
            ClientKicked: uZ,
            ClientSend: hZ
        } = Kv, {CountGroup: fZ} = Zv, {
            DoodleEntity: dZ,
            DoodleLine: pZ,
            DoodleLineRemoved: mZ
        } = Xv, {
            StackEntity: gZ,
            StackElement: _Z,
            StackElements: yZ
        } = iO, {DropEntity: vZ} = aO, {Echo: bZ} = nZ, {LockEntity: EZ} = sZ, {GCounter: TZ} = Qv, {
            GetAudienceReply: SZ,
            RoomExit: wZ,
            RoomLock: OZ
        } = zm, {Notification: AZ} = nO, {OK: CZ} = cO, {NumberEntity: IZ} = Jv, {
            ObjectEcho: kZ,
            ObjectEntity: NZ
        } = e3, {PNCounter: sS} = t3, {Reply: xZ} = sO, {
            TextEcho: PZ,
            TextEntity: RZ
        } = n3, {TextRing: MZ} = s3, {
            createError: iS,
            ObservedError: DZ
        } = Ch, {
            TextMapEntity: $Z,
            TextMapSynced: LZ,
            TextMapState: FZ
        } = r3;
    function C0(t, e, n) {
        switch (t) {
        case 'ok':
            return new CZ();
        case 'echo':
            return new bZ({ message: e.message });
        case 'lock':
            return new EZ({
                key: e.key,
                from: e.from
            });
        case 'error':
            return iS({
                code: e.code,
                message: e.msg
            });
        case 'error/observed':
            return new DZ({
                to: e.to,
                opcode: e.opcode,
                error: iS({
                    code: e.error.code,
                    message: e.error.msg
                })
            });
        case 'string':
            return e;
        case 'text':
            return new RZ({
                from: e.from,
                key: e.key,
                text: e.val,
                version: e.version,
                meta: n,
                acl: e.acl
            });
        case 'text/echo':
            return new PZ({ message: e.message });
        case 'object':
            return new NZ({
                from: e.from,
                key: e.key,
                val: e.val,
                meta: n,
                acl: e.acl
            });
        case 'object/echo':
            return new kZ({ message: e.message });
        case 'drop':
            return new vZ({ key: e.key });
        case 'artifact':
            return new oZ({
                key: e.key,
                artifactId: e.artifactId,
                categoryId: e.categoryId,
                rootId: e.rootId,
                meta: n
            });
        case 'client/connected':
            return new cZ({
                id: e.id,
                userId: e.userId,
                name: e.name,
                role: e.role,
                reconnect: e.reconnect
            });
        case 'client/disconnected':
            return new lZ({
                id: e.id,
                role: e.role
            });
        case 'client/kicked':
            return new uZ({
                id: e.id,
                banned: e.banned,
                reason: e.reason
            });
        case 'client/send':
            return new hZ({
                to: e.to,
                from: e.from,
                body: e.body,
                userId: e.userID
            });
        case 'client/welcome': {
                let r = new aZ({
                    id: e.id,
                    name: e.name,
                    secret: e.secret,
                    reconnect: e.reconnect,
                    here: e.here,
                    profile: e.profile,
                    replayEnd: e.replayEnd
                });
                if (e.entities) {
                    let s = { i: C0(o[0], o[1], o[2]) };
                    Object.entries(e.entities).forEach(([i, o]) => {
                        ;
                    });
                    ;
                    ;
                }
                return r;
            }
        case 'doodle':
            return new dZ({
                key: e.key,
                colors: e.val.colors,
                lines: e.val.lines,
                live: e.val.live,
                maxLayer: e.val.maxLayer,
                maxPoints: e.val.maxPoints,
                size: e.val.size,
                weights: e.val.weights,
                meta: n,
                acl: e.acl
            });
        case 'doodle/line':
            return new pZ({
                key: e.key,
                line: e.val
            });
        case 'doodle/line/removed':
            return new mZ({
                key: e.key,
                index: e.index
            });
        case 'stack':
            return new gZ({
                key: e.key,
                size: e.size,
                from: e.from,
                version: e.version,
                meta: e.meta,
                acl: e.acl
            });
        case 'stack/element':
            return new _Z({
                key: e.key,
                val: e.val
            });
        case 'stack/elements':
            return new yZ({
                key: e.key,
                vals: e.vals
            });
        case 'number':
            return new IZ({
                key: e.key,
                val: e.val,
                restrictions: e.restrictions,
                from: e.from,
                version: e.version,
                meta: n,
                acl: e.acl
            });
        case 'text-map':
            return new $Z({
                key: e.key,
                from: e.from,
                root: e.root,
                meta: n,
                acl: e.acl
            });
        case 'text-map/state':
            return new FZ({
                key: e.key,
                from: e.from,
                attributions: e.attributions,
                text: e.text
            });
        case 'text-map/synced':
            return new LZ({
                key: e.key,
                from: e.from,
                msg: e.msg
            });
        case 'room/exit':
            return new wZ({ cause: e.cause });
        case 'room/lock':
            return new OZ();
        case 'room/get-audience':
            return new SZ({ connections: e.connections });
        case 'audience':
            return new sS({
                key: t,
                count: e[1]
            });
        case 'audience/count-group':
            return new fZ({
                key: e.key,
                choices: e.choices,
                meta: n
            });
        case 'audience/text-ring':
            return new MZ({
                key: e.key,
                elements: e.elements,
                meta: n
            });
        case 'audience/g-counter':
            return new TZ({
                key: e.key,
                count: e.count,
                meta: n
            });
        case 'audience/pn-counter':
            return new sS({
                key: e.key,
                count: e.count,
                meta: n
            });
        default:
            return console.error(`failed to parse result of type ${ t }: ${ JSON.stringify(e, null, 2) }`), e;
        }
    }
    function UZ(t) {
        let e = JSON.parse(t.data), n = e.opcode || e.type;
        return e.re ? new xZ({
            pc: e.pc,
            re: e.re,
            opcode: n,
            result: C0(n, e.result)
        }) : new AZ({
            pc: e.pc,
            opcode: n,
            result: C0(n, e.result)
        });
    }
    var BZ = { parseResponseMessage: UZ };
    const oS = mK, qZ = g9, VZ = TK, {CallError: GZ} = Ch, {ClientWelcome: jZ} = Kv, {CountGroup: WZ} = Zv, {DoodleEntity: HZ} = Xv, {GCounter: zZ} = Qv, {Notification: aS} = nO, {NumberEntity: YZ} = Jv, {ObjectEntity: py} = e3, {PNCounter: KZ} = t3, {Reply: ZZ} = sO, {Request: XZ} = GK, {StackEntity: QZ} = iO, {TextEntity: my} = n3, {TextMapEntity: JZ} = r3, {TextRing: eX} = s3, {parseResponseMessage: tX} = BZ, nX = 1000 + Math.floor(Math.random() * 500);
    let rX = class extends VZ {
        constructor(e) {
            if (super(), this.debug = e.debug || false, !e.host) {
                throw new Error('unable to create ecast WSClient: no host provided');
            }
            if (this.host = e.host, !e.code) {
                throw new Error('unable to create ecast WSClient: no room code provided');
            }
            if (this.code = e.code, e.scheme ? this.scheme = e.scheme : this.scheme = 'ws', e.secret && e.id) {
                this.id = e.id;
                this.secret = e.secret;
                ;
            } else {
                switch (e.role) {
                case 'player':
                    if (!e.name) {
                        throw new Error('unable to create ecast WSClient: no name provided');
                    }
                    break;
                case 'host':
                    if (!e.token) {
                        throw new Error('unable to create ecast WSClient: tried to connect with host role but without host token');
                    }
                    this.token = e.token;
                    break;
                case 'moderator':
                    if (!e.password) {
                        throw new Error('unable to create ecast WSClient: tried to connect with moderator role but without password');
                    }
                    break;
                }
                e.password && (this.password = e.password);
                e.twitchToken && (this.twitchToken = e.twitchToken);
                ;
            }
            this.name = e.name;
            this.role = e.role;
            this.deviceId = e.deviceId;
            this.userId = e.userId;
            this.conn = null;
            this.seq = 0;
            this.pending = {};
            this.entities = {};
            if (e.role == 'host') {
                this.replaySince = e.replaySince || 0;
                this.syncEntities = e.syncEntities || false;
            }
            ;
        }
        connect() {
            const e = {
                id: this.id,
                role: this.role,
                name: this.name,
                format: 'json',
                'user-id': this.userId,
                password: this.password
            };
            this.deviceId && (e['device-id'] = this.deviceId);
            this.twitchToken && (e['twitch-token'] = this.twitchToken);
            this.secret && (e.secret = this.secret);
            if (this.role === 'host') {
                e['host-token'] = this.token;
                this.replaySince > 0 && (e['replay-since'] = this.replaySince);
                this.syncEntities && (e['sync-entities'] = this.syncEntities);
            }
            ;
            const n = qZ.stringify(e), r = this.role === 'audience' || this.id > 10000000 ? `${ this.scheme }://${ this.host }/api/v2/audience/${ this.code }/play?${ n }` : `${ this.scheme }://${ this.host }/api/v2/rooms/${ this.code }/play?${ n }`;
            return new Promise((s, i) => {
                let o = false, a = false, l = f => {
                        s(f);
                        o = true;
                        ;
                    }, u = f => {
                        i(f);
                        o = true;
                        ;
                    };
                this.conn = new oS(r, 'ecast-v0');
                this.conn.onmessage = f => {
                    this.debugLog(`recv <- ${ JSON.stringify(JSON.parse(f.data), null, 2) }`);
                    const d = tX(f);
                    if (d instanceof ZZ) {
                        this.onReply(d);
                    } else {
                        if (d instanceof aS) {
                            if (d.result instanceof jZ) {
                                a = true;
                                this.id = d.result.id;
                                this.deviceId = d.result.deviceId;
                                this.entities = d.result.entities;
                                this.secret = d.result.secret;
                                d.result.name && (this.name = d.result.name);
                                l(d.result);
                                ;
                            } else {
                                if (!o) {
                                    u(d.result);
                                    return;
                                }
                            }
                            this.onNotification(d);
                        } else {
                            console.error(`failed to parse response messsage: ${ d }`);
                        }
                    }
                };
                this.conn.onerror = f => {
                    o ? this.emit('socketError', f) : u(f);
                };
                this.conn.onclose = f => {
                    this.debugLog('onclose', f.code);
                    a && f.code === 1006 ? this.reconnect() : this.emit('socketClose', f);
                    ;
                };
                this.conn.onopen = f => {
                    this.emit('socketOpen', f);
                };
                ;
            });
        }
        sleep(e) {
            return new Promise(n => setTimeout(n, e));
        }
        debugLog(...e) {
            this.debug && console.log(`%c[WSClient:${ this.name }]`, 'background-color:blue;color:white;', ...e);
        }
        async reconnect() {
            this.disconnect();
            this.debugLog('Attempting to reconnect');
            ;
            let e = 1, n = nX;
            for (;;) {
                try {
                    this.emit('connection', {
                        status: 'connecting',
                        attempt: e
                    });
                    await this.connect();
                    this.debugLog('reconnected');
                    this.emit('connection', { status: 'connected' });
                    ;
                    return;
                } catch (r) {
                    if (this.debugLog('reconnect error', r), r.code === 1005 || r.code === 1000) {
                        this.debugLog('unable to reconnect!', r);
                        this.emit('socketClose', r);
                        ;
                        return;
                    }
                    if (n >= 13000) {
                        this.debugLog('reconnect failed!', r);
                        this.emit('socketClose', r);
                        ;
                        return;
                    }
                    e += 1;
                    this.debugLog('waiting', n);
                    this.emit('connection', {
                        status: 'waiting',
                        attempt: e
                    });
                    await this.sleep(n);
                    n = Math.min(13000, n * 2);
                    ;
                }
            }
        }
        disconnect() {
            this.conn && (this.conn.close(), this.conn.onmessage = null, this.conn.onerror = null, this.conn.onopen = null, this.conn.onclose = null, this.conn = null);
        }
        onReply(e) {
            const n = e.re, r = this.pending[n];
            if (!r) {
                const s = new aS(e);
                ;
                this.emit('notification', s);
                ;
                return;
            }
            delete this.pending[n];
            e.result instanceof GZ ? r.reject(e.result) : r.resolve(e.result);
            ;
        }
        onNotification(e) {
            typeof e.result.whenReceived == 'function' && e.result.whenReceived(this);
            this.emit('notification', e);
            this.emit(e.opcode, e.result);
            ;
        }
        send(e, n = {}) {
            if (!this.conn) {
                throw new Error('No connection available');
            }
            if (this.conn.readyState !== oS.OPEN) {
                throw new Error(`Socket not ready to send, readyState is ${ this.conn.readyState }`);
            }
            const r = ++this.seq, s = new XZ({
                    seq: r,
                    opcode: e,
                    params: n
                }), i = new Promise((a, l) => {
                    this.pending[r] = {
                        resolve: a,
                        reject: l,
                        request: s
                    };
                }), o = JSON.stringify(s);
            return this.debugLog(`send -> ${ o }`), this.conn.send(o), i;
        }
        lockRoom() {
            return this.send('room/lock');
        }
        startAudience() {
            return this.send('room/start-audience');
        }
        getAudience() {
            return this.send('room/get-audience');
        }
        mail(e, n) {
            return this.send('client/send', {
                from: this.id,
                to: e,
                body: n
            });
        }
        kick(e, n = false, r) {
            return this.send('client/kick', {
                id: e,
                ban: n,
                reason: r
            });
        }
        async drop(e) {
            const n = await this.send('drop', { key: e });
            return delete this.entities[e], n;
        }
        echo(e) {
            return this.send('echo', { message: e });
        }
        async lock(e) {
            const n = await this.send('lock', { key: e });
            return this.entities[e].meta.locked = true, n;
        }
        async createNumber(e, n = {}) {
            let r = { key: e };
            const {
                val: s = 0,
                acl: i,
                min: o,
                max: a,
                increment: l,
                type: u
            } = n;
            ;
            i && (r.acl = i);
            o != null && (r.min = o);
            a != null && (r.max = a);
            l && (r.increment = l);
            u && (r.type = u);
            ;
            const f = await this.send('number/create', r);
            return this.entities[e] = new YZ({
                key: e,
                val: s,
                restrictions: {
                    min: o,
                    max: a,
                    increment: l,
                    type: u
                },
                meta: { locked: false }
            }), f;
        }
        async decrementNumber(e) {
            const n = await this.send('number/decrement', { key: e });
            return this.entities[e].val = n.val, n;
        }
        async getNumber(e) {
            const n = await this.send('number/get', { key: e });
            return this.entities[e] ? (this.entities[e].val = n.val, this.entities[e].restrictions = n.restrictions) : this.entities[e] = n, n;
        }
        async incrementNumber(e) {
            const n = await this.send('number/increment', { key: e });
            return this.entities[e].val = n.val, n;
        }
        async updateNumber(e, n) {
            const r = await this.send('number/update', {
                key: e,
                val: n
            });
            return this.entities[e].val = n, r;
        }
        async createObject(e, n, r) {
            const s = {
                key: e,
                val: n
            };
            r && (s.acl = r);
            const i = await this.send('object/create', s);
            return this.entities[e] = new py({
                key: e,
                val: n,
                meta: { locked: false }
            }), i;
        }
        echoObject(e) {
            return this.send('object/echo', { message: e });
        }
        async getObject(e) {
            const n = await this.send('object/get', { key: e });
            return this.entities[e] ? (this.entities[e].val = n.val, this.entities[e].version = n.version, this.entities[e].from = n.from) : this.entities[e] = n, n;
        }
        async setObject(e, n, r) {
            const s = {
                key: e,
                val: n
            };
            r && (s.acl = r);
            const i = await this.send('object/set', s);
            return this.entities[e] = new py({
                key: e,
                val: n,
                meta: { locked: false }
            }), i;
        }
        async updateObject(e, n) {
            const r = await this.send('object/update', {
                key: e,
                val: n
            });
            return this.entities[e] = new py({
                key: e,
                val: n,
                meta: { locked: false }
            }), r;
        }
        echoText(e) {
            return this.send('text/echo', { message: e });
        }
        getText(e) {
            return this.send('text/get', { key: e });
        }
        async createText(e, n, r) {
            const s = {
                    key: e,
                    val: n
                }, {
                    acl: i,
                    accept: o,
                    reject: a
                } = r;
            i && (s.acl = i);
            o && (s.accept = o);
            a && (s.reject = a);
            ;
            const l = await this.send('text/create', s);
            return this.entities[e] = new my({
                key: e,
                text: n,
                meta: { locked: false }
            }), l;
        }
        async setText(e, n, r) {
            const s = {
                key: e,
                val: n
            };
            r && (s.acl = r);
            const i = await this.send('text/set', s);
            return this.entities[e] = new my({
                key: e,
                text: n,
                meta: { locked: false }
            }), i;
        }
        async updateText(e, n) {
            const r = await this.send('text/update', {
                key: e,
                val: n
            });
            return this.entities[e] = new my({
                key: e,
                text: n,
                meta: { locked: false }
            }), r;
        }
        async createTextMap(e, n = {}) {
            const {
                val: r,
                notifyHost: s,
                acl: i,
                accept: o,
                reject: a
            } = n;
            let l = { key: e };
            r && (l.val = n.val);
            s && (l.notifyHost = n.notifyHost);
            i && (l.acl = i);
            o && (l.accept = o);
            a && (l.reject = a);
            ;
            const u = await this.send('text-map/create', l);
            return this.entities[e] = new JZ({
                key: e,
                acl: i,
                meta: { locked: false }
            }), u;
        }
        async syncTextMap(e, n) {
            return await this.send('text-map/sync', {
                key: e,
                msg: n
            });
        }
        async getTextMap(e, n) {
            const {includeNodes: r} = n;
            return await this.send('text-map/get', {
                key: e,
                includeNodes: r
            });
        }
        async createDoodle(e, n) {
            let r = { key: e };
            const {
                acl: s,
                colors: i,
                live: o,
                maxLayer: a,
                maxPoints: l,
                size: u,
                weights: f
            } = n;
            s && (r.acl = s);
            i && (r.colors = i);
            ;
            a != null && (r.maxLayer = a);
            l != null && (r.maxPoints = l);
            u && (r.size = u);
            f && (r.weights = f);
            ;
            const d = await this.send('doodle/create', r);
            return this.entities[e] = new HZ({
                key: e,
                colors: i,
                lines: [],
                live: o,
                maxLayer: r.maxLayer || 0,
                maxPoints: r.maxPoints || 0,
                size: u,
                weights: f,
                meta: { locked: false }
            }), d;
        }
        async getDoodle(e) {
            const n = await this.send('doodle/get', { key: e });
            return this.entities[e] ? this.entities[e].lines = n.lines : this.entities[e] = n, n;
        }
        async strokeDoodle(e, n) {
            const {
                    color: r,
                    weight: s,
                    layer: i,
                    points: o,
                    brush: a
                } = n, l = {
                    color: r,
                    weight: s,
                    layer: i,
                    points: o
                };
            a && (l.brush = a);
            const u = await this.send('doodle/stroke', {
                key: e,
                ...l
            });
            return this.entities[e].lines.push(l), u;
        }
        async undoDoodle(e) {
            const n = await this.send('doodle/undo', { key: e });
            return this.entities[e].lines.pop(), n;
        }
        async createStack(e, n) {
            const r = { key: e };
            n && (r.acl = n);
            const s = await this.send('stack/create', r);
            return this.entities[e] = new QZ({
                key: e,
                size: 0,
                meta: { locked: false }
            }), s;
        }
        pushStack(e, n) {
            return this.send('stack/push', {
                key: e,
                val: n
            });
        }
        bulkPushStack(e, n) {
            return this.send('stack/bulkpush', {
                key: e,
                vals: n
            });
        }
        peekStack(e, n) {
            return this.send('stack/peek', {
                key: e,
                size: n
            });
        }
        popStack(e) {
            return this.send('stack/pop', { key: e });
        }
        async createCountGroup(e, n) {
            const r = await this.send('audience/count-group/create', {
                name: e,
                options: n
            });
            return this.entities[e] = new WZ({
                key: e,
                choices: n,
                meta: { locked: false }
            }), r;
        }
        incrementCountGroupCounter(e, n, r = 1) {
            return this.send('audience/count-group/increment', {
                name: e,
                vote: n,
                times: r
            });
        }
        getCountGroup(e) {
            return this.send('audience/count-group/get', { name: e });
        }
        async createGCounter(e, n) {
            const r = await this.send('audience/g-counter/create', {
                key: e,
                count: n
            });
            return this.entities[e] = new zZ({
                key: e,
                count: n,
                meta: { locked: false }
            }), r;
        }
        incrementGCounter(e, n) {
            return this.send('audience/g-counter/increment', {
                key: e,
                times: n
            });
        }
        getGCounter(e) {
            return this.send('audience/g-counter/get', { key: e });
        }
        async createPNCounter(e, n) {
            const r = await this.send('audience/pn-counter/create', {
                key: e,
                count: n
            });
            return this.entities[e] = new KZ({
                key: e,
                count: n,
                meta: { locked: false }
            }), r;
        }
        incrementPNCounter(e, n) {
            return this.send('audience/pn-counter/increment', {
                key: e,
                times: n
            });
        }
        decrementPNCounter(e, n) {
            return this.send('audience/pn-counter/decrement', {
                key: e,
                times: n
            });
        }
        getPNCounter(e) {
            return this.send('audience/pn-counter/get', { key: e });
        }
        async createTextRing(e, n) {
            const r = { key: e }, {
                    limit: s,
                    accept: i,
                    reject: o
                } = n;
            s && (r.limit = s);
            i && (r.accept = i);
            o && (r.reject = o);
            ;
            const a = await this.send('audience/text-ring/create', r);
            return this.entities[e] = new eX({
                key: e,
                elements: [],
                limit: s,
                meta: { locked: false }
            }), a;
        }
        getTextRing(e) {
            return this.send('audience/text-ring/get', { name: e });
        }
        pushTextRing(e, n) {
            return this.send('audience/text-ring/push', {
                name: e,
                text: n
            });
        }
    };
    var sX = { WSClient: rX };
    const {APIClient: iX} = pK, {WSClient: oX} = sX, {
            CreateRoomReply: aX,
            GetRoomReply: cX
        } = zm, {
            ClientWelcome: lX,
            ClientDisconnected: uX
        } = Kv, {ArtifactEntity: hX} = oO, {GCounter: fX} = Qv, {NumberEntity: dX} = Jv, {TextEntity: pX} = n3, {DoodleEntity: mX} = Xv, {ObjectEntity: gX} = e3, {CountGroup: _X} = Zv, {DropEntity: yX} = aO, {OK: vX} = cO, {RoomExit: bX} = zm, {TextRing: EX} = s3, {TextMapEntity: TX} = r3, {PNCounter: SX} = t3;
    var Pr = {
        APIClient: iX,
        WSClient: oX,
        ClientWelcome: lX,
        CreateRoomReply: aX,
        DropEntity: yX,
        GetRoomReply: cX,
        ClientDisconnected: uX,
        RoomExit: bX,
        OK: vX,
        ArtifactEntity: hX,
        DoodleEntity: mX,
        NumberEntity: dX,
        CountGroup: _X,
        GCounter: fX,
        ObjectEntity: gX,
        PNCounter: SX,
        TextEntity: pX,
        TextRing: EX,
        TextMapEntity: TX
    };
    function I0(...t) {
        console.log(...t);
    }
    class wX {
        constructor(e, n) {
            Ae(this, 'client');
            Ae(this, 'room');
            Ae(this, 'items', []);
            Ae(this, 'autoMarkWindow', 150);
            Ae(this, 'autoMarkTimeout');
            Ae(this, 'autoMarkerCount', 0);
            Ae(this, 'automarkIgnoredKeys', []);
            Ae(this, 'automarkPendingLabel');
            window.tv.debug = this.expose();
            this.client = e;
            this.room = n;
            Object.keys(this.client.entities).forEach(r => {
                this.pushEntity(this.client.entities[r]);
            });
            this.items.length && this.setMarker('welcome');
            e.on('artifact', r => this.pushEntity(r));
            e.on('doodle', r => this.pushEntity(r));
            e.on('drop', r => this.pushEntity(r));
            e.on('number', r => this.pushEntity(r));
            e.on('object', r => this.pushEntity(r));
            e.on('text', r => this.pushEntity(r));
            this.hijackConsole();
            this.hijackSend();
            ;
        }
        get markerCount() {
            return this.items.reduce((e, n) => 'marker' in n ? e + 1 : e, 0);
        }
        reset() {
            this.items = [];
        }
        setAutomarkIgnoredKeys(e) {
            this.automarkIgnoredKeys = e;
        }
        hijackConsole() {
            const e = console.error.bind(console);
            console.error = (...n) => {
                this.pushError(n);
                e.apply(console, n);
                ;
            };
        }
        hijackSend() {
            window.Proxy && (this.client.send = new Proxy(this.client.send, { apply: (e, n, r) => (this.pushSend(r), e.apply(n, r)) }));
        }
        pushEntity(e) {
            I0('[Debug] pushEntity', e);
            e instanceof Pr.ArtifactEntity ? this.items.push({
                type: 'artifact',
                ...e
            }) : e instanceof Pr.DoodleEntity ? this.items.push({
                type: 'doodle',
                ...e
            }) : e instanceof Pr.DropEntity ? this.items.push({
                key: e.key,
                type: 'drop'
            }) : e instanceof Pr.NumberEntity ? this.items.push({
                key: e.key,
                type: 'number',
                value: e.val,
                meta: e.meta,
                restrictions: e.restrictions
            }) : e instanceof Pr.ObjectEntity ? (e.val.kind && (this.automarkPendingLabel = e.val.kind), this.items.push({
                key: e.key,
                type: 'object',
                value: e.val,
                meta: e.meta
            })) : e instanceof Pr.TextEntity && this.items.push({
                key: e.key,
                type: 'text',
                value: e.text,
                meta: e.meta
            });
            !this.automarkIgnoredKeys.includes(e.key) && this.startAutoMarkTimeout();
            ;
        }
        pushError(...e) {
            this.items.push({ error: e });
        }
        pushSend(e) {
            this.items.push({
                opcode: e[0],
                arguments: e[1]
            });
        }
        setMarker(e) {
            const n = this.items.filter(s => s.marker === e).length, r = n ? `label-${ n }` : e;
            this.items.push({ marker: r });
            this.clearAutoMarkTimeout();
            ;
        }
        setAutoMarker() {
            const e = this.automarkPendingLabel ?? 'marker';
            this.items.push({ marker: `${ this.autoMarkerCount }-${ e }` });
            this.autoMarkerCount += 1;
            delete this.automarkPendingLabel;
            this.clearAutoMarkTimeout();
            ;
        }
        startAutoMarkTimeout() {
            this.clearAutoMarkTimeout();
            this.autoMarkTimeout = window.setTimeout(() => {
                this.setAutoMarker();
            }, this.autoMarkWindow);
            ;
        }
        clearAutoMarkTimeout() {
            this.autoMarkTimeout && (window.clearTimeout(this.autoMarkTimeout), delete this.autoMarkTimeout);
        }
        async send(e) {
            if (!this.client) {
                return;
            }
            const n = await this.sendToEcast();
            n && await this.sendToSlack(n, e);
        }
        getSendData() {
            return {
                appTag: this.room.appTag,
                state: {
                    version: 3,
                    room: {
                        code: this.room.code,
                        appTag: this.room.appTag
                    },
                    client: {
                        id: this.client.id,
                        name: this.client.name,
                        role: this.client.role
                    },
                    items: this.items
                }
            };
        }
        async sendToEcast() {
            const e = this.getSendData();
            try {
                const r = await (await fetch('https://ecast.jackboxgames.com/api/v2/controller/state', {
                    method: 'POST',
                    body: JSON.stringify(e)
                })).json();
                if (!r.body || !r.body.url) {
                    return console.warn(r), null;
                }
                const s = r.body.url.split('/'), i = s[s.length - 1].replace('.json', ''), o = s[s.length - 2];
                return {
                    json: r.body.url,
                    dev: `https://dev.jackbox.tv/debug/cloud/${ o }/${ i }/`,
                    local: `http://localhost:9090/debug/cloud/${ o }/${ i }/`
                };
            } catch (n) {
                return console.error('[Debug] sendToEcast', n), null;
            }
        }
        async sendToSlack(e, n) {
            if (!this.room || !this.client) {
                return;
            }
            const r = r1(this.room.appTag), s = this.items.length - this.markerCount, i = `${ this.markerCount } ${ this.markerCount === 1 ? 'marker' : 'markers' }`, o = `${ s } ${ s === 1 ? 'entity' : 'entities' }`, a = [
                    {
                        type: 'mrkdwn',
                        text: `${ this.client.role }:${ this.client.id }`
                    },
                    {
                        type: 'mrkdwn',
                        text: `*Version:* ${ window.tv.manifest.loader.version }`
                    },
                    {
                        type: 'mrkdwn',
                        text: `*Domain:* ${ window.location.hostname }`
                    }
                ];
            try {
                const p = {
                    unfurl_links: false,
                    blocks: [
                        {
                            type: 'section',
                            text: {
                                type: 'mrkdwn',
                                text: `*${ (r == null ? void 0 : r.name) ?? this.room.appTag } :${ this.room.appTag }:* (${ i }, ${ o }) 

 From: ${ this.client.name },
${ n }`
                            }
                        },
                        {
                            type: 'context',
                            elements: a
                        },
                        {
                            type: 'actions',
                            elements: [
                                {
                                    type: 'button',
                                    action_id: 'actionId-0',
                                    url: e.json,
                                    text: {
                                        type: 'plain_text',
                                        text: 'JSON',
                                        emoji: true
                                    }
                                },
                                {
                                    type: 'button',
                                    action_id: 'actionId-3',
                                    url: e.local,
                                    text: {
                                        type: 'plain_text',
                                        text: 'localhost:9090',
                                        emoji: true
                                    }
                                },
                                {
                                    type: 'button',
                                    action_id: 'actionId-1',
                                    url: e.dev,
                                    text: {
                                        type: 'plain_text',
                                        text: 'dev.jackbox.tv',
                                        emoji: true
                                    }
                                }
                            ]
                        }
                    ]
                };
                if (this.room) {
                    p.icon_emoji = this.room.appTag;
                    const y = r1(this.room.appTag);
                    p.username = `DebugRecorder ${ y ? y.name : this.room.appTag }`;
                }
                const v = await (await fetch('https://hooks.slack.com/services/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', {
                    method: 'POST',
                    body: JSON.stringify(p)
                })).text();
                I0('[Debug] sendToSlack', v);
            } catch (l) {
                console.error('[Debug] sendToSlack', l);
            }
        }
        download(e) {
            var o;
            const n = e ?? `${ ((o = this.room) == null ? void 0 : o.appTag) ?? 'unknown' }-debug`, r = this.getSendData().state, s = JSON.stringify(r, null, 4), i = document.createElement('a');
            i.setAttribute('href', `data:text/json;charset=utf-8,${ encodeURIComponent(s) }`);
            i.setAttribute('download', `${ n }.json`);
            i.style.display = 'none';
            document.body.appendChild(i);
            i.click();
            document.body.removeChild(i);
            ;
        }
        open() {
            var s;
            const e = this.getSendData().state, n = JSON.stringify(e, null, 4), r = window.open();
            r.document.write(`
            <iframe src="data:text/json;charset=utf-8,${ encodeURIComponent(n) }" frameborder="0" style="border:0;
                top:0px; left:0px; bottom:0px; right:0px; width:100%; height:100%;" allowfullscreen>
            </iframe>
        `);
            r.document.title = `${ (s = this.room) == null ? void 0 : s.appTag } debug JSON`;
            r.document.close();
            r.focus();
            ;
        }
        expose() {
            return {
                print: () => this.items,
                reset: () => this.reset(),
                setMarker: e => this.setMarker(e),
                download: e => this.download(e),
                open: () => this.open(),
                send: e => void this.send(e)
            };
        }
    }
    function OX(t) {
        throw new Error('Could not dynamically require "' + t + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
    }
    var lS = { exports: {} };
    (function (t, e) {
        (function (n, r) {
            r(e);
        }(mn, function (n) {
            var r = typeof window < 'u' ? window : typeof mn < 'u' ? mn : typeof self < 'u' ? self : {}, s = function (q, se) {
                    if (se = se.split(':')[0], q = +q, !q) {
                        return false;
                    }
                    switch (se) {
                    case 'http':
                    case 'ws':
                        return q !== 80;
                    case 'https':
                    case 'wss':
                        return q !== 443;
                    case 'ftp':
                        return q !== 21;
                    case 'gopher':
                        return q !== 70;
                    case 'file':
                        return false;
                    }
                    return q !== 0;
                }, i = Object.prototype.hasOwnProperty, o;
            function a(W) {
                try {
                    return decodeURIComponent(W.replace(/\+/g, ' '));
                } catch {
                    return null;
                }
            }
            function l(W) {
                try {
                    return encodeURIComponent(W);
                } catch {
                    return null;
                }
            }
            function u(W) {
                for (var se = {}, j; j = /([^=?#&]+)=?([^&]*)/g.exec(W);) {
                    var ne = a(j[1]), Ee = a(j[2]);
                    ne === null || Ee === null || ne in se || (se[ne] = Ee);
                }
                return se;
            }
            function f(W, q) {
                q = q || '';
                var se = [], j, ne;
                typeof q != 'string' && (q = '?');
                for (ne in W)
                    if (i.call(W, ne)) {
                        if (j = W[ne], !j && (j === null || j === o || isNaN(j)) && (j = ''), ne = l(ne), j = l(j), ne === null || j === null) {
                            continue;
                        }
                        se.push(ne + '=' + j);
                    }
                return se.length ? q + se.join('&') : '';
            }
            var d = f, p = u, _ = {
                    stringify: d,
                    parse: p
                }, b = new RegExp('^[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+');
            function A(W) {
                return (W || '').toString().replace(b, '');
            }
            var N = [
                [
                    '#',
                    'hash'
                ],
                [
                    '?',
                    'query'
                ],
                function (q, se) {
                    return x(se.protocol) ? q.replace(/\\/g, '/') : q;
                },
                [
                    '/',
                    'pathname'
                ],
                [
                    '@',
                    'auth',
                    1
                ],
                [
                    NaN,
                    'host',
                    void 0,
                    1,
                    1
                ],
                [
                    /:(\d+)$/,
                    'port',
                    void 0,
                    1
                ],
                [
                    NaN,
                    'hostname',
                    void 0,
                    1,
                    1
                ]
            ];
            function O(W) {
                var q;
                typeof window < 'u' ? q = window : typeof r < 'u' ? q = r : typeof self < 'u' ? q = self : q = {};
                var se = q.location || {};
                W = W || se;
                var j = {
                        W: q.charAt(0) !== ne ? ne + q : q,
                        W: q,
                        W: q,
                        ne: arguments[ne + 1],
                        WebSocket: le,
                        ne: arguments[ne]
                    }, ne = typeof W, Ee;
                if (W.protocol === 'blob:') {
                    j = new U(unescape(W.pathname), {});
                } else {
                    if (ne === 'string') {
                        j = new U(W, {});
                        for (Ee in I)
                            delete j[Ee];
                    } else {
                        if (ne === 'object') {
                            for (Ee in W)
                                Ee in I || (j[Ee] = W[Ee]);
                            j.slashes === void 0 && (j.slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\/\//.test(W.href));
                        }
                    }
                }
                return j;
            }
            function x(W) {
                return W === 'file:' || W === 'ftp:' || W === 'http:' || W === 'https:' || W === 'ws:' || W === 'wss:';
            }
            function M(W, q) {
                W = A(W);
                q = q || {};
                ;
                var se = /^([a-z][a-z0-9.+-]*:)?(\/\/)?([\\/]+)?([\S\s]*)/i.exec(W), j = se[1] ? se[1].toLowerCase() : '', ne = !!se[2], Ee = !!se[3], Ie = 0, xe;
                return ne ? Ee ? (xe = se[2] + se[3] + se[4], Ie = se[2].length + se[3].length) : (xe = se[2] + se[4], Ie = se[2].length) : Ee ? (xe = se[3] + se[4], Ie = se[3].length) : xe = se[4], j === 'file:' ? Ie >= 2 && (xe = xe.slice(2)) : x(j) ? xe = se[4] : j ? ne && (xe = xe.slice(2)) : Ie >= 2 && x(q.protocol) && (xe = se[4]), {
                    protocol: j,
                    slashes: ne || x(j),
                    slashesCount: Ie,
                    rest: xe
                };
            }
            function L(W, q) {
                if (W === '') {
                    return q;
                }
                for (var se = (q || '/').split('/').slice(0, -1).concat(W.split('/')), j = se.length, ne = se[j - 1], Ee = false, Ie = 0; j--;) {
                    se[j] === '.' ? se.splice(j, 1) : se[j] === '..' ? (se.splice(j, 1), Ie++) : Ie && (j === 0 && (Ee = true), se.splice(j, 1), Ie--);
                }
                return Ee && se.unshift(''), (ne === '.' || ne === '..') && se.push(''), se.join('/');
            }
            function U(W, q, se) {
                if (W = A(W), !(this instanceof U)) {
                    return new U(W, q, se);
                }
                var j, ne, Ee, Ie, xe, Be, yn = N.slice(), jr = typeof q, ot = this, Uu = 0;
                for (jr !== 'object' && jr !== 'string' && (se = q, q = null), se && typeof se != 'function' && (se = _.parse), q = O(q), ne = M(W || '', q), j = !ne.protocol && !ne.slashes, ot.slashes = ne.slashes || j && q.slashes, ot.protocol = ne.protocol || q.protocol || '', W = ne.rest, (ot.protocol === 'file:' || !ne.slashes && (ne.protocol || ne.slashesCount < 2 || !x(ot.protocol))) && (yn[3] = [
                        /(.*)/,
                        'pathname'
                    ]); Uu < yn.length; Uu++) {
                    if (Ie = yn[Uu], typeof Ie == 'function') {
                        W = Ie(W, ot);
                        continue;
                    }
                    Ee = Ie[0];
                    Be = Ie[1];
                    Ee !== Ee ? ot[Be] = W : typeof Ee == 'string' ? ~(xe = W.indexOf(Ee)) && (typeof Ie[2] == 'number' ? (ot[Be] = W.slice(0, xe), W = W.slice(xe + Ie[2])) : (ot[Be] = W.slice(xe), W = W.slice(0, xe))) : (xe = Ee.exec(W)) && (ot[Be] = xe[1], W = W.slice(0, xe.index));
                    ot[Be] = ot[Be] || j && Ie[3] && q[Be] || '';
                    Ie[4] && (ot[Be] = ot[Be].toLowerCase());
                    ;
                }
                se && (ot.query = se(ot.query));
                j && q.slashes && ot.pathname.charAt(0) !== '/' && (ot.pathname !== '' || q.pathname !== '') && (ot.pathname = L(ot.pathname, q.pathname));
                ot.pathname.charAt(0) !== '/' && x(ot.protocol) && (ot.pathname = '/' + ot.pathname);
                s(ot.port, ot.protocol) || (ot.host = ot.hostname, ot.port = '');
                ot.username = ot.password = '';
                ot.auth && (Ie = ot.auth.split(':'), ot.username = Ie[0] || '', ot.password = Ie[1] || '');
                ot.origin = ot.protocol !== 'file:' && x(ot.protocol) && ot.host ? ot.protocol + '//' + ot.host : 'null';
                ot.href = ot.toString();
                ;
            }
            function ee(W, q, se) {
                var j = this;
                switch (W) {
                case 'query':
                    typeof q == 'string' && q.length && (q = (se || _.parse)(q)), j[W] = q;
                    break;
                case 'port':
                    j[W] = q, s(q, j.protocol) ? q && (j.host = j.hostname + ':' + q) : (j.host = j.hostname, j[W] = '');
                    break;
                case 'hostname':
                    j[W] = q, j.port && (q += ':' + j.port), j.host = q;
                    break;
                case 'host':
                    j[W] = q, /:\d+$/.test(q) ? (q = q.split(':'), j.port = q.pop(), j.hostname = q.join(':')) : (j.hostname = q, j.port = '');
                    break;
                case 'protocol':
                    j.protocol = q.toLowerCase(), j.slashes = !se;
                    break;
                case 'pathname':
                case 'hash':
                    if (q) {
                        var ne = W === 'pathname' ? '/' : '#';
                        ;
                    } else {
                        ;
                    }
                    break;
                default:
                    ;
                }
                for (var Ee = 0; Ee < N.length; Ee++) {
                    var Ie = N[Ee];
                    Ie[4] && (j[Ie[1]] = j[Ie[1]].toLowerCase());
                }
                return j.origin = j.protocol !== 'file:' && x(j.protocol) && j.host ? j.protocol + '//' + j.host : 'null', j.href = j.toString(), j;
            }
            function ae(W) {
                (!W || typeof W != 'function') && (W = _.stringify);
                var q, se = this, j = se.protocol;
                j && j.charAt(j.length - 1) !== ':' && (j += ':');
                var ne = j + (se.slashes || x(se.protocol) ? '//' : '');
                return se.username && (ne += se.username, se.password && (ne += ':' + se.password), ne += '@'), ne += se.host + se.pathname, q = typeof se.query == 'object' ? W(se.query) : se.query, q && (ne += q.charAt(0) !== '?' ? '?' + q : q), se.hash && (ne += se.hash), ne;
            }
            U.prototype = {
                set: ee,
                toString: ae
            };
            U.extractProtocol = M;
            U.location = O;
            U.trimLeft = A;
            U.qs = _;
            ;
            var Z = U;
            function fe(W, q) {
                setTimeout(function (se) {
                    return W.call(se);
                }, 4, q);
            }
            function ge(W, q) {
                typeof process < 'u' && console[W].call(null, q);
            }
            function Y(W, q) {
                W === void 0 && (W = []);
                var se = [];
                return W.forEach(function (j) {
                    q(j) || se.push(j);
                }), se;
            }
            function Q(W, q) {
                W === void 0 && (W = []);
                var se = [];
                return W.forEach(function (j) {
                    q(j) && se.push(j);
                }), se;
            }
            var ue = function () {
                this.listeners = {};
            };
            ue.prototype.addEventListener = function (q, se) {
                if (typeof se == 'function') {
                    Array.isArray(this.listeners[q]) || (this.listeners[q] = []);
                    Q(this.listeners[q], function (j) {
                        return j === se;
                    }).length === 0 && this.listeners[q].push(se);
                }
            };
            ue.prototype.removeEventListener = function (q, se) {
                var j = this.listeners[q];
                this.listeners[q] = Y(j, function (ne) {
                    return ne === se;
                });
            };
            ue.prototype.dispatchEvent = function (q) {
                for (var se = this, j = [], ne = arguments.length - 1; ne-- > 0;) {
                    ;
                }
                var Ee = q.type, Ie = this.listeners[Ee];
                return Array.isArray(Ie) ? (Ie.forEach(function (xe) {
                    j.length > 0 ? xe.apply(se, j) : xe.call(se, q);
                }), true) : false;
            };
            ;
            function _e(W) {
                var q = W.indexOf('?');
                return q >= 0 ? W.slice(0, q) : W;
            }
            var Oe = function () {
                this.urlMap = {};
            };
            Oe.prototype.attachWebSocket = function (q, se) {
                var j = _e(se), ne = this.urlMap[j];
                if (ne && ne.server && ne.websockets.indexOf(q) === -1) {
                    return ne.websockets.push(q), ne.server;
                }
            };
            Oe.prototype.addMembershipToRoom = function (q, se) {
                var j = this.urlMap[_e(q.url)];
                j && j.server && j.websockets.indexOf(q) !== -1 && (j.roomMemberships[se] || (j.roomMemberships[se] = []), j.roomMemberships[se].push(q));
            };
            Oe.prototype.attachServer = function (q, se) {
                var j = _e(se), ne = this.urlMap[j];
                if (!ne) {
                    return this.urlMap[j] = {
                        server: q,
                        websockets: [],
                        roomMemberships: {}
                    }, q;
                }
            };
            Oe.prototype.serverLookup = function (q) {
                var se = _e(q), j = this.urlMap[se];
                if (j) {
                    return j.server;
                }
            };
            Oe.prototype.websocketsLookup = function (q, se, j) {
                var ne = _e(q), Ee, Ie = this.urlMap[ne];
                if (Ee = Ie ? Ie.websockets : [], se) {
                    var xe = Ie.roomMemberships[se];
                    Ee = xe || [];
                }
                return j ? Ee.filter(function (Be) {
                    return Be !== j;
                }) : Ee;
            };
            Oe.prototype.removeServer = function (q) {
                delete this.urlMap[_e(q)];
            };
            Oe.prototype.removeWebSocket = function (q, se) {
                var j = _e(se), ne = this.urlMap[j];
                ne && (ne.websockets = Y(ne.websockets, function (Ee) {
                    return Ee === q;
                }));
            };
            Oe.prototype.removeMembershipFromRoom = function (q, se) {
                var j = this.urlMap[_e(q.url)], ne = j.roomMemberships[se];
                j && ne !== null && (j.roomMemberships[se] = Y(ne, function (Ee) {
                    return Ee === q;
                }));
            };
            ;
            var be = new Oe(), Me = {
                    CONSTRUCTOR_ERROR: 'Failed to construct \'WebSocket\':',
                    CLOSE_ERROR: 'Failed to execute \'close\' on \'WebSocket\':',
                    EVENT: {
                        CONSTRUCT: 'Failed to construct \'Event\':',
                        MESSAGE: 'Failed to construct \'MessageEvent\':',
                        CLOSE: 'Failed to construct \'CloseEvent\':'
                    }
                }, Fe = function () {
                };
            Fe.prototype.stopPropagation = function () {
            };
            Fe.prototype.stopImmediatePropagation = function () {
            };
            Fe.prototype.initEvent = function (q, se, j) {
                q === void 0 && (q = 'undefined');
                se === void 0 && (se = false);
                j === void 0 && (j = false);
                this.type = '' + q;
                this.bubbles = !!se;
                this.cancelable = !!j;
                ;
            };
            ;
            var st = function (W) {
                    function q(se, j) {
                        if (j === void 0 && (j = {}), W.call(this), !se) {
                            throw new TypeError(Me.EVENT_ERROR + ' 1 argument required, but only 0 present.');
                        }
                        if (typeof j != 'object') {
                            throw new TypeError(Me.EVENT_ERROR + ' parameter 2 (\'eventInitDict\') is not an object.');
                        }
                        var ne = j.bubbles, Ee = j.cancelable;
                        this.type = '' + se;
                        this.timeStamp = Date.now();
                        this.target = null;
                        this.srcElement = null;
                        this.returnValue = true;
                        this.isTrusted = false;
                        this.eventPhase = 0;
                        this.defaultPrevented = false;
                        this.currentTarget = null;
                        this.cancelable = Ee ? !!Ee : false;
                        this.cancelBubble = false;
                        this.bubbles = ne ? !!ne : false;
                        ;
                    }
                    return W && (q.__proto__ = W), q.prototype = Object.create(W && W.prototype), q.prototype.constructor = q, q;
                }(Fe), Ve = function (W) {
                    function q(se, j) {
                        if (j === void 0 && (j = {}), W.call(this), !se) {
                            throw new TypeError(Me.EVENT.MESSAGE + ' 1 argument required, but only 0 present.');
                        }
                        if (typeof j != 'object') {
                            throw new TypeError(Me.EVENT.MESSAGE + ' parameter 2 (\'eventInitDict\') is not an object');
                        }
                        var ne = j.bubbles, Ee = j.cancelable, Ie = j.data, xe = j.origin, Be = j.lastEventId, yn = j.ports;
                        this.type = '' + se;
                        this.timeStamp = Date.now();
                        this.target = null;
                        this.srcElement = null;
                        this.returnValue = true;
                        this.isTrusted = false;
                        this.eventPhase = 0;
                        this.defaultPrevented = false;
                        this.currentTarget = null;
                        this.cancelable = Ee ? !!Ee : false;
                        this.canncelBubble = false;
                        this.bubbles = ne ? !!ne : false;
                        this.origin = '' + xe;
                        this.ports = typeof yn > 'u' ? null : yn;
                        this.data = typeof Ie > 'u' ? null : Ie;
                        this.lastEventId = '' + (Be || '');
                        ;
                    }
                    return W && (q.__proto__ = W), q.prototype = Object.create(W && W.prototype), q.prototype.constructor = q, q;
                }(Fe), Ke = function (W) {
                    function q(se, j) {
                        if (j === void 0 && (j = {}), W.call(this), !se) {
                            throw new TypeError(Me.EVENT.CLOSE + ' 1 argument required, but only 0 present.');
                        }
                        if (typeof j != 'object') {
                            throw new TypeError(Me.EVENT.CLOSE + ' parameter 2 (\'eventInitDict\') is not an object');
                        }
                        var ne = j.bubbles, Ee = j.cancelable, Ie = j.code, xe = j.reason, Be = j.wasClean;
                        this.type = '' + se;
                        this.timeStamp = Date.now();
                        this.target = null;
                        this.srcElement = null;
                        this.returnValue = true;
                        this.isTrusted = false;
                        this.eventPhase = 0;
                        this.defaultPrevented = false;
                        this.currentTarget = null;
                        this.cancelable = Ee ? !!Ee : false;
                        this.cancelBubble = false;
                        this.bubbles = ne ? !!ne : false;
                        this.code = typeof Ie == 'number' ? parseInt(Ie, 10) : 0;
                        this.reason = '' + (xe || '');
                        this.wasClean = Be ? !!Be : false;
                        ;
                    }
                    return W && (q.__proto__ = W), q.prototype = Object.create(W && W.prototype), q.prototype.constructor = q, q;
                }(Fe);
            function rt(W) {
                var q = W.type, se = W.target, j = new st(q);
                return se && (j.target = se, j.srcElement = se, j.currentTarget = se), j;
            }
            function w(W) {
                var q = W.type, se = W.origin, j = W.data, ne = W.target, Ee = new Ve(q, {
                        data: j,
                        origin: se
                    });
                return ne && (Ee.target = ne, Ee.srcElement = ne, Ee.currentTarget = ne), Ee;
            }
            function R(W) {
                var q = W.code, se = W.reason, j = W.type, ne = W.target, Ee = W.wasClean;
                Ee || (Ee = q === 1000 || q === 1005);
                var Ie = new Ke(j, {
                    code: q,
                    reason: se,
                    wasClean: Ee
                });
                return ne && (Ie.target = ne, Ie.srcElement = ne, Ie.currentTarget = ne), Ie;
            }
            function H(W, q, se) {
                W.readyState = le.CLOSING;
                var j = be.serverLookup(W.url), ne = R({
                        type: 'close',
                        target: W.target,
                        code: q,
                        reason: se
                    }), Ee = R({
                        type: 'server::close',
                        target: W,
                        code: q,
                        reason: se
                    });
                fe(function () {
                    be.removeWebSocket(W, W.url);
                    W.readyState = le.CLOSED;
                    W.dispatchEvent(ne);
                    W.dispatchEvent(Ee);
                    j && j.dispatchEvent(ne, j);
                    ;
                }, W);
            }
            function X(W, q, se) {
                W.readyState = le.CLOSING;
                var j = be.serverLookup(W.url), ne = R({
                        type: 'close',
                        target: W.target,
                        code: q,
                        reason: se,
                        wasClean: false
                    }), Ee = R({
                        type: 'server::close',
                        target: W,
                        code: q,
                        reason: se,
                        wasClean: false
                    }), Ie = rt({
                        type: 'error',
                        target: W.target
                    });
                fe(function () {
                    be.removeWebSocket(W, W.url);
                    W.readyState = le.CLOSED;
                    W.dispatchEvent(Ie);
                    W.dispatchEvent(ne);
                    W.dispatchEvent(Ee);
                    j && j.dispatchEvent(ne, j);
                    ;
                }, W);
            }
            function k(W) {
                return Object.prototype.toString.call(W) !== '[object Blob]' && !(W instanceof ArrayBuffer) && (W = String(W)), W;
            }
            var T = new WeakMap();
            function S(W) {
                if (T.has(W)) {
                    return T.get(W);
                }
                var q = new Proxy(W, {
                    get: function (j, ne) {
                        return ne === 'close' ? function (Ie) {
                            Ie === void 0 && (Ie = {});
                            var xe = Ie.code || 1000, Be = Ie.reason || '';
                            H(q, xe, Be);
                        } : ne === 'send' ? function (Ie) {
                            Ie = k(Ie);
                            W.dispatchEvent(w({
                                type: 'message',
                                data: Ie,
                                origin: this.url,
                                target: W
                            }));
                            ;
                        } : ne === 'on' ? function (Ie, xe) {
                            W.addEventListener('server::' + Ie, xe);
                        } : ne === 'target' ? W : j[ne];
                    }
                });
                return T.set(W, q), q;
            }
            function P(W) {
                var q = encodeURIComponent(W).match(/%[89ABab]/g);
                return W.length + (q ? q.length : 0);
            }
            function B(W) {
                var q = new Z(W), se = q.pathname, j = q.protocol, ne = q.hash;
                if (!W) {
                    throw new TypeError(Me.CONSTRUCTOR_ERROR + ' 1 argument required, but only 0 present.');
                }
                if (se || (q.pathname = '/'), j === '') {
                    throw new SyntaxError(Me.CONSTRUCTOR_ERROR + ' The URL \'' + q.toString() + '\' is invalid.');
                }
                if (j !== 'ws:' && j !== 'wss:') {
                    throw new SyntaxError(Me.CONSTRUCTOR_ERROR + ' The URL\'s scheme must be either \'ws\' or \'wss\'. \'' + j + '\' is not allowed.');
                }
                if (ne !== '') {
                    throw new SyntaxError(Me.CONSTRUCTOR_ERROR + ' The URL contains a fragment identifier (\'' + ne + '\'). Fragment identifiers are not allowed in WebSocket URLs.');
                }
                return q.toString();
            }
            function te(W) {
                if (W === void 0 && (W = []), !Array.isArray(W) && typeof W != 'string') {
                    throw new SyntaxError(Me.CONSTRUCTOR_ERROR + ' The subprotocol \'' + W.toString() + '\' is invalid.');
                }
                typeof W == 'string' && (W = [W]);
                var q = W.map(function (j) {
                        return {
                            count: 1,
                            protocol: j
                        };
                    }).reduce(function (j, ne) {
                        return j[ne.protocol] = (j[ne.protocol] || 0) + ne.count, j;
                    }, {}), se = Object.keys(q).filter(function (j) {
                        return q[j] > 1;
                    });
                if (se.length > 0) {
                    throw new SyntaxError(Me.CONSTRUCTOR_ERROR + ' The subprotocol \'' + se[0] + '\' is duplicated.');
                }
                return W;
            }
            var le = function (W) {
                function q(j, ne) {
                    W.call(this);
                    this._onopen = null;
                    this._onmessage = null;
                    this._onerror = null;
                    this._onclose = null;
                    this.url = B(j);
                    ne = te(ne);
                    this.protocol = ne[0] || '';
                    this.binaryType = 'blob';
                    this.readyState = q.CONNECTING;
                    ;
                    var Ee = S(this), Ie = be.attachWebSocket(Ee, this.url);
                    fe(function () {
                        if (Ie) {
                            if (Ie.options.verifyClient && typeof Ie.options.verifyClient == 'function' && !Ie.options.verifyClient()) {
                                this.readyState = q.CLOSED;
                                ge('error', 'WebSocket connection to \'' + this.url + '\' failed: HTTP Authentication failed; no valid credentials available');
                                be.removeWebSocket(Ee, this.url);
                                this.dispatchEvent(rt({
                                    type: 'error',
                                    target: this
                                }));
                                this.dispatchEvent(R({
                                    type: 'close',
                                    target: this,
                                    code: 1000
                                }));
                                ;
                            } else {
                                if (Ie.options.selectProtocol && typeof Ie.options.selectProtocol == 'function') {
                                    var Be = Ie.options.selectProtocol(ne), yn = Be !== '', jr = ne.indexOf(Be) !== -1;
                                    if (yn && !jr) {
                                        this.readyState = q.CLOSED;
                                        ge('error', 'WebSocket connection to \'' + this.url + '\' failed: Invalid Sub-Protocol');
                                        be.removeWebSocket(Ee, this.url);
                                        this.dispatchEvent(rt({
                                            type: 'error',
                                            target: this
                                        }));
                                        this.dispatchEvent(R({
                                            type: 'close',
                                            target: this,
                                            code: 1000
                                        }));
                                        ;
                                        return;
                                    }
                                    this.protocol = Be;
                                }
                                this.readyState = q.OPEN;
                                this.dispatchEvent(rt({
                                    type: 'open',
                                    target: this
                                }));
                                Ie.dispatchEvent(rt({ type: 'connection' }), Ee);
                                ;
                            }
                        } else {
                            this.readyState = q.CLOSED;
                            this.dispatchEvent(rt({
                                type: 'error',
                                target: this
                            }));
                            this.dispatchEvent(R({
                                type: 'close',
                                target: this,
                                code: 1000
                            }));
                            ge('error', 'WebSocket connection to \'' + this.url + '\' failed');
                            ;
                        }
                    }, this);
                }
                W && (q.__proto__ = W);
                q.prototype = Object.create(W && W.prototype);
                q.prototype.constructor = q;
                ;
                var se = {
                    onopen: {},
                    onmessage: {},
                    onclose: {},
                    onerror: {}
                };
                return se.onopen.get = function () {
                    return this._onopen;
                }, se.onmessage.get = function () {
                    return this._onmessage;
                }, se.onclose.get = function () {
                    return this._onclose;
                }, se.onerror.get = function () {
                    return this._onerror;
                }, se.onopen.set = function (j) {
                    this.removeEventListener('open', this._onopen);
                    this._onopen = j;
                    this.addEventListener('open', j);
                    ;
                }, se.onmessage.set = function (j) {
                    this.removeEventListener('message', this._onmessage);
                    this._onmessage = j;
                    this.addEventListener('message', j);
                    ;
                }, se.onclose.set = function (j) {
                    this.removeEventListener('close', this._onclose);
                    this._onclose = j;
                    this.addEventListener('close', j);
                    ;
                }, se.onerror.set = function (j) {
                    this.removeEventListener('error', this._onerror);
                    this._onerror = j;
                    this.addEventListener('error', j);
                    ;
                }, q.prototype.send = function (ne) {
                    var Ee = this;
                    if (this.readyState === q.CLOSING || this.readyState === q.CLOSED) {
                        throw new Error('WebSocket is already in CLOSING or CLOSED state');
                    }
                    var Ie = w({
                            type: 'server::message',
                            origin: this.url,
                            data: k(ne)
                        }), xe = be.serverLookup(this.url);
                    xe && fe(function () {
                        Ee.dispatchEvent(Ie, ne);
                    }, xe);
                }, q.prototype.close = function (ne, Ee) {
                    if (ne !== void 0 && (typeof ne != 'number' || ne !== 1000 && (ne < 3000 || ne > 4999))) {
                        throw new TypeError(Me.CLOSE_ERROR + ' The code must be either 1000, or between 3000 and 4999. ' + ne + ' is neither.');
                    }
                    if (Ee !== void 0) {
                        var Ie = P(Ee);
                        if (Ie > 123) {
                            throw new SyntaxError(Me.CLOSE_ERROR + ' The message must not be greater than 123 bytes.');
                        }
                    }
                    if (!(this.readyState === q.CLOSING || this.readyState === q.CLOSED)) {
                        var xe = S(this);
                        this.readyState === q.CONNECTING ? X(xe, ne || 1006, Ee) : H(xe, ne || 1005, Ee);
                    }
                }, Object.defineProperties(q.prototype, se), q;
            }(ue);
            le.CONNECTING = 0;
            le.prototype.CONNECTING = le.CONNECTING;
            le.OPEN = 1;
            le.prototype.OPEN = le.OPEN;
            le.CLOSING = 2;
            le.prototype.CLOSING = le.CLOSING;
            le.CLOSED = 3;
            le.prototype.CLOSED = le.CLOSED;
            ;
            var me = function (W) {
                return W.reduce(function (q, se) {
                    return q.indexOf(se) > -1 ? q : q.concat(se);
                }, []);
            };
            function ye() {
                return typeof window < 'u' ? window : typeof process == 'object' && typeof OX == 'function' && typeof mn == 'object' ? mn : this;
            }
            var oe = function (W) {
                function q(se, j) {
                    j === void 0 && (j = de);
                    W.call(this);
                    ;
                    var ne = new Z(se);
                    ne.pathname || (ne.pathname = '/');
                    this.url = ne.toString();
                    this.originalWebSocket = null;
                    ;
                    var Ee = be.attachServer(this, this.url);
                    if (!Ee) {
                        throw this.dispatchEvent(rt({ type: 'error' })), new Error('A mock server is already listening on this url');
                    }
                    this.options = Object.assign({}, de, j);
                    this.options.mock && this.mockWebsocket();
                    ;
                }
                return W && (q.__proto__ = W), q.prototype = Object.create(W && W.prototype), q.prototype.constructor = q, q.prototype.mockWebsocket = function () {
                    var j = ye();
                    this.originalWebSocket = j.WebSocket;
                    ;
                    ;
                }, q.prototype.restoreWebsocket = function () {
                    var j = ye();
                    this.originalWebSocket !== null && (j.WebSocket = this.originalWebSocket);
                    this.originalWebSocket = null;
                    ;
                }, q.prototype.stop = function (j) {
                    j === void 0 && (j = function () {
                    });
                    this.options.mock && this.restoreWebsocket();
                    be.removeServer(this.url);
                    typeof j == 'function' && j();
                    ;
                }, q.prototype.on = function (j, ne) {
                    this.addEventListener(j, ne);
                }, q.prototype.close = function (j) {
                    j === void 0 && (j = {});
                    var ne = j.code, Ee = j.reason, Ie = j.wasClean, xe = be.websocketsLookup(this.url);
                    be.removeServer(this.url);
                    xe.forEach(function (Be) {
                        Be.readyState = le.CLOSED;
                        Be.dispatchEvent(R({
                            type: 'close',
                            target: Be.target,
                            code: ne || 1000,
                            reason: Ee || '',
                            wasClean: Ie
                        }));
                        ;
                    });
                    this.dispatchEvent(R({ type: 'close' }), this);
                    ;
                }, q.prototype.emit = function (j, ne, Ee) {
                    var Ie = this;
                    Ee === void 0 && (Ee = {});
                    var xe = Ee.websockets;
                    xe || (xe = be.websocketsLookup(this.url));
                    typeof Ee != 'object' || arguments.length > 3 ? (ne = Array.prototype.slice.call(arguments, 1, arguments.length), ne = ne.map(function (Be) {
                        return k(Be);
                    })) : ne = k(ne);
                    xe.forEach(function (Be) {
                        Array.isArray(ne) ? Be.dispatchEvent.apply(Be, [w({
                                type: j,
                                data: ne,
                                origin: Ie.url,
                                target: Be.target
                            })].concat(ne)) : Be.dispatchEvent(w({
                            type: j,
                            data: ne,
                            origin: Ie.url,
                            target: Be.target
                        }));
                    });
                    ;
                }, q.prototype.clients = function () {
                    return be.websocketsLookup(this.url);
                }, q.prototype.to = function (j, ne, Ee) {
                    var Ie = this;
                    Ee === void 0 && (Ee = []);
                    var xe = this, Be = me(Ee.concat(be.websocketsLookup(this.url, j, ne)));
                    return {
                        to: function (yn, jr) {
                            return Ie.to.call(Ie, yn, jr, Be);
                        },
                        emit: function (jr, ot) {
                            xe.emit(jr, ot, { websockets: Be });
                        }
                    };
                }, q.prototype.in = function () {
                    for (var j = [], ne = arguments.length; ne--;) {
                        ;
                    }
                    return this.to.apply(null, j);
                }, q.prototype.simulate = function (j) {
                    var ne = be.websocketsLookup(this.url);
                    j === 'error' && ne.forEach(function (Ee) {
                        Ee.readyState = le.CLOSED;
                        Ee.dispatchEvent(rt({ type: 'error' }));
                        ;
                    });
                }, q;
            }(ue);
            oe.of = function (q) {
                return new oe(q);
            };
            var he = function (W) {
                function q(j, ne) {
                    var Ee = this;
                    j === void 0 && (j = 'socket.io');
                    ne === void 0 && (ne = '');
                    W.call(this);
                    this.binaryType = 'blob';
                    ;
                    var Ie = new Z(j);
                    Ie.pathname || (Ie.pathname = '/');
                    this.url = Ie.toString();
                    this.readyState = q.CONNECTING;
                    this.protocol = '';
                    this.target = this;
                    typeof ne == 'string' || typeof ne == 'object' && ne !== null ? this.protocol = ne : Array.isArray(ne) && ne.length > 0 && (this.protocol = ne[0]);
                    ;
                    var xe = be.attachWebSocket(this, this.url);
                    fe(function () {
                        xe ? (this.readyState = q.OPEN, xe.dispatchEvent(rt({ type: 'connection' }), xe, this), xe.dispatchEvent(rt({ type: 'connect' }), xe, this), this.dispatchEvent(rt({
                            type: 'connect',
                            target: this
                        }))) : (this.readyState = q.CLOSED, this.dispatchEvent(rt({
                            type: 'error',
                            target: this
                        })), this.dispatchEvent(R({
                            type: 'close',
                            target: this,
                            code: 1000
                        })), ge('error', 'Socket.io connection to \'' + this.url + '\' failed'));
                    }, this);
                    this.addEventListener('close', function (Be) {
                        Ee.dispatchEvent(R({
                            type: 'disconnect',
                            target: Be.target,
                            code: Be.code
                        }));
                    });
                    ;
                }
                W && (q.__proto__ = W);
                q.prototype = Object.create(W && W.prototype);
                q.prototype.constructor = q;
                ;
                var se = { broadcast: {} };
                return q.prototype.close = function () {
                    if (this.readyState === q.OPEN) {
                        var ne = be.serverLookup(this.url);
                        return be.removeWebSocket(this, this.url), this.readyState = q.CLOSED, this.dispatchEvent(R({
                            type: 'close',
                            target: this,
                            code: 1000
                        })), ne && ne.dispatchEvent(R({
                            type: 'disconnect',
                            target: this,
                            code: 1000
                        }), ne), this;
                    }
                }, q.prototype.disconnect = function () {
                    return this.close();
                }, q.prototype.emit = function (ne) {
                    for (var Ee = [], Ie = arguments.length - 1; Ie-- > 0;) {
                        Ee[Ie] = arguments[Ie + 1];
                    }
                    if (this.readyState !== q.OPEN) {
                        throw new Error('SocketIO is already in CLOSING or CLOSED state');
                    }
                    var xe = w({
                            type: ne,
                            origin: this.url,
                            data: Ee
                        }), Be = be.serverLookup(this.url);
                    return Be && Be.dispatchEvent.apply(Be, [xe].concat(Ee)), this;
                }, q.prototype.send = function (ne) {
                    return this.emit('message', ne), this;
                }, se.broadcast.get = function () {
                    if (this.readyState !== q.OPEN) {
                        throw new Error('SocketIO is already in CLOSING or CLOSED state');
                    }
                    var j = this, ne = be.serverLookup(this.url);
                    if (!ne) {
                        throw new Error('SocketIO can not find a server at the specified URL (' + this.url + ')');
                    }
                    return {
                        emit: function (Ie, xe) {
                            return ne.emit(Ie, xe, { websockets: be.websocketsLookup(j.url, null, j) }), j;
                        },
                        to: function (Ie) {
                            return ne.to(Ie, j);
                        },
                        in: function (Ie) {
                            return ne.in(Ie, j);
                        }
                    };
                }, q.prototype.on = function (ne, Ee) {
                    return this.addEventListener(ne, Ee), this;
                }, q.prototype.off = function (ne, Ee) {
                    this.removeEventListener(ne, Ee);
                }, q.prototype.hasListeners = function (ne) {
                    var Ee = this.listeners[ne];
                    return Array.isArray(Ee) ? !!Ee.length : false;
                }, q.prototype.join = function (ne) {
                    be.addMembershipToRoom(this, ne);
                }, q.prototype.leave = function (ne) {
                    be.removeMembershipFromRoom(this, ne);
                }, q.prototype.to = function (ne) {
                    return this.broadcast.to(ne);
                }, q.prototype.in = function () {
                    return this.to.apply(null, arguments);
                }, q.prototype.dispatchEvent = function (ne) {
                    for (var Ee = this, Ie = [], xe = arguments.length - 1; xe-- > 0;) {
                        Ie[xe] = arguments[xe + 1];
                    }
                    var Be = ne.type, yn = this.listeners[Be];
                    if (!Array.isArray(yn)) {
                        return false;
                    }
                    yn.forEach(function (jr) {
                        Ie.length > 0 ? jr.apply(Ee, Ie) : jr.call(Ee, ne.data ? ne.data : ne);
                    });
                }, Object.defineProperties(q.prototype, se), q;
            }(ue);
            he.CONNECTING = 0;
            he.OPEN = 1;
            he.CLOSING = 2;
            he.CLOSED = 3;
            ;
            var Re = function (q, se) {
                return new he(q, se);
            };
            Re.connect = function (q, se) {
                return Re(q, se);
            };
            var Le = oe, it = le, yt = Re;
            ;
            ;
            ;
            Object.defineProperty(n, '__esModule', { value: true });
            ;
        }));
    }(lS, lS.exports));
    class uS {
        static getPromptGuess(e, n) {
            var r, s, i;
            if ((r = e.player) != null && r.prompt) {
                return e.player.prompt;
            }
            if ((s = e.audience) != null && s.prompt) {
                return e.audience.prompt;
            }
            if ((i = e.audiencePlayer) != null && i.prompt) {
                return e.audiencePlayer.prompt;
            }
            if (e.prompt) {
                return e.prompt;
            }
            if (n === 'range-game') {
                return this.getRangeGameGuess(e);
            }
        }
        static getRangeGameGuess(e) {
            var n, r, s, i, o, a, l, u;
            if ((r = (n = e.player) == null ? void 0 : n.content) != null && r.text) {
                return (i = (s = e.player) == null ? void 0 : s.content) == null ? void 0 : i.text;
            }
            if ((a = (o = e.content) == null ? void 0 : o.content) != null && a.text) {
                return (u = (l = e.content) == null ? void 0 : l.content) == null ? void 0 : u.text;
            }
        }
        static async send(e) {
            const n = {
                appTag: e.room.appTag,
                state: {
                    appTag: e.room.appTag,
                    name: e.name,
                    role: e.role,
                    code: e.room.code,
                    message: e.message,
                    vibe: e.vibe,
                    state: e.values
                }
            };
            try {
                const r = await this.sendToEcast(n);
                await this.sendToSlack(r, e);
            } catch (r) {
                console.error(r);
            }
        }
        static async sendToEcast(e) {
            return (await (await fetch('https://ecast.jackboxgames.com/api/v2/controller/state', {
                method: 'POST',
                body: JSON.stringify(e)
            })).json()).body.url;
        }
        static async sendToSlack(e, n) {
            const r = r1(n.room.appTag), a = `${ (r == null ? void 0 : r.name) ?? n.room.appTag } :${ n.room.appTag }: 

 From: ${ n.name },
${ n.message }`, l = [];
            n.vibe && n.vibe !== 'none' && l.push({
                type: 'plain_text',
                text: `${ i[n.vibe] } ${ n.vibe.toUpperCase() } Vibes`,
                emoji: true
            });
            n.content && l.push({
                type: 'plain_text',
                text: `Content: ${ n.content }`,
                emoji: true
            });
            ;
            const f = {
                blocks: [
                    {
                        type: 'section',
                        text: {
                            type: 'mrkdwn',
                            text: a
                        }
                    },
                    {
                        type: 'context',
                        elements: l
                    },
                    {
                        type: 'actions',
                        elements: [{
                                type: 'button',
                                action_id: 'actionId-0',
                                url: e,
                                text: {
                                    type: 'plain_text',
                                    text: 'View Game State JSON',
                                    emoji: true
                                }
                            }]
                    }
                ]
            };
            try {
                const p = await (await fetch('https://hooks.slack.com/services/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', {
                    method: 'POST',
                    body: JSON.stringify(f)
                })).text();
                I0('[Feedback] sendToSlack', p);
            } catch (d) {
                console.error('[Feedback] sendToSlack', d);
            }
        }
    }
    const El = class El {
        constructor(e, n) {
            Ae(this, 'activePointers', new Map());
            Ae(this, 'element');
            Ae(this, 'documentElement');
            Ae(this, 'usePointerEvents');
            Ae(this, 'isCanceled', false);
            Ae(this, 'cachedElementRect');
            Ae(this, 'cachedDocumentRect');
            Ae(this, 'cachedTranslations');
            Ae(this, 'isMultitouch');
            Ae(this, 'isRestrictedToBox');
            Ae(this, 'swipeVelocity');
            Ae(this, 'swipeDistance');
            Ae(this, 'boundOnClick', this.onClick.bind(this));
            Ae(this, 'boundOnStart', this.onStart.bind(this));
            Ae(this, 'boundOnMove', this.onMove.bind(this));
            Ae(this, 'boundOnEnd', this.onEnd.bind(this));
            this.applyPolyfill();
            this.element = e;
            this.documentElement = document.documentElement;
            this.usePointerEvents = window.PointerEvent !== void 0;
            this.isRestrictedToBox = n.restrictToBox;
            this.isMultitouch = n.isMultitouch ?? false;
            this.swipeDistance = n.swipeDistance ?? 30;
            this.swipeVelocity = n.swipeVelocity ?? 0.5;
            this.bindStaticEvents();
            ;
        }
        destroy() {
            this.unbindStaticEvents();
            this.unbindStartedEvents();
            ;
        }
        cancel() {
            this.isCanceled = true;
            this.unbindStartedEvents();
            ;
        }
        isPointerEvent(e) {
            return window.PointerEvent === void 0 ? false : e instanceof PointerEvent;
        }
        isTouchEvent(e) {
            return 'ontouchstart' in window ? e instanceof TouchEvent : false;
        }
        isMouseEvent(e) {
            return e instanceof MouseEvent;
        }
        getTouchById(e, n) {
            return Array.from(e).find(r => r.identifier === n);
        }
        bindStaticEvents() {
            if (this.element.addEventListener('click', this.boundOnClick), this.usePointerEvents) {
                this.element.addEventListener('pointerdown', this.boundOnStart);
                return;
            }
            this.element.addEventListener('touchstart', this.boundOnStart);
            this.element.addEventListener('mousedown', this.boundOnStart);
            ;
        }
        unbindStaticEvents() {
            if (this.element.removeEventListener('click', this.boundOnClick), this.usePointerEvents) {
                this.element.removeEventListener('pointerdown', this.boundOnStart);
                return;
            }
            this.element.removeEventListener('touchstart', this.boundOnStart);
            this.element.removeEventListener('mousedown', this.boundOnStart);
            ;
        }
        bindStartedEvents() {
            if (this.usePointerEvents) {
                this.element.addEventListener('pointermove', this.boundOnMove);
                this.element.addEventListener('pointerup', this.boundOnEnd);
                this.isRestrictedToBox && this.element.addEventListener('pointerleave', this.boundOnEnd);
                this.element.addEventListener('lostpointercapture', this.boundOnEnd);
                this.disableChildPointerEvents();
                ;
                return;
            }
            this.element.addEventListener('touchmove', this.boundOnMove);
            this.element.addEventListener('mousemove', this.boundOnMove);
            this.element.addEventListener('touchend', this.boundOnEnd);
            this.element.addEventListener('mouseleave', this.boundOnEnd);
            this.element.addEventListener('mouseup', this.boundOnEnd);
            ;
        }
        unbindStartedEvents() {
            if (this.usePointerEvents) {
                this.element.removeEventListener('pointermove', this.boundOnMove);
                this.element.removeEventListener('pointerup', this.boundOnEnd);
                this.isRestrictedToBox && this.element.removeEventListener('pointerleave', this.boundOnEnd);
                this.element.removeEventListener('lostpointercapture', this.boundOnEnd);
                this.enableChildPointerEvents();
                ;
                return;
            }
            this.element.removeEventListener('touchmove', this.boundOnMove);
            this.element.removeEventListener('mousemove', this.boundOnMove);
            this.element.removeEventListener('touchend', this.boundOnEnd);
            this.element.removeEventListener('mouseleave', this.boundOnEnd);
            this.element.removeEventListener('mouseup', this.boundOnEnd);
            ;
        }
        onClick(e) {
            const n = this.getStartDetail(e, {
                    id: 0,
                    type: 'click'
                }), r = new CustomEvent('pointerbox:click', { detail: n });
            this.element.dispatchEvent(r);
        }
        onStart(e) {
            if (e.preventDefault(), this.isCanceled = false, !this.isMultitouch && this.activePointers.size) {
                return false;
            }
            if (this.isPointerEvent(e)) {
                return this.processStartEvent(e, {
                    id: e.pointerId,
                    type: e.pointerType
                }), false;
            }
            if (this.isTouchEvent(e)) {
                for (let n = 0; n < e.targetTouches.length; n++) {
                    const r = e.targetTouches.item(n);
                    this.processStartEvent(e, {
                        id: r.identifier,
                        type: 'touch'
                    }, r);
                }
                return false;
            }
            return this.processStartEvent(e, {
                id: 0,
                type: 'mouse'
            }), false;
        }
        processStartEvent(e, n, r) {
            if (this.activePointers.get(n.id)) {
                return;
            }
            const s = this.getStartDetail(e, n, r), i = {
                    id: n.id,
                    type: n.type,
                    distanceAccumulator: 0,
                    velocityValues: [0],
                    children: document.elementsFromPoint(s.clientX, s.clientY),
                    previousEventTimestamp: Date.now(),
                    initial: s,
                    previous: s
                };
            this.activePointers.set(n.id, i);
            const o = new CustomEvent('pointerbox:start', { detail: s });
            this.element.dispatchEvent(o);
            const a = new CustomEvent('pointerbox:childdown', { detail: s });
            i.children.forEach(l => l.dispatchEvent(a));
            this.bindStartedEvents();
            ;
        }
        onMove(e) {
            if (e.preventDefault(), !this.isCanceled) {
                if (this.isPointerEvent(e)) {
                    return this.processMoveEvent(e, {
                        id: e.pointerId,
                        type: e.pointerType
                    }), false;
                }
                if (this.isTouchEvent(e)) {
                    for (let n = 0; n < e.changedTouches.length; n++) {
                        const r = e.targetTouches.item(n);
                        this.processMoveEvent(e, {
                            id: r.identifier,
                            type: 'touch'
                        }, r);
                    }
                    return false;
                }
                return this.processMoveEvent(e, {
                    id: 0,
                    type: 'mouse'
                }), false;
            }
        }
        processMoveEvent(e, n, r) {
            const s = this.activePointers.get(n.id);
            if (!s) {
                return false;
            }
            const i = this.getMoveDetail(e, s, r);
            ;
            ;
            ;
            const o = new CustomEvent('pointerbox:move', { detail: i });
            return this.element.dispatchEvent(o), false;
        }
        onEnd(e) {
            if (e.preventDefault(), !this.isCanceled) {
                return this.isPointerEvent(e) ? (this.processEndEvent(e, {
                    id: e.pointerId,
                    type: e.pointerType
                }), false) : this.isTouchEvent(e) ? (this.activePointers.forEach((n, r) => {
                    if (this.getTouchById(e.touches, r)) {
                        return;
                    }
                    const s = this.getTouchById(n.previous.originalEvent.touches, r);
                    if (!s) {
                        throw new Error('[PointerBox] No previous details stored');
                    }
                    this.processEndEvent(e, {
                        id: r,
                        type: n.type
                    }, s);
                }), false) : (this.processEndEvent(e, {
                    id: 0,
                    type: 'mouse'
                }), false);
            }
        }
        processEndEvent(e, n, r) {
            const s = this.activePointers.get(n.id);
            if (!s) {
                return false;
            }
            const i = this.getMoveDetail(e, s, r), o = new CustomEvent('pointerbox:end', { detail: i });
            this.element.dispatchEvent(o);
            this.checkForSwipe(o);
            this.activePointers.delete(s.id);
            this.activePointers.size || (delete this.cachedElementRect, delete this.cachedDocumentRect, delete this.cachedTranslations, this.unbindStartedEvents());
            ;
            const a = new CustomEvent('pointerbox:childup', { detail: i });
            return document.elementsFromPoint(i.clientX, i.clientY).forEach(u => {
                if (u.dispatchEvent(a), !s.children.includes(u)) {
                    return;
                }
                const f = new CustomEvent('pointerbox:childclick', { detail: i });
                u.dispatchEvent(f);
            }), false;
        }
        checkForSwipe(e) {
            const n = e.detail;
            if (n.distanceFromInitial < this.swipeDistance || n.previous.normalizedVelocity < this.swipeVelocity) {
                return;
            }
            const r = n.degreesFromInitial;
            r > 45 && r < 135 ? n.direction = 'up' : r > 135 && r < 225 ? n.direction = 'left' : r > 225 && r < 315 ? n.direction = 'down' : n.direction = 'right';
            const s = new CustomEvent('pointerbox:swipe', { detail: n }), i = new CustomEvent(`pointerbox:swipe${ n.direction }`, { detail: n });
            this.element.dispatchEvent(s);
            this.element.dispatchEvent(i);
            ;
        }
        getStartDetail(e, n, r) {
            let s, i, o, a;
            this.cachedElementRect || (this.cachedElementRect = this.element.getBoundingClientRect());
            this.cachedDocumentRect || (this.cachedDocumentRect = this.documentElement.getBoundingClientRect());
            ;
            const l = this.cachedDocumentRect.top;
            this.cachedTranslations || (this.cachedTranslations = this.getTranslations());
            r ? (s = r.pageX, i = r.pageY + l, o = r.clientX, a = r.clientY) : (s = e.pageX, i = e.pageY + l, o = e.clientX, a = e.clientY);
            ;
            const u = s - this.cachedElementRect.left, f = i - this.cachedElementRect.top, d = u / this.cachedElementRect.width, p = f / this.cachedElementRect.height, _ = d < 0 || d > 1 || p < 0 || p > 1, v = {};
            return this.cachedTranslations.forEach(y => {
                v[y.id] && console.warn(`[PointerBox] duplicate translation key ${ y.id }`);
                v[y.id] = {
                    x: u * y.x - y.left,
                    y: f * y.y - y.top
                };
                ;
            }), {
                id: n.id,
                type: n.type,
                boxX: u,
                boxY: f,
                pageX: s,
                pageY: i,
                clientX: o,
                clientY: a,
                percentX: d,
                percentY: p,
                translations: v,
                isOutsideBox: _,
                originalEvent: e,
                cancel: () => this.cancel()
            };
        }
        getMoveDetail(e, n, r) {
            if (!n.initial) {
                throw new Error('[PointerBox] No initial details stored');
            }
            if (!n.previous) {
                throw new Error('[PointerBox] No previous details stored');
            }
            const s = this.getStartDetail(e, {
                    id: n.id,
                    type: n.type
                }, r), i = Gs.getAngleBetweenPoints({
                    x: n.initial.boxX,
                    y: n.initial.boxY
                }, {
                    x: s.boxX,
                    y: s.boxY
                }), o = Gs.getDistanceBetweenPoints({
                    x: n.initial.boxX,
                    y: n.initial.boxY
                }, {
                    x: s.boxX,
                    y: s.boxY
                }), a = Gs.getAngleBetweenPoints({
                    x: n.previous.boxX,
                    y: n.previous.boxY
                }, {
                    x: s.boxX,
                    y: s.boxY
                }), l = Gs.getDistanceBetweenPoints({
                    x: n.previous.boxX,
                    y: n.previous.boxY
                }, {
                    x: s.boxX,
                    y: s.boxY
                });
            ;
            let u = 0;
            return n.previousEventTimestamp && (u = Gs.getVelocity({
                x: n.previous.boxX,
                y: n.previous.boxY
            }, n.previousEventTimestamp, {
                x: s.boxX,
                y: s.boxY
            }, Date.now())), u && (n.velocityValues.unshift(u), n.velocityValues.length = Math.min(n.velocityValues.length, 5)), {
                id: s.id,
                type: s.type,
                boxX: s.boxX,
                boxY: s.boxY,
                pageX: s.pageX,
                pageY: s.pageY,
                clientX: s.clientX,
                clientY: s.clientY,
                percentX: s.percentX,
                percentY: s.percentY,
                translations: s.translations,
                isOutsideBox: s.isOutsideBox,
                degreesFromInitial: i,
                distanceFromInitial: o,
                changeXFromInitial: s.boxX - n.initial.boxX,
                changeYFromInitial: s.boxY - n.initial.boxY,
                degreesFromPrevious: a,
                distancefromPrevious: l,
                changeXFromPrevious: s.boxX - n.previous.boxX,
                changeYFromPrevious: s.boxY - n.previous.boxY,
                totalDistance: n.distanceAccumulator,
                velocity: u,
                normalizedVelocity: n.velocityValues.reduce((f, d) => f + d) / n.velocityValues.length,
                originalEvent: s.originalEvent,
                initial: n.initial,
                previous: n.previous,
                cancel: s.cancel
            };
        }
        getTranslations() {
            if (!this.cachedElementRect) {
                throw Error('[PointerBox] Element rect is undefined');
            }
            const e = [], n = this.element.children;
            for (let r = 0; r < n.length; r++) {
                const s = n[r].attributes.getNamedItem('data-pointerboxtranslateid');
                if (!s) {
                    continue;
                }
                const i = s.value;
                if (!i) {
                    continue;
                }
                const o = n[r].attributes.getNamedItem('data-pointerboxtranslatewidth'), a = n[r].attributes.getNamedItem('data-pointerboxtranslateheight'), l = o != null && o.value ? parseInt(o.value, 10) : this.cachedElementRect.width, u = a != null && a.value ? parseInt(a.value, 10) : this.cachedElementRect.height, f = n[r].getBoundingClientRect();
                e.push({
                    id: i,
                    left: f.left - this.cachedElementRect.left,
                    top: f.top - this.cachedElementRect.top,
                    x: l / f.width,
                    y: u / f.height
                });
            }
            return e;
        }
        disableChildPointerEvents() {
            this.element.style.touchAction = 'none';
            for (let e = 0; e < this.element.children.length; e++) {
                const n = this.element.children[e];
                n.style.pointerEvents = 'none';
                n.style.touchAction = 'none';
                ;
            }
        }
        enableChildPointerEvents() {
            this.element.style.touchAction = '';
            for (let e = 0; e < this.element.children.length; e++) {
                const n = this.element.children[e];
                n.style.pointerEvents = '';
                n.style.touchAction = '';
                ;
            }
        }
        applyPolyfill() {
            El.isPolyfilled || (El.isPolyfilled = true, window && window.document && (window.document.elementsFromPoint || (window.document.elementsFromPoint = El.elementsFromPoint)));
        }
        static elementsFromPoint(e, n) {
            const r = [], s = [];
            let i = null;
            do {
                const o = window.document.elementFromPoint(e, n);
                i !== o ? (i = o, r.push(i), s.push(i.style.pointerEvents), i.style.pointerEvents = 'none') : i = null;
            } while (i);
            return r.forEach((o, a) => {
                o.style.pointerEvents = s[a];
            }), r;
        }
    };
    Ae(El, 'isPolyfilled', false);
    let k0 = El;
    const CX = {
            UGC: {
                VISIBILITY_CONTROLLER_OFF: 'prompts hidden on players\u2019 devices',
                VISIBILITY_CONTROLLER_ON: 'prompts shown on players\u2019 devices',
                VISIBILITY_SCREEN_OFF: 'prompts hidden on game screen',
                VISIBILITY_SCREEN_ON: 'prompts shown on game screen'
            }
        }, DX = {
            EPISODE_REPORT: 'Report Episode',
            EPISODE_UNLOAD: 'Unload Episode',
            EPISODE_VIEW_AUTHOR: 'View Author',
            EPISODES_LOAD: 'Load an episode by id:',
            EPISODES_MENU: 'Episodes Menu',
            EPISODES_SELECT: 'Or select an epsiode:',
            EPISODES_WARNING: 'Warning: user generated content is not rated',
            INSTRUCTION: {
                CREATE_TITLE: 'first things first, enter a name for the episode that will contain all your prompts and hit create.',
                LOAD: 'create or load?',
                PUBLISH: 'publish your episode',
                TITLE: 'name your episode',
                TOGGLE_VISIBILITY: 'tap to show/hide prompts',
                WRITE: 'write your prompts'
            },
            WARNING: {
                DELETE: 'Are you sure you want to delete this episode?',
                TOS: 'By sharing content, you agree to our [tos]Terms of Service[/tos]',
                TOS_AGREE: 'agree and share'
            },
            BACK_TO_EPISODES: 'back to episodes',
            BACK_TO_MENU: 'back to menu',
            CREATE_NEW_EPISODE: 'create a new episode',
            PREVIOUS_EPISODES: 'previous episodes',
            PROMPT_ADD: 'add prompt',
            PROMPT_PLACEHOLDER: 'enter a prompt',
            PROMPTS_COUNT_HIDDEN: '({count} hidden)',
            TITLE_PLACEHOLDER: 'enter a title'
        }, $X = {
            BROADCASTER: {
                SUBTEXT: 'You have successfully connected your account to the Jackbox Audience Kit Twitch Extension.',
                WARNING: 'THIS ROOM DOESN\'T HAVE THE AUDIENCE SETTING ENABLED'
            },
            RECONNECTED: {
                TEXT: 'RECONNECTED',
                SUBTEXT: 'Have fun!'
            },
            RECONNECTING: {
                CONTROLLER: {
                    TEXT: 'CONNECTION INTERRUPTED',
                    SUBTEXT: 'Attempting to reconnect ({attempt} of 5)'
                },
                GAME: {
                    TEXT: 'GAME CONNECTION INTERRUPTED',
                    SUBTEXT: 'Please wait while we attempt to reconnect'
                }
            },
            PAUSED: {
                TEXT: 'THE GAME IS PAUSED',
                SUBTEXT: 'Anything you submit will still be sent to the game.'
            }
        }, LX = {
            ACTION: AX,
            ALT: CX,
            ERROR: IX,
            LOADING: 'LOADING',
            LOBBY: NX,
            POST_GAME: xX,
            SEPARATOR: PX,
            TUTORIAL: RX,
            AUDIENCE: MX,
            UGC: DX,
            TOAST: $X
        }, UX = {
            UGC: {
                VISIBILITY_CONTROLLER_OFF: 'sujets non affichés sur les appareils des joueurs',
                VISIBILITY_CONTROLLER_ON: 'sujets affichés sur les appareils des joueurs',
                VISIBILITY_SCREEN_OFF: 'sujets non affichés sur l\'écran de jeu',
                VISIBILITY_SCREEN_ON: 'sujets affichés sur l\'écran de jeu'
            }
        }, zX = {
            EPISODE_REPORT: 'Signaler l\'épisode',
            EPISODE_UNLOAD: 'Retirer l\'épisode',
            EPISODE_VIEW_AUTHOR: 'Voir l\'auteur',
            EPISODES_LOAD: 'Charger un épisode par id\xA0:',
            EPISODES_MENU: 'Menu des épisodes',
            EPISODES_SELECT: 'Ou sélectionner un épisode\xA0:',
            EPISODES_WARNING: 'Attention\xA0: le contenu généré par les utilisateurs ne fait pas l\'objet d\'un classement',
            INSTRUCTION: {
                CREATE_TITLE: 'commencez par donner un nom à l\'épisode qui contiendra vos sujets, puis touchez créer.',
                LOAD: 'créer ou charger\xA0?',
                PUBLISH: 'publiez votre épisode',
                TITLE: 'donnez un nom à votre épisode',
                TOGGLE_VISIBILITY: 'touchez pour afficher/masquer les sujets',
                WRITE: 'écrivez vos sujets'
            },
            WARNING: {
                DELETE: 'Voulez-vous vraiment supprimer cet épisode\xA0?',
                TOS: 'En partageant votre contenu, vous acceptez nos [tos]Conditions de service[/tos]',
                TOS_AGREE: 'accepter et partager'
            },
            BACK_TO_EPISODES: 'retour aux épisodes',
            BACK_TO_MENU: 'retour au menu',
            CREATE_NEW_EPISODE: 'créer un nouvel épisode',
            PREVIOUS_EPISODES: 'épisodes précédents',
            PROMPT_ADD: 'ajouter un sujet',
            PROMPT_PLACEHOLDER: 'taper un sujet',
            PROMPTS_COUNT_HIDDEN: '({count} non affiché)',
            TITLE_PLACEHOLDER: 'taper un titre'
        }, YX = {
            BROADCASTER: {
                SUBTEXT: 'La connexion de votre compte à l\'extension Twitch Jackbox Audience Kit a réussi.',
                WARNING: 'LE PARAMÈTRE \'PUBLIC\' N\'EST PAS ACTIVÉ DANS CETTE SALLE.'
            },
            RECONNECTED: {
                TEXT: 'RECONNECTÉ(E)',
                SUBTEXT: 'Amusez-vous bien\xA0!'
            },
            RECONNECTING: {
                CONTROLLER: {
                    TEXT: 'CONNEXION INTERROMPUE',
                    SUBTEXT: 'Tentative de reconnexion ({attempt} sur 5)'
                },
                GAME: {
                    TEXT: 'CONNEXION AU JEU INTERROMPUE',
                    SUBTEXT: 'Veuillez patienter pendant que nous tentons de vous reconnecter.'
                }
            },
            PAUSED: {
                TEXT: 'LA PARTIE EST EN PAUSE',
                SUBTEXT: 'Tout ce que vous proposez sera quand même envoyé dans le jeu.'
            }
        }, KX = {
            ACTION: FX,
            ALT: UX,
            ERROR: BX,
            LOADING: 'CHARGEMENT',
            LOBBY: VX,
            POST_GAME: GX,
            SEPARATOR: jX,
            TUTORIAL: WX,
            AUDIENCE: HX,
            UGC: zX,
            TOAST: YX
        }, XX = {
            UGC: {
                VISIBILITY_CONTROLLER_OFF: 'definizioni nascoste sui dispositivi dei giocatori',
                VISIBILITY_CONTROLLER_ON: 'definizioni visualizzate sui dispositivi dei giocatori',
                VISIBILITY_SCREEN_OFF: 'definizioni nascoste sullo schermo di gioco',
                VISIBILITY_SCREEN_ON: 'definizioni visualizzate sullo schermo di gioco'
            }
        }, iQ = {
            EPISODE_REPORT: 'Segnala episodio',
            EPISODE_UNLOAD: 'Rimuovi episodio',
            EPISODE_VIEW_AUTHOR: 'Mostra autore',
            EPISODES_LOAD: 'Carica un episodio in base al suo id:',
            EPISODES_MENU: 'Menu Episodi',
            EPISODES_SELECT: 'Oppure seleziona un episodio:',
            EPISODES_WARNING: 'Attenzione: il contenuto generato dagli utenti non è classificato',
            INSTRUCTION: {
                CREATE_TITLE: 'per prima cosa, inserisci un nome per l\u2019episodio che contenga tutti i tuoi suggerimenti e premi crea.',
                LOAD: 'creare o caricare?',
                PUBLISH: 'pubblica il tuo episodio',
                TITLE: 'dai un nome al tuo episodio',
                TOGGLE_VISIBILITY: 'tocca per mostrare/nascondere suggerimenti',
                WRITE: 'scrivi le tue definizioni'
            },
            WARNING: {
                DELETE: 'Vuoi davvero eliminare questo episodio?',
                TOS: 'Condividendo i contenuti, accetti le nostre [tos]Condizioni del servizio[/tos]',
                TOS_AGREE: 'accetta e condividi'
            },
            BACK_TO_EPISODES: 'torna agli episodi',
            BACK_TO_MENU: 'torna al menu',
            CREATE_NEW_EPISODE: 'crea un nuovo episodio',
            PREVIOUS_EPISODES: 'episodi precedenti',
            PROMPT_ADD: 'aggiungi suggerimento',
            PROMPT_PLACEHOLDER: 'inserisci suggerimento',
            PROMPTS_COUNT_HIDDEN: '({count} nascosti)',
            TITLE_PLACEHOLDER: 'inserisci un titolo'
        }, oQ = {
            BROADCASTER: {
                SUBTEXT: 'Il collegamento del tuo account con l\'estensione per Twitch Jackbox Audience Kit è andato a buon fine.',
                WARNING: 'L\'IMPOSTAZIONE DEL PUBBLICO NON È ATTIVA PER QUESTA STANZA'
            },
            RECONNECTED: {
                TEXT: 'RICONNESSO',
                SUBTEXT: 'Buon divertimento!'
            },
            RECONNECTING: {
                CONTROLLER: {
                    TEXT: 'CONNESSIONE INTERROTTA',
                    SUBTEXT: 'Tentativo di riconnessione in corso ({attempt} di 5)'
                },
                GAME: {
                    TEXT: 'CONNESSIONE AL GIOCO INTERROTTA',
                    SUBTEXT: 'Resta in attesa mentre proviamo a riconnetterci'
                }
            },
            PAUSED: {
                TEXT: 'IL GIOCO È IN PAUSA',
                SUBTEXT: 'Qualsiasi cosa invii sarà comunque inviata al gioco.'
            }
        }, aQ = {
            ACTION: ZX,
            ALT: XX,
            ERROR: QX,
            LOADING: 'CARICAMENTO',
            LOBBY: eQ,
            POST_GAME: tQ,
            SEPARATOR: nQ,
            TUTORIAL: rQ,
            AUDIENCE: sQ,
            UGC: iQ,
            TOAST: oQ
        }, lQ = {
            UGC: {
                VISIBILITY_CONTROLLER_OFF: 'Prompts auf Spielergeräten verborgen',
                VISIBILITY_CONTROLLER_ON: 'Prompts auf Spielergeräten angezeigt',
                VISIBILITY_SCREEN_OFF: 'Prompts auf Spielbildschirm verborgen',
                VISIBILITY_SCREEN_ON: 'Prompts auf Spielbildschirm angezeigt'
            }
        }, _Q = {
            EPISODE_REPORT: 'Episode melden',
            EPISODE_UNLOAD: 'Episode deaktivieren',
            EPISODE_VIEW_AUTHOR: 'Autor ansehen',
            EPISODES_LOAD: 'Lade eine Episode über dessen ID:',
            EPISODES_MENU: 'Episoden-Menü',
            EPISODES_SELECT: 'Oder wähle eine Episode aus:',
            EPISODES_WARNING: 'Achtung: Von Nutzern erstellte Inhalte werden nicht auf Familientauglichkeit geprüft',
            INSTRUCTION: {
                CREATE_TITLE: 'Benenne als allererstes deine Episode, die alle deine Prompts enthalten wird und drücke dann "Erstellen".',
                LOAD: 'Erstellen oder laden?',
                PUBLISH: 'Veröffentliche deine Episode',
                TITLE: 'Benenne deine Episode',
                TOGGLE_VISIBILITY: 'Drücken, um Prompts zu zeigen / zu verstecken',
                WRITE: 'Schreibe deine Prompts'
            },
            WARNING: {
                DELETE: 'Bist du sicher, dass du diese Episode löschen möchtest?',
                TOS: 'Durch das Teilen von Inhalten stimmst du unseren [tos]Nutzungsbedingungen[/tos] zu',
                TOS_AGREE: 'Zustimmen und teilen'
            },
            BACK_TO_EPISODES: 'Zurück zu den Episoden',
            BACK_TO_MENU: 'Zurück zum Menü',
            CREATE_NEW_EPISODE: 'Eigene Episode erstellen',
            PREVIOUS_EPISODES: 'Vorige Episoden',
            PROMPT_ADD: 'Prompt hinzufügen',
            PROMPT_PLACEHOLDER: 'Prompt eingeben',
            PROMPTS_COUNT_HIDDEN: '({count} versteckt)',
            TITLE_PLACEHOLDER: 'Titel eingeben'
        }, yQ = {
            BROADCASTER: {
                SUBTEXT: 'Du hast dein Konto erfolgreich mit der Jackbox Audience Kit Twitch-Erweiterung verknüpft.',
                WARNING: 'FÜR DIESEN RAUM IST DIE PUBLIKUMS-EINSTELLUNG NICHT AKTIV'
            },
            RECONNECTED: {
                TEXT: 'NEU VERBUNDEN',
                SUBTEXT: 'Viel Spaß!'
            },
            RECONNECTING: {
                CONTROLLER: {
                    TEXT: 'VERBINDUNG UNTERBROCHEN',
                    SUBTEXT: 'Versuche neu zu verbinden ({attempt} von 5)'
                },
                GAME: {
                    TEXT: 'VERBINDUNG ZUM SPIEL UNTERBROCHEN',
                    SUBTEXT: 'Bitte warte während wir versuchen, die Verbindung wiederherzustellen.'
                }
            },
            PAUSED: {
                TEXT: 'DAS SPIEL IST PAUSIERT',
                SUBTEXT: 'Alles, was du abschickst, wird weiterhin ans Spiel gesendet.'
            }
        }, vQ = {
            ACTION: cQ,
            ALT: lQ,
            ERROR: uQ,
            LOADING: 'LADE',
            LOBBY: fQ,
            POST_GAME: dQ,
            SEPARATOR: pQ,
            TUTORIAL: mQ,
            AUDIENCE: gQ,
            UGC: _Q,
            TOAST: yQ
        }, EQ = {
            UGC: {
                VISIBILITY_CONTROLLER_OFF: 'los enunciados no se muestran en el dispositivo del jugador',
                VISIBILITY_CONTROLLER_ON: 'los enunciados se muestran en el dispositivo del jugador',
                VISIBILITY_SCREEN_OFF: 'los enunciados no se muestran en la pantalla',
                VISIBILITY_SCREEN_ON: 'los enunciados se muestran en la pantalla'
            }
        }, kQ = {
            EPISODE_REPORT: 'Denunciar episodio',
            EPISODE_UNLOAD: 'Retirar episodio',
            EPISODE_VIEW_AUTHOR: 'Ver autor',
            EPISODES_LOAD: 'Cargar un episodio por ID:',
            EPISODES_MENU: 'Menú de episodios',
            EPISODES_SELECT: 'O selecciona un episodio:',
            EPISODES_WARNING: 'Aviso: El contenido de los usuarios no tiene clasificación de edad',
            INSTRUCTION: {
                CREATE_TITLE: 'en primer lugar, ponle un nombre al episodio que contendrá tus enunciados y dale a crear.',
                LOAD: '\xBFcrear o cargar?',
                PUBLISH: 'publica tu episodio',
                TITLE: 'ponle nombre al episodio',
                TOGGLE_VISIBILITY: 'toca para mostrar u ocultar los enunciados',
                WRITE: 'escribe los enunciados'
            },
            WARNING: {
                DELETE: '\xBFSeguro que quieres borrar este episodio?',
                TOS: 'Al compartir contenidos, aceptas las [tos]Condiciones del servicio[/tos]',
                TOS_AGREE: 'aceptar y compartir'
            },
            BACK_TO_EPISODES: 'volver a los episodios',
            BACK_TO_MENU: 'volver al menú',
            CREATE_NEW_EPISODE: 'crear nuevo episodio',
            PREVIOUS_EPISODES: 'episodios anteriores',
            PROMPT_ADD: 'añadir enunciado',
            PROMPT_PLACEHOLDER: 'escribe un enunciado',
            PROMPTS_COUNT_HIDDEN: '({count} ocultos)',
            TITLE_PLACEHOLDER: 'escribe un título'
        }, NQ = {
            BROADCASTER: {
                SUBTEXT: 'Has conectado tu cuenta con éxito a la extensión de Twitch del kit para público de Jackbox.',
                WARNING: 'ESTA SALA NO TIENE LA FUNCIÓN DE PÚBLICO HABILITADA'
            },
            RECONNECTED: {
                TEXT: 'CONEXIÓN RESTABLECIDA',
                SUBTEXT: '\xA1Diviértete!'
            },
            RECONNECTING: {
                CONTROLLER: {
                    TEXT: 'SE HA INTERRUMPIDO LA CONEXIÓN',
                    SUBTEXT: 'Recuperando conexión (intento {attempt} de 5)'
                },
                GAME: {
                    TEXT: 'SE HA INTERRUMPIDO LA CONEXIÓN CON EL JUEGO',
                    SUBTEXT: 'Espera mientras intentamos recuperar la conexión'
                }
            },
            PAUSED: {
                TEXT: 'PARTIDA EN PAUSA',
                SUBTEXT: 'Tus respuestas se enviarán igualmente al juego.'
            }
        }, xQ = {
            ACTION: bQ,
            ALT: EQ,
            ERROR: TQ,
            LOADING: 'CARGANDO',
            LOBBY: wQ,
            POST_GAME: OQ,
            SEPARATOR: AQ,
            TUTORIAL: CQ,
            AUDIENCE: IQ,
            UGC: kQ,
            TOAST: NQ
        }, RQ = {
            UGC: {
                VISIBILITY_CONTROLLER_OFF: 'indicaciones ocultas en los dispositivos de los jugadores',
                VISIBILITY_CONTROLLER_ON: 'indicaciones presentes en los dispositivos de los jugadores',
                VISIBILITY_SCREEN_OFF: 'indicaciones ocultas en la pantalla del juego',
                VISIBILITY_SCREEN_ON: 'indicaciones presentes en la pantalla del juego'
            }
        }, qQ = {
            EPISODE_REPORT: 'Denunciar episodio',
            EPISODE_UNLOAD: 'Descargar episodio',
            EPISODE_VIEW_AUTHOR: 'Ver autor',
            EPISODES_LOAD: 'Cargar un episodio por ID:',
            EPISODES_MENU: 'Menú de episodios',
            EPISODES_SELECT: 'O selecciona un episodio:',
            EPISODES_WARNING: 'Aviso: El contenido de los usuarios no tiene clasificación por edades',
            INSTRUCTION: {
                CREATE_TITLE: 'Lo primero que debes hacer es escribir un nombre para el episodio que contendrá todas sus indicaciones y pulsar crear.',
                LOAD: '\xBFCrear o cargar?',
                PUBLISH: 'Publica tu episodio',
                TITLE: 'Nombra tu episodio',
                TOGGLE_VISIBILITY: 'Pulsa para mostrar/ocultar las indicaciones',
                WRITE: 'Escribe tus indicaciones'
            },
            WARNING: {
                DELETE: '\xBFDe verdad quieres borrar este episodio?',
                TOS: 'Al compartir contenido, aceptas nuestros [tos]Términos de servicio[/tos]',
                TOS_AGREE: 'Aceptar y compartir'
            },
            BACK_TO_EPISODES: 'Volver a los episodios',
            BACK_TO_MENU: 'Volver al menú',
            CREATE_NEW_EPISODE: 'Crear un nuevo episodio',
            PREVIOUS_EPISODES: 'Episodios anteriores',
            PROMPT_ADD: 'Añadir indicación',
            PROMPT_PLACEHOLDER: 'Escribe una indicación',
            PROMPTS_COUNT_HIDDEN: '({count} oculto(s))',
            TITLE_PLACEHOLDER: 'Escribir un título'
        }, VQ = {
            BROADCASTER: {
                SUBTEXT: 'Conectaste correctamente tu cuenta a la extensión para Twitch del kit para público de Jackbox.',
                WARNING: 'ESTA SALA NO TIENE ACTIVADA LA OPCIÓN DE PÚBLICO'
            },
            RECONNECTED: {
                TEXT: 'CONEXIÓN RESTABLECIDA',
                SUBTEXT: '\xA1Diviértete!'
            },
            RECONNECTING: {
                CONTROLLER: {
                    TEXT: 'CONEXIÓN INTERRUMPIDA',
                    SUBTEXT: 'Intento de reconexión ({attempt} de 5)'
                },
                GAME: {
                    TEXT: 'SE INTERRUMPIÓ LA CONEXIÓN AL JUEGO',
                    SUBTEXT: 'Espera mientras intentamos restablecer la conexión'
                }
            },
            PAUSED: {
                TEXT: 'EL JUEGO ESTÁ EN PAUSA',
                SUBTEXT: 'Todo lo que ingreses será enviado al juego.'
            }
        }, GQ = {
            ACTION: PQ,
            ALT: RQ,
            ERROR: MQ,
            LOADING: 'CARGANDO',
            LOBBY: $Q,
            POST_GAME: LQ,
            SEPARATOR: FQ,
            TUTORIAL: UQ,
            AUDIENCE: BQ,
            UGC: qQ,
            TOAST: VQ
        }, WQ = {
            UGC: {
                VISIBILITY_CONTROLLER_OFF: 'enunciados ocultos no dispositivo dos jogadores',
                VISIBILITY_CONTROLLER_ON: 'enunciados exibidos no dispositivo dos jogadores',
                VISIBILITY_SCREEN_OFF: 'enunciados ocultos na tela do jogo',
                VISIBILITY_SCREEN_ON: 'enunciados exibidos na tela do jogo'
            }
        }, JQ = {
            EPISODE_REPORT: 'Denunciar episódio',
            EPISODE_UNLOAD: 'Excluir cópia local do episódio',
            EPISODE_VIEW_AUTHOR: 'Visualizar autor',
            EPISODES_LOAD: 'Carregar um episódio por ID:',
            EPISODES_MENU: 'Menu de episódios',
            EPISODES_SELECT: 'Ou selecione um episódio:',
            EPISODES_WARNING: 'Aviso: os conteúdos gerados pelos usuários não têm classificação indicativa',
            INSTRUCTION: {
                CREATE_TITLE: 'para começar, insira o nome do episódio que conterá todos os seus enunciados e aperte \u201CCriar\u201D.',
                LOAD: 'criar ou carregar?',
                PUBLISH: 'publicar seu episódio',
                TITLE: 'dê um nome ao seu episódio',
                TOGGLE_VISIBILITY: 'toque para exibir/ocultar enunciados',
                WRITE: 'escreva seus enunciados'
            },
            WARNING: {
                DELETE: 'Deseja mesmo excluir este episódio?',
                TOS: 'Ao compartilhar conteúdo, você concordará com os nossos [tos]Termos de Serviço[/tos]',
                TOS_AGREE: 'concordar e compartilhar'
            },
            BACK_TO_EPISODES: 'voltar aos episódios',
            BACK_TO_MENU: 'voltar ao menu',
            CREATE_NEW_EPISODE: 'criar novo episódio',
            PREVIOUS_EPISODES: 'episódios anteriores',
            PROMPT_ADD: 'adicionar enunciado',
            PROMPT_PLACEHOLDER: 'insira um enunciado',
            PROMPTS_COUNT_HIDDEN: '({count} oculto[s])',
            TITLE_PLACEHOLDER: 'insira um título'
        }, eJ = {
            BROADCASTER: {
                SUBTEXT: 'Você conectou sua conta à extensão Jackbox Audience Kit para Twitch.',
                WARNING: 'A CONFIGURAÇÃO DE PLATEIA NÃO ESTÁ ATIVA NESTA SALA'
            },
            RECONNECTED: {
                TEXT: 'CONEXÃO RESTABELECIDA',
                SUBTEXT: 'Divirtam-se!'
            },
            RECONNECTING: {
                CONTROLLER: {
                    TEXT: 'CONEXÃO INTERROMPIDA',
                    SUBTEXT: 'Tentando reconectar-se ({attempt} de 5)'
                },
                GAME: {
                    TEXT: 'CONEXÃO DO JOGO INTERROMPIDA',
                    SUBTEXT: 'Aguarde enquanto tentamos restabelecer a conexão'
                }
            },
            PAUSED: {
                TEXT: 'O JOGO ESTÁ PAUSADO',
                SUBTEXT: 'Tudo que você enviar ainda será enviado ao jogo.'
            }
        }, tJ = {
            ACTION: jQ,
            ALT: WQ,
            ERROR: HQ,
            LOADING: 'CARREGANDO',
            LOBBY: YQ,
            POST_GAME: KQ,
            SEPARATOR: ZQ,
            TUTORIAL: XQ,
            AUDIENCE: QQ,
            UGC: JQ,
            TOAST: eJ
        }, nJ = {
            en: LX,
            fr: KX,
            it: aQ,
            de: vQ,
            es: xQ,
            'es-XL': GQ,
            'pt-BR': tJ
        };
    var h1 = { exports: {} };
    h1.exports;
    (function (t, e) {
        (function () {
            var n, be = 0 / 0, Me = 4294967294, Fe = 4294967295 >>> 1, st = [
                    [
                        'ary',
                        128
                    ],
                    [
                        'bind',
                        1
                    ],
                    [
                        'bindKey',
                        2
                    ],
                    [
                        'curry',
                        8
                    ],
                    [
                        'curryRight',
                        16
                    ],
                    [
                        'flip',
                        512
                    ],
                    [
                        'partial',
                        32
                    ],
                    [
                        'partialRight',
                        64
                    ],
                    [
                        'rearg',
                        256
                    ]
                ], rN = RegExp(/&(?:amp|lt|gt|quot|#39);/g.source), sN = RegExp(/[&<>"']/g.source), uN = RegExp(/[\\^$.*+?()[\]{}|]/g.source), tb = '\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff', ob = '\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000', RN = '[\\ud800-\\udfff]', ab = '[' + ob + ']', hd = '[' + tb + ']', MN = '[\\u2700-\\u27bf]', lb = '[a-z\\xdf-\\xf6\\xf8-\\xff]', ub = '[^\\ud800-\\udfff' + ob + '\\d+' + '\\u2700-\\u27bf' + 'a-z\\xdf-\\xf6\\xf8-\\xff' + 'A-Z\\xc0-\\xd6\\xd8-\\xde' + ']', DN = '(?:' + hd + '|' + '\\ud83c[\\udffb-\\udfff]' + ')', hb = '[^\\ud800-\\udfff]', Vc = '[A-Z\\xc0-\\xd6\\xd8-\\xde]', db = '(?:' + lb + '|' + ub + ')', $N = '(?:' + Vc + '|' + ub + ')', pb = '(?:[\'\u2019](?:d|ll|m|re|s|t|ve))?', mb = '(?:[\'\u2019](?:D|LL|M|RE|S|T|VE))?', gb = DN + '?', _b = '[\\ufe0e\\ufe0f]?', LN = '(?:\\u200d(?:' + [
                    hb,
                    '(?:\\ud83c[\\udde6-\\uddff]){2}',
                    '[\\ud800-\\udbff][\\udc00-\\udfff]'
                ].join('|') + ')' + _b + gb + ')*', yb = _b + gb + LN, BN = '(?:' + [
                    MN,
                    '(?:\\ud83c[\\udde6-\\uddff]){2}',
                    '[\\ud800-\\udbff][\\udc00-\\udfff]'
                ].join('|') + ')' + yb, qN = '(?:' + [
                    hb + hd + '?',
                    hd,
                    '(?:\\ud83c[\\udde6-\\uddff]){2}',
                    '[\\ud800-\\udbff][\\udc00-\\udfff]',
                    RN
                ].join('|') + ')', VN = RegExp('[\'\u2019]', 'g'), GN = RegExp(hd, 'g'), qg = RegExp('\\ud83c[\\udffb-\\udfff](?=\\ud83c[\\udffb-\\udfff])|' + qN + yb, 'g'), jN = RegExp([
                    Vc + '?' + lb + '+' + pb + '(?=' + [
                        ab,
                        Vc,
                        '$'
                    ].join('|') + ')',
                    $N + '+' + mb + '(?=' + [
                        ab,
                        Vc + db,
                        '$'
                    ].join('|') + ')',
                    Vc + '?' + db + '+' + pb,
                    Vc + '+' + mb,
                    '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
                    '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
                    '\\d+',
                    BN
                ].join('|'), 'g'), WN = RegExp('[\\u200d\\ud800-\\udfff' + tb + '\\ufe0e\\ufe0f' + ']'), zN = [
                    'Array',
                    'Buffer',
                    'DataView',
                    'Date',
                    'Error',
                    'Float32Array',
                    'Float64Array',
                    'Function',
                    'Int8Array',
                    'Int16Array',
                    'Int32Array',
                    'Map',
                    'Math',
                    'Object',
                    'Promise',
                    'RegExp',
                    'Set',
                    'String',
                    'Symbol',
                    'TypeError',
                    'Uint8Array',
                    'Uint8ClampedArray',
                    'Uint16Array',
                    'Uint32Array',
                    'WeakMap',
                    '_',
                    'clearTimeout',
                    'isFinite',
                    'parseInt',
                    'setTimeout'
                ], YN = -1, en = {};
            en['[object Float32Array]'] = en['[object Float64Array]'] = en['[object Int8Array]'] = en['[object Int16Array]'] = en['[object Int32Array]'] = en['[object Uint8Array]'] = en['[object Uint8ClampedArray]'] = en['[object Uint16Array]'] = en['[object Uint32Array]'] = true;
            en['[object Arguments]'] = en['[object Array]'] = en['[object ArrayBuffer]'] = en['[object Boolean]'] = en['[object DataView]'] = en['[object Date]'] = en['[object Error]'] = en['[object Function]'] = en['[object Map]'] = en['[object Number]'] = en['[object Object]'] = en['[object RegExp]'] = en['[object Set]'] = en['[object String]'] = en['[object WeakMap]'] = false;
            ;
            var Kt = {};
            Kt['[object Arguments]'] = Kt['[object Array]'] = Kt['[object ArrayBuffer]'] = Kt['[object DataView]'] = Kt['[object Boolean]'] = Kt['[object Date]'] = Kt['[object Float32Array]'] = Kt['[object Float64Array]'] = Kt['[object Int8Array]'] = Kt['[object Int16Array]'] = Kt['[object Int32Array]'] = Kt['[object Map]'] = Kt['[object Number]'] = Kt['[object Object]'] = Kt['[object RegExp]'] = Kt['[object Set]'] = Kt['[object String]'] = Kt['[object Symbol]'] = Kt['[object Uint8Array]'] = Kt['[object Uint8ClampedArray]'] = Kt['[object Uint16Array]'] = Kt['[object Uint32Array]'] = true;
            Kt['[object Error]'] = Kt['[object Function]'] = Kt['[object WeakMap]'] = false;
            ;
            var JN = parseFloat, ex = parseInt, vb = typeof mn == 'object' && mn && mn.Object === Object && mn, tx = typeof self == 'object' && self && self.Object === Object && self, Hn = vb || tx || Function('return this')(), Vg = e && !e.nodeType && e, La = Vg && true && t && !t.nodeType && t, bb = La && La.exports === Vg, Gg = bb && vb.process, ls = (function () {
                    try {
                        var ie = La && La.require && La.require('util').types;
                        return ie || Gg && Gg.binding && Gg.binding('util');
                    } catch {
                    }
                }()), Eb = ls && ls.isArrayBuffer, Tb = ls && ls.isDate, Sb = ls && ls.isMap, wb = ls && ls.isRegExp, Ob = ls && ls.isSet, Ab = ls && ls.isTypedArray;
            function Wr(ie, ve, pe) {
                switch (pe.length) {
                case 0:
                    return ie.call(ve);
                case 1:
                    return ie.call(ve, pe[0]);
                case 2:
                    return ie.call(ve, pe[0], pe[1]);
                case 3:
                    return ie.call(ve, pe[0], pe[1], pe[2]);
                }
                return ie.apply(ve, pe);
            }
            function nx(ie, ve, pe, Ue) {
                for (var ct = -1, $t = ie == null ? 0 : ie.length; ++ct < $t;) {
                    var Rn = ie[ct];
                    ve(Ue, Rn, pe(Rn), ie);
                }
                return Ue;
            }
            function us(ie, ve) {
                for (var pe = -1, Ue = ie == null ? 0 : ie.length; ++pe < Ue && ve(ie[pe], pe, ie) !== false;) {
                    ;
                }
                return ie;
            }
            function rx(ie, ve) {
                for (var pe = ie == null ? 0 : ie.length; pe-- && ve(ie[pe], pe, ie) !== false;) {
                    ;
                }
                return ie;
            }
            function Cb(ie, ve) {
                for (var pe = -1, Ue = ie == null ? 0 : ie.length; ++pe < Ue;) {
                    if (!ve(ie[pe], pe, ie)) {
                        return false;
                    }
                }
                return true;
            }
            function So(ie, ve) {
                for (var pe = -1, Ue = ie == null ? 0 : ie.length, ct = 0, $t = []; ++pe < Ue;) {
                    var Rn = ie[pe];
                    ve(Rn, pe, ie) && ($t[ct++] = Rn);
                }
                return $t;
            }
            function fd(ie, ve) {
                var pe = ie == null ? 0 : ie.length;
                return !!pe && Gc(ie, ve, 0) > -1;
            }
            function jg(ie, ve, pe) {
                for (var Ue = -1, ct = ie == null ? 0 : ie.length; ++Ue < ct;) {
                    if (pe(ve, ie[Ue])) {
                        return true;
                    }
                }
                return false;
            }
            function on(ie, ve) {
                for (var pe = -1, Ue = ie == null ? 0 : ie.length, ct = Array(Ue); ++pe < Ue;) {
                    ct[pe] = ve(ie[pe], pe, ie);
                }
                return ct;
            }
            function wo(ie, ve) {
                for (var pe = -1, Ue = ve.length, ct = ie.length; ++pe < Ue;) {
                    ie[ct + pe] = ve[pe];
                }
                return ie;
            }
            function Wg(ie, ve, pe, Ue) {
                var ct = -1, $t = ie == null ? 0 : ie.length;
                for (Ue && $t && (pe = ie[++ct]); ++ct < $t;) {
                    pe = ve(pe, ie[ct], ct, ie);
                }
                return pe;
            }
            function sx(ie, ve, pe, Ue) {
                var ct = ie == null ? 0 : ie.length;
                for (Ue && ct && (pe = ie[--ct]); ct--;) {
                    pe = ve(pe, ie[ct], ct, ie);
                }
                return pe;
            }
            function Hg(ie, ve) {
                for (var pe = -1, Ue = ie == null ? 0 : ie.length; ++pe < Ue;) {
                    if (ve(ie[pe], pe, ie)) {
                        return true;
                    }
                }
                return false;
            }
            var ix = zg('length');
            function ox(ie) {
                return ie.split('');
            }
            function ax(ie) {
                return ie.match(/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g) || [];
            }
            function Ib(ie, ve, pe) {
                var Ue;
                return pe(ie, function (ct, $t, Rn) {
                    if (ve(ct, $t, Rn)) {
                        return Ue = $t, false;
                    }
                }), Ue;
            }
            function dd(ie, ve, pe, Ue) {
                for (var ct = ie.length, $t = pe + (Ue ? 1 : -1); Ue ? $t-- : ++$t < ct;) {
                    if (ve(ie[$t], $t, ie)) {
                        return $t;
                    }
                }
                return -1;
            }
            function Gc(ie, ve, pe) {
                return ve === ve ? vx(ie, ve, pe) : dd(ie, kb, pe);
            }
            function cx(ie, ve, pe, Ue) {
                for (var ct = pe - 1, $t = ie.length; ++ct < $t;) {
                    if (Ue(ie[ct], ve)) {
                        return ct;
                    }
                }
                return -1;
            }
            function kb(ie) {
                return ie !== ie;
            }
            function Nb(ie, ve) {
                var pe = ie == null ? 0 : ie.length;
                return pe ? Kg(ie, ve) / pe : be;
            }
            function zg(ie) {
                return function (ve) {
                    return ve == null ? n : ve[ie];
                };
            }
            function Yg(ie) {
                return function (ve) {
                    return ie == null ? n : ie[ve];
                };
            }
            function xb(ie, ve, pe, Ue, ct) {
                return ct(ie, function ($t, Rn, jt) {
                    pe = Ue ? (Ue = false, $t) : ve(pe, $t, Rn, jt);
                }), pe;
            }
            function lx(ie, ve) {
                var pe = ie.length;
                for (ie.sort(ve); pe--;) {
                    ie[pe] = ie[pe].value;
                }
                return ie;
            }
            function Kg(ie, ve) {
                for (var pe, Ue = -1, ct = ie.length; ++Ue < ct;) {
                    var $t = ve(ie[Ue]);
                    $t !== n && (pe = pe === n ? $t : pe + $t);
                }
                return pe;
            }
            function Zg(ie, ve) {
                for (var pe = -1, Ue = Array(ie); ++pe < ie;) {
                    Ue[pe] = ve(pe);
                }
                return Ue;
            }
            function ux(ie, ve) {
                return on(ve, function (pe) {
                    return [
                        pe,
                        ie[pe]
                    ];
                });
            }
            function Pb(ie) {
                return ie && ie.slice(0, $b(ie) + 1).replace(/^\s+/, '');
            }
            function Hr(ie) {
                return function (ve) {
                    return ie(ve);
                };
            }
            function Xg(ie, ve) {
                return on(ve, function (pe) {
                    return ie[pe];
                });
            }
            function Bu(ie, ve) {
                return ie.has(ve);
            }
            function Rb(ie, ve) {
                for (var pe = -1, Ue = ie.length; ++pe < Ue && Gc(ve, ie[pe], 0) > -1;) {
                    ;
                }
                return pe;
            }
            function Mb(ie, ve) {
                for (var pe = ie.length; pe-- && Gc(ve, ie[pe], 0) > -1;) {
                    ;
                }
                return pe;
            }
            function hx(ie, ve) {
                for (var pe = ie.length, Ue = 0; pe--;) {
                    ie[pe] === ve && ++Ue;
                }
                return Ue;
            }
            var fx = Yg(KN), dx = Yg(ZN);
            function px(ie) {
                return '\\' + QN[ie];
            }
            function mx(ie, ve) {
                return ie == null ? n : ie[ve];
            }
            function jc(ie) {
                return WN.test(ie);
            }
            function gx(ie) {
                return /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/.test(ie);
            }
            function _x(ie) {
                for (var ve, pe = []; !(ve = ie.next()).done;) {
                    pe.push(ve.value);
                }
                return pe;
            }
            function Qg(ie) {
                var ve = -1, pe = Array(ie.size);
                return ie.forEach(function (Ue, ct) {
                    pe[++ve] = [
                        ct,
                        Ue
                    ];
                }), pe;
            }
            function Db(ie, ve) {
                return function (pe) {
                    return ie(ve(pe));
                };
            }
            function Oo(ie, ve) {
                for (var pe = -1, Ue = ie.length, ct = 0, $t = []; ++pe < Ue;) {
                    var Rn = ie[pe];
                    (Rn === ve || Rn === '__lodash_placeholder__') && (ie[pe] = '__lodash_placeholder__', $t[ct++] = pe);
                }
                return $t;
            }
            function pd(ie) {
                var ve = -1, pe = Array(ie.size);
                return ie.forEach(function (Ue) {
                    pe[++ve] = Ue;
                }), pe;
            }
            function yx(ie) {
                var ve = -1, pe = Array(ie.size);
                return ie.forEach(function (Ue) {
                    pe[++ve] = [
                        Ue,
                        Ue
                    ];
                }), pe;
            }
            function vx(ie, ve, pe) {
                for (var Ue = pe - 1, ct = ie.length; ++Ue < ct;) {
                    if (ie[Ue] === ve) {
                        return Ue;
                    }
                }
                return -1;
            }
            function bx(ie, ve, pe) {
                for (var Ue = pe + 1; Ue--;) {
                    if (ie[Ue] === ve) {
                        return Ue;
                    }
                }
                return Ue;
            }
            function Wc(ie) {
                return jc(ie) ? Tx(ie) : ix(ie);
            }
            function Rs(ie) {
                return jc(ie) ? Sx(ie) : ox(ie);
            }
            function $b(ie) {
                for (var ve = ie.length; ve-- && /\s/.test(ie.charAt(ve));) {
                    ;
                }
                return ve;
            }
            var Ex = Yg(XN);
            function Tx(ie) {
                for (var ve = qg.lastIndex = 0; qg.test(ie);) {
                    ++ve;
                }
                return ve;
            }
            function Sx(ie) {
                return ie.match(qg) || [];
            }
            function wx(ie) {
                return ie.match(jN) || [];
            }
            var Ox = function ie(ve) {
                    ve = ve == null ? Hn : Hc.defaults(Hn.Object(), ve, Hc.pick(Hn, zN));
                    var pe = ve.Array, Ue = ve.Date, ct = ve.Error, $t = ve.Function, Rn = ve.Math, jt = ve.Object, Jg = ve.RegExp, Ax = ve.String, hs = ve.TypeError, md = pe.prototype, Cx = $t.prototype, zc = jt.prototype, gd = ve['__core-js_shared__'], _d = Cx.toString, Ut = zc.hasOwnProperty, Ix = 0, Lb = (function () {
                            var c = /[^.]+$/.exec(gd && gd.keys && gd.keys.IE_PROTO || '');
                            return c ? 'Symbol(src)_1.' + c : '';
                        }()), yd = zc.toString, kx = _d.call(jt), Nx = Hn._, xx = Jg('^' + _d.call(Ut).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'), vd = bb ? ve.Buffer : n, Ao = ve.Symbol, bd = ve.Uint8Array, Fb = vd ? vd.allocUnsafe : n, Ed = Db(jt.getPrototypeOf, jt), Ub = jt.create, Bb = zc.propertyIsEnumerable, Td = md.splice, qb = Ao ? Ao.isConcatSpreadable : n, qu = Ao ? Ao.iterator : n, Fa = Ao ? Ao.toStringTag : n, Sd = (function () {
                            try {
                                var c = Ga(jt, 'defineProperty');
                                return c({}, '', {}), c;
                            } catch {
                            }
                        }()), Px = ve.clearTimeout !== Hn.clearTimeout && ve.clearTimeout, Rx = Ue && Ue.now !== Hn.Date.now && Ue.now, Mx = ve.setTimeout !== Hn.setTimeout && ve.setTimeout, wd = Rn.ceil, Od = Rn.floor, e_ = jt.getOwnPropertySymbols, Dx = vd ? vd.isBuffer : n, Vb = ve.isFinite, $x = md.join, Lx = Db(jt.keys, jt), Mn = Rn.max, sr = Rn.min, Fx = Ue.now, Ux = ve.parseInt, Gb = Rn.random, Bx = md.reverse, t_ = Ga(ve, 'DataView'), Vu = Ga(ve, 'Map'), n_ = Ga(ve, 'Promise'), Yc = Ga(ve, 'Set'), Gu = Ga(ve, 'WeakMap'), ju = Ga(jt, 'create'), Ad = Gu && new Gu(), Kc = {}, qx = ja(t_), Vx = ja(Vu), Gx = ja(n_), jx = ja(Yc), Wx = ja(Gu), Cd = Ao ? Ao.prototype : n, Wu = Cd ? Cd.valueOf : n, jb = Cd ? Cd.toString : n;
                    function D(c) {
                        if (gn(c) && !ut(c) && !(c instanceof Tt)) {
                            if (c instanceof fs) {
                                return c;
                            }
                            if (Ut.call(c, '__wrapped__')) {
                                return W4(c);
                            }
                        }
                        return new fs(c);
                    }
                    var Zc = (function () {
                        function c() {
                        }
                        return function (h) {
                            if (!dn(h)) {
                                return {};
                            }
                            if (Ub) {
                                return Ub(h);
                            }
                            ;
                            var m = new c();
                            return c.prototype = n, m;
                        };
                    }());
                    function Id() {
                    }
                    function fs(c, h) {
                        this.__wrapped__ = c;
                        this.__actions__ = [];
                        this.__chain__ = !!h;
                        this.__index__ = 0;
                        this.__values__ = n;
                        ;
                    }
                    D.templateSettings = {
                        escape: /<%-([\s\S]+?)%>/g,
                        evaluate: /<%([\s\S]+?)%>/g,
                        interpolate: /<%=([\s\S]+?)%>/g,
                        variable: '',
                        imports: { _: D }
                    };
                    D.prototype = Id.prototype;
                    D.prototype.constructor = D;
                    fs.prototype = Zc(Id.prototype);
                    fs.prototype.constructor = fs;
                    ;
                    function Tt(c) {
                        this.__wrapped__ = c;
                        this.__actions__ = [];
                        this.__dir__ = 1;
                        this.__filtered__ = false;
                        this.__iteratees__ = [];
                        this.__takeCount__ = 4294967295;
                        this.__views__ = [];
                        ;
                    }
                    function Hx() {
                        var c = new Tt(this.__wrapped__);
                        return c.__actions__ = Ar(this.__actions__), c.__dir__ = this.__dir__, c.__filtered__ = this.__filtered__, c.__iteratees__ = Ar(this.__iteratees__), c.__takeCount__ = this.__takeCount__, c.__views__ = Ar(this.__views__), c;
                    }
                    function zx() {
                        if (this.__filtered__) {
                            var c = new Tt(this);
                            ;
                            ;
                            ;
                        } else {
                            c = this.clone();
                            ;
                            ;
                        }
                        return c;
                    }
                    function Yx() {
                        var c = this.__wrapped__.value(), h = this.__dir__, m = ut(c), E = h < 0, C = m ? c.length : 0, F = oR(0, C, this.__views__), z = F.start, J = F.end, ce = J - z, Se = E ? J : z - 1, we = this.__iteratees__, ke = we.length, Pe = 0, Ge = sr(ce, this.__takeCount__);
                        if (!m || !E && C == ce && Ge == ce) {
                            return p4(c, this.__actions__);
                        }
                        var et = [];
                        e:
                            for (; ce-- && Pe < Ge;) {
                                Se += h;
                                for (var mt = -1, tt = c[Se]; ++mt < ke;) {
                                    var Et = we[mt], At = Et.iteratee, Kr = Et.type, yr = At(tt);
                                    if (Kr == 2) {
                                        tt = yr;
                                    } else {
                                        if (!yr) {
                                            if (Kr == 1) {
                                                continue e;
                                            }
                                            break e;
                                        }
                                    }
                                }
                                et[Pe++] = tt;
                            }
                        return et;
                    }
                    Tt.prototype = Zc(Id.prototype);
                    Tt.prototype.constructor = Tt;
                    ;
                    function Ua(c) {
                        var h = -1, m = c == null ? 0 : c.length;
                        for (this.clear(); ++h < m;) {
                            var E = c[h];
                            this.set(E[0], E[1]);
                        }
                    }
                    function Kx() {
                        this.__data__ = ju ? ju(null) : {};
                        this.size = 0;
                        ;
                    }
                    function Zx(c) {
                        var h = this.has(c) && delete this.__data__[c];
                        return this.size -= h ? 1 : 0, h;
                    }
                    function Xx(c) {
                        var h = this.__data__;
                        if (ju) {
                            var m = h[c];
                            return m === '__lodash_hash_undefined__' ? n : m;
                        }
                        return Ut.call(h, c) ? h[c] : n;
                    }
                    function Qx(c) {
                        var h = this.__data__;
                        return ju ? h[c] !== n : Ut.call(h, c);
                    }
                    function Jx(c, h) {
                        var m = this.__data__;
                        return this.size += this.has(c) ? 0 : 1, m[c] = ju && h === n ? '__lodash_hash_undefined__' : h, this;
                    }
                    Ua.prototype.clear = Kx;
                    Ua.prototype.delete = Zx;
                    Ua.prototype.get = Xx;
                    Ua.prototype.has = Qx;
                    Ua.prototype.set = Jx;
                    ;
                    function Ui(c) {
                        var h = -1, m = c == null ? 0 : c.length;
                        for (this.clear(); ++h < m;) {
                            var E = c[h];
                            this.set(E[0], E[1]);
                        }
                    }
                    function eP() {
                        this.__data__ = [];
                        this.size = 0;
                        ;
                    }
                    function tP(c) {
                        var h = this.__data__, m = kd(h, c);
                        if (m < 0) {
                            return false;
                        }
                        var E = h.length - 1;
                        return m == E ? h.pop() : Td.call(h, m, 1), --this.size, true;
                    }
                    function nP(c) {
                        var h = this.__data__, m = kd(h, c);
                        return m < 0 ? n : h[m][1];
                    }
                    function rP(c) {
                        return kd(this.__data__, c) > -1;
                    }
                    function sP(c, h) {
                        var m = this.__data__, E = kd(m, c);
                        return E < 0 ? (++this.size, m.push([
                            c,
                            h
                        ])) : m[E][1] = h, this;
                    }
                    Ui.prototype.clear = eP;
                    Ui.prototype.delete = tP;
                    Ui.prototype.get = nP;
                    Ui.prototype.has = rP;
                    Ui.prototype.set = sP;
                    ;
                    function Bi(c) {
                        var h = -1, m = c == null ? 0 : c.length;
                        for (this.clear(); ++h < m;) {
                            var E = c[h];
                            this.set(E[0], E[1]);
                        }
                    }
                    function iP() {
                        this.size = 0;
                        this.__data__ = {
                            hash: new Ua(),
                            map: new (Vu || Ui)(),
                            string: new Ua()
                        };
                        ;
                    }
                    function oP(c) {
                        var h = qd(this, c).delete(c);
                        return this.size -= h ? 1 : 0, h;
                    }
                    function aP(c) {
                        return qd(this, c).get(c);
                    }
                    function cP(c) {
                        return qd(this, c).has(c);
                    }
                    function lP(c, h) {
                        var m = qd(this, c), E = m.size;
                        return m.set(c, h), this.size += m.size == E ? 0 : 1, this;
                    }
                    Bi.prototype.clear = iP;
                    Bi.prototype.delete = oP;
                    Bi.prototype.get = aP;
                    Bi.prototype.has = cP;
                    Bi.prototype.set = lP;
                    ;
                    function Ba(c) {
                        var h = -1, m = c == null ? 0 : c.length;
                        for (this.__data__ = new Bi(); ++h < m;) {
                            this.add(c[h]);
                        }
                    }
                    function uP(c) {
                        return this.__data__.set(c, '__lodash_hash_undefined__'), this;
                    }
                    function hP(c) {
                        return this.__data__.has(c);
                    }
                    Ba.prototype.add = Ba.prototype.push = uP;
                    Ba.prototype.has = hP;
                    ;
                    function Ms(c) {
                        var h = this.__data__ = new Ui(c);
                        this.size = h.size;
                    }
                    function fP() {
                        this.__data__ = new Ui();
                        this.size = 0;
                        ;
                    }
                    function dP(c) {
                        var h = this.__data__, m = h.delete(c);
                        return this.size = h.size, m;
                    }
                    function pP(c) {
                        return this.__data__.get(c);
                    }
                    function mP(c) {
                        return this.__data__.has(c);
                    }
                    function gP(c, h) {
                        var m = this.__data__;
                        if (m instanceof Ui) {
                            var E = m.__data__;
                            if (!Vu || E.length < 199) {
                                return E.push([
                                    c,
                                    h
                                ]), this.size = ++m.size, this;
                            }
                            m = this.__data__ = new Bi(E);
                        }
                        return m.set(c, h), this.size = m.size, this;
                    }
                    Ms.prototype.clear = fP;
                    Ms.prototype.delete = dP;
                    Ms.prototype.get = pP;
                    Ms.prototype.has = mP;
                    Ms.prototype.set = gP;
                    ;
                    function Wb(c, h) {
                        var m = ut(c), E = !m && Wa(c), C = !m && !E && xo(c), F = !m && !E && !C && el(c), z = m || E || C || F, J = z ? Zg(c.length, Ax) : [], ce = J.length;
                        for (var Se in c)
                            (h || Ut.call(c, Se)) && !(z && (Se == 'length' || C && (Se == 'offset' || Se == 'parent') || F && (Se == 'buffer' || Se == 'byteLength' || Se == 'byteOffset') || ji(Se, ce))) && J.push(Se);
                        return J;
                    }
                    function Hb(c) {
                        var h = c.length;
                        return h ? c[d_(0, h - 1)] : n;
                    }
                    function _P(c, h) {
                        return Vd(Ar(c), qa(h, 0, c.length));
                    }
                    function yP(c) {
                        return Vd(Ar(c));
                    }
                    function r_(c, h, m) {
                        (m !== n && !Ds(c[h], m) || m === n && !(h in c)) && qi(c, h, m);
                    }
                    function Hu(c, h, m) {
                        var E = c[h];
                        (!(Ut.call(c, h) && Ds(E, m)) || m === n && !(h in c)) && qi(c, h, m);
                    }
                    function kd(c, h) {
                        for (var m = c.length; m--;) {
                            if (Ds(c[m][0], h)) {
                                return m;
                            }
                        }
                        return -1;
                    }
                    function vP(c, h, m, E) {
                        return Co(c, function (C, F, z) {
                            h(E, C, m(C), z);
                        }), E;
                    }
                    function zb(c, h) {
                        return c && ci(h, Bn(h), c);
                    }
                    function bP(c, h) {
                        return c && ci(h, Ir(h), c);
                    }
                    function qi(c, h, m) {
                        h == '__proto__' && Sd ? Sd(c, h, {
                            configurable: true,
                            enumerable: true,
                            value: m,
                            writable: true
                        }) : c[h] = m;
                    }
                    function s_(c, h) {
                        for (var m = -1, E = h.length, C = pe(E), F = c == null; ++m < E;) {
                            C[m] = F ? n : F_(c, h[m]);
                        }
                        return C;
                    }
                    function qa(c, h, m) {
                        return c === c && (m !== n && (c = c <= m ? c : m), h !== n && (c = c >= h ? c : h)), c;
                    }
                    function ds(c, h, m, E, C, F) {
                        var z, J = h & 1, ce = h & 2, Se = h & 4;
                        if (m && (z = C ? m(c, E, C, F) : m(c)), z !== n) {
                            return z;
                        }
                        if (!dn(c)) {
                            return c;
                        }
                        var we = ut(c);
                        if (we) {
                            if (z = cR(c), !J) {
                                return Ar(c, z);
                            }
                        } else {
                            var ke = ir(c), Pe = ke == '[object Function]' || ke == '[object GeneratorFunction]';
                            if (xo(c)) {
                                return _4(c, J);
                            }
                            if (ke == '[object Object]' || ke == '[object Arguments]' || Pe && !C) {
                                if (z = ce || Pe ? {} : $4(c), !J) {
                                    return ce ? XP(c, bP(z, c)) : ZP(c, zb(z, c));
                                }
                            } else {
                                if (!Kt[ke]) {
                                    return C ? c : {};
                                }
                                z = lR(c, ke, J);
                            }
                        }
                        F || (F = new Ms());
                        var Ge = F.get(c);
                        if (Ge) {
                            return Ge;
                        }
                        F.set(c, z);
                        hE(c) ? c.forEach(function (tt) {
                            z.add(ds(tt, h, m, tt, c, F));
                        }) : lE(c) && c.forEach(function (tt, Et) {
                            z.set(Et, ds(tt, h, m, Et, c, F));
                        });
                        ;
                        var et = Se ? ce ? w_ : S_ : ce ? Ir : Bn, mt = we ? n : et(c);
                        return us(mt || c, function (tt, Et) {
                            mt && (Et = tt, tt = c[Et]);
                            Hu(z, Et, ds(tt, h, m, Et, c, F));
                            ;
                        }), z;
                    }
                    function EP(c) {
                        var h = Bn(c);
                        return function (m) {
                            return Yb(m, c, h);
                        };
                    }
                    function Yb(c, h, m) {
                        var E = m.length;
                        if (c == null) {
                            return !E;
                        }
                        for (c = jt(c); E--;) {
                            var C = m[E], F = h[C], z = c[C];
                            if (z === n && !(C in c) || !F(z)) {
                                return false;
                            }
                        }
                        return true;
                    }
                    function Kb(c, h, m) {
                        if (typeof c != 'function') {
                            throw new hs('Expected a function');
                        }
                        return Ju(function () {
                            c.apply(n, m);
                        }, h);
                    }
                    function zu(c, h, m, E) {
                        var C = -1, F = fd, z = true, J = c.length, ce = [], Se = h.length;
                        if (!J) {
                            return ce;
                        }
                        m && (h = on(h, Hr(m)));
                        E ? (F = jg, z = false) : h.length >= 200 && (F = Bu, z = false, h = new Ba(h));
                        ;
                        e:
                            for (; ++C < J;) {
                                var we = c[C], ke = m == null ? we : m(we);
                                if (we = E || we !== 0 ? we : 0, z && ke === ke) {
                                    for (var Pe = Se; Pe--;) {
                                        if (h[Pe] === ke) {
                                            continue e;
                                        }
                                    }
                                    ce.push(we);
                                } else {
                                    F(h, ke, E) || ce.push(we);
                                }
                            }
                        return ce;
                    }
                    var Co = T4(ai), Zb = T4(o_, true);
                    function TP(c, h) {
                        var m = true;
                        return Co(c, function (E, C, F) {
                            return m = !!h(E, C, F), m;
                        }), m;
                    }
                    function Nd(c, h, m) {
                        for (var E = -1, C = c.length; ++E < C;) {
                            var F = c[E], z = h(F);
                            if (z != null && (J === n ? z === z && !Yr(z) : m(z, J))) {
                                var J = z, ce = F;
                            }
                        }
                        return ce;
                    }
                    function SP(c, h, m, E) {
                        var C = c.length;
                        for (m = dt(m), m < 0 && (m = -m > C ? 0 : C + m), E = E === n || E > C ? C : dt(E), E < 0 && (E += C), E = m > E ? 0 : dE(E); m < E;) {
                            c[m++] = h;
                        }
                        return c;
                    }
                    function Xb(c, h) {
                        var m = [];
                        return Co(c, function (E, C, F) {
                            h(E, C, F) && m.push(E);
                        }), m;
                    }
                    function zn(c, h, m, E, C) {
                        var F = -1, z = c.length;
                        for (m || (m = hR), C || (C = []); ++F < z;) {
                            var J = c[F];
                            h > 0 && m(J) ? h > 1 ? zn(J, h - 1, m, E, C) : wo(C, J) : E || (C[C.length] = J);
                        }
                        return C;
                    }
                    var i_ = S4(), Qb = S4(true);
                    function ai(c, h) {
                        return c && i_(c, h, Bn);
                    }
                    function o_(c, h) {
                        return c && Qb(c, h, Bn);
                    }
                    function xd(c, h) {
                        return So(h, function (m) {
                            return Wi(c[m]);
                        });
                    }
                    function Va(c, h) {
                        h = ko(h, c);
                        for (var m = 0, E = h.length; c != null && m < E;) {
                            c = c[li(h[m++])];
                        }
                        return m && m == E ? c : n;
                    }
                    function Jb(c, h, m) {
                        var E = h(c);
                        return ut(c) ? E : wo(E, m(c));
                    }
                    function gr(c) {
                        return c == null ? c === n ? '[object Undefined]' : '[object Null]' : Fa && Fa in jt(c) ? iR(c) : yR(c);
                    }
                    function a_(c, h) {
                        return c > h;
                    }
                    function wP(c, h) {
                        return c != null && Ut.call(c, h);
                    }
                    function OP(c, h) {
                        return c != null && h in jt(c);
                    }
                    function AP(c, h, m) {
                        return c >= sr(h, m) && c < Mn(h, m);
                    }
                    function c_(c, h, m) {
                        for (var E = m ? jg : fd, C = c[0].length, F = c.length, z = F, J = pe(F), ce = 1e+400, Se = []; z--;) {
                            var we = c[z];
                            z && h && (we = on(we, Hr(h)));
                            ce = sr(we.length, ce);
                            J[z] = !m && (h || C >= 120 && we.length >= 120) ? new Ba(z && we) : n;
                            ;
                        }
                        we = c[0];
                        var ke = -1, Pe = J[0];
                        e:
                            for (; ++ke < C && Se.length < ce;) {
                                var Ge = we[ke], et = h ? h(Ge) : Ge;
                                if (Ge = m || Ge !== 0 ? Ge : 0, !(Pe ? Bu(Pe, et) : E(Se, et, m))) {
                                    for (z = F; --z;) {
                                        var mt = J[z];
                                        if (!(mt ? Bu(mt, et) : E(c[z], et, m))) {
                                            continue e;
                                        }
                                    }
                                    Pe && Pe.push(et);
                                    Se.push(Ge);
                                    ;
                                }
                            }
                        return Se;
                    }
                    function CP(c, h, m, E) {
                        return ai(c, function (C, F, z) {
                            h(E, m(C), F, z);
                        }), E;
                    }
                    function Yu(c, h, m) {
                        h = ko(h, c);
                        c = B4(c, h);
                        ;
                        var E = c == null ? c : c[li(ms(h))];
                        return E == null ? n : Wr(E, c, m);
                    }
                    function e4(c) {
                        return gn(c) && gr(c) == '[object Arguments]';
                    }
                    function IP(c) {
                        return gn(c) && gr(c) == '[object ArrayBuffer]';
                    }
                    function kP(c) {
                        return gn(c) && gr(c) == '[object Date]';
                    }
                    function Ku(c, h, m, E, C) {
                        return c === h ? true : c == null || h == null || !gn(c) && !gn(h) ? c !== c && h !== h : NP(c, h, m, E, Ku, C);
                    }
                    function NP(c, h, m, E, C, F) {
                        var z = ut(c), J = ut(h), ce = z ? '[object Array]' : ir(c), Se = J ? '[object Array]' : ir(h);
                        ce = ce == '[object Arguments]' ? '[object Object]' : ce;
                        Se = Se == '[object Arguments]' ? '[object Object]' : Se;
                        ;
                        var we = ce == '[object Object]', ke = Se == '[object Object]', Pe = ce == Se;
                        if (Pe && xo(c)) {
                            if (!xo(h)) {
                                return false;
                            }
                            z = true;
                            we = false;
                            ;
                        }
                        if (Pe && !we) {
                            return F || (F = new Ms()), z || el(c) ? R4(c, h, m, E, C, F) : rR(c, h, ce, m, E, C, F);
                        }
                        if (!(m & 1)) {
                            var Ge = we && Ut.call(c, '__wrapped__'), et = ke && Ut.call(h, '__wrapped__');
                            if (Ge || et) {
                                var mt = Ge ? c.value() : c, tt = et ? h.value() : h;
                                return F || (F = new Ms()), C(mt, tt, m, E, F);
                            }
                        }
                        return Pe ? (F || (F = new Ms()), sR(c, h, m, E, C, F)) : false;
                    }
                    function xP(c) {
                        return gn(c) && ir(c) == '[object Map]';
                    }
                    function l_(c, h, m, E) {
                        var C = m.length, F = C, z = !E;
                        if (c == null) {
                            return !F;
                        }
                        for (c = jt(c); C--;) {
                            var J = m[C];
                            if (z && J[2] ? J[1] !== c[J[0]] : !(J[0] in c)) {
                                return false;
                            }
                        }
                        for (; ++C < F;) {
                            J = m[C];
                            var ce = J[0], Se = c[ce], we = J[1];
                            if (z && J[2]) {
                                if (Se === n && !(ce in c)) {
                                    return false;
                                }
                            } else {
                                var ke = new Ms();
                                if (E) {
                                    var Pe = E(Se, we, ce, c, h, ke);
                                }
                                if (!(Pe === n ? Ku(we, Se, 1 | 2, E, ke) : Pe)) {
                                    return false;
                                }
                            }
                        }
                        return true;
                    }
                    function t4(c) {
                        if (!dn(c) || dR(c)) {
                            return false;
                        }
                        var h = Wi(c) ? xx : /^\[object .+?Constructor\]$/;
                        return h.test(ja(c));
                    }
                    function PP(c) {
                        return gn(c) && gr(c) == '[object RegExp]';
                    }
                    function RP(c) {
                        return gn(c) && ir(c) == '[object Set]';
                    }
                    function MP(c) {
                        return gn(c) && Yd(c.length) && !!en[gr(c)];
                    }
                    function n4(c) {
                        return typeof c == 'function' ? c : c == null ? kr : typeof c == 'object' ? ut(c) ? i4(c[0], c[1]) : s4(c) : wE(c);
                    }
                    function u_(c) {
                        if (!Qu(c)) {
                            return Lx(c);
                        }
                        var h = [];
                        for (var m in jt(c))
                            Ut.call(c, m) && m != 'constructor' && h.push(m);
                        return h;
                    }
                    function DP(c) {
                        if (!dn(c)) {
                            return _R(c);
                        }
                        var h = Qu(c), m = [];
                        for (var E in c)
                            E == 'constructor' && (h || !Ut.call(c, E)) || m.push(E);
                        return m;
                    }
                    function h_(c, h) {
                        return c < h;
                    }
                    function r4(c, h) {
                        var m = -1, E = Cr(c) ? pe(c.length) : [];
                        return Co(c, function (C, F, z) {
                            E[++m] = h(C, F, z);
                        }), E;
                    }
                    function s4(c) {
                        var h = A_(c);
                        return h.length == 1 && h[0][2] ? F4(h[0][0], h[0][1]) : function (m) {
                            return m === c || l_(m, c, h);
                        };
                    }
                    function i4(c, h) {
                        return I_(c) && L4(h) ? F4(li(c), h) : function (m) {
                            var E = F_(m, c);
                            return E === n && E === h ? U_(m, c) : Ku(h, E, 1 | 2);
                        };
                    }
                    function Pd(c, h, m, E, C) {
                        c !== h && i_(h, function (F, z) {
                            if (C || (C = new Ms()), dn(F)) {
                                $P(c, h, z, m, Pd, E, C);
                            } else {
                                var J = E ? E(N_(c, z), F, z + '', c, h, C) : n;
                                J === n && (J = F);
                                r_(c, z, J);
                                ;
                            }
                        }, Ir);
                    }
                    function $P(c, h, m, E, C, F, z) {
                        var J = N_(c, m), ce = N_(h, m), Se = z.get(ce);
                        if (Se) {
                            r_(c, m, Se);
                            return;
                        }
                        var we = F ? F(J, ce, m + '', c, h, z) : n, ke = we === n;
                        if (ke) {
                            var Pe = ut(ce), Ge = !Pe && xo(ce), et = !Pe && !Ge && el(ce);
                            we = ce;
                            Pe || Ge || et ? ut(J) ? we = J : vn(J) ? we = Ar(J) : Ge ? (ke = false, we = _4(ce, true)) : et ? (ke = false, we = y4(ce, true)) : we = [] : eh(ce) || Wa(ce) ? (we = J, Wa(J) ? we = pE(J) : (!dn(J) || Wi(J)) && (we = $4(ce))) : ke = false;
                            ;
                        }
                        ke && (z.set(ce, we), C(we, ce, E, F, z), z.delete(ce));
                        r_(c, m, we);
                        ;
                    }
                    function o4(c, h) {
                        var m = c.length;
                        if (m) {
                            return h += h < 0 ? m : 0, ji(h, m) ? c[h] : n;
                        }
                    }
                    function a4(c, h, m) {
                        h.length ? h = on(h, function (F) {
                            return ut(F) ? function (z) {
                                return Va(z, F.length === 1 ? F[0] : F);
                            } : F;
                        }) : h = [kr];
                        var E = -1;
                        h = on(h, Hr(Ze()));
                        var C = r4(c, function (F, z, J) {
                            var ce = on(h, function (Se) {
                                return Se(F);
                            });
                            return {
                                criteria: ce,
                                index: ++E,
                                value: F
                            };
                        });
                        return lx(C, function (F, z) {
                            return KP(F, z, m);
                        });
                    }
                    function LP(c, h) {
                        return c4(c, h, function (m, E) {
                            return U_(c, E);
                        });
                    }
                    function c4(c, h, m) {
                        for (var E = -1, C = h.length, F = { E: c[E + h] }; ++E < C;) {
                            var z = h[E], J = Va(c, z);
                            m(J, z) && Zu(F, ko(z, c), J);
                        }
                        return F;
                    }
                    function FP(c) {
                        return function (h) {
                            return Va(h, c);
                        };
                    }
                    function f_(c, h, m, E) {
                        var C = E ? cx : Gc, F = -1, z = h.length, J = c;
                        for (c === h && (h = Ar(h)), m && (J = on(c, Hr(m))); ++F < z;) {
                            for (var ce = 0, Se = h[F], we = m ? m(Se) : Se; (ce = C(J, we, ce, E)) > -1;) {
                                J !== c && Td.call(J, ce, 1);
                                Td.call(c, ce, 1);
                                ;
                            }
                        }
                        return c;
                    }
                    function l4(c, h) {
                        for (var m = c ? h.length : 0, E = m - 1; m--;) {
                            var C = h[m];
                            if (m == E || C !== F) {
                                var F = C;
                                ji(C) ? Td.call(c, C, 1) : g_(c, C);
                            }
                        }
                        return c;
                    }
                    function d_(c, h) {
                        return c + Od(Gb() * (h - c + 1));
                    }
                    function UP(c, h, m, E) {
                        for (var C = -1, F = Mn(wd((h - c) / (m || 1)), 0), z = pe(F); F--;) {
                            z[E ? F : ++C] = c;
                            c += m;
                            ;
                        }
                        return z;
                    }
                    function p_(c, h) {
                        var m = '';
                        if (!c || h < 1 || h > 9007199254740991) {
                            return m;
                        }
                        do
                            h % 2 && (m += c), h = Od(h / 2), h && (c += c);
                        while (h);
                        return m;
                    }
                    function vt(c, h) {
                        return x_(U4(c, h, kr), c + '');
                    }
                    function BP(c) {
                        return Hb(tl(c));
                    }
                    function qP(c, h) {
                        var m = tl(c);
                        return Vd(m, qa(h, 0, m.length));
                    }
                    function Zu(c, h, m, E) {
                        if (!dn(c)) {
                            return c;
                        }
                        h = ko(h, c);
                        for (var C = -1, F = h.length, z = F - 1, J = c; J != null && ++C < F;) {
                            var ce = li(h[C]), Se = m;
                            if (ce === '__proto__' || ce === 'constructor' || ce === 'prototype') {
                                return c;
                            }
                            if (C != z) {
                                var we = J[ce];
                                Se = E ? E(we, ce, J) : n;
                                Se === n && (Se = dn(we) ? we : ji(h[C + 1]) ? [] : {});
                                ;
                            }
                            Hu(J, ce, Se);
                            J = J[ce];
                            ;
                        }
                        return c;
                    }
                    var u4 = Ad ? function (c, h) {
                            return Ad.set(c, h), c;
                        } : kr, VP = Sd ? function (c, h) {
                            return Sd(c, 'toString', {
                                configurable: true,
                                enumerable: false,
                                value: q_(h),
                                writable: true
                            });
                        } : kr;
                    function GP(c) {
                        return Vd(tl(c));
                    }
                    function ps(c, h, m) {
                        var E = -1, C = c.length;
                        h < 0 && (h = -h > C ? 0 : C + h);
                        m = m > C ? C : m;
                        m < 0 && (m += C);
                        C = h > m ? 0 : m - h >>> 0;
                        h >>>= 0;
                        ;
                        for (var F = pe(C); ++E < C;) {
                            ;
                        }
                        return F;
                    }
                    function jP(c, h) {
                        var m;
                        return Co(c, function (E, C, F) {
                            return m = h(E, C, F), !m;
                        }), !!m;
                    }
                    function Rd(c, h, m) {
                        var E = 0, C = c == null ? E : c.length;
                        if (typeof h == 'number' && h === h && C <= Fe) {
                            for (; E < C;) {
                                var F = E + C >>> 1, z = c[F];
                                z !== null && !Yr(z) && (m ? z <= h : z < h) ? E = F + 1 : C = F;
                            }
                            return C;
                        }
                        return m_(c, h, kr, m);
                    }
                    function m_(c, h, m, E) {
                        var C = 0, F = c == null ? 0 : c.length;
                        if (F === 0) {
                            return 0;
                        }
                        h = m(h);
                        for (var z = h !== h, J = h === null, ce = Yr(h), Se = h === n; C < F;) {
                            var we = Od((C + F) / 2), ke = m(c[we]), Pe = ke !== n, Ge = ke === null, et = ke === ke, mt = Yr(ke);
                            if (z) {
                                var tt = E || et;
                            } else {
                                Se ? tt = et && (E || Pe) : J ? tt = et && Pe && (E || !Ge) : ce ? tt = et && Pe && !Ge && (E || !mt) : Ge || mt ? tt = false : tt = E ? ke <= h : ke < h;
                            }
                            tt ? C = we + 1 : F = we;
                        }
                        return sr(F, Me);
                    }
                    function h4(c, h) {
                        for (var m = -1, E = c.length, C = 0, F = []; ++m < E;) {
                            var z = c[m], J = h ? h(z) : z;
                            if (!m || !Ds(J, ce)) {
                                var ce = J;
                                F[C++] = z === 0 ? 0 : z;
                            }
                        }
                        return F;
                    }
                    function f4(c) {
                        return typeof c == 'number' ? c : Yr(c) ? be : +c;
                    }
                    function zr(c) {
                        if (typeof c == 'string') {
                            return c;
                        }
                        if (ut(c)) {
                            return on(c, zr) + '';
                        }
                        if (Yr(c)) {
                            return jb ? jb.call(c) : '';
                        }
                        var h = c + '';
                        return h == '0' && 1 / c == -1e+400 ? '-0' : h;
                    }
                    function Io(c, h, m) {
                        var E = -1, C = fd, F = c.length, z = true, J = [], ce = J;
                        if (m) {
                            z = false;
                            C = jg;
                            ;
                        } else {
                            if (F >= 200) {
                                var Se = h ? null : tR(c);
                                if (Se) {
                                    return pd(Se);
                                }
                                z = false;
                                C = Bu;
                                ce = new Ba();
                                ;
                            } else {
                                ce = h ? [] : J;
                            }
                        }
                        e:
                            for (; ++E < F;) {
                                var we = c[E], ke = h ? h(we) : we;
                                if (we = m || we !== 0 ? we : 0, z && ke === ke) {
                                    for (var Pe = ce.length; Pe--;) {
                                        if (ce[Pe] === ke) {
                                            continue e;
                                        }
                                    }
                                    h && ce.push(ke);
                                    J.push(we);
                                    ;
                                } else {
                                    C(ce, ke, m) || (ce !== J && ce.push(ke), J.push(we));
                                }
                            }
                        return J;
                    }
                    function g_(c, h) {
                        return h = ko(h, c), c = B4(c, h), c == null || delete c[li(ms(h))];
                    }
                    function d4(c, h, m, E) {
                        return Zu(c, h, m(Va(c, h)), E);
                    }
                    function Md(c, h, m, E) {
                        for (var C = c.length, F = E ? C : -1; (E ? F-- : ++F < C) && h(c[F], F, c);) {
                            ;
                        }
                        return m ? ps(c, E ? 0 : F, E ? F + 1 : C) : ps(c, E ? F + 1 : 0, E ? C : F);
                    }
                    function p4(c, h) {
                        var m = c;
                        return m instanceof Tt && (m = m.value()), Wg(h, function (E, C) {
                            return C.func.apply(C.thisArg, wo([E], C.args));
                        }, m);
                    }
                    function __(c, h, m) {
                        var E = c.length;
                        if (E < 2) {
                            return E ? Io(c[0]) : [];
                        }
                        for (var C = -1, F = pe(E); ++C < E;) {
                            for (var z = c[C], J = -1; ++J < E;) {
                                J != C && (F[C] = zu(F[C] || z, c[J], h, m));
                            }
                        }
                        return Io(zn(F, 1), h, m);
                    }
                    function m4(c, h, m) {
                        for (var E = -1, C = c.length, F = h.length, z = {
                                    J: arguments[J],
                                    C: E[h + C]
                                }; ++E < C;) {
                            var J = E < F ? h[E] : n;
                            m(z, c[E], J);
                        }
                        return z;
                    }
                    function y_(c) {
                        return vn(c) ? c : [];
                    }
                    function v_(c) {
                        return typeof c == 'function' ? c : kr;
                    }
                    function ko(c, h) {
                        return ut(c) ? c : I_(c, h) ? [c] : j4(Lt(c));
                    }
                    var WP = vt;
                    function No(c, h, m) {
                        var E = c.length;
                        return m = m === n ? E : m, !h && m >= E ? c : ps(c, h, m);
                    }
                    var g4 = Px || function (c) {
                        return Hn.clearTimeout(c);
                    };
                    function _4(c, h) {
                        if (h) {
                            return c.slice();
                        }
                        var m = c.length, E = Fb ? Fb(m) : new c.constructor(m);
                        return c.copy(E), E;
                    }
                    function b_(c) {
                        var h = new c.constructor(c.byteLength);
                        return new bd(h).set(new bd(c)), h;
                    }
                    function HP(c, h) {
                        var m = h ? b_(c.buffer) : c.buffer;
                        return new c.constructor(m, c.byteOffset, c.byteLength);
                    }
                    function zP(c) {
                        var h = new c.constructor(c.source, /\w*$/.exec(c));
                        return h.lastIndex = c.lastIndex, h;
                    }
                    function YP(c) {
                        return Wu ? jt(Wu.call(c)) : {};
                    }
                    function y4(c, h) {
                        var m = h ? b_(c.buffer) : c.buffer;
                        return new c.constructor(m, c.byteOffset, c.length);
                    }
                    function v4(c, h) {
                        if (c !== h) {
                            var m = c !== n, E = c === null, C = c === c, F = Yr(c), z = h !== n, J = h === null, ce = h === h, Se = Yr(h);
                            if (!J && !Se && !F && c > h || F && z && ce && !J && !Se || E && z && ce || !m && ce || !C) {
                                return 1;
                            }
                            if (!E && !F && !Se && c < h || Se && m && C && !E && !F || J && m && C || !z && C || !ce) {
                                return -1;
                            }
                        }
                        return 0;
                    }
                    function KP(c, h, m) {
                        for (var E = -1, C = c.criteria, F = h.criteria, z = C.length, J = m.length; ++E < z;) {
                            var ce = v4(C[E], F[E]);
                            if (ce) {
                                if (E >= J) {
                                    return ce;
                                }
                                var Se = m[E];
                                return ce * (Se == 'desc' ? -1 : 1);
                            }
                        }
                        return c.index - h.index;
                    }
                    function b4(c, h, m, E) {
                        for (var C = -1, F = c.length, z = m.length, J = -1, ce = h.length, Se = Mn(F - z, 0), we = pe(ce + Se), ke = !E; ++J < ce;) {
                            we[J] = h[J];
                        }
                        for (; ++C < z;) {
                            (ke || C < F) && (we[m[C]] = c[C]);
                        }
                        for (; Se--;) {
                            we[J++] = c[C++];
                        }
                        return we;
                    }
                    function E4(c, h, m, E) {
                        for (var C = -1, F = c.length, z = -1, J = m.length, ce = -1, Se = h.length, we = Mn(F - J, 0), ke = pe(we + Se), Pe = !E; ++C < we;) {
                            ke[C] = c[C];
                        }
                        for (var Ge = C; ++ce < Se;) {
                            ke[Ge + ce] = h[ce];
                        }
                        for (; ++z < J;) {
                            (Pe || C < F) && (ke[Ge + m[z]] = c[C++]);
                        }
                        return ke;
                    }
                    function Ar(c, h) {
                        var m = -1, E = c.length;
                        for (h || (h = pe(E)); ++m < E;) {
                            h[m] = c[m];
                        }
                        return h;
                    }
                    function ci(c, h, m, E) {
                        var C = !m;
                        m || (m = {});
                        for (var F = -1, z = h.length; ++F < z;) {
                            var J = h[F], ce = E ? E(m[J], c[J], J, m, c) : n;
                            ce === n && (ce = c[J]);
                            C ? qi(m, J, ce) : Hu(m, J, ce);
                            ;
                        }
                        return m;
                    }
                    function ZP(c, h) {
                        return ci(c, C_(c), h);
                    }
                    function XP(c, h) {
                        return ci(c, M4(c), h);
                    }
                    function Dd(c, h) {
                        return function (m, E) {
                            var C = ut(m) ? nx : vP, F = h ? h() : {};
                            return C(m, c, Ze(E, 2), F);
                        };
                    }
                    function Xc(c) {
                        return vt(function (h, m) {
                            var E = -1, C = m.length, F = C > 1 ? m[C - 1] : n, z = C > 2 ? m[2] : n;
                            for (F = c.length > 3 && typeof F == 'function' ? (C--, F) : n, z && _r(m[0], m[1], z) && (F = C < 3 ? n : F, C = 1), h = jt(h); ++E < C;) {
                                var J = m[E];
                                J && c(h, J, E, F);
                            }
                            return h;
                        });
                    }
                    function T4(c, h) {
                        return function (m, E) {
                            if (m == null) {
                                return m;
                            }
                            if (!Cr(m)) {
                                return c(m, E);
                            }
                            for (var C = m.length, F = h ? C : -1, z = jt(m); (h ? F-- : ++F < C) && E(z[F], F, z) !== false;) {
                                ;
                            }
                            return m;
                        };
                    }
                    function S4(c) {
                        return function (h, m, E) {
                            for (var C = -1, F = jt(h), z = E(h), J = z.length; J--;) {
                                var ce = z[c ? J : ++C];
                                if (m(F[ce], ce, F) === false) {
                                    break;
                                }
                            }
                            return h;
                        };
                    }
                    function QP(c, h, m) {
                        var E = h & 1, C = Xu(c);
                        function F() {
                            var z = this && this !== Hn && this instanceof F ? C : c;
                            return z.apply(E ? m : this, arguments);
                        }
                        return F;
                    }
                    function w4(c) {
                        return function (h) {
                            h = Lt(h);
                            var m = jc(h) ? Rs(h) : n, E = m ? m[0] : h.charAt(0), C = m ? No(m, 1).join('') : h.slice(1);
                            return E[c]() + C;
                        };
                    }
                    function Qc(c) {
                        return function (h) {
                            return Wg(TE(EE(h).replace(VN, '')), c, '');
                        };
                    }
                    function Xu(c) {
                        return function () {
                            var h = arguments;
                            switch (h.length) {
                            case 0:
                                return new c();
                            case 1:
                                return new c(h[0]);
                            case 2:
                                return new c(h[0], h[1]);
                            case 3:
                                return new c(h[0], h[1], h[2]);
                            case 4:
                                return new c(h[0], h[1], h[2], h[3]);
                            case 5:
                                return new c(h[0], h[1], h[2], h[3], h[4]);
                            case 6:
                                return new c(h[0], h[1], h[2], h[3], h[4], h[5]);
                            case 7:
                                return new c(h[0], h[1], h[2], h[3], h[4], h[5], h[6]);
                            }
                            var m = Zc(c.prototype), E = c.apply(m, h);
                            return dn(E) ? E : m;
                        };
                    }
                    function JP(c, h, m) {
                        var E = Xu(c);
                        function C() {
                            for (var F = arguments.length, z = pe(F), J = F, ce = Jc(C); J--;) {
                                ;
                            }
                            var Se = F < 3 && z[0] !== ce && z[F - 1] !== ce ? [] : Oo(z, ce);
                            if (F -= Se.length, F < m) {
                                return k4(c, h, $d, C.placeholder, n, z, Se, n, n, m - F);
                            }
                            var we = this && this !== Hn && this instanceof C ? E : c;
                            return Wr(we, this, z);
                        }
                        return C;
                    }
                    function O4(c) {
                        return function (h, m, E) {
                            var C = jt(h);
                            if (!Cr(h)) {
                                var F = Ze(m, 3);
                                h = Bn(h);
                                m = function (J) {
                                    return F(C[J], J, C);
                                };
                                ;
                            }
                            var z = c(h, m, E);
                            return z > -1 ? C[F ? h[z] : z] : n;
                        };
                    }
                    function A4(c) {
                        return Gi(function (h) {
                            var m = h.length, E = m, C = fs.prototype.thru;
                            for (c && h.reverse(); E--;) {
                                var F = h[E];
                                if (typeof F != 'function') {
                                    throw new hs('Expected a function');
                                }
                                if (C && !z && Bd(F) == 'wrapper') {
                                    var z = new fs([], true);
                                }
                            }
                            for (E = z ? E : m; ++E < m;) {
                                F = h[E];
                                var J = Bd(F), ce = J == 'wrapper' ? O_(F) : n;
                                ce && k_(ce[0]) && ce[1] == (128 | 8 | 32 | 256) && !ce[4].length && ce[9] == 1 ? z = z[Bd(ce[0])].apply(z, ce[3]) : z = F.length == 1 && k_(F) ? z[J]() : z.thru(F);
                            }
                            return function () {
                                var Se = arguments, we = Se[0];
                                if (z && Se.length == 1 && ut(we)) {
                                    return z.plant(we).value();
                                }
                                for (var ke = 0, Pe = m ? h[ke].apply(this, Se) : we; ++ke < m;) {
                                    Pe = h[ke].call(this, Pe);
                                }
                                return Pe;
                            };
                        });
                    }
                    function $d(c, h, m, E, C, F, z, J, ce, Se) {
                        var we = h & 128, ke = h & 1, Pe = h & 2, Ge = h & (8 | 16), et = h & 512, mt = Pe ? n : Xu(c);
                        function tt() {
                            for (var Et = arguments.length, At = pe(Et), Kr = Et; Kr--;) {
                                At[Kr] = arguments[Kr];
                            }
                            if (Ge) {
                                var yr = Jc(tt), Zr = hx(At, yr);
                            }
                            if (E && (At = b4(At, E, C, Ge)), F && (At = E4(At, F, z, Ge)), Et -= Zr, Ge && Et < Se) {
                                var bn = Oo(At, yr);
                                return k4(c, h, $d, tt.placeholder, m, At, bn, J, ce, Se - Et);
                            }
                            var $s = ke ? m : this, zi = Pe ? $s[c] : c;
                            return Et = At.length, J ? At = vR(At, J) : et && Et > 1 && At.reverse(), we && ce < Et && (At.length = ce), this && this !== Hn && this instanceof tt && (zi = mt || Xu(zi)), zi.apply($s, At);
                        }
                        return tt;
                    }
                    function C4(c, h) {
                        return function (m, E) {
                            return CP(m, c, h(E), {});
                        };
                    }
                    function Ld(c, h) {
                        return function (m, E) {
                            var C;
                            if (m === n && E === n) {
                                return h;
                            }
                            if (m !== n && (C = m), E !== n) {
                                if (C === n) {
                                    return E;
                                }
                                typeof m == 'string' || typeof E == 'string' ? (m = zr(m), E = zr(E)) : (m = f4(m), E = f4(E));
                                C = c(m, E);
                                ;
                            }
                            return C;
                        };
                    }
                    function E_(c) {
                        return Gi(function (h) {
                            return h = on(h, Hr(Ze())), vt(function (m) {
                                var E = this;
                                return c(h, function (C) {
                                    return Wr(C, E, m);
                                });
                            });
                        });
                    }
                    function Fd(c, h) {
                        h = h === n ? ' ' : zr(h);
                        var m = h.length;
                        if (m < 2) {
                            return m ? p_(h, c) : h;
                        }
                        var E = p_(h, wd(c / Wc(h)));
                        return jc(h) ? No(Rs(E), 0, c).join('') : E.slice(0, c);
                    }
                    function eR(c, h, m, E) {
                        var C = h & 1, F = Xu(c);
                        function z() {
                            for (var J = -1, ce = arguments.length, Se = -1, we = E.length, ke = pe(we + ce), Pe = this && this !== Hn && this instanceof z ? F : c; ++Se < we;) {
                                ke[Se] = E[Se];
                            }
                            for (; ce--;) {
                                ke[Se++] = arguments[++J];
                            }
                            return Wr(Pe, C ? m : this, ke);
                        }
                        return z;
                    }
                    function I4(c) {
                        return function (h, m, E) {
                            return E && typeof E != 'number' && _r(h, m, E) && (m = E = n), h = Hi(h), m === n ? (m = h, h = 0) : m = Hi(m), E = E === n ? h < m ? 1 : -1 : Hi(E), UP(h, m, E, c);
                        };
                    }
                    function Ud(c) {
                        return function (h, m) {
                            return typeof h == 'string' && typeof m == 'string' || (h = gs(h), m = gs(m)), c(h, m);
                        };
                    }
                    function k4(c, h, m, E, C, F, z, J, ce, Se) {
                        var we = h & 8, ke = we ? z : n, Pe = we ? n : z, Ge = we ? F : n, et = we ? n : F;
                        h |= we ? 32 : 64;
                        h &= ~(we ? 64 : 32);
                        h & 4 || (h &= ~(1 | 2));
                        ;
                        var mt = [
                                c,
                                h,
                                C,
                                Ge,
                                ke,
                                et,
                                Pe,
                                J,
                                ce,
                                Se
                            ], tt = m.apply(n, mt);
                        return k_(c) && q4(tt, mt), tt.placeholder = E, V4(tt, c, h);
                    }
                    function T_(c) {
                        var h = Rn[c];
                        return function (m, E) {
                            if (m = gs(m), E = E == null ? 0 : sr(dt(E), 292), E && Vb(m)) {
                                var C = (Lt(m) + 'e').split('e'), F = h(C[0] + 'e' + (+C[1] + E));
                                return C = (Lt(F) + 'e').split('e'), +(C[0] + 'e' + (+C[1] - E));
                            }
                            return h(m);
                        };
                    }
                    var tR = Yc && 1 / pd(new Yc([
                        ,
                        -0
                    ]))[1] == 1e+400 ? function (c) {
                        return new Yc(c);
                    } : j_;
                    function N4(c) {
                        return function (h) {
                            var m = ir(h);
                            return m == '[object Map]' ? Qg(h) : m == '[object Set]' ? yx(h) : ux(h, c(h));
                        };
                    }
                    function Vi(c, h, m, E, C, F, z, J) {
                        var ce = h & 2;
                        if (!ce && typeof c != 'function') {
                            throw new hs('Expected a function');
                        }
                        var Se = E ? E.length : 0;
                        if (Se || (h &= ~(32 | 64), E = C = n), z = z === n ? z : Mn(dt(z), 0), J = J === n ? J : dt(J), Se -= C ? C.length : 0, h & 64) {
                            var we = E, ke = C;
                            E = C = n;
                        }
                        var Pe = ce ? n : O_(c), Ge = [
                                c,
                                h,
                                m,
                                E,
                                C,
                                we,
                                ke,
                                F,
                                z,
                                J
                            ];
                        if (Pe && gR(Ge, Pe), c = Ge[0], h = Ge[1], m = Ge[2], E = Ge[3], C = Ge[4], J = Ge[9] = Ge[9] === n ? ce ? 0 : c.length : Mn(Ge[9] - Se, 0), !J && h & (8 | 16) && (h &= ~(8 | 16)), !h || h == 1) {
                            var et = QP(c, h, m);
                        } else {
                            h == 8 || h == 16 ? et = JP(c, h, J) : (h == 32 || h == (1 | 32)) && !C.length ? et = eR(c, h, m, E) : et = $d.apply(n, Ge);
                        }
                        var mt = Pe ? u4 : q4;
                        return V4(mt(et, Ge), c, h);
                    }
                    function x4(c, h, m, E) {
                        return c === n || Ds(c, zc[m]) && !Ut.call(E, m) ? h : c;
                    }
                    function P4(c, h, m, E, C, F) {
                        return dn(c) && dn(h) && (F.set(h, c), Pd(c, h, n, P4, F), F.delete(h)), c;
                    }
                    function nR(c) {
                        return eh(c) ? n : c;
                    }
                    function R4(c, h, m, E, C, F) {
                        var z = m & 1, J = c.length, ce = h.length;
                        if (J != ce && !(z && ce > J)) {
                            return false;
                        }
                        var Se = F.get(c), we = F.get(h);
                        if (Se && we) {
                            return Se == h && we == c;
                        }
                        var ke = -1, Pe = true, Ge = m & 2 ? new Ba() : n;
                        for (F.set(c, h), F.set(h, c); ++ke < J;) {
                            var et = c[ke], mt = h[ke];
                            if (E) {
                                var tt = z ? E(mt, et, ke, h, c, F) : E(et, mt, ke, c, h, F);
                            }
                            if (tt !== n) {
                                if (tt) {
                                    continue;
                                }
                                Pe = false;
                                break;
                            }
                            if (Ge) {
                                if (!Hg(h, function (Et, At) {
                                        if (!Bu(Ge, At) && (et === Et || C(et, Et, m, E, F))) {
                                            return Ge.push(At);
                                        }
                                    })) {
                                    Pe = false;
                                    break;
                                }
                            } else {
                                if (!(et === mt || C(et, mt, m, E, F))) {
                                    Pe = false;
                                    break;
                                }
                            }
                        }
                        return F.delete(c), F.delete(h), Pe;
                    }
                    function rR(c, h, m, E, C, F, z) {
                        switch (m) {
                        case '[object DataView]':
                            if (c.byteLength != h.byteLength || c.byteOffset != h.byteOffset) {
                                return false;
                            }
                            c = c.buffer, h = h.buffer;
                        case '[object ArrayBuffer]':
                            return !(c.byteLength != h.byteLength || !F(new bd(c), new bd(h)));
                        case '[object Boolean]':
                        case '[object Date]':
                        case '[object Number]':
                            return Ds(+c, +h);
                        case '[object Error]':
                            return c.name == h.name && c.message == h.message;
                        case '[object RegExp]':
                        case '[object String]':
                            return c == h + '';
                        case '[object Map]':
                            var J = Qg;
                        case '[object Set]':
                            var ce = E & 1;
                            if (J || (J = pd), c.size != h.size && !ce) {
                                return false;
                            }
                            var Se = z.get(c);
                            if (Se) {
                                return Se == h;
                            }
                            E |= 2, z.set(c, h);
                            var we = R4(J(c), J(h), E, C, F, z);
                            return z.delete(c), we;
                        case '[object Symbol]':
                            if (Wu) {
                                return Wu.call(c) == Wu.call(h);
                            }
                        }
                        return false;
                    }
                    function sR(c, h, m, E, C, F) {
                        var z = m & 1, J = S_(c), ce = J.length, Se = S_(h), we = Se.length;
                        if (ce != we && !z) {
                            return false;
                        }
                        for (var ke = ce; ke--;) {
                            var Pe = J[ke];
                            if (!(z ? Pe in h : Ut.call(h, Pe))) {
                                return false;
                            }
                        }
                        var Ge = F.get(c), et = F.get(h);
                        if (Ge && et) {
                            return Ge == h && et == c;
                        }
                        var mt = true;
                        F.set(c, h);
                        F.set(h, c);
                        ;
                        for (var tt = z; ++ke < ce;) {
                            Pe = J[ke];
                            var Et = c[Pe], At = h[Pe];
                            if (E) {
                                var Kr = z ? E(At, Et, Pe, h, c, F) : E(Et, At, Pe, c, h, F);
                            }
                            if (!(Kr === n ? Et === At || C(Et, At, m, E, F) : Kr)) {
                                mt = false;
                                break;
                            }
                            tt || (tt = Pe == 'constructor');
                        }
                        if (mt && !tt) {
                            var yr = c.constructor, Zr = h.constructor;
                            yr != Zr && 'constructor' in c && 'constructor' in h && !(typeof yr == 'function' && yr instanceof yr && typeof Zr == 'function' && Zr instanceof Zr) && (mt = false);
                        }
                        return F.delete(c), F.delete(h), mt;
                    }
                    function Gi(c) {
                        return x_(U4(c, n, Y4), c + '');
                    }
                    function S_(c) {
                        return Jb(c, Bn, C_);
                    }
                    function w_(c) {
                        return Jb(c, Ir, M4);
                    }
                    var O_ = Ad ? function (c) {
                        return Ad.get(c);
                    } : j_;
                    function Bd(c) {
                        for (var h = c.name + '', m = Kc[h], E = Ut.call(Kc, h) ? m.length : 0; E--;) {
                            var C = m[E], F = C.func;
                            if (F == null || F == c) {
                                return C.name;
                            }
                        }
                        return h;
                    }
                    function Jc(c) {
                        var h = Ut.call(D, 'placeholder') ? D : c;
                        return h.placeholder;
                    }
                    function Ze() {
                        var c = D.iteratee || V_;
                        return c = c === V_ ? n4 : c, arguments.length ? c(arguments[0], arguments[1]) : c;
                    }
                    function qd(c, h) {
                        var m = c.__data__;
                        return fR(h) ? m[typeof h == 'string' ? 'string' : 'hash'] : m.map;
                    }
                    function A_(c) {
                        for (var h = Bn(c), m = h.length; m--;) {
                            var E = h[m], C = c[E];
                            h[m] = [
                                E,
                                C,
                                L4(C)
                            ];
                        }
                        return h;
                    }
                    function Ga(c, h) {
                        var m = mx(c, h);
                        return t4(m) ? m : n;
                    }
                    function iR(c) {
                        var h = Ut.call(c, Fa), m = c[Fa];
                        try {
                            ;
                            ;
                        } catch {
                        }
                        var C = yd.call(c);
                        return true && (h ? c[Fa] = m : delete c[Fa]), C;
                    }
                    var C_ = e_ ? function (c) {
                            return c == null ? [] : (c = jt(c), So(e_(c), function (h) {
                                return Bb.call(c, h);
                            }));
                        } : W_, M4 = e_ ? function (c) {
                            for (var h = []; c;) {
                                wo(h, C_(c));
                                c = Ed(c);
                                ;
                            }
                            return h;
                        } : W_, ir = gr;
                    (t_ && ir(new t_(new ArrayBuffer(1))) != '[object DataView]' || Vu && ir(new Vu()) != '[object Map]' || n_ && ir(n_.resolve()) != '[object Promise]' || Yc && ir(new Yc()) != '[object Set]' || Gu && ir(new Gu()) != '[object WeakMap]') && (ir = function (c) {
                        var h = gr(c), m = h == '[object Object]' ? c.constructor : n, E = m ? ja(m) : '';
                        if (E) {
                            switch (E) {
                            case qx:
                                return '[object DataView]';
                            case Vx:
                                return '[object Map]';
                            case Gx:
                                return '[object Promise]';
                            case jx:
                                return '[object Set]';
                            case Wx:
                                return '[object WeakMap]';
                            }
                        }
                        return h;
                    });
                    function oR(c, h, m) {
                        for (var E = -1, C = m.length; ++E < C;) {
                            var F = m[E], z = F.size;
                            switch (F.type) {
                            case 'drop':
                                c += z;
                                break;
                            case 'dropRight':
                                h -= z;
                                break;
                            case 'take':
                                h = sr(h, c + z);
                                break;
                            case 'takeRight':
                                c = Mn(c, h - z);
                                break;
                            }
                        }
                        return {
                            start: c,
                            end: h
                        };
                    }
                    function aR(c) {
                        var h = c.match(/\{\n\/\* \[wrapped with (.+)\] \*/);
                        return h ? h[1].split(/,? & /) : [];
                    }
                    function D4(c, h, m) {
                        h = ko(h, c);
                        for (var E = -1, C = h.length, F = false; ++E < C;) {
                            var z = li(h[E]);
                            if (!(F = c != null && m(c, z))) {
                                break;
                            }
                            c = c[z];
                        }
                        return F || ++E != C ? F : (C = c == null ? 0 : c.length, !!C && Yd(C) && ji(z, C) && (ut(c) || Wa(c)));
                    }
                    function cR(c) {
                        var h = c.length, m = new c.constructor(h);
                        return h && typeof c[0] == 'string' && Ut.call(c, 'index') && (m.index = c.index, m.input = c.input), m;
                    }
                    function $4(c) {
                        return typeof c.constructor == 'function' && !Qu(c) ? Zc(Ed(c)) : {};
                    }
                    function lR(c, h, m) {
                        var E = c.constructor;
                        switch (h) {
                        case '[object ArrayBuffer]':
                            return b_(c);
                        case '[object Boolean]':
                        case '[object Date]':
                            return new E(+c);
                        case '[object DataView]':
                            return HP(c, m);
                        case '[object Float32Array]':
                        case '[object Float64Array]':
                        case '[object Int8Array]':
                        case '[object Int16Array]':
                        case '[object Int32Array]':
                        case '[object Uint8Array]':
                        case '[object Uint8ClampedArray]':
                        case '[object Uint16Array]':
                        case '[object Uint32Array]':
                            return y4(c, m);
                        case '[object Map]':
                            return new E();
                        case '[object Number]':
                        case '[object String]':
                            return new E(c);
                        case '[object RegExp]':
                            return zP(c);
                        case '[object Set]':
                            return new E();
                        case '[object Symbol]':
                            return YP(c);
                        }
                    }
                    function uR(c, h) {
                        var m = h.length;
                        if (!m) {
                            return c;
                        }
                        var E = m - 1;
                        return h[E] = (m > 1 ? '& ' : '') + h[E], h = h.join(m > 2 ? ', ' : ' '), c.replace(/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, `{
/* [wrapped with ` + h + `] */
`);
                    }
                    function hR(c) {
                        return ut(c) || Wa(c) || !!(qb && c && c[qb]);
                    }
                    function ji(c, h) {
                        var m = typeof c;
                        return h = h ?? 9007199254740991, !!h && (m == 'number' || m != 'symbol' && /^(?:0|[1-9]\d*)$/.test(c)) && c > -1 && c % 1 == 0 && c < h;
                    }
                    function _r(c, h, m) {
                        if (!dn(m)) {
                            return false;
                        }
                        var E = typeof h;
                        return (E == 'number' ? Cr(m) && ji(h, m.length) : E == 'string' && h in m) ? Ds(m[h], c) : false;
                    }
                    function I_(c, h) {
                        if (ut(c)) {
                            return false;
                        }
                        var m = typeof c;
                        return m == 'number' || m == 'symbol' || m == 'boolean' || c == null || Yr(c) ? true : /^\w*$/.test(c) || !/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/.test(c) || h != null && c in jt(h);
                    }
                    function fR(c) {
                        var h = typeof c;
                        return h == 'string' || h == 'number' || h == 'symbol' || h == 'boolean' ? c !== '__proto__' : c === null;
                    }
                    function k_(c) {
                        var h = Bd(c), m = D[h];
                        if (typeof m != 'function' || !(h in Tt.prototype)) {
                            return false;
                        }
                        if (c === m) {
                            return true;
                        }
                        var E = O_(m);
                        return !!E && c === E[0];
                    }
                    function dR(c) {
                        return !!Lb && Lb in c;
                    }
                    var pR = gd ? Wi : H_;
                    function Qu(c) {
                        var h = c && c.constructor, m = typeof h == 'function' && h.prototype || zc;
                        return c === m;
                    }
                    function L4(c) {
                        return c === c && !dn(c);
                    }
                    function F4(c, h) {
                        return function (m) {
                            return m == null ? false : m[c] === h && (h !== n || c in jt(m));
                        };
                    }
                    function mR(c) {
                        var h = Hd(c, function (E) {
                                return m.size === 500 && m.clear(), E;
                            }), m = h.cache;
                        return h;
                    }
                    function gR(c, h) {
                        var m = c[1], E = h[1], C = m | E, F = C < (1 | 2 | 128), z = E == 128 && m == 8 || E == 128 && m == 256 && c[7].length <= h[8] || E == (128 | 256) && h[7].length <= h[8] && m == 8;
                        if (!(F || z)) {
                            return c;
                        }
                        if (E & 1) {
                            c[2] = h[2];
                            C |= m & g ? 0 : A;
                        }
                        var J = h[3];
                        if (J) {
                            var ce = c[3];
                            c[3] = ce ? b4(ce, J, h[4]) : J;
                            c[4] = ce ? Oo(c[3], '__lodash_placeholder__') : h[4];
                            ;
                        }
                        return J = h[5], J && (ce = c[5], c[5] = ce ? E4(ce, J, h[6]) : J, c[6] = ce ? Oo(c[5], '__lodash_placeholder__') : h[6]), J = h[7], J && (c[7] = J), E & 128 && (c[8] = c[8] == null ? h[8] : sr(c[8], h[8])), c[9] == null && (c[9] = h[9]), c[0] = h[0], c[1] = C, c;
                    }
                    function _R(c) {
                        var h = [];
                        if (c != null) {
                            for (var m in jt(c))
                                h.push(m);
                        }
                        return h;
                    }
                    function yR(c) {
                        return yd.call(c);
                    }
                    function U4(c, h, m) {
                        return h = Mn(h === n ? c.length - 1 : h, 0), function () {
                            for (var E = arguments, C = -1, F = Mn(E.length - h, 0), z = pe(F); ++C < F;) {
                                ;
                            }
                            C = -1;
                            for (var J = pe(h + 1); ++C < h;) {
                                J[C] = E[C];
                            }
                            return J[h] = m(z), Wr(c, this, J);
                        };
                    }
                    function B4(c, h) {
                        return h.length < 2 ? c : Va(c, ps(h, 0, -1));
                    }
                    function vR(c, h) {
                        for (var m = c.length, E = sr(h.length, m), C = Ar(c); E--;) {
                            var F = h[E];
                            ;
                        }
                        return c;
                    }
                    function N_(c, h) {
                        if (!(h === 'constructor' && typeof c[h] == 'function') && h != '__proto__') {
                            return c[h];
                        }
                    }
                    var q4 = G4(u4), Ju = Mx || function (c, h) {
                            return Hn.setTimeout(c, h);
                        }, x_ = G4(VP);
                    function V4(c, h, m) {
                        var E = h + '';
                        return x_(c, uR(E, bR(aR(E), m)));
                    }
                    function G4(c) {
                        var h = 0, m = 0;
                        return function () {
                            var E = Fx(), C = 16 - (E - m);
                            if (m = E, C > 0) {
                                if (++h >= 800) {
                                    return arguments[0];
                                }
                            } else {
                                h = 0;
                            }
                            return c.apply(n, arguments);
                        };
                    }
                    function Vd(c, h) {
                        var m = -1, E = c.length, C = E - 1;
                        for (h = h === n ? E : h; ++m < h;) {
                            var F = d_(m, C), z = c[F];
                            ;
                            ;
                            ;
                        }
                        return c.length = h, c;
                    }
                    var j4 = mR(function (c) {
                        var h = [];
                        return c.charCodeAt(0) === 46 && h.push(''), c.replace(/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, function (m, E, C, F) {
                            h.push(C ? F.replace(/\\(\\)?/g, '$1') : E || m);
                        }), h;
                    });
                    function li(c) {
                        if (typeof c == 'string' || Yr(c)) {
                            return c;
                        }
                        var h = c + '';
                        return h == '0' && 1 / c == -1e+400 ? '-0' : h;
                    }
                    function ja(c) {
                        if (c != null) {
                            try {
                                return _d.call(c);
                            } catch {
                            }
                            try {
                                return c + '';
                            } catch {
                            }
                        }
                        return '';
                    }
                    function bR(c, h) {
                        return us(st, function (m) {
                            var E = '_.' + m[0];
                            h & m[1] && !fd(c, E) && c.push(E);
                        }), c.sort();
                    }
                    function W4(c) {
                        if (c instanceof Tt) {
                            return c.clone();
                        }
                        var h = new fs(c.__wrapped__, c.__chain__);
                        return h.__actions__ = Ar(c.__actions__), h.__index__ = c.__index__, h.__values__ = c.__values__, h;
                    }
                    function ER(c, h, m) {
                        (m ? _r(c, h, m) : h === n) ? h = 1 : h = Mn(dt(h), 0);
                        var E = c == null ? 0 : c.length;
                        if (!E || h < 1) {
                            return [];
                        }
                        for (var C = 0, F = 0, z = pe(wd(E / h)); C < E;) {
                            z[F++] = ps(c, C, C += h);
                        }
                        return z;
                    }
                    function TR(c) {
                        for (var h = -1, m = c == null ? 0 : c.length, E = 0, C = []; ++h < m;) {
                            var F = c[h];
                            F && (C[E++] = F);
                        }
                        return C;
                    }
                    function SR() {
                        var c = arguments.length;
                        if (!c) {
                            return [];
                        }
                        for (var h = pe(c - 1), m = arguments[0], E = c; E--;) {
                            h[E - 1] = arguments[E];
                        }
                        return wo(ut(m) ? Ar(m) : [m], zn(h, 1));
                    }
                    var wR = vt(function (c, h) {
                            return vn(c) ? zu(c, zn(h, 1, vn, true)) : [];
                        }), OR = vt(function (c, h) {
                            var m = ms(h);
                            return vn(m) && (m = n), vn(c) ? zu(c, zn(h, 1, vn, true), Ze(m, 2)) : [];
                        }), AR = vt(function (c, h) {
                            var m = ms(h);
                            return vn(m) && (m = n), vn(c) ? zu(c, zn(h, 1, vn, true), n, m) : [];
                        });
                    function CR(c, h, m) {
                        var E = c == null ? 0 : c.length;
                        return E ? (h = m || h === n ? 1 : dt(h), ps(c, h < 0 ? 0 : h, E)) : [];
                    }
                    function IR(c, h, m) {
                        var E = c == null ? 0 : c.length;
                        return E ? (h = m || h === n ? 1 : dt(h), h = E - h, ps(c, 0, h < 0 ? 0 : h)) : [];
                    }
                    function kR(c, h) {
                        return c && c.length ? Md(c, Ze(h, 3), true, true) : [];
                    }
                    function NR(c, h) {
                        return c && c.length ? Md(c, Ze(h, 3), true) : [];
                    }
                    function xR(c, h, m, E) {
                        var C = c == null ? 0 : c.length;
                        return C ? (m && typeof m != 'number' && _r(c, h, m) && (m = 0, E = C), SP(c, h, m, E)) : [];
                    }
                    function H4(c, h, m) {
                        var E = c == null ? 0 : c.length;
                        if (!E) {
                            return -1;
                        }
                        var C = m == null ? 0 : dt(m);
                        return C < 0 && (C = Mn(E + C, 0)), dd(c, Ze(h, 3), C);
                    }
                    function z4(c, h, m) {
                        var E = c == null ? 0 : c.length;
                        if (!E) {
                            return -1;
                        }
                        var C = E - 1;
                        return m !== n && (C = dt(m), C = m < 0 ? Mn(E + C, 0) : sr(C, E - 1)), dd(c, Ze(h, 3), C, true);
                    }
                    function Y4(c) {
                        var h = c == null ? 0 : c.length;
                        return h ? zn(c, 1) : [];
                    }
                    function PR(c) {
                        var h = c == null ? 0 : c.length;
                        return h ? zn(c, 1e+400) : [];
                    }
                    function RR(c, h) {
                        var m = c == null ? 0 : c.length;
                        return m ? (h = h === n ? 1 : dt(h), zn(c, h)) : [];
                    }
                    function MR(c) {
                        for (var h = -1, m = c == null ? 0 : c.length, E = {
                                    __index__: 0,
                                    __values__: n,
                                    C: h[C].call(this, E[C])
                                }; ++h < m;) {
                            var C = c[h];
                            E[C[0]] = C[1];
                        }
                        return E;
                    }
                    function K4(c) {
                        return c && c.length ? c[0] : n;
                    }
                    function DR(c, h, m) {
                        var E = c == null ? 0 : c.length;
                        if (!E) {
                            return -1;
                        }
                        var C = m == null ? 0 : dt(m);
                        return C < 0 && (C = Mn(E + C, 0)), Gc(c, h, C);
                    }
                    function $R(c) {
                        var h = c == null ? 0 : c.length;
                        return h ? ps(c, 0, -1) : [];
                    }
                    var LR = vt(function (c) {
                            var h = on(c, y_);
                            return h.length && h[0] === c[0] ? c_(h) : [];
                        }), FR = vt(function (c) {
                            var h = ms(c), m = on(c, y_);
                            return h === ms(m) ? h = n : m.pop(), m.length && m[0] === c[0] ? c_(m, Ze(h, 2)) : [];
                        }), UR = vt(function (c) {
                            var h = ms(c), m = on(c, y_);
                            return h = typeof h == 'function' ? h : n, h && m.pop(), m.length && m[0] === c[0] ? c_(m, n, h) : [];
                        });
                    function BR(c, h) {
                        return c == null ? '' : $x.call(c, h);
                    }
                    function ms(c) {
                        var h = c == null ? 0 : c.length;
                        return h ? c[h - 1] : n;
                    }
                    function qR(c, h, m) {
                        var E = c == null ? 0 : c.length;
                        if (!E) {
                            return -1;
                        }
                        var C = E;
                        return m !== n && (C = dt(m), C = C < 0 ? Mn(E + C, 0) : sr(C, E - 1)), h === h ? bx(c, h, C) : dd(c, kb, C, true);
                    }
                    function VR(c, h) {
                        return c && c.length ? o4(c, dt(h)) : n;
                    }
                    var GR = vt(Z4);
                    function Z4(c, h) {
                        return c && c.length && h && h.length ? f_(c, h) : c;
                    }
                    function jR(c, h, m) {
                        return c && c.length && h && h.length ? f_(c, h, Ze(m, 2)) : c;
                    }
                    function WR(c, h, m) {
                        return c && c.length && h && h.length ? f_(c, h, n, m) : c;
                    }
                    var HR = Gi(function (c, h) {
                        var m = c == null ? 0 : c.length, E = s_(c, h);
                        return l4(c, on(h, function (C) {
                            return ji(C, m) ? +C : C;
                        }).sort(v4)), E;
                    });
                    function zR(c, h) {
                        var m = [];
                        if (!(c && c.length)) {
                            return m;
                        }
                        var E = -1, C = [], F = c.length;
                        for (h = Ze(h, 3); ++E < F;) {
                            var z = c[E];
                            h(z, E, c) && (m.push(z), C.push(E));
                        }
                        return l4(c, C), m;
                    }
                    function P_(c) {
                        return c == null ? c : Bx.call(c);
                    }
                    function YR(c, h, m) {
                        var E = c == null ? 0 : c.length;
                        return E ? (m && typeof m != 'number' && _r(c, h, m) ? (h = 0, m = E) : (h = h == null ? 0 : dt(h), m = m === n ? E : dt(m)), ps(c, h, m)) : [];
                    }
                    function KR(c, h) {
                        return Rd(c, h);
                    }
                    function ZR(c, h, m) {
                        return m_(c, h, Ze(m, 2));
                    }
                    function XR(c, h) {
                        var m = c == null ? 0 : c.length;
                        if (m) {
                            var E = Rd(c, h);
                            if (E < m && Ds(c[E], h)) {
                                return E;
                            }
                        }
                        return -1;
                    }
                    function QR(c, h) {
                        return Rd(c, h, true);
                    }
                    function JR(c, h, m) {
                        return m_(c, h, Ze(m, 2), true);
                    }
                    function eM(c, h) {
                        var m = c == null ? 0 : c.length;
                        if (m) {
                            var E = Rd(c, h, true) - 1;
                            if (Ds(c[E], h)) {
                                return E;
                            }
                        }
                        return -1;
                    }
                    function tM(c) {
                        return c && c.length ? h4(c) : [];
                    }
                    function nM(c, h) {
                        return c && c.length ? h4(c, Ze(h, 2)) : [];
                    }
                    function rM(c) {
                        var h = c == null ? 0 : c.length;
                        return h ? ps(c, 1, h) : [];
                    }
                    function sM(c, h, m) {
                        return c && c.length ? (h = m || h === n ? 1 : dt(h), ps(c, 0, h < 0 ? 0 : h)) : [];
                    }
                    function iM(c, h, m) {
                        var E = c == null ? 0 : c.length;
                        return E ? (h = m || h === n ? 1 : dt(h), h = E - h, ps(c, h < 0 ? 0 : h, E)) : [];
                    }
                    function oM(c, h) {
                        return c && c.length ? Md(c, Ze(h, 3), false, true) : [];
                    }
                    function aM(c, h) {
                        return c && c.length ? Md(c, Ze(h, 3)) : [];
                    }
                    var cM = vt(function (c) {
                            return Io(zn(c, 1, vn, true));
                        }), lM = vt(function (c) {
                            var h = ms(c);
                            return vn(h) && (h = n), Io(zn(c, 1, vn, true), Ze(h, 2));
                        }), uM = vt(function (c) {
                            var h = ms(c);
                            return h = typeof h == 'function' ? h : n, Io(zn(c, 1, vn, true), n, h);
                        });
                    function hM(c) {
                        return c && c.length ? Io(c) : [];
                    }
                    function fM(c, h) {
                        return c && c.length ? Io(c, Ze(h, 2)) : [];
                    }
                    function dM(c, h) {
                        return h = typeof h == 'function' ? h : n, c && c.length ? Io(c, n, h) : [];
                    }
                    function R_(c) {
                        if (!(c && c.length)) {
                            return [];
                        }
                        var h = 0;
                        return c = So(c, function (m) {
                            if (vn(m)) {
                                return h = Mn(m.length, h), true;
                            }
                        }), Zg(h, function (m) {
                            return on(c, zg(m));
                        });
                    }
                    function X4(c, h) {
                        if (!(c && c.length)) {
                            return [];
                        }
                        var m = R_(c);
                        return h == null ? m : on(m, function (E) {
                            return Wr(h, n, E);
                        });
                    }
                    var pM = vt(function (c, h) {
                            return vn(c) ? zu(c, h) : [];
                        }), mM = vt(function (c) {
                            return __(So(c, vn));
                        }), gM = vt(function (c) {
                            var h = ms(c);
                            return vn(h) && (h = n), __(So(c, vn), Ze(h, 2));
                        }), _M = vt(function (c) {
                            var h = ms(c);
                            return h = typeof h == 'function' ? h : n, __(So(c, vn), n, h);
                        }), yM = vt(R_);
                    function vM(c, h) {
                        return m4(c || [], h || [], Hu);
                    }
                    function bM(c, h) {
                        return m4(c || [], h || [], Zu);
                    }
                    var EM = vt(function (c) {
                        var h = c.length, m = h > 1 ? c[h - 1] : n;
                        return m = typeof m == 'function' ? (c.pop(), m) : n, X4(c, m);
                    });
                    function Q4(c) {
                        var h = D(c);
                        return h.__chain__ = true, h;
                    }
                    function TM(c, h) {
                        return h(c), c;
                    }
                    function Gd(c, h) {
                        return h(c);
                    }
                    var SM = Gi(function (c) {
                        var h = c.length, m = h ? c[0] : 0, E = this.__wrapped__, C = function (F) {
                                return s_(F, c);
                            };
                        return h > 1 || this.__actions__.length || !(E instanceof Tt) || !ji(m) ? this.thru(C) : (E = E.slice(m, +m + (h ? 1 : 0)), E.__actions__.push({
                            func: Gd,
                            args: [C],
                            thisArg: n
                        }), new fs(E, this.__chain__).thru(function (F) {
                            return h && !F.length && F.push(n), F;
                        }));
                    });
                    function wM() {
                        return Q4(this);
                    }
                    function OM() {
                        return new fs(this.value(), this.__chain__);
                    }
                    function AM() {
                        this.__values__ === n && (this.__values__ = fE(this.value()));
                        var c = this.__index__ >= this.__values__.length, h = c ? n : this.__values__[this.__index__++];
                        return {
                            done: c,
                            value: h
                        };
                    }
                    function CM() {
                        return this;
                    }
                    function IM(c) {
                        for (var h, m = this; m instanceof Id;) {
                            var E = W4(m);
                            ;
                            ;
                            h ? C.__wrapped__ = E : h = E;
                            ;
                            var C = E;
                            m = m.__wrapped__;
                        }
                        return C.__wrapped__ = c, h;
                    }
                    function kM() {
                        var c = this.__wrapped__;
                        if (c instanceof Tt) {
                            var h = c;
                            return this.__actions__.length && (h = new Tt(this)), h = h.reverse(), h.__actions__.push({
                                func: Gd,
                                args: [P_],
                                thisArg: n
                            }), new fs(h, this.__chain__);
                        }
                        return this.thru(P_);
                    }
                    function NM() {
                        return p4(this.__wrapped__, this.__actions__);
                    }
                    var xM = Dd(function (c, h, m) {
                        Ut.call(c, m) ? ++c[m] : qi(c, m, 1);
                    });
                    function PM(c, h, m) {
                        var E = ut(c) ? Cb : TP;
                        return m && _r(c, h, m) && (h = n), E(c, Ze(h, 3));
                    }
                    function RM(c, h) {
                        var m = ut(c) ? So : Xb;
                        return m(c, Ze(h, 3));
                    }
                    var MM = O4(H4), DM = O4(z4);
                    function $M(c, h) {
                        return zn(jd(c, h), 1);
                    }
                    function LM(c, h) {
                        return zn(jd(c, h), 1e+400);
                    }
                    function FM(c, h, m) {
                        return m = m === n ? 1 : dt(m), zn(jd(c, h), m);
                    }
                    function J4(c, h) {
                        var m = ut(c) ? us : Co;
                        return m(c, Ze(h, 3));
                    }
                    function eE(c, h) {
                        var m = ut(c) ? rx : Zb;
                        return m(c, Ze(h, 3));
                    }
                    var UM = Dd(function (c, h, m) {
                        Ut.call(c, m) ? c[m].push(h) : qi(c, m, [h]);
                    });
                    function BM(c, h, m, E) {
                        c = Cr(c) ? c : tl(c);
                        m = m && !E ? dt(m) : 0;
                        ;
                        var C = c.length;
                        return m < 0 && (m = Mn(C + m, 0)), Kd(c) ? m <= C && c.indexOf(h, m) > -1 : !!C && Gc(c, h, m) > -1;
                    }
                    var qM = vt(function (c, h, m) {
                            var E = -1, C = typeof h == 'function', F = Cr(c) ? pe(c.length) : [];
                            return Co(c, function (z) {
                                F[++E] = C ? Wr(h, z, m) : Yu(z, h, m);
                            }), F;
                        }), VM = Dd(function (c, h, m) {
                            qi(c, m, h);
                        });
                    function jd(c, h) {
                        var m = ut(c) ? on : r4;
                        return m(c, Ze(h, 3));
                    }
                    function GM(c, h, m, E) {
                        return c == null ? [] : (ut(h) || (h = h == null ? [] : [h]), m = E ? n : m, ut(m) || (m = m == null ? [] : [m]), a4(c, h, m));
                    }
                    var jM = Dd(function (c, h, m) {
                        c[m ? 0 : 1].push(h);
                    }, function () {
                        return [
                            [],
                            []
                        ];
                    });
                    function WM(c, h, m) {
                        var E = ut(c) ? Wg : xb, C = arguments.length < 3;
                        return E(c, Ze(h, 4), m, C, Co);
                    }
                    function HM(c, h, m) {
                        var E = ut(c) ? sx : xb, C = arguments.length < 3;
                        return E(c, Ze(h, 4), m, C, Zb);
                    }
                    function zM(c, h) {
                        var m = ut(c) ? So : Xb;
                        return m(c, zd(Ze(h, 3)));
                    }
                    function YM(c) {
                        var h = ut(c) ? Hb : BP;
                        return h(c);
                    }
                    function KM(c, h, m) {
                        (m ? _r(c, h, m) : h === n) ? h = 1 : h = dt(h);
                        var E = ut(c) ? _P : qP;
                        return E(c, h);
                    }
                    function ZM(c) {
                        var h = ut(c) ? yP : GP;
                        return h(c);
                    }
                    function XM(c) {
                        if (c == null) {
                            return 0;
                        }
                        if (Cr(c)) {
                            return Kd(c) ? Wc(c) : c.length;
                        }
                        var h = ir(c);
                        return h == '[object Map]' || h == '[object Set]' ? c.size : u_(c).length;
                    }
                    function QM(c, h, m) {
                        var E = ut(c) ? Hg : jP;
                        return m && _r(c, h, m) && (h = n), E(c, Ze(h, 3));
                    }
                    var JM = vt(function (c, h) {
                            if (c == null) {
                                return [];
                            }
                            var m = h.length;
                            return m > 1 && _r(c, h[0], h[1]) ? h = [] : m > 2 && _r(h[0], h[1], h[2]) && (h = [h[0]]), a4(c, zn(h, 1), []);
                        }), Wd = Rx || function () {
                            return Hn.Date.now();
                        };
                    function eD(c, h) {
                        if (typeof h != 'function') {
                            throw new hs('Expected a function');
                        }
                        return c = dt(c), function () {
                            if (--c < 1) {
                                return h.apply(this, arguments);
                            }
                        };
                    }
                    function tE(c, h, m) {
                        return h = m ? n : h, h = c && h == null ? c.length : h, Vi(c, 128, n, n, n, n, h);
                    }
                    function nE(c, h) {
                        var m;
                        if (typeof h != 'function') {
                            throw new hs('Expected a function');
                        }
                        return c = dt(c), function () {
                            return --c > 0 && (m = h.apply(this, arguments)), c <= 1 && (h = n), m;
                        };
                    }
                    var M_ = vt(function (c, h, m) {
                            var E = 1;
                            if (m.length) {
                                var C = Oo(m, Jc(M_));
                                E |= 32;
                            }
                            return Vi(c, E, h, m, C);
                        }), rE = vt(function (c, h, m) {
                            var E = 1 | 2;
                            if (m.length) {
                                var C = Oo(m, Jc(rE));
                                E |= 32;
                            }
                            return Vi(h, E, c, m, C);
                        });
                    function sE(c, h, m) {
                        h = m ? n : h;
                        var E = Vi(c, 8, n, n, n, n, n, h);
                        return E.placeholder = sE.placeholder, E;
                    }
                    function iE(c, h, m) {
                        h = m ? n : h;
                        var E = Vi(c, 16, n, n, n, n, n, h);
                        return E.placeholder = iE.placeholder, E;
                    }
                    function oE(c, h, m) {
                        var E, C, F, z, J, ce, Se = 0, we = false, ke = false, Pe = true;
                        if (typeof c != 'function') {
                            throw new hs('Expected a function');
                        }
                        h = gs(h) || 0;
                        dn(m) && (we = !!m.leading, ke = 'maxWait' in m, F = ke ? Mn(gs(m.maxWait) || 0, h) : F, Pe = 'trailing' in m ? !!m.trailing : Pe);
                        ;
                        function Ge(bn) {
                            var $s = E, zi = C;
                            return E = C = n, Se = bn, z = c.apply(zi, $s), z;
                        }
                        function et(bn) {
                            return Se = bn, J = Ju(Et, h), we ? Ge(bn) : z;
                        }
                        function mt(bn) {
                            var $s = bn - ce, zi = bn - Se, OE = h - $s;
                            return ke ? sr(OE, F - zi) : OE;
                        }
                        function tt(bn) {
                            var $s = bn - ce, zi = bn - Se;
                            return ce === n || $s >= h || $s < 0 || ke && zi >= F;
                        }
                        function Et() {
                            var bn = Wd();
                            if (tt(bn)) {
                                return At(bn);
                            }
                            J = Ju(Et, mt(bn));
                        }
                        function At(bn) {
                            return J = n, Pe && E ? Ge(bn) : (E = C = n, z);
                        }
                        function Kr() {
                            J !== n && g4(J);
                            Se = 0;
                            E = ce = C = J = n;
                            ;
                        }
                        function yr() {
                            return J === n ? z : At(Wd());
                        }
                        function Zr() {
                            var bn = Wd(), $s = tt(bn);
                            if (E = arguments, C = this, ce = bn, $s) {
                                if (J === n) {
                                    return et(ce);
                                }
                                if (ke) {
                                    return g4(J), J = Ju(Et, h), Ge(ce);
                                }
                            }
                            return J === n && (J = Ju(Et, h)), z;
                        }
                        return Zr.cancel = Kr, Zr.flush = yr, Zr;
                    }
                    var tD = vt(function (c, h) {
                            return Kb(c, 1, h);
                        }), nD = vt(function (c, h, m) {
                            return Kb(c, gs(h) || 0, m);
                        });
                    function rD(c) {
                        return Vi(c, 512);
                    }
                    function Hd(c, h) {
                        if (typeof c != 'function' || h != null && typeof h != 'function') {
                            throw new hs('Expected a function');
                        }
                        var m = function () {
                            var E = arguments, C = h ? h.apply(this, E) : E[0], F = m.cache;
                            if (F.has(C)) {
                                return F.get(C);
                            }
                            var z = c.apply(this, E);
                            return m.cache = F.set(C, z) || F, z;
                        };
                        return m.cache = new (Hd.Cache || Bi)(), m;
                    }
                    Hd.Cache = Bi;
                    function zd(c) {
                        if (typeof c != 'function') {
                            throw new hs('Expected a function');
                        }
                        return function () {
                            var h = arguments;
                            switch (h.length) {
                            case 0:
                                return !c.call(this);
                            case 1:
                                return !c.call(this, h[0]);
                            case 2:
                                return !c.call(this, h[0], h[1]);
                            case 3:
                                return !c.call(this, h[0], h[1], h[2]);
                            }
                            return !c.apply(this, h);
                        };
                    }
                    function sD(c) {
                        return nE(2, c);
                    }
                    var iD = WP(function (c, h) {
                            h = h.length == 1 && ut(h[0]) ? on(h[0], Hr(Ze())) : on(zn(h, 1), Hr(Ze()));
                            var m = h.length;
                            return vt(function (E) {
                                for (var C = -1, F = sr(E.length, m); ++C < F;) {
                                    ;
                                }
                                return Wr(c, this, E);
                            });
                        }), D_ = vt(function (c, h) {
                            var m = Oo(h, Jc(D_));
                            return Vi(c, 32, n, h, m);
                        }), aE = vt(function (c, h) {
                            var m = Oo(h, Jc(aE));
                            return Vi(c, 64, n, h, m);
                        }), oD = Gi(function (c, h) {
                            return Vi(c, 256, n, n, n, h);
                        });
                    function aD(c, h) {
                        if (typeof c != 'function') {
                            throw new hs('Expected a function');
                        }
                        return h = h === n ? h : dt(h), vt(c, h);
                    }
                    function cD(c, h) {
                        if (typeof c != 'function') {
                            throw new hs('Expected a function');
                        }
                        return h = h == null ? 0 : Mn(dt(h), 0), vt(function (m) {
                            var E = m[h], C = No(m, 0, h);
                            return E && wo(C, E), Wr(c, this, C);
                        });
                    }
                    function lD(c, h, m) {
                        var E = true, C = true;
                        if (typeof c != 'function') {
                            throw new hs('Expected a function');
                        }
                        return dn(m) && (E = 'leading' in m ? !!m.leading : E, C = 'trailing' in m ? !!m.trailing : C), oE(c, h, {
                            leading: E,
                            maxWait: h,
                            trailing: C
                        });
                    }
                    function uD(c) {
                        return tE(c, 1);
                    }
                    function hD(c, h) {
                        return D_(v_(h), c);
                    }
                    function fD() {
                        if (!arguments.length) {
                            return [];
                        }
                        var c = arguments[0];
                        return ut(c) ? c : [c];
                    }
                    function dD(c) {
                        return ds(c, 4);
                    }
                    function pD(c, h) {
                        return h = typeof h == 'function' ? h : n, ds(c, 4, h);
                    }
                    function mD(c) {
                        return ds(c, 1 | 4);
                    }
                    function gD(c, h) {
                        return h = typeof h == 'function' ? h : n, ds(c, 1 | 4, h);
                    }
                    function _D(c, h) {
                        return h == null || Yb(c, h, Bn(h));
                    }
                    function Ds(c, h) {
                        return c === h || c !== c && h !== h;
                    }
                    var yD = Ud(a_), vD = Ud(function (c, h) {
                            return c >= h;
                        }), Wa = e4((function () {
                            return arguments;
                        }())) ? e4 : function (c) {
                            return gn(c) && Ut.call(c, 'callee') && !Bb.call(c, 'callee');
                        }, ut = pe.isArray, bD = Eb ? Hr(Eb) : IP;
                    function Cr(c) {
                        return c != null && Yd(c.length) && !Wi(c);
                    }
                    function vn(c) {
                        return gn(c) && Cr(c);
                    }
                    function ED(c) {
                        return c === true || c === false || gn(c) && gr(c) == '[object Boolean]';
                    }
                    var xo = Dx || H_, TD = Tb ? Hr(Tb) : kP;
                    function SD(c) {
                        return gn(c) && c.nodeType === 1 && !eh(c);
                    }
                    function wD(c) {
                        if (c == null) {
                            return true;
                        }
                        if (Cr(c) && (ut(c) || typeof c == 'string' || typeof c.splice == 'function' || xo(c) || el(c) || Wa(c))) {
                            return !c.length;
                        }
                        var h = ir(c);
                        if (h == '[object Map]' || h == '[object Set]') {
                            return !c.size;
                        }
                        if (Qu(c)) {
                            return !u_(c).length;
                        }
                        for (var m in c)
                            if (Ut.call(c, m)) {
                                return false;
                            }
                        return true;
                    }
                    function OD(c, h) {
                        return Ku(c, h);
                    }
                    function AD(c, h, m) {
                        m = typeof m == 'function' ? m : n;
                        var E = m ? m(c, h) : n;
                        return E === n ? Ku(c, h, n, m) : !!E;
                    }
                    function $_(c) {
                        if (!gn(c)) {
                            return false;
                        }
                        var h = gr(c);
                        return h == '[object Error]' || h == '[object DOMException]' || typeof c.message == 'string' && typeof c.name == 'string' && !eh(c);
                    }
                    function CD(c) {
                        return typeof c == 'number' && Vb(c);
                    }
                    function Wi(c) {
                        if (!dn(c)) {
                            return false;
                        }
                        var h = gr(c);
                        return h == '[object Function]' || h == '[object GeneratorFunction]' || h == '[object AsyncFunction]' || h == '[object Proxy]';
                    }
                    function cE(c) {
                        return typeof c == 'number' && c == dt(c);
                    }
                    function Yd(c) {
                        return typeof c == 'number' && c > -1 && c % 1 == 0 && c <= 9007199254740991;
                    }
                    function dn(c) {
                        var h = typeof c;
                        return c != null && (h == 'object' || h == 'function');
                    }
                    function gn(c) {
                        return c != null && typeof c == 'object';
                    }
                    var lE = Sb ? Hr(Sb) : xP;
                    function ID(c, h) {
                        return c === h || l_(c, h, A_(h));
                    }
                    function kD(c, h, m) {
                        return m = typeof m == 'function' ? m : n, l_(c, h, A_(h), m);
                    }
                    function ND(c) {
                        return uE(c) && c != +c;
                    }
                    function xD(c) {
                        if (pR(c)) {
                            throw new ct('Unsupported core-js use. Try https://npms.io/search?q=ponyfill.');
                        }
                        return t4(c);
                    }
                    function PD(c) {
                        return c === null;
                    }
                    function RD(c) {
                        return c == null;
                    }
                    function uE(c) {
                        return typeof c == 'number' || gn(c) && gr(c) == '[object Number]';
                    }
                    function eh(c) {
                        if (!gn(c) || gr(c) != '[object Object]') {
                            return false;
                        }
                        var h = Ed(c);
                        if (h === null) {
                            return true;
                        }
                        var m = Ut.call(h, 'constructor') && h.constructor;
                        return typeof m == 'function' && m instanceof m && _d.call(m) == kx;
                    }
                    var L_ = wb ? Hr(wb) : PP;
                    function MD(c) {
                        return cE(c) && c >= -9007199254740991 && c <= 9007199254740991;
                    }
                    var hE = Ob ? Hr(Ob) : RP;
                    function Kd(c) {
                        return typeof c == 'string' || !ut(c) && gn(c) && gr(c) == '[object String]';
                    }
                    function Yr(c) {
                        return typeof c == 'symbol' || gn(c) && gr(c) == '[object Symbol]';
                    }
                    var el = Ab ? Hr(Ab) : MP;
                    function DD(c) {
                        return c === n;
                    }
                    function $D(c) {
                        return gn(c) && ir(c) == '[object WeakMap]';
                    }
                    function LD(c) {
                        return gn(c) && gr(c) == '[object WeakSet]';
                    }
                    var FD = Ud(h_), UD = Ud(function (c, h) {
                            return c <= h;
                        });
                    function fE(c) {
                        if (!c) {
                            return [];
                        }
                        if (Cr(c)) {
                            return Kd(c) ? Rs(c) : Ar(c);
                        }
                        if (qu && c[qu]) {
                            return _x(c[qu]());
                        }
                        var h = ir(c), m = h == '[object Map]' ? Qg : h == '[object Set]' ? pd : tl;
                        return m(c);
                    }
                    function Hi(c) {
                        if (!c) {
                            return c === 0 ? c : 0;
                        }
                        if (c = gs(c), c === 1e+400 || c === -1e+400) {
                            var h = c < 0 ? -1 : 1;
                            return h * 1.7976931348623157e+308;
                        }
                        return c === c ? c : 0;
                    }
                    function dt(c) {
                        var h = Hi(c), m = h % 1;
                        return h === h ? m ? h - m : h : 0;
                    }
                    function dE(c) {
                        return c ? qa(dt(c), 0, 4294967295) : 0;
                    }
                    function gs(c) {
                        if (typeof c == 'number') {
                            return c;
                        }
                        if (Yr(c)) {
                            return be;
                        }
                        if (dn(c)) {
                            var h = typeof c.valueOf == 'function' ? c.valueOf() : c;
                            c = dn(h) ? h + '' : h;
                        }
                        if (typeof c != 'string') {
                            return c === 0 ? c : +c;
                        }
                        c = Pb(c);
                        var m = /^0b[01]+$/i.test(c);
                        return m || /^0o[0-7]+$/i.test(c) ? ex(c.slice(2), m ? 2 : 8) : /^[-+]0x[0-9a-f]+$/i.test(c) ? be : +c;
                    }
                    function pE(c) {
                        return ci(c, Ir(c));
                    }
                    function BD(c) {
                        return c ? qa(dt(c), -9007199254740991, 9007199254740991) : c === 0 ? c : 0;
                    }
                    function Lt(c) {
                        return c == null ? '' : zr(c);
                    }
                    var qD = Xc(function (c, h) {
                            if (Qu(h) || Cr(h)) {
                                ci(h, Bn(h), c);
                                return;
                            }
                            for (var m in h)
                                Ut.call(h, m) && Hu(c, m, h[m]);
                        }), mE = Xc(function (c, h) {
                            ci(h, Ir(h), c);
                        }), Zd = Xc(function (c, h, m, E) {
                            ci(h, Ir(h), c, E);
                        }), VD = Xc(function (c, h, m, E) {
                            ci(h, Bn(h), c, E);
                        }), GD = Gi(s_);
                    function jD(c, h) {
                        var m = Zc(c);
                        return h == null ? m : zb(m, h);
                    }
                    var WD = vt(function (c, h) {
                            c = jt(c);
                            var m = -1, E = h.length, C = E > 2 ? h[2] : n;
                            for (C && _r(h[0], h[1], C) && (E = 1); ++m < E;) {
                                for (var F = h[m], z = Ir(F), J = -1, ce = z.length; ++J < ce;) {
                                    var Se = z[J], we = c[Se];
                                    (we === n || Ds(we, zc[Se]) && !Ut.call(c, Se)) && (c[Se] = F[Se]);
                                }
                            }
                            return c;
                        }), HD = vt(function (c) {
                            return c.push(n, P4), Wr(gE, n, c);
                        });
                    function zD(c, h) {
                        return Ib(c, Ze(h, 3), ai);
                    }
                    function YD(c, h) {
                        return Ib(c, Ze(h, 3), o_);
                    }
                    function KD(c, h) {
                        return c == null ? c : i_(c, Ze(h, 3), Ir);
                    }
                    function ZD(c, h) {
                        return c == null ? c : Qb(c, Ze(h, 3), Ir);
                    }
                    function XD(c, h) {
                        return c && ai(c, Ze(h, 3));
                    }
                    function QD(c, h) {
                        return c && o_(c, Ze(h, 3));
                    }
                    function JD(c) {
                        return c == null ? [] : xd(c, Bn(c));
                    }
                    function e$(c) {
                        return c == null ? [] : xd(c, Ir(c));
                    }
                    function F_(c, h, m) {
                        var E = c == null ? n : Va(c, h);
                        return E === n ? m : E;
                    }
                    function t$(c, h) {
                        return c != null && D4(c, h, wP);
                    }
                    function U_(c, h) {
                        return c != null && D4(c, h, OP);
                    }
                    var n$ = C4(function (c, h, m) {
                            h != null && typeof h.toString != 'function' && (h = yd.call(h));
                            ;
                            ;
                        }, q_(kr)), r$ = C4(function (c, h, m) {
                            h != null && typeof h.toString != 'function' && (h = yd.call(h));
                            Ut.call(c, h) ? c[h].push(m) : c[h] = [m];
                            ;
                        }, Ze), s$ = vt(Yu);
                    function Bn(c) {
                        return Cr(c) ? Wb(c) : u_(c);
                    }
                    function Ir(c) {
                        return Cr(c) ? Wb(c, true) : DP(c);
                    }
                    function i$(c, h) {
                        var m = {};
                        return h = Ze(h, 3), ai(c, function (E, C, F) {
                            qi(m, h(E, C, F), E);
                        }), m;
                    }
                    function o$(c, h) {
                        var m = {};
                        return h = Ze(h, 3), ai(c, function (E, C, F) {
                            qi(m, C, h(E, C, F));
                        }), m;
                    }
                    var a$ = Xc(function (c, h, m) {
                            Pd(c, h, m);
                        }), gE = Xc(function (c, h, m, E) {
                            Pd(c, h, m, E);
                        }), c$ = Gi(function (c, h) {
                            var m = {};
                            if (c == null) {
                                return m;
                            }
                            var E = false;
                            h = on(h, function (F) {
                                return F = ko(F, c), E || (E = F.length > 1), F;
                            });
                            ci(c, w_(c), m);
                            E && (m = ds(m, 1 | 2 | 4, nR));
                            ;
                            for (var C = h.length; C--;) {
                                g_(m, h[C]);
                            }
                            return m;
                        });
                    function l$(c, h) {
                        return _E(c, zd(Ze(h)));
                    }
                    var u$ = Gi(function (c, h) {
                        return c == null ? {} : LP(c, h);
                    });
                    function _E(c, h) {
                        if (c == null) {
                            return {};
                        }
                        var m = on(w_(c), function (E) {
                            return [E];
                        });
                        return h = Ze(h), c4(c, m, function (E, C) {
                            return h(E, C[0]);
                        });
                    }
                    function h$(c, h, m) {
                        h = ko(h, c);
                        var E = -1, C = h.length;
                        for (C || (C = 1, c = n); ++E < C;) {
                            var F = c == null ? n : c[li(h[E])];
                            if (F === n) {
                                E = C;
                                F = m;
                            }
                            c = Wi(F) ? F.call(c) : F;
                            ;
                        }
                        return c;
                    }
                    function f$(c, h, m) {
                        return c == null ? c : Zu(c, h, m);
                    }
                    function d$(c, h, m, E) {
                        return E = typeof E == 'function' ? E : n, c == null ? c : Zu(c, h, m, E);
                    }
                    var yE = N4(Bn), vE = N4(Ir);
                    function p$(c, h, m) {
                        var E = ut(c), C = E || xo(c) || el(c);
                        if (h = Ze(h, 4), m == null) {
                            var F = c && c.constructor;
                            C ? m = E ? new F() : [] : dn(c) ? m = Wi(F) ? Zc(Ed(c)) : {} : m = {};
                        }
                        return (C ? us : ai)(c, function (z, J, ce) {
                            return h(m, z, J, ce);
                        }), m;
                    }
                    function m$(c, h) {
                        return c == null ? true : g_(c, h);
                    }
                    function g$(c, h, m) {
                        return c == null ? c : d4(c, h, v_(m));
                    }
                    function _$(c, h, m, E) {
                        return E = typeof E == 'function' ? E : n, c == null ? c : d4(c, h, v_(m), E);
                    }
                    function tl(c) {
                        return c == null ? [] : Xg(c, Bn(c));
                    }
                    function y$(c) {
                        return c == null ? [] : Xg(c, Ir(c));
                    }
                    function v$(c, h, m) {
                        return m === n && (m = h, h = n), m !== n && (m = gs(m), m = m === m ? m : 0), h !== n && (h = gs(h), h = h === h ? h : 0), qa(gs(c), h, m);
                    }
                    function b$(c, h, m) {
                        return h = Hi(h), m === n ? (m = h, h = 0) : m = Hi(m), c = gs(c), AP(c, h, m);
                    }
                    function E$(c, h, m) {
                        if (m && typeof m != 'boolean' && _r(c, h, m) && (h = m = n), m === n && (typeof h == 'boolean' ? (m = h, h = n) : typeof c == 'boolean' && (m = c, c = n)), c === n && h === n ? (c = 0, h = 1) : (c = Hi(c), h === n ? (h = c, c = 0) : h = Hi(h)), c > h) {
                            var E = c;
                            c = h;
                            h = E;
                            ;
                        }
                        if (m || c % 1 || h % 1) {
                            var C = Gb();
                            return sr(c + C * (h - c + JN('1e-' + ((C + '').length - 1))), h);
                        }
                        return d_(c, h);
                    }
                    var T$ = Qc(function (c, h, m) {
                        return h = h.toLowerCase(), c + (m ? bE(h) : h);
                    });
                    function bE(c) {
                        return B_(Lt(c).toLowerCase());
                    }
                    function EE(c) {
                        return c = Lt(c), c && c.replace(/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, fx).replace(GN, '');
                    }
                    function S$(c, h, m) {
                        c = Lt(c);
                        h = zr(h);
                        ;
                        var E = c.length;
                        m = m === n ? E : qa(dt(m), 0, E);
                        var C = m;
                        return m -= h.length, m >= 0 && c.slice(m, C) == h;
                    }
                    function w$(c) {
                        return c = Lt(c), c && sN.test(c) ? c.replace(/[&<>"']/g, dx) : c;
                    }
                    function O$(c) {
                        return c = Lt(c), c && uN.test(c) ? c.replace(/[\\^$.*+?()[\]{}|]/g, '\\$&') : c;
                    }
                    var A$ = Qc(function (c, h, m) {
                            return c + (m ? '-' : '') + h.toLowerCase();
                        }), C$ = Qc(function (c, h, m) {
                            return c + (m ? ' ' : '') + h.toLowerCase();
                        }), I$ = w4('toLowerCase');
                    function k$(c, h, m) {
                        c = Lt(c);
                        h = dt(h);
                        ;
                        var E = h ? Wc(c) : 0;
                        if (!h || E >= h) {
                            return c;
                        }
                        var C = (h - E) / 2;
                        return Fd(Od(C), m) + c + Fd(wd(C), m);
                    }
                    function N$(c, h, m) {
                        c = Lt(c);
                        h = dt(h);
                        ;
                        var E = h ? Wc(c) : 0;
                        return h && E < h ? c + Fd(h - E, m) : c;
                    }
                    function x$(c, h, m) {
                        c = Lt(c);
                        h = dt(h);
                        ;
                        var E = h ? Wc(c) : 0;
                        return h && E < h ? Fd(h - E, m) + c : c;
                    }
                    function P$(c, h, m) {
                        return m || h == null ? h = 0 : h && (h = +h), Ux(Lt(c).replace(/^\s+/, ''), h || 0);
                    }
                    function R$(c, h, m) {
                        return (m ? _r(c, h, m) : h === n) ? h = 1 : h = dt(h), p_(Lt(c), h);
                    }
                    function M$() {
                        var c = arguments, h = Lt(c[0]);
                        return c.length < 3 ? h : h.replace(c[1], c[2]);
                    }
                    var D$ = Qc(function (c, h, m) {
                        return c + (m ? '_' : '') + h.toLowerCase();
                    });
                    function $$(c, h, m) {
                        return m && typeof m != 'number' && _r(c, h, m) && (h = m = n), m = m === n ? 4294967295 : m >>> 0, m ? (c = Lt(c), c && (typeof h == 'string' || h != null && !L_(h)) && (h = zr(h), !h && jc(c)) ? No(Rs(c), 0, m) : c.split(h, m)) : [];
                    }
                    var L$ = Qc(function (c, h, m) {
                        return c + (m ? ' ' : '') + B_(h);
                    });
                    function F$(c, h, m) {
                        return c = Lt(c), m = m == null ? 0 : qa(dt(m), 0, c.length), h = zr(h), c.slice(m, m + h.length) == h;
                    }
                    function U$(c, h, m) {
                        var E = D.templateSettings;
                        m && _r(c, h, m) && (h = n);
                        c = Lt(c);
                        h = Zd({}, h, E, x4);
                        ;
                        var C = Zd({}, h.imports, E.imports, x4), F = Bn(C), z = Xg(C, F), J, ce, Se = 0, we = h.interpolate || /($^)/, ke = '__p += \'', Pe = Jg((h.escape || /($^)/).source + '|' + we.source + '|' + (we === /<%=([\s\S]+?)%>/g ? /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g : /($^)/).source + '|' + (h.evaluate || /($^)/).source + '|$', 'g'), Ge = '//# sourceURL=' + (Ut.call(h, 'sourceURL') ? (h.sourceURL + '').replace(/\s/g, ' ') : 'lodash.templateSources[' + ++YN + ']') + `
`;
                        c.replace(Pe, function (tt, Et, At, Kr, yr, Zr) {
                            return At || (At = Kr), ke += c.slice(Se, Zr).replace(/['\n\r\u2028\u2029\\]/g, px), Et && (J = true, ke += `' +
__e(` + Et + `) +
'`), yr && (ce = true, ke += `';
` + yr + `;
__p += '`), At && (ke += `' +
((__t = (` + At + `)) == null ? '' : __t) +
'`), Se = Zr + tt.length, tt;
                        });
                        ke += `';
`;
                        ;
                        var et = Ut.call(h, 'variable') && h.variable;
                        if (!et) {
                            ke = `with (obj) {
` + ke + `
}
`;
                        } else {
                            if (/[()=,{}\[\]\/\s]/.test(et)) {
                                throw new ct('Invalid `variable` option passed into `_.template`');
                            }
                        }
                        ke = (ce ? ke.replace(/\b__p \+= '';/g, '') : ke).replace(/\b(__p \+=) '' \+/g, '$1').replace(/(__e\(.*?\)|\b__t\)) \+\n'';/g, '$1;');
                        ke = 'function(' + (et || 'obj') + `) {
` + (et ? '' : `obj || (obj = {});
`) + 'var __t, __p = \'\'' + (J ? ', __e = _.escape' : '') + (ce ? `, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
` : `;
`) + ke + `return __p
}`;
                        ;
                        var mt = SE(function () {
                            return $t(F, Ge + 'return ' + ke).apply(n, z);
                        });
                        if (mt.source = ke, $_(mt)) {
                            throw mt;
                        }
                        return mt;
                    }
                    function B$(c) {
                        return Lt(c).toLowerCase();
                    }
                    function q$(c) {
                        return Lt(c).toUpperCase();
                    }
                    function V$(c, h, m) {
                        if (c = Lt(c), c && (m || h === n)) {
                            return Pb(c);
                        }
                        if (!c || !(h = zr(h))) {
                            return c;
                        }
                        var E = Rs(c), C = Rs(h), F = Rb(E, C), z = Mb(E, C) + 1;
                        return No(E, F, z).join('');
                    }
                    function G$(c, h, m) {
                        if (c = Lt(c), c && (m || h === n)) {
                            return c.slice(0, $b(c) + 1);
                        }
                        if (!c || !(h = zr(h))) {
                            return c;
                        }
                        var E = Rs(c), C = Mb(E, Rs(h)) + 1;
                        return No(E, 0, C).join('');
                    }
                    function j$(c, h, m) {
                        if (c = Lt(c), c && (m || h === n)) {
                            return c.replace(/^\s+/, '');
                        }
                        if (!c || !(h = zr(h))) {
                            return c;
                        }
                        var E = Rs(c), C = Rb(E, Rs(h));
                        return No(E, C).join('');
                    }
                    function W$(c, h) {
                        var m = 30, E = '...';
                        if (dn(h)) {
                            var C = 'separator' in h ? h.separator : C;
                            m = 'length' in h ? dt(h.length) : m;
                            E = 'omission' in h ? zr(h.omission) : E;
                            ;
                        }
                        c = Lt(c);
                        var F = c.length;
                        if (jc(c)) {
                            var z = Rs(c);
                            F = z.length;
                        }
                        if (m >= F) {
                            return c;
                        }
                        var J = m - Wc(E);
                        if (J < 1) {
                            return E;
                        }
                        var ce = z ? No(z, 0, J).join('') : c.slice(0, J);
                        if (C === n) {
                            return ce + E;
                        }
                        if (z && (J += ce.length - J), L_(C)) {
                            if (c.slice(J).search(C)) {
                                var Se, we = ce;
                                for (C.global || (C = Jg(C.source, Lt(/\w*$/.exec(C)) + 'g')), C.lastIndex = 0; Se = C.exec(we);) {
                                    var ke = Se.index;
                                }
                                ce = ce.slice(0, ke === n ? J : ke);
                            }
                        } else {
                            if (c.indexOf(zr(C), J) != J) {
                                var Pe = ce.lastIndexOf(C);
                                Pe > -1 && (ce = ce.slice(0, Pe));
                            }
                        }
                        return ce + E;
                    }
                    function H$(c) {
                        return c = Lt(c), c && rN.test(c) ? c.replace(/&(?:amp|lt|gt|quot|#39);/g, Ex) : c;
                    }
                    var z$ = Qc(function (c, h, m) {
                            return c + (m ? ' ' : '') + h.toUpperCase();
                        }), B_ = w4('toUpperCase');
                    function TE(c, h, m) {
                        return c = Lt(c), h = m ? n : h, h === n ? gx(c) ? wx(c) : ax(c) : c.match(h) || [];
                    }
                    var SE = vt(function (c, h) {
                            try {
                                return Wr(c, n, h);
                            } catch (m) {
                                return $_(m) ? m : new ct(m);
                            }
                        }), Y$ = Gi(function (c, h) {
                            return us(h, function (m) {
                                m = li(m);
                                qi(c, m, M_(c[m], c));
                                ;
                            }), c;
                        });
                    function K$(c) {
                        var h = c == null ? 0 : c.length, m = Ze();
                        return c = h ? on(c, function (E) {
                            if (typeof E[1] != 'function') {
                                throw new hs('Expected a function');
                            }
                            return [
                                m(E[0]),
                                E[1]
                            ];
                        }) : [], vt(function (E) {
                            for (var C = -1; ++C < h;) {
                                var F = c[C];
                                if (Wr(F[0], this, E)) {
                                    return Wr(F[1], this, E);
                                }
                            }
                        });
                    }
                    function Z$(c) {
                        return EP(ds(c, 1));
                    }
                    function q_(c) {
                        return function () {
                            return c;
                        };
                    }
                    function X$(c, h) {
                        return c == null || c !== c ? h : c;
                    }
                    var Q$ = A4(), J$ = A4(true);
                    function kr(c) {
                        return c;
                    }
                    function V_(c) {
                        return n4(typeof c == 'function' ? c : ds(c, 1));
                    }
                    function eL(c) {
                        return s4(ds(c, 1));
                    }
                    function tL(c, h) {
                        return i4(c, ds(h, 1));
                    }
                    var nL = vt(function (c, h) {
                            return function (m) {
                                return Yu(m, c, h);
                            };
                        }), rL = vt(function (c, h) {
                            return function (m) {
                                return Yu(c, m, h);
                            };
                        });
                    function G_(c, h, m) {
                        var E = Bn(h), C = xd(h, E);
                        m == null && !(dn(h) && (C.length || !E.length)) && (m = h, h = c, c = this, C = xd(h, Bn(h)));
                        var F = !(dn(m) && 'chain' in m) || !!m.chain, z = Wi(c);
                        return us(C, function (J) {
                            var ce = h[J];
                            ;
                            z && (c.prototype[J] = function () {
                                var Se = this.__chain__;
                                if (F || Se) {
                                    var we = c(this.__wrapped__), ke = we.__actions__ = Ar(this.__actions__);
                                    return ke.push({
                                        func: ce,
                                        args: arguments,
                                        thisArg: c
                                    }), we.__chain__ = Se, we;
                                }
                                return ce.apply(c, wo([this.value()], arguments));
                            });
                            ;
                        }), c;
                    }
                    function sL() {
                        return Hn._ === this && (Hn._ = Nx), this;
                    }
                    function j_() {
                    }
                    function iL(c) {
                        return c = dt(c), vt(function (h) {
                            return o4(h, c);
                        });
                    }
                    var oL = E_(on), aL = E_(Cb), cL = E_(Hg);
                    function wE(c) {
                        return I_(c) ? zg(li(c)) : FP(c);
                    }
                    function lL(c) {
                        return function (h) {
                            return c == null ? n : Va(c, h);
                        };
                    }
                    var uL = I4(), hL = I4(true);
                    function W_() {
                        return [];
                    }
                    function H_() {
                        return false;
                    }
                    function fL() {
                        return {};
                    }
                    function dL() {
                        return '';
                    }
                    function pL() {
                        return true;
                    }
                    function mL(c, h) {
                        if (c = dt(c), c < 1 || c > 9007199254740991) {
                            return [];
                        }
                        var m = 4294967295, E = sr(c, 4294967295);
                        h = Ze(h);
                        c -= 4294967295;
                        ;
                        for (var C = Zg(E, h); ++m < c;) {
                            h(m);
                        }
                        return C;
                    }
                    function gL(c) {
                        return ut(c) ? on(c, li) : Yr(c) ? [c] : Ar(j4(Lt(c)));
                    }
                    function _L(c) {
                        var h = ++Ix;
                        return Lt(c) + h;
                    }
                    var yL = Ld(function (c, h) {
                            return c + h;
                        }, 0), vL = T_('ceil'), bL = Ld(function (c, h) {
                            return c / h;
                        }, 1), EL = T_('floor');
                    function TL(c) {
                        return c && c.length ? Nd(c, kr, a_) : n;
                    }
                    function SL(c, h) {
                        return c && c.length ? Nd(c, Ze(h, 2), a_) : n;
                    }
                    function wL(c) {
                        return Nb(c, kr);
                    }
                    function OL(c, h) {
                        return Nb(c, Ze(h, 2));
                    }
                    function AL(c) {
                        return c && c.length ? Nd(c, kr, h_) : n;
                    }
                    function CL(c, h) {
                        return c && c.length ? Nd(c, Ze(h, 2), h_) : n;
                    }
                    var IL = Ld(function (c, h) {
                            return c * h;
                        }, 1), kL = T_('round'), NL = Ld(function (c, h) {
                            return c - h;
                        }, 0);
                    function xL(c) {
                        return c && c.length ? Kg(c, kr) : 0;
                    }
                    function PL(c, h) {
                        return c && c.length ? Kg(c, Ze(h, 2)) : 0;
                    }
                    return D.after = eD, D.ary = tE, D.assign = qD, D.assignIn = mE, D.assignInWith = Zd, D.assignWith = VD, D.at = GD, D.before = nE, D.bind = M_, D.bindAll = Y$, D.bindKey = rE, D.castArray = fD, D.chain = Q4, D.chunk = ER, D.compact = TR, D.concat = SR, D.cond = K$, D.conforms = Z$, D.constant = q_, D.countBy = xM, D.create = jD, D.curry = sE, D.curryRight = iE, D.debounce = oE, D.defaults = WD, D.defaultsDeep = HD, D.defer = tD, D.delay = nD, D.difference = wR, D.differenceBy = OR, D.differenceWith = AR, D.drop = CR, D.dropRight = IR, D.dropRightWhile = kR, D.dropWhile = NR, D.fill = xR, D.filter = RM, D.flatMap = $M, D.flatMapDeep = LM, D.flatMapDepth = FM, D.flatten = Y4, D.flattenDeep = PR, D.flattenDepth = RR, D.flip = rD, D.flow = Q$, D.flowRight = J$, D.fromPairs = MR, D.functions = JD, D.functionsIn = e$, D.groupBy = UM, D.initial = $R, D.intersection = LR, D.intersectionBy = FR, D.intersectionWith = UR, D.invert = n$, D.invertBy = r$, D.invokeMap = qM, D.iteratee = V_, D.keyBy = VM, D.keys = Bn, D.keysIn = Ir, D.map = jd, D.mapKeys = i$, D.mapValues = o$, D.matches = eL, D.matchesProperty = tL, D.memoize = Hd, D.merge = a$, D.mergeWith = gE, D.method = nL, D.methodOf = rL, D.mixin = G_, D.negate = zd, D.nthArg = iL, D.omit = c$, D.omitBy = l$, D.once = sD, D.orderBy = GM, D.over = oL, D.overArgs = iD, D.overEvery = aL, D.overSome = cL, D.partial = D_, D.partialRight = aE, D.partition = jM, D.pick = u$, D.pickBy = _E, D.property = wE, D.propertyOf = lL, D.pull = GR, D.pullAll = Z4, D.pullAllBy = jR, D.pullAllWith = WR, D.pullAt = HR, D.range = uL, D.rangeRight = hL, D.rearg = oD, D.reject = zM, D.remove = zR, D.rest = aD, D.reverse = P_, D.sampleSize = KM, D.set = f$, D.setWith = d$, D.shuffle = ZM, D.slice = YR, D.sortBy = JM, D.sortedUniq = tM, D.sortedUniqBy = nM, D.split = $$, D.spread = cD, D.tail = rM, D.take = sM, D.takeRight = iM, D.takeRightWhile = oM, D.takeWhile = aM, D.tap = TM, D.throttle = lD, D.thru = Gd, D.toArray = fE, D.toPairs = yE, D.toPairsIn = vE, D.toPath = gL, D.toPlainObject = pE, D.transform = p$, D.unary = uD, D.union = cM, D.unionBy = lM, D.unionWith = uM, D.uniq = hM, D.uniqBy = fM, D.uniqWith = dM, D.unset = m$, D.unzip = R_, D.unzipWith = X4, D.update = g$, D.updateWith = _$, D.values = tl, D.valuesIn = y$, D.without = pM, D.words = TE, D.wrap = hD, D.xor = mM, D.xorBy = gM, D.xorWith = _M, D.zip = yM, D.zipObject = vM, D.zipObjectDeep = bM, D.zipWith = EM, D.entries = yE, D.entriesIn = vE, D.extend = mE, D.extendWith = Zd, G_(D, D), D.add = yL, D.attempt = SE, D.camelCase = T$, D.capitalize = bE, D.ceil = vL, D.clamp = v$, D.clone = dD, D.cloneDeep = mD, D.cloneDeepWith = gD, D.cloneWith = pD, D.conformsTo = _D, D.deburr = EE, D.defaultTo = X$, D.divide = bL, D.endsWith = S$, D.eq = Ds, D.escape = w$, D.escapeRegExp = O$, D.every = PM, D.find = MM, D.findIndex = H4, D.findKey = zD, D.findLast = DM, D.findLastIndex = z4, D.findLastKey = YD, D.floor = EL, D.forEach = J4, D.forEachRight = eE, D.forIn = KD, D.forInRight = ZD, D.forOwn = XD, D.forOwnRight = QD, D.get = F_, D.gt = yD, D.gte = vD, D.has = t$, D.hasIn = U_, D.head = K4, D.identity = kr, D.includes = BM, D.indexOf = DR, D.inRange = b$, D.invoke = s$, D.isArguments = Wa, D.isArray = ut, D.isArrayBuffer = bD, D.isArrayLike = Cr, D.isArrayLikeObject = vn, D.isBoolean = ED, D.isBuffer = xo, D.isDate = TD, D.isElement = SD, D.isEmpty = wD, D.isEqual = OD, D.isEqualWith = AD, D.isError = $_, D.isFinite = CD, D.isFunction = Wi, D.isInteger = cE, D.isLength = Yd, D.isMap = lE, D.isMatch = ID, D.isMatchWith = kD, D.isNaN = ND, D.isNative = xD, D.isNil = RD, D.isNull = PD, D.isNumber = uE, D.isObject = dn, D.isObjectLike = gn, D.isPlainObject = eh, D.isRegExp = L_, D.isSafeInteger = MD, D.isSet = hE, D.isString = Kd, D.isSymbol = Yr, D.isTypedArray = el, D.isUndefined = DD, D.isWeakMap = $D, D.isWeakSet = LD, D.join = BR, D.kebabCase = A$, D.last = ms, D.lastIndexOf = qR, D.lowerCase = C$, D.lowerFirst = I$, D.lt = FD, D.lte = UD, D.max = TL, D.maxBy = SL, D.mean = wL, D.meanBy = OL, D.min = AL, D.minBy = CL, D.stubArray = W_, D.stubFalse = H_, D.stubObject = fL, D.stubString = dL, D.stubTrue = pL, D.multiply = IL, D.nth = VR, D.noConflict = sL, D.noop = j_, D.now = Wd, D.pad = k$, D.padEnd = N$, D.padStart = x$, D.parseInt = P$, D.random = E$, D.reduce = WM, D.reduceRight = HM, D.repeat = R$, D.replace = M$, D.result = h$, D.round = kL, D.runInContext = ie, D.sample = YM, D.size = XM, D.snakeCase = D$, D.some = QM, D.sortedIndex = KR, D.sortedIndexBy = ZR, D.sortedIndexOf = XR, D.sortedLastIndex = QR, D.sortedLastIndexBy = JR, D.sortedLastIndexOf = eM, D.startCase = L$, D.startsWith = F$, D.subtract = NL, D.sum = xL, D.sumBy = PL, D.template = U$, D.times = mL, D.toFinite = Hi, D.toInteger = dt, D.toLength = dE, D.toLower = B$, D.toNumber = gs, D.toSafeInteger = BD, D.toString = Lt, D.toUpper = q$, D.trim = V$, D.trimEnd = G$, D.trimStart = j$, D.truncate = W$, D.unescape = H$, D.uniqueId = _L, D.upperCase = z$, D.upperFirst = B_, D.each = J4, D.eachRight = eE, D.first = K4, G_(D, (function () {
                        var c = {
                            prototype: h,
                            __dir__: -1,
                            __filtered__: true,
                            __dir__: -1,
                            Fa: n,
                            E: ji(F, m) ? C[F] : n,
                            F: c[m],
                            m: z,
                            h: m,
                            J: ce
                        };
                        return ai(D, function (h, m) {
                            Ut.call(D.prototype, m) || (c[m] = h);
                        }), c;
                    }()), { chain: false }), D.VERSION = '4.17.21', us([
                        'bind',
                        'bindKey',
                        'curry',
                        'curryRight',
                        'partial',
                        'partialRight'
                    ], function (c) {
                        D[c].placeholder = D;
                    }), us([
                        'drop',
                        'take'
                    ], function (c, h) {
                        Tt.prototype[c] = function (m) {
                            m = m === n ? 1 : Mn(dt(m), 0);
                            var E = this.__filtered__ && !h ? new Tt(this) : this.clone();
                            return E.__filtered__ ? E.__takeCount__ = sr(m, E.__takeCount__) : E.__views__.push({
                                size: sr(m, 4294967295),
                                type: c + (E.__dir__ < 0 ? 'Right' : '')
                            }), E;
                        };
                        Tt.prototype[c + 'Right'] = function (m) {
                            return this.reverse()[c](m).reverse();
                        };
                        ;
                    }), us([
                        'filter',
                        'map',
                        'takeWhile'
                    ], function (c, h) {
                        var m = h + 1, E = m == 1 || m == 3;
                        Tt.prototype[c] = function (C) {
                            var F = this.clone();
                            return F.__iteratees__.push({
                                iteratee: Ze(C, 3),
                                type: m
                            }), F.__filtered__ = F.__filtered__ || E, F;
                        };
                    }), us([
                        'head',
                        'last'
                    ], function (c, h) {
                        var m = 'take' + (h ? 'Right' : '');
                        Tt.prototype[c] = function () {
                            return this[m](1).value()[0];
                        };
                    }), us([
                        'initial',
                        'tail'
                    ], function (c, h) {
                        var m = 'drop' + (h ? '' : 'Right');
                        Tt.prototype[c] = function () {
                            return this.__filtered__ ? new Tt(this) : this[m](1);
                        };
                    }), Tt.prototype.compact = function () {
                        return this.filter(kr);
                    }, Tt.prototype.find = function (c) {
                        return this.filter(c).head();
                    }, Tt.prototype.findLast = function (c) {
                        return this.reverse().find(c);
                    }, Tt.prototype.invokeMap = vt(function (c, h) {
                        return typeof c == 'function' ? new Tt(this) : this.map(function (m) {
                            return Yu(m, c, h);
                        });
                    }), Tt.prototype.reject = function (c) {
                        return this.filter(zd(Ze(c)));
                    }, Tt.prototype.slice = function (c, h) {
                        c = dt(c);
                        var m = this;
                        return m.__filtered__ && (c > 0 || h < 0) ? new Tt(m) : (c < 0 ? m = m.takeRight(-c) : c && (m = m.drop(c)), h !== n && (h = dt(h), m = h < 0 ? m.dropRight(-h) : m.take(h - c)), m);
                    }, Tt.prototype.takeRightWhile = function (c) {
                        return this.reverse().takeWhile(c).reverse();
                    }, Tt.prototype.toArray = function () {
                        return this.take(4294967295);
                    }, ai(Tt.prototype, function (c, h) {
                        var m = /^(?:filter|find|map|reject)|While$/.test(h), E = /^(?:head|last)$/.test(h), C = D[E ? 'take' + (h == 'last' ? 'Right' : '') : h], F = E || /^find/.test(h);
                        C && (D.prototype[h] = function () {
                            var z = this.__wrapped__, J = E ? [1] : arguments, ce = z instanceof Tt, Se = J[0], we = ce || ut(z), ke = function (Et) {
                                    var At = C.apply(D, wo([Et], J));
                                    return E && Pe ? At[0] : At;
                                };
                            we && m && typeof Se == 'function' && Se.length != 1 && (ce = we = false);
                            var Pe = this.__chain__, Ge = !!this.__actions__.length, et = F && !Pe, mt = ce && !Ge;
                            if (!F && we) {
                                z = mt ? z : new Tt(this);
                                var tt = c.apply(z, J);
                                return tt.__actions__.push({
                                    func: Gd,
                                    args: [ke],
                                    thisArg: n
                                }), new fs(tt, Pe);
                            }
                            return et && mt ? c.apply(this, J) : (tt = this.thru(ke), et ? E ? tt.value()[0] : tt.value() : tt);
                        });
                    }), us([
                        'pop',
                        'push',
                        'shift',
                        'sort',
                        'splice',
                        'unshift'
                    ], function (c) {
                        var h = md[c], m = /^(?:push|sort|unshift)$/.test(c) ? 'tap' : 'thru', E = /^(?:pop|shift)$/.test(c);
                        D.prototype[c] = function () {
                            var C = arguments;
                            if (E && !this.__chain__) {
                                var F = this.value();
                                return h.apply(ut(F) ? F : [], C);
                            }
                            return this[m](function (z) {
                                return h.apply(ut(z) ? z : [], C);
                            });
                        };
                    }), ai(Tt.prototype, function (c, h) {
                        var m = D[h];
                        if (m) {
                            var E = m.name + '';
                            Ut.call(Kc, E) || (Kc[E] = []);
                            Kc[E].push({
                                name: h,
                                func: m
                            });
                            ;
                        }
                    }), Kc[$d(n, 2).name] = [{
                            name: 'wrapper',
                            func: n
                        }], Tt.prototype.clone = Hx, Tt.prototype.reverse = zx, Tt.prototype.value = Yx, D.prototype.at = SM, D.prototype.chain = wM, D.prototype.commit = OM, D.prototype.next = AM, D.prototype.plant = IM, D.prototype.reverse = kM, D.prototype.toJSON = D.prototype.valueOf = D.prototype.value = NM, D.prototype.first = D.prototype.head, qu && (D.prototype[qu] = CM), D;
                }, Hc = Ox();
            La ? ((La.exports = Hc)._ = Hc, Vg._ = Hc) : Hn._ = Hc;
        }.call(mn));
    }(h1, h1.exports));
    h1.exports;
    var Za, op, Ih = typeof Map == 'function' ? new Map() : (Za = [], op = [], {
            has: function (t) {
                return Za.indexOf(t) > -1;
            },
            get: function (t) {
                return op[Za.indexOf(t)];
            },
            set: function (t, e) {
                if (Za.indexOf(t) === -1) {
                    Za.push(t);
                    op.push(e);
                }
            },
            delete: function (t) {
                var e = Za.indexOf(t);
                if (e > -1) {
                    Za.splice(e, 1);
                    op.splice(e, 1);
                }
            }
        }), lO = function (t) {
            return new Event(t, { bubbles: true });
        };
    try {
        new Event('test');
    } catch {
        lO = function (e) {
            var n = document.createEvent('Event');
            return n.initEvent(e, true, false), n;
        };
    }
    function rJ(t) {
        var e = Ih.get(t);
        e && e.destroy();
    }
    function sJ(t) {
        var e = Ih.get(t);
        e && e.update();
    }
    var ap = null;
    typeof window > 'u' || typeof window.getComputedStyle != 'function' ? ((ap = function (t) {
        return t;
    }).destroy = function (t) {
        return t;
    }, ap.update = function (t) {
        return t;
    }) : ((ap = function (t, e) {
        return t && Array.prototype.forEach.call(t.length ? t : [t], function (n) {
            return function (r) {
                if (r && r.nodeName && r.nodeName === 'TEXTAREA' && !Ih.has(r)) {
                    var s, i = null, o = null, a = null, l = function () {
                            r.clientWidth !== o && p();
                        }, u = function (_) {
                            window.removeEventListener('resize', l, false);
                            r.removeEventListener('input', p, false);
                            r.removeEventListener('keyup', p, false);
                            r.removeEventListener('autosize:destroy', u, false);
                            r.removeEventListener('autosize:update', p, false);
                            Object.keys(_).forEach(function (v) {
                                r.style[v] = _[v];
                            });
                            Ih.delete(r);
                            ;
                        }.bind(r, {
                            height: r.style.height,
                            resize: r.style.resize,
                            overflowY: r.style.overflowY,
                            overflowX: r.style.overflowX,
                            wordWrap: r.style.wordWrap
                        });
                    r.addEventListener('autosize:destroy', u, false);
                    'onpropertychange' in r && 'oninput' in r && r.addEventListener('keyup', p, false);
                    window.addEventListener('resize', l, false);
                    r.addEventListener('input', p, false);
                    r.addEventListener('autosize:update', p, false);
                    r.style.overflowX = 'hidden';
                    r.style.wordWrap = 'break-word';
                    Ih.set(r, {
                        destroy: u,
                        update: p
                    });
                    (s = window.getComputedStyle(r, null)).resize === 'vertical' ? r.style.resize = 'none' : s.resize === 'both' && (r.style.resize = 'horizontal');
                    i = s.boxSizing === 'content-box' ? -(parseFloat(s.paddingTop) + parseFloat(s.paddingBottom)) : parseFloat(s.borderTopWidth) + parseFloat(s.borderBottomWidth);
                    isNaN(i) && (i = 0);
                    p();
                    ;
                }
                function f(_) {
                    var v = r.style.width;
                    r.style.width = '0px';
                    r.style.width = v;
                    r.style.overflowY = _;
                    ;
                }
                function d() {
                    if (r.scrollHeight !== 0) {
                        var _ = function (y) {
                                for (var g = []; y && y.parentNode && y.parentNode instanceof Element;) {
                                    y.parentNode.scrollTop && g.push({
                                        node: y.parentNode,
                                        scrollTop: y.parentNode.scrollTop
                                    });
                                    y = y.parentNode;
                                    ;
                                }
                                return g;
                            }(r), v = document.documentElement && document.documentElement.scrollTop;
                        r.style.height = '';
                        r.style.height = r.scrollHeight + i + 'px';
                        o = r.clientWidth;
                        _.forEach(function (y) {
                            y.node.scrollTop = y.scrollTop;
                        });
                        v && (document.documentElement.scrollTop = v);
                        ;
                    }
                }
                function p() {
                    d();
                    var _ = Math.round(parseFloat(r.style.height)), v = window.getComputedStyle(r, null), y = v.boxSizing === 'content-box' ? Math.round(parseFloat(v.height)) : r.offsetHeight;
                    if (y < _ ? v.overflowY === 'hidden' && (f('scroll'), d(), y = v.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(r, null).height)) : r.offsetHeight) : v.overflowY !== 'hidden' && (f('hidden'), d(), y = v.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(r, null).height)) : r.offsetHeight), a !== y) {
                        a = y;
                        var g = lO('autosize:resized');
                        try {
                            r.dispatchEvent(g);
                        } catch {
                        }
                    }
                }
            }(n);
        }), t;
    }).destroy = function (t) {
        return t && Array.prototype.forEach.call(t.length ? t : [t], rJ), t;
    }, ap.update = function (t) {
        return t && Array.prototype.forEach.call(t.length ? t : [t], sJ), t;
    });
    var cp = function (t) {
            return t && t.Math == Math && t;
        }, Vr = cp(typeof globalThis == 'object' && globalThis) || cp(typeof window == 'object' && window) || cp(typeof self == 'object' && self) || cp(typeof mn == 'object' && mn) || (function () {
            return this;
        }()) || mn || Function('return this')(), i3 = {
            f: Cee ? wS : function (e, n) {
                if (e = xee(e), n = Pee(n), Mee) {
                    try {
                        return wS(e, n);
                    } catch {
                    }
                }
                if (Ree(e, n)) {
                    return Nee(!Iee(kee.f, e, n), e[n]);
                }
            }
        }, cs = function (t) {
            try {
                return !!t();
            } catch {
                return true;
            }
        }, iJ = cs, Ia = !iJ(function () {
            return Object.defineProperty({}, 1, {
                get: function () {
                    return 7;
                }
            })[1] != 7;
        }), oJ = cs, o3 = !oJ(function () {
            var t = function () {
            }.bind();
            return typeof t != 'function' || t.hasOwnProperty('prototype');
        }), aJ = o3, lp = Function.prototype.call, ka = aJ ? lp.bind(lp) : function () {
            return lp.apply(lp, arguments);
        }, uO = {
            f: cJ ? function (e) {
                var n = fO(this, e);
                return !!n && n.enumerable;
            } : hO
        }, hO = {}.propertyIsEnumerable, fO = Object.getOwnPropertyDescriptor, cJ = fO && !hO.call({ 1: 2 }, 1);
    ;
    var dO = function (t, e) {
            return {
                enumerable: !(t & 1),
                configurable: !(t & 2),
                writable: !(t & 4),
                value: e
            };
        }, pO = o3, mO = Function.prototype, N0 = mO.call, lJ = pO && mO.bind.bind(N0, N0), pr = pO ? lJ : function (t) {
            return function () {
                return N0.apply(t, arguments);
            };
        }, gO = pr, uJ = gO({}.toString), hJ = gO(''.slice), Ff = function (t) {
            return hJ(uJ(t), 8, -1);
        }, fJ = pr, dJ = cs, pJ = Ff, gy = Object, mJ = fJ(''.split), gJ = dJ(function () {
            return !gy('z').propertyIsEnumerable(0);
        }) ? function (t) {
            return pJ(t) == 'String' ? mJ(t, '') : gy(t);
        } : gy, Zm = function (t) {
            return t == null;
        }, _J = Zm, yJ = TypeError, Uf = function (t) {
            if (_J(t)) {
                throw yJ('Can\'t call method on ' + t);
            }
            return t;
        }, vJ = gJ, bJ = Uf, Xm = function (t) {
            return vJ(bJ(t));
        }, x0 = typeof document == 'object' && document.all, EJ = typeof x0 > 'u' && x0 !== void 0, _O = {
            all: x0,
            IS_HTMLDDA: EJ
        }, yO = _O, TJ = yO.all, Gr = yO.IS_HTMLDDA ? function (t) {
            return typeof t == 'function' || t === TJ;
        } : function (t) {
            return typeof t == 'function';
        }, hS = Gr, vO = _O, SJ = vO.all, Cu = vO.IS_HTMLDDA ? function (t) {
            return typeof t == 'object' ? t !== null : hS(t) || t === SJ;
        } : function (t) {
            return typeof t == 'object' ? t !== null : hS(t);
        }, _y = Vr, wJ = Gr, OJ = function (t) {
            return wJ(t) ? t : void 0;
        }, a3 = function (t, e) {
            return arguments.length < 2 ? OJ(_y[t]) : _y[t] && _y[t][e];
        }, AJ = pr, bO = AJ({}.isPrototypeOf), CJ = typeof navigator < 'u' && String(navigator.userAgent) || '', EO = Vr, yy = CJ, fS = EO.process, dS = EO.Deno, pS = fS && fS.versions || dS && dS.version, mS = pS && pS.v8, Bs, f1;
    mS && (Bs = mS.split('.'), f1 = Bs[0] > 0 && Bs[0] < 4 ? 1 : +(Bs[0] + Bs[1]));
    !f1 && yy && (Bs = yy.match(/Edge\/(\d+)/), (!Bs || Bs[1] >= 74) && (Bs = yy.match(/Chrome\/(\d+)/), Bs && (f1 = +Bs[1])));
    var IJ = f1, gS = IJ, kJ = cs, NJ = Vr, xJ = NJ.String, TO = !!Object.getOwnPropertySymbols && !kJ(function () {
            var t = Symbol();
            return !xJ(t) || !(Object(t) instanceof Symbol) || !Symbol.sham && gS && gS < 41;
        }), PJ = TO, SO = PJ && !Symbol.sham && typeof Symbol.iterator == 'symbol', RJ = a3, MJ = Gr, DJ = bO, $J = SO, LJ = Object, wO = $J ? function (t) {
            return typeof t == 'symbol';
        } : function (t) {
            var e = RJ('Symbol');
            return MJ(e) && DJ(e.prototype, LJ(t));
        }, FJ = String, UJ = function (t) {
            try {
                return FJ(t);
            } catch {
                return 'Object';
            }
        }, BJ = Gr, qJ = UJ, VJ = TypeError, GJ = function (t) {
            if (BJ(t)) {
                return t;
            }
            throw VJ(qJ(t) + ' is not a function');
        }, jJ = GJ, WJ = Zm, c3 = function (t, e) {
            var n = t[e];
            return WJ(n) ? void 0 : jJ(n);
        }, vy = ka, by = Gr, Ey = Cu, HJ = TypeError, zJ = function (t, e) {
            var n, r;
            if (e === 'string' && by(n = t.toString) && !Ey(r = vy(n, t)) || by(n = t.valueOf) && !Ey(r = vy(n, t)) || e !== 'string' && by(n = t.toString) && !Ey(r = vy(n, t))) {
                return r;
            }
            throw HJ('Can\'t convert object to primitive value');
        }, OO = { exports: {} }, _S = Vr, YJ = Object.defineProperty, l3 = function (t, e) {
            try {
                YJ(_S, t, {
                    value: e,
                    configurable: true,
                    writable: true
                });
            } catch {
                _S[t] = e;
            }
            return e;
        }, KJ = Vr, ZJ = l3, XJ = KJ['__core-js_shared__'] || ZJ('__core-js_shared__', {}), u3 = XJ, vS = u3;
    (OO.exports = function (t, e) {
        return vS[t] || (vS[t] = e !== void 0 ? e : {});
    })('versions', []).push({
        version: '3.30.2',
        mode: 'global',
        copyright: '\xA9 2014-2023 Denis Pushkarev (zloirock.ru)',
        license: 'https://github.com/zloirock/core-js/blob/v3.30.2/LICENSE',
        source: 'https://github.com/zloirock/core-js'
    });
    var h3 = OO.exports, QJ = Uf, JJ = Object, AO = function (t) {
            return JJ(QJ(t));
        }, eee = pr, tee = AO, nee = eee({}.hasOwnProperty), Na = Object.hasOwn || function (e, n) {
            return nee(tee(e), n);
        }, ree = pr, see = 0, iee = Math.random(), oee = ree(1 .toString), CO = function (t) {
            return 'Symbol(' + (t === void 0 ? '' : t) + ')_' + oee(++see + iee, 36);
        }, aee = Vr, cee = h3, bS = Na, lee = CO, uee = TO, hee = SO, dl = aee.Symbol, Ty = cee('wks'), fee = hee ? dl.for || dl : dl && dl.withoutSetter || lee, Mc = function (t) {
            return bS(Ty, t) || (Ty[t] = uee && bS(dl, t) ? dl[t] : fee('Symbol.' + t)), Ty[t];
        }, dee = ka, ES = Cu, TS = wO, pee = c3, mee = zJ, gee = Mc, _ee = TypeError, yee = gee('toPrimitive'), vee = function (t, e) {
            if (!ES(t) || TS(t)) {
                return t;
            }
            var n = pee(t, yee), r;
            if (n) {
                if (e === void 0 && (e = 'default'), r = dee(n, t, e), !ES(r) || TS(r)) {
                    return r;
                }
                throw _ee('Can\'t convert object to primitive value');
            }
            return e === void 0 && (e = 'number'), mee(t, e);
        }, bee = vee, Eee = wO, IO = function (t) {
            var e = bee(t, 'string');
            return Eee(e) ? e : e + '';
        }, Tee = Vr, SS = Cu, P0 = Tee.document, See = SS(P0) && SS(P0.createElement), kO = function (t) {
            return See ? P0.createElement(t) : {};
        }, wee = Ia, Oee = cs, Aee = kO, NO = !wee && !Oee(function () {
            return Object.defineProperty(Aee('div'), 'a', {
                get: function () {
                    return 7;
                }
            }).a != 7;
        }), Cee = Ia, Iee = ka, kee = uO, Nee = dO, xee = Xm, Pee = IO, Ree = Na, Mee = NO, wS = Object.getOwnPropertyDescriptor;
    ;
    var Bf = {
            f: Bee ? Vee ? function (e, n, r) {
                if (up(e), n = OS(n), up(r), typeof e == 'function' && n === 'prototype' && 'value' in r && 'writable' in r && !r.writable) {
                    var s = jee(e, n);
                    s && s.writable && (e[n] = r.value, r = {
                        configurable: 'configurable' in r ? r.configurable : s.configurable,
                        enumerable: 'enumerable' in r ? r.enumerable : s.enumerable,
                        writable: false
                    });
                }
                return Sy(e, n, r);
            } : Sy : function (e, n, r) {
                if (up(e), n = OS(n), up(r), qee) {
                    try {
                        return Sy(e, n, r);
                    } catch {
                    }
                }
                if ('get' in r || 'set' in r) {
                    throw Gee('Accessors not supported');
                }
                return 'value' in r && (e[n] = r.value), e;
            }
        }, Dee = Ia, $ee = cs, xO = Dee && $ee(function () {
            return Object.defineProperty(function () {
            }, 'prototype', {
                value: 42,
                writable: false
            }).prototype != 42;
        }), Lee = Cu, Fee = String, Uee = TypeError, Dc = function (t) {
            if (Lee(t)) {
                return t;
            }
            throw Uee(Fee(t) + ' is not an object');
        }, Bee = Ia, qee = NO, Vee = xO, up = Dc, OS = IO, Gee = TypeError, Sy = Object.defineProperty, jee = Object.getOwnPropertyDescriptor;
    ;
    var Wee = Ia, Hee = Bf, zee = dO, f3 = Wee ? function (t, e, n) {
            return Hee.f(t, e, zee(1, n));
        } : function (t, e, n) {
            return t[e] = n, t;
        }, PO = { exports: {} }, R0 = Ia, Yee = Na, RO = Function.prototype, Kee = R0 && Object.getOwnPropertyDescriptor, d3 = Yee(RO, 'name'), Zee = d3 && function () {
        }.name === 'something', Xee = d3 && (!R0 || R0 && Kee(RO, 'name').configurable), Qee = {
            EXISTS: d3,
            PROPER: Zee,
            CONFIGURABLE: Xee
        }, Jee = pr, ete = Gr, M0 = u3, tte = Jee(Function.toString);
    ete(M0.inspectSource) || (M0.inspectSource = function (t) {
        return tte(t);
    });
    var nte = M0.inspectSource, rte = Vr, ste = Gr, AS = rte.WeakMap, ite = ste(AS) && /native code/.test(String(AS)), ote = h3, ate = CO, CS = ote('keys'), MO = function (t) {
            return CS[t] || (CS[t] = ate(t));
        }, p3 = {}, cte = ite, DO = Vr, lte = Cu, ute = f3, Cy = Na, Iy = u3, hte = MO, fte = p3, D0 = DO.TypeError, dte = DO.WeakMap, d1, Zh, p1, pte = function (t) {
            return p1(t) ? Zh(t) : d1(t, {});
        }, mte = function (t) {
            return function (e) {
                var n;
                if (!lte(e) || (n = Zh(e)).type !== t) {
                    throw D0('Incompatible receiver, ' + t + ' required');
                }
                return n;
            };
        };
    if (cte || Iy.state) {
        var fi = Iy.state || (Iy.state = new dte());
        fi.get = fi.get;
        fi.has = fi.has;
        fi.set = fi.set;
        d1 = function (t, e) {
            if (fi.has(t)) {
                throw D0('Object already initialized');
            }
            return e.facade = t, fi.set(t, e), e;
        };
        Zh = function (t) {
            return fi.get(t) || {};
        };
        p1 = function (t) {
            return fi.has(t);
        };
        ;
    } else {
        var sl = hte('state');
        fte[sl] = true;
        d1 = function (t, e) {
            if (Cy(t, sl)) {
                throw D0('Object already initialized');
            }
            return e.facade = t, ute(t, sl, e), e;
        };
        Zh = function (t) {
            return Cy(t, sl) ? t[sl] : {};
        };
        p1 = function (t) {
            return Cy(t, sl);
        };
        ;
    }
    var $O = {
            set: d1,
            get: Zh,
            has: p1,
            enforce: pte,
            getterFor: mte
        }, m3 = pr, gte = cs, _te = Gr, hp = Na, $0 = Ia, yte = Qee.CONFIGURABLE, vte = nte, LO = $O, bte = LO.enforce, Ete = LO.get, kS = String, Dp = Object.defineProperty, Tte = m3(''.slice), Ste = m3(''.replace), wte = m3([].join), Ote = $0 && !gte(function () {
            return Dp(function () {
            }, 'length', { value: 8 }).length !== 8;
        }), Ate = String(String).split('String'), Cte = PO.exports = function (t, e, n) {
            Tte(kS(e), 0, 7) === 'Symbol(' && (e = '[' + Ste(kS(e), /^Symbol\(([^)]*)\)/, '$1') + ']');
            n && n.getter && (e = 'get ' + e);
            n && n.setter && (e = 'set ' + e);
            (!hp(t, 'name') || yte && t.name !== e) && ($0 ? Dp(t, 'name', {
                value: e,
                configurable: true
            }) : t.name = e);
            Ote && n && hp(n, 'arity') && t.length !== n.arity && Dp(t, 'length', { value: n.arity });
            ;
            try {
                n && hp(n, 'constructor') && n.constructor ? $0 && Dp(t, 'prototype', { writable: false }) : t.prototype && (t.prototype = void 0);
            } catch {
            }
            var r = bte(t);
            return hp(r, 'source') || (r.source = wte(Ate, typeof e == 'string' ? e : '')), t;
        };
    Function.prototype.toString = Cte(function () {
        return _te(this) && Ete(this).source || vte(this);
    }, 'toString');
    var Ite = PO.exports, kte = Gr, Nte = Bf, xte = Ite, Pte = l3, FO = function (t, e, n, r) {
            r || (r = {});
            var s = r.enumerable, i = r.name !== void 0 ? r.name : e;
            if (kte(n) && xte(n, i, r), r.global) {
                s ? t[e] = n : Pte(e, n);
            } else {
                try {
                    r.unsafe ? t[e] && (s = true) : delete t[e];
                } catch {
                }
                s ? t[e] = n : Nte.f(t, e, {
                    value: n,
                    enumerable: false,
                    configurable: !r.nonConfigurable,
                    writable: !r.nonWritable
                });
            }
            return t;
        }, UO = {
            f: Object.getOwnPropertyNames || function (e) {
                return Jte(e, tne);
            }
        }, Rte = Math.ceil, Mte = Math.floor, Dte = Math.trunc || function (e) {
            var n = +e;
            return (n > 0 ? Mte : Rte)(n);
        }, $te = Dte, Qm = function (t) {
            var e = +t;
            return e !== e || e === 0 ? 0 : $te(e);
        }, Lte = Qm, Fte = Math.max, Ute = Math.min, Bte = function (t, e) {
            var n = Lte(t);
            return n < 0 ? Fte(n + e, 0) : Ute(n, e);
        }, qte = Qm, Vte = Math.min, BO = function (t) {
            return t > 0 ? Vte(qte(t), 9007199254740991) : 0;
        }, Gte = BO, jte = function (t) {
            return Gte(t.length);
        }, Wte = Xm, Hte = Bte, zte = jte, NS = function (t) {
            return function (e, n, r) {
                var s = Wte(e), i = zte(s), o = Hte(r, i), a;
                if (t && n != n) {
                    for (; i > o;) {
                        if (a = s[o++], a != a) {
                            return true;
                        }
                    }
                } else {
                    for (; i > o; o++) {
                        if ((t || o in s) && s[o] === n) {
                            return t || o || 0;
                        }
                    }
                }
                return !t && -1;
            };
        }, Yte = {
            includes: NS(true),
            indexOf: NS(false)
        }, Kte = pr, ky = Na, Zte = Xm, Xte = Yte.indexOf, Qte = p3, xS = Kte([].push), qO = function (t, e) {
            var n = Zte(t), r = 0, s = [], i;
            for (i in n)
                !ky(Qte, i) && ky(n, i) && xS(s, i);
            for (; e.length > r;) {
                ky(n, i = e[r++]) && (~Xte(s, i) || xS(s, i));
            }
            return s;
        }, g3 = [
            'constructor',
            'hasOwnProperty',
            'isPrototypeOf',
            'propertyIsEnumerable',
            'toLocaleString',
            'toString',
            'valueOf'
        ], Jte = qO, ene = g3, tne = ene.concat('length', 'prototype');
    ;
    var VO = { f: Object.getOwnPropertySymbols };
    ;
    var nne = a3, rne = pr, sne = UO, ine = VO, one = Dc, ane = rne([].concat), cne = nne('Reflect', 'ownKeys') || function (e) {
            var n = sne.f(one(e)), r = ine.f;
            return r ? ane(n, r(e)) : n;
        }, PS = Na, lne = cne, une = i3, hne = Bf, fne = function (t, e, n) {
            for (var r = lne(e), s = hne.f, i = une.f, o = 0; o < r.length; o++) {
                var a = r[o];
                !PS(t, a) && !(n && PS(n, a)) && s(t, a, i(e, a));
            }
        }, dne = cs, pne = Gr, qf = function (t, e) {
            var n = _ne[gne(t)];
            return n == vne ? true : n == yne ? false : pne(e) ? dne(e) : !!e;
        }, gne = qf.normalize = function (t) {
            return String(t).replace(/#|\.prototype\./, '.').toLowerCase();
        }, _ne = qf.data = {}, yne = qf.NATIVE = 'N', vne = qf.POLYFILL = 'P', bne = qf, Ny = Vr, Ene = i3.f, Tne = f3, Sne = FO, wne = l3, One = fne, Ane = bne, GO = function (t, e) {
            var n = t.target, r = t.global, s = t.stat, i, o, a, l, u, f;
            if (r ? o = Ny : s ? o = Ny[n] || wne(n, {}) : o = (Ny[n] || {}).prototype, o) {
                for (a in e) {
                    if (u = e[a], t.dontCallGetSet ? (f = Ene(o, a), l = f && f.value) : l = o[a], i = Ane(r ? a : n + (s ? '.' : '#') + a, t.forced), !i && l !== void 0) {
                        if (typeof u == typeof l) {
                            continue;
                        }
                        One(u, l);
                    }
                    (t.sham || l && l.sham) && Tne(u, 'sham', true);
                    Sne(o, a, u, t);
                    ;
                }
            }
        }, Cne = Cu, Ine = Ff, kne = Mc, Nne = kne('match'), xne = function (t) {
            var e;
            return Cne(t) && ((e = t[Nne]) !== void 0 ? !!e : Ine(t) == 'RegExp');
        }, Pne = Mc, Rne = Pne('toStringTag'), jO = { Rne: 'z' };
    ;
    var Mne = String(jO) === '[object z]', Dne = Mne, $ne = Gr, $p = Ff, Lne = Mc, Fne = Lne('toStringTag'), Une = Object, Bne = $p((function () {
            return arguments;
        }())) == 'Arguments', qne = function (t, e) {
            try {
                return t[e];
            } catch {
            }
        }, Vne = Dne ? $p : function (t) {
            var e, n, r;
            return t === void 0 ? 'Undefined' : t === null ? 'Null' : typeof (n = qne(e = Une(t), Fne)) == 'string' ? n : Bne ? $p(e) : (r = $p(e)) == 'Object' && $ne(e.callee) ? 'Arguments' : r;
        }, Gne = Vne, jne = String, Jm = function (t) {
            if (Gne(t) === 'Symbol') {
                throw TypeError('Cannot convert a Symbol value to a string');
            }
            return jne(t);
        }, Wne = Dc, WO = function () {
            var t = Wne(this), e = '';
            return t.hasIndices && (e += 'd'), t.global && (e += 'g'), t.ignoreCase && (e += 'i'), t.multiline && (e += 'm'), t.dotAll && (e += 's'), t.unicode && (e += 'u'), t.unicodeSets && (e += 'v'), t.sticky && (e += 'y'), e;
        }, Hne = ka, zne = Na, Yne = bO, Kne = WO, RS = RegExp.prototype, Zne = function (t) {
            var e = t.flags;
            return e === void 0 && !('flags' in RS) && !zne(t, 'flags') && Yne(RS, t) ? Hne(Kne, t) : e;
        }, _3 = pr, Xne = AO, Qne = Math.floor, xy = _3(''.charAt), Jne = _3(''.replace), Py = _3(''.slice), HO = function (t, e, n, r, s, i) {
            var o = n + t.length, a = r.length, l = /\$([$&'`]|\d{1,2})/g;
            return s !== void 0 && (s = Xne(s), l = /\$([$&'`]|\d{1,2}|<[^>]*>)/g), Jne(i, l, function (u, f) {
                var d;
                switch (xy(f, 0)) {
                case '$':
                    return '$';
                case '&':
                    return t;
                case '`':
                    return Py(e, 0, n);
                case '\'':
                    return Py(e, o);
                case '<':
                    d = s[Py(f, 1, -1)];
                    break;
                default:
                    var p = +f;
                    if (p === 0) {
                        return u;
                    }
                    if (p > a) {
                        var _ = Qne(p / 10);
                        return _ === 0 ? u : _ <= a ? r[_ - 1] === void 0 ? xy(f, 1) : r[_ - 1] + xy(f, 1) : u;
                    }
                    d = r[p - 1];
                }
                return d === void 0 ? '' : d;
            });
        }, nre = GO, rre = ka, y3 = pr, MS = Uf, sre = Gr, ire = Zm, ore = xne, ih = Jm, are = c3, cre = Zne, lre = HO, ure = Mc, hre = ure('replace'), fre = TypeError, zO = y3(''.indexOf);
    y3(''.replace);
    var DS = y3(''.slice), dre = Math.max, $S = function (t, e, n) {
            return n > t.length ? -1 : e === '' ? n : zO(t, e, n);
        };
    nre({
        target: 'String',
        proto: true
    }, {
        replaceAll: function (e, n) {
            var r = MS(this), s, i, o, a, l, u, f, d, p, _ = 0, v = 0, y = '';
            if (!ire(e)) {
                if (s = ore(e), s && (i = ih(MS(cre(e))), !~zO(i, 'g'))) {
                    throw fre('`.replaceAll` does not allow non-global regexes');
                }
                if (o = are(e, hre), o) {
                    return rre(o, e, r, n);
                }
            }
            for (a = ih(r), l = ih(e), u = sre(n), u || (n = ih(n)), f = l.length, d = dre(1, f), _ = $S(a, l, 0); _ !== -1;) {
                p = u ? ih(n(l, _, a)) : lre(l, a, _, [], void 0, n);
                y += DS(a, v, _) + p;
                v = _ + f;
                _ = $S(a, l, _ + d);
                ;
            }
            return v < a.length && (y += DS(a, v)), y;
        }
    });
    var v3 = cs, pre = Vr, b3 = pre.RegExp, E3 = v3(function () {
            var t = b3('a', 'y');
            return t.lastIndex = 2, t.exec('abcd') != null;
        }), mre = E3 || v3(function () {
            return !b3('a', 'y').sticky;
        }), gre = E3 || v3(function () {
            var t = b3('^r', 'gy');
            return t.lastIndex = 2, t.exec('str') != null;
        }), _re = {
            BROKEN_CARET: gre,
            MISSED_STICKY: mre,
            UNSUPPORTED_Y: E3
        }, YO = {
            f: Ere && !Tre ? Object.defineProperties : function (e, n) {
                wre(e);
                for (var r = Ore(n), s = Are(n), i = s.length, o = 0, a; i > o;) {
                    Sre.f(e, a = s[o++], r[a]);
                }
                return e;
            }
        }, yre = qO, vre = g3, bre = Object.keys || function (e) {
            return yre(e, vre);
        }, Ere = Ia, Tre = xO, Sre = Bf, wre = Dc, Ore = Xm, Are = bre;
    ;
    var Cre = a3, Ire = Cre('document', 'documentElement'), kre = Dc, Nre = YO, LS = g3, xre = p3, Pre = Ire, Rre = kO, Mre = MO, KO = Mre('IE_PROTO'), Ry = function () {
        }, ZO = function (t) {
            return '<script>' + t + '<' + '/' + 'script' + '>';
        }, BS = function (t) {
            t.write(ZO(''));
            t.close();
            ;
            var e = t.parentWindow.Object;
            return t = null, e;
        }, Dre = function () {
            var t = Rre('iframe'), e = 'javascript:', n;
            return t.style.display = 'none', Pre.appendChild(t), t.src = String(e), n = t.contentWindow.document, n.open(), n.write(ZO('document.F=Object')), n.close(), n.F;
        }, fp, Lp = function () {
            try {
                fp = new ActiveXObject('htmlfile');
            } catch {
            }
            Lp = typeof document < 'u' ? document.domain && fp ? BS(fp) : Dre() : BS(fp);
            for (var t = LS.length; t--;) {
                delete Lp.prototype[LS[t]];
            }
            return Lp();
        };
    xre[KO] = true;
    var $re = Object.create || function (e, n) {
            var r;
            return e !== null ? (Ry.prototype = kre(e), r = new Ry(), Ry.prototype = null, r[KO] = e) : r = Lp(), n === void 0 ? r : Nre.f(r, n);
        }, Lre = cs, Fre = Vr, Ure = Fre.RegExp, Bre = Lre(function () {
            var t = Ure('.', 's');
            return !(t.dotAll && t.exec(`
`) && t.flags === 's');
        }), qre = cs, Vre = Vr, Gre = Vre.RegExp, jre = qre(function () {
            var t = Gre('(?<a>b)', 'g');
            return t.exec('b').groups.a !== 'b' || 'b'.replace(t, '$<a>c') !== 'bc';
        }), pl = ka, eg = pr, Wre = Jm, Hre = WO, zre = _re, Yre = h3, Kre = $re, Zre = $O.get, Xre = Bre, Qre = jre, Jre = Yre('native-string-replace', String.prototype.replace), m1 = RegExp.prototype.exec, U0 = m1, ese = eg(''.charAt), tse = eg(''.indexOf), nse = eg(''.replace), My = eg(''.slice), B0 = (function () {
            ;
            return pl(m1, /a/, 'a'), pl(m1, /b*/g, 'a'), /a/.lastIndex !== 0 || /b*/g.lastIndex !== 0;
        }()), XO = zre.BROKEN_CARET, q0 = /()??/.exec('')[1] !== void 0, rse = B0 || q0 || XO || Xre || Qre;
    rse && (U0 = function (e) {
        var n = this, r = Zre(n), s = Wre(e), i = r.raw, o, a, l, u, f, d, p;
        if (i) {
            return i.lastIndex = n.lastIndex, o = pl(U0, i, s), n.lastIndex = i.lastIndex, o;
        }
        var _ = r.groups, v = XO && n.sticky, y = pl(Hre, n), g = n.source, b = 0, A = s;
        if (v && (y = nse(y, 'y', ''), tse(y, 'g') === -1 && (y += 'g'), A = My(s, n.lastIndex), n.lastIndex > 0 && (!n.multiline || n.multiline && ese(s, n.lastIndex - 1) !== `
`) && (g = '(?: ' + g + ')', A = ' ' + A, b++), a = new RegExp('^(?:' + g + ')', y)), q0 && (a = new RegExp('^' + g + '$(?!\\s)', y)), B0 && (l = n.lastIndex), u = pl(m1, v ? a : n, A), v ? u ? (u.input = My(u.input, b), u[0] = My(u[0], b), u.index = n.lastIndex, n.lastIndex += u[0].length) : n.lastIndex = 0 : B0 && u && (n.lastIndex = n.global ? u.index + u[0].length : l), q0 && u && u.length > 1 && pl(Jre, u[0], a, function () {
                for (f = 1; f < arguments.length - 2; f++) {
                    arguments[f] === void 0 && (u[f] = void 0);
                }
            }), u && _) {
            for (u.groups = d = Kre(null), f = 0; f < _.length; f++) {
                p = _[f];
                d[p[0]] = u[p[1]];
                ;
            }
        }
        return u;
    });
    var T3 = U0, sse = GO, qS = T3;
    sse({
        target: 'RegExp',
        proto: true,
        forced: /./.exec !== qS
    }, { exec: qS });
    var ise = o3, QO = Function.prototype, VS = QO.apply, GS = QO.call, ose = typeof Reflect == 'object' && Reflect.apply || (ise ? GS.bind(VS) : function () {
            return GS.apply(VS, arguments);
        }), ase = Ff, cse = pr, lse = function (t) {
            if (ase(t) === 'Function') {
                return cse(t);
            }
        }, jS = lse, WS = FO, use = T3, HS = cs, JO = Mc, hse = f3, fse = JO('species'), Dy = RegExp.prototype, dse = function (t, e, n, r) {
            var s = JO(t), i = !HS(function () {
                    var u = {
                        prototype: n.prototype,
                        prototype: null,
                        level: 'error',
                        channelCount: v,
                        channelCountMode: v,
                        channelInterpretation: v,
                        channelCount: O,
                        channelCountMode: O,
                        channelInterpretation: O,
                        curve: O,
                        curve: M,
                        oversample: O,
                        e: Math.abs(_ * (1 - n))
                    };
                    return u[s] = function () {
                        return 7;
                    }, ''[t](u) != 7;
                }), o = i && !HS(function () {
                    var u = false, f = /a/;
                    return t === 'split' && (f = {}, f.constructor = {}, f.constructor[fse] = function () {
                        return f;
                    }, f.flags = '', f[s] = /./[s]), f.exec = function () {
                        return u = true, null;
                    }, f[s](''), !u;
                });
            if (!i || !o || n) {
                var a = jS(/./[s]), l = e(s, ''[t], function (u, f, d, p, _) {
                        var v = jS(u), y = f.exec;
                        return y === use || y === Dy.exec ? i && !_ ? {
                            done: true,
                            value: a(f, d, p)
                        } : {
                            done: true,
                            value: v(d, f, p)
                        } : { done: false };
                    });
                WS(String.prototype, t, l[0]);
                WS(Dy, s, l[1]);
                ;
            }
            r && hse(Dy[s], 'sham', true);
        }, S3 = pr, pse = Qm, mse = Jm, gse = Uf, _se = S3(''.charAt), zS = S3(''.charCodeAt), yse = S3(''.slice), YS = function (t) {
            return function (e, n) {
                var r = mse(gse(e)), s = pse(n), i = r.length, o, a;
                return s < 0 || s >= i ? t ? '' : void 0 : (o = zS(r, s), o < 55296 || o > 56319 || s + 1 === i || (a = zS(r, s + 1)) < 56320 || a > 57343 ? t ? _se(r, s) : o : t ? yse(r, s, s + 2) : (o - 55296 << 10) + (a - 56320) + 65536);
            };
        }, vse = {
            codeAt: YS(false),
            charAt: YS(true)
        }, bse = vse.charAt, Ese = function (t, e, n) {
            return e + (n ? bse(t, e).length : 1);
        }, KS = ka, Tse = Dc, Sse = Gr, wse = Ff, Ose = T3, Ase = TypeError, Cse = function (t, e) {
            var n = t.exec;
            if (Sse(n)) {
                var r = KS(n, t, e);
                return r !== null && Tse(r), r;
            }
            if (wse(t) === 'RegExp') {
                return KS(Ose, t, e);
            }
            throw Ase('RegExp#exec called on incompatible receiver');
        }, Ise = ose, ZS = ka, tg = pr, kse = dse, Nse = cs, xse = Dc, Pse = Gr, Rse = Zm, Mse = Qm, Dse = BO, il = Jm, $se = Uf, Lse = Ese, Fse = c3, Use = HO, Bse = Cse, qse = Mc, V0 = qse('replace'), Vse = Math.max, Gse = Math.min, jse = tg([].concat), $y = tg([].push), XS = tg(''.indexOf), QS = tg(''.slice), Wse = function (t) {
            return t === void 0 ? t : String(t);
        }, Hse = (function () {
            return 'a'.replace(/./, '$0') === '$0';
        }()), JS = (function () {
            return /./[V0] ? /./[V0]('a', '$0') === '' : false;
        }()), zse = !Nse(function () {
            ;
            return /./.exec = function () {
                var e = [];
                return e.groups = { a: '7' }, e;
            }, ''.replace(/./, '$<a>') !== '7';
        });
    kse('replace', function (t, e, n) {
        var r = JS ? '$' : '$0';
        return [
            function (i, o) {
                var a = $se(this), l = Rse(i) ? void 0 : Fse(i, V0);
                return l ? ZS(l, i, a, o) : ZS(e, il(a), i, o);
            },
            function (s, i) {
                var o = xse(this), a = il(s);
                if (typeof i == 'string' && XS(i, r) === -1 && XS(i, '$<') === -1) {
                    var l = n(e, o, a, i);
                    if (l.done) {
                        return l.value;
                    }
                }
                var u = Pse(i);
                u || (i = il(i));
                var f = o.global;
                if (f) {
                    var d = o.unicode;
                    ;
                }
                for (var p = [];;) {
                    var _ = Bse(o, a);
                    if (_ === null || ($y(p, _), !f)) {
                        break;
                    }
                    var v = il(_[0]);
                    v === '' && (o.lastIndex = Lse(a, Dse(o.lastIndex), d));
                }
                for (var y = '', g = 0, b = 0; b < p.length; b++) {
                    _ = p[b];
                    for (var A = il(_[0]), N = Vse(Gse(Mse(_.index), a.length), 0), I = [], O = 1; O < _.length; O++) {
                        $y(I, Wse(_[O]));
                    }
                    var x = _.groups;
                    if (u) {
                        var M = jse([A], I, N, a);
                        x !== void 0 && $y(M, x);
                        var L = il(Ise(i, void 0, M));
                    } else {
                        L = Use(A, a, N, I, x, i);
                    }
                    if (N >= g) {
                        y += QS(a, g, N) + L;
                        g = N + A.length;
                    }
                }
                return y + QS(a, g);
            }
        ];
    }, !zse || !Hse || JS);
    var Yse = Vr, Kse = pr, Zse = function (t, e) {
            return Kse(Yse[t].prototype[e]);
        }, Xse = Zse;
    Xse('String', 'replaceAll');
    const Qse = at({
            props: {
                artifactId: {
                    type: String,
                    required: true
                },
                categoryId: {
                    type: String,
                    required: true
                },
                context: {
                    type: String,
                    required: true
                },
                view: {
                    type: Object,
                    required: true
                }
            },
            data() {
                return {
                    isError: false,
                    isLoading: true,
                    artifact: null
                };
            },
            mounted() {
                this.fetchArtifact();
            },
            methods: {
                async fetchArtifact() {
                    try {
                        const t = `https://jbg-blobcast-artifacts.s3.amazonaws.com/${ this.categoryId }/${ this.artifactId }/data.json.gz`, n = await (await fetch(t)).json();
                        this.artifact = n;
                    } catch (t) {
                        this.isError = true;
                        console.error(t);
                        ;
                    } finally {
                        this.isLoading = false;
                    }
                }
            }
        }), eie = Ea('<div class="topbar" data-v-d4a34e95><svg class="logo" viewBox="0 0 451 168" data-v-d4a34e95><path d="m 125.09,148.16 c -0.43,0.98 -0.65,2.17 -0.65,3.04 0,2.28 1.85,3.69 5.1,3.69 4.99,0 8.68,-2.93 10.09,-11.4 l 0.76,-6.08 h -0.65 c -3.58,3.47 -8.14,5.75 -13.78,5.75 -8.36,0 -18.45,-4.23 -18.45,-19.97 0,-20.51 12.37,-32.34 26.05,-32.34 10.53,0 14.22,5.86 15.52,8.25 h 0.65 l 3.8,-7.16 h 14 l -9.12,51.55 c -2.61,14.87 -10.64,24.42 -29.63,24.42 -16.82,0 -23.23,-5.64 -23.23,-12.92 0,-3.04 0.98,-5.64 1.95,-7.16 l 17.58,0.33 z m 17.26,-21.82 3.36,-17.26 c -0.87,-2.93 -3.26,-4.88 -6.4,-4.88 -7.49,0 -11.94,8.57 -11.94,17.47 0,6.84 3.58,8.9 7.16,8.9 2.5,0 5.64,-1.41 7.81,-4.23 z" data-v-d4a34e95></path><path d="m 165.9,124.5 c 0,-19.97 11.4,-33.64 25.51,-33.64 9.23,0 13.02,4.34 15.3,8.14 h 0.65 l 3.8,-7.05 h 14.33 l -6.3,36.03 c -0.32,1.63 -0.98,5.1 1.95,5.1 1.3,0 2.71,-0.43 3.69,-0.87 l -1.74,12.27 c -2.82,0.87 -8.79,1.74 -12.16,1.74 -7.16,0 -9.88,-2.71 -10.53,-7.6 h -0.54 c -2.82,2.82 -8.14,7.6 -16.5,7.6 -8.36,0 -17.47,-5.54 -17.47,-21.71 z m 37.55,-16.06 c -0.76,-2.06 -2.6,-4.23 -5.75,-4.23 -5.75,0 -11.29,7.16 -11.29,19.43 0,7.05 2.82,9.33 6.3,9.33 3.04,0 5.43,-1.74 7.16,-4.02 z" data-v-d4a34e95></path><path d="m 252.41,101.06 c 2.93,-5.97 7.92,-10.2 16.39,-10.2 8.9,0 13.35,3.91 15.3,10.42 h 0.65 c 2.93,-5.43 7.27,-10.42 15.74,-10.42 9.99,0 16.17,4.88 16.17,15.52 0,1.95 -0.22,4.23 -0.65,6.4 l -2.71,15.2 c -0.33,1.85 -0.76,4.99 2.17,4.99 1.19,0 2.61,-0.43 3.58,-0.87 l -1.74,12.37 c -2.82,0.87 -8.79,1.74 -12.05,1.74 -8.47,0 -11.94,-4.01 -11.94,-10.31 0,-1.41 0.22,-2.93 0.44,-4.34 l 3.25,-18.78 c 0.22,-1.3 0.33,-2.82 0.33,-3.8 0,-3.15 -1.3,-4.77 -4.56,-4.77 -3.69,0 -7.71,3.36 -9.66,14.43 l -4.56,26.48 h -19.1 l 5.75,-32.34 c 0.22,-1.3 0.43,-2.82 0.43,-3.8 0,-3.15 -1.3,-4.77 -4.56,-4.77 -3.69,0 -7.81,3.36 -9.77,14.43 l -4.67,26.48 h -19.21 l 6.4,-36.25 c 0.32,-2.06 0.54,-4.67 -2.39,-4.67 -1.19,0 -2.5,0.32 -3.36,0.76 l 1.52,-12.59 c 2.61,-0.76 8.03,-1.52 11.72,-1.52 7.7,0 10.53,4.45 10.53,8.03 0,0.54 0,1.41 -0.11,2.17 h 0.65 z" data-v-d4a34e95></path><path d="m 353.89,90.86 c 14.76,0 23.66,7.27 23.66,17.69 0,3.8 -1.08,8.68 -2.61,11.83 H 341.3 c -0.33,1.74 -0.44,3.36 -0.44,4.67 0,5.86 2.61,8.47 6.84,8.47 4.67,0 8.79,-1.95 8.79,-7.05 l 17.47,0.11 c 0,13.67 -11.83,19.64 -26.7,19.64 -16.82,0 -25.18,-8.14 -25.18,-20.95 0,-18.67 8.79,-34.4 31.8,-34.4 z m 5.75,20.51 c 0.32,-0.87 0.54,-2.06 0.54,-3.36 0,-4.02 -2.71,-5.97 -6.62,-5.97 -4.99,0 -8.9,2.71 -10.63,9.33 z" data-v-d4a34e95></path><path d="m 394.92,127.54 c -0.22,0.87 -0.43,1.74 -0.43,2.71 0,2.71 1.52,5.21 7.6,5.21 5.43,0 7.92,-2.17 7.92,-4.99 0,-2.28 -1.85,-3.58 -5.43,-4.45 l -6.73,-1.63 c -11.29,-2.71 -16.17,-6.84 -16.17,-14.33 0,-11.61 9.12,-19.21 27.78,-19.21 18.66,0 22.47,8.36 22.47,13.78 0,1.41 -0.22,3.15 -0.65,4.45 l -16.71,0.11 c 0.32,-0.87 0.43,-1.85 0.43,-2.93 0,-1.95 -1.52,-4.45 -6.73,-4.45 -5.21,0 -7.82,2.39 -7.82,4.99 0,2.93 2.82,3.8 6.08,4.56 l 7.6,1.74 c 10.96,2.5 15.41,7.38 15.41,13.89 0,10.74 -7.82,19.21 -28.44,19.21 -19.1,0 -23.99,-8.25 -23.99,-14.22 0,-1.3 0.22,-2.93 0.65,-4.34 l 17.15,-0.11 z" data-v-d4a34e95></path><path d="M 37.45,85.48 C 34.89,100.02 26.63,108.16 13.26,108.16 7.91,108.16 3.38,107.23 0,106.3 L 4.07,92.58 c 2.09,0.7 4.3,1.4 6.75,1.4 3.02,0 5.12,-2.56 6.28,-9.19 L 27.22,26.76 H 47.8 L 37.45,85.49 Z M 31.52,2.91 H 51.99 L 49.2,18.49 H 28.73 Z" data-v-d4a34e95></path><path d="m 46.75,61.64 c 0,-21.4 12.21,-36.05 27.33,-36.05 9.88,0 13.95,4.65 16.4,8.72 h 0.7 l 4.07,-7.56 h 15.35 l -6.75,38.61 c -0.35,1.75 -1.05,5.47 2.09,5.47 1.4,0 2.91,-0.46 3.95,-0.93 l -1.86,13.14 C 105.01,83.97 98.61,84.9 95,84.9 87.32,84.9 84.42,81.99 83.72,76.76 H 83.14 C 80.12,79.78 74.42,84.9 65.46,84.9 56.5,84.9 46.74,78.97 46.74,61.64 Z M 86.99,44.43 c -0.81,-2.21 -2.79,-4.54 -6.16,-4.54 -6.16,0 -12.09,7.67 -12.09,20.82 0,7.56 3.02,10 6.75,10 3.26,0 5.81,-1.86 7.67,-4.3 L 87,44.43 Z" data-v-d4a34e95></path><path d="m 146.18,25.58 c 20,0 25.24,10.58 25.24,16.86 0,2.91 -0.81,5.47 -1.51,7.21 l -20.12,0.23 c 0.35,-1.51 0.7,-2.79 0.7,-4.54 0,-2.91 -1.28,-5.47 -5.47,-5.47 -7.33,0 -11.75,10 -11.75,21.51 0,5.7 2.33,9.3 6.51,9.3 4.77,0 8.26,-3.84 8.26,-10 l 20,0.12 c 0,12.91 -5.47,24.07 -28.96,24.07 -17.1,0 -26.86,-8.84 -26.86,-22.91 0,-19.19 10,-36.4 33.96,-36.4 z" data-v-d4a34e95></path><path d="m 226.65,70.13 c 1.05,0 2.32,-0.23 3.37,-0.58 l -2.44,13.72 c -3.14,1.05 -7.33,1.63 -11.28,1.63 -8.26,0 -10.47,-5.12 -11.51,-8.61 -1.74,-5.7 -4.42,-13.84 -5.58,-16.05 h -5.47 l -4.07,23.49 H 169.09 L 183.85,0 h 20.59 l -8.37,47.22 4.42,-0.46 c 2.44,-2.33 12.33,-18.03 14.65,-20 h 21.63 l -0.47,2.33 c -2.44,2.09 -15.58,20.47 -19.07,24.31 1.16,1.98 4.07,9.65 6.05,14.42 0.81,1.74 1.86,2.32 3.37,2.32 z" data-v-d4a34e95></path><path d="m 246.42,0 h 20.47 l -5.82,32.33 h 0.58 c 3.14,-3.49 7.79,-6.75 14.77,-6.75 8.72,0 18.84,5.7 18.84,22.21 0,27.56 -16.28,37.1 -28.72,37.1 -9.3,0 -13.26,-4.88 -15.24,-7.91 h -0.58 l -3.95,6.75 h -15.35 z m 8.61,66.75 c 0.93,2.21 3.37,3.95 6.39,3.95 6.05,0 12.91,-6.98 12.91,-20.82 0,-7.56 -3.72,-10 -7.33,-10 -2.79,0 -6.16,1.98 -8.14,4.54 l -3.84,22.33 z" data-v-d4a34e95></path><path d="m 330.15,25.58 c 19.31,0 27.68,9.65 27.68,23.37 0,20.7 -11.28,35.94 -33.03,35.94 -19.31,0 -27.45,-9.54 -27.45,-23.14 0,-20.7 10.93,-36.17 32.8,-36.17 z m 6.63,23.37 c 0,-6.16 -2.68,-9.07 -6.86,-9.07 -7.44,0 -11.74,7.67 -11.74,21.75 0,6.28 2.79,9.07 6.86,9.07 7.33,0 11.75,-7.56 11.75,-21.75 z" data-v-d4a34e95></path><path d="m 388.18,36.52 c 1.05,3.37 1.98,6.51 2.56,9.3 h 0.47 c 1.74,-3.61 3.72,-6.51 6.05,-9.77 l 6.63,-9.3 h 21.86 l -0.35,1.98 -21.52,25.82 6.4,12.68 c 1.28,2.33 2.91,2.91 4.3,2.91 1.39,0 2.79,-0.35 3.84,-0.81 l -2.44,13.96 c -3.02,0.81 -7.44,1.63 -11.51,1.63 -6.63,0 -9.65,-3.37 -11.4,-8.49 l -1.4,-4.19 c -1.05,-3.14 -1.63,-5.81 -2.21,-8.49 h -0.58 c -1.63,3.6 -3.61,6.51 -5.7,9.53 l -7.44,10.47 h -21.86 l 0.35,-1.86 21.98,-26.87 -5.82,-11.74 c -1.05,-2.33 -3.02,-2.91 -4.65,-2.91 -1.4,0 -2.67,0.35 -3.84,0.81 l 2.56,-13.95 c 3.02,-0.81 7.33,-1.63 11.51,-1.63 7.21,0 9.65,2.79 11.17,7.68 l 1.04,3.26 z" data-v-d4a34e95></path><path d="m 441.86,93.74 h 0.84 c 0.99,0 1.78,-0.33 1.78,-1.13 0,-0.7 -0.52,-1.17 -1.64,-1.17 -0.47,0 -0.8,0.05 -0.99,0.09 v 2.21 z m -0.04,4.32 h -1.78 c 0,0 0,-7.7 0,-7.7 0.7,-0.09 1.69,-0.24 2.96,-0.24 1.45,0 2.11,0.23 2.63,0.61 0.47,0.33 0.8,0.89 0.8,1.64 0,0.94 -0.7,1.55 -1.59,1.83 v 0.09 c 0.75,0.23 1.13,0.84 1.36,1.88 0.24,1.17 0.42,1.6 0.56,1.88 h -1.88 c -0.23,-0.28 -0.38,-0.94 -0.61,-1.88 -0.14,-0.8 -0.61,-1.17 -1.6,-1.17 h -0.84 c 0,0 0,3.05 0,3.05 z m -4.74,-3.99 c 0,3.43 2.58,6.15 6.01,6.14 3.33,0.05 5.86,-2.73 5.86,-6.1 0,-3.43 -2.54,-6.19 -5.96,-6.19 -3.33,0 -5.91,2.77 -5.91,6.15 m 13.84,0 c 0,4.32 -3.47,7.75 -7.88,7.75 -4.41,0 -7.93,-3.42 -7.94,-7.74 -0.01,-4.32 3.51,-7.7 7.97,-7.7 4.36,0 7.84,3.37 7.84,7.69" data-v-d4a34e95></path></svg></div>', 1);
    function iie(t, e, n, r, s, i) {
        return G(), K('div', Jse, [
            eie,
            V('div', tie, [t.isLoading ? (G(), K('div', nie, 'Loading')) : t.isError ? (G(), K('div', rie, 'Error')) : (G(), wt(Rm(t.view), {
                    key: 2,
                    artifact: t.artifact,
                    context: t.context
                }, null, 8, [
                    'artifact',
                    'context'
                ]))]),
            V('div', sie, [o7(t.$slots, 'default', {}, void 0, true)])
        ]);
    }
    const oie = Je(Qse, [
        [
            'render',
            iie
        ],
        [
            '__scopeId',
            'data-v-d4a34e95'
        ]
    ]);
    var Zi = {}, ng = {
            BBCodeParser: void 0,
            BBCodeParser: lie
        }, eA = {}, rg = {
            Tokenizer: void 0,
            Tokenizer: aie
        }, w3 = {};
    (function (t) {
        Object.defineProperty(t, '__esModule', { value: true });
        ;
        ;
        var e = (function () {
            function n(r, s, i, o) {
                this.type = r;
                this.content = s;
                this.attributes = i;
                this.text = o;
                ;
            }
            return n.prototype.toString = function () {
                return this.content + ' (' + this.type + ')';
            }, n.prototype.equals = function (r) {
                return this.type === r.type && this.content === r.content;
            }, n.prototype.convertToTextToken = function () {
                var r;
                this.type === n.Type.startTag ? (this.content = (r = this.text) !== null && r !== void 0 ? r : '', this.type = n.Type.text) : this.type === n.Type.endTag && (this.content = '[/' + this.content + ']', this.type = n.Type.text);
            }, n;
        }());
        ;
        (function (n) {
            (function (r) {
                r[r.text = 0] = 'text';
                r[r.startTag = 1] = 'startTag';
                r[r.endTag = 2] = 'endTag';
                ;
            }(n.Type || (n.Type = {})));
        }(e = t.Token || (t.Token = {})));
        ;
        ;
    }(w3));
    Object.defineProperty(rg, '__esModule', { value: true });
    ;
    var Do = w3, aie = (function () {
            function t(e) {
                this.tags = e;
            }
            return t.prototype.tokenizeString = function (e) {
                var n = this, r = this.getTokens(e), s = [], i = false, o = '', a = '';
                return r.forEach(function (l) {
                    var u = n.tags[l.content], f = true;
                    !u && !i ? l.convertToTextToken() : i ? l.type === Do.Token.Type.endTag && l.content === o ? (i = false, s.push(t.createTextToken(a))) : (l.convertToTextToken(), a += l.content, f = false) : u.noNesting && l.type === Do.Token.Type.startTag && (i = true, o = l.content, a = '');
                    f && s.push(l);
                    ;
                }), s;
            }, t.prototype.getTokens = function (e) {
                for (var n = '\\[(/\\w*)\\]|\\[(\\w*)+(=(["])' + t.valueChars + '*\\4)?( (' + t.nameChars + '+)?=(["])(' + t.valueChars + '+)\\7)*\\]', r = new RegExp(n, 'g'), s = [], i = r.exec(e), o = 0; i;) {
                    var a = i.index - o;
                    a > 0 && s.push(t.createTextToken(e.substr(o, a)));
                    s.push(t.createTagToken(i));
                    o = r.lastIndex;
                    i = r.exec(e);
                    ;
                }
                var l = e.length - o;
                return l > 0 && s.push(t.createTextToken(e.substr(o, l))), s;
            }, t.createTextToken = function (e) {
                return new Do.Token(Do.Token.Type.text, e);
            }, t.createTagToken = function (e) {
                if (!e[1]) {
                    for (var n = e[2], r = {}, s = new RegExp('(' + t.nameChars + '+)?=(["])(' + t.valueChars + '+)\\2', 'g'), i = e[0].substr(1 + n.length, e[0].length - 2 - n.length), o = s.exec(i); o;) {
                        o[1] ? r[o[1]] = o[3] : r[n] = o[3];
                        o = s.exec(i);
                        ;
                    }
                    return new Do.Token(Do.Token.Type.startTag, n, r, e[0]);
                }
                return new Do.Token(Do.Token.Type.endTag, e[1].substr(1, e[1].length - 1));
            }, t.nameChars = '[a-zA-Z0-9\\.\\-_:;/]', t.valueChars = '[a-zA-Z0-9\\.\\-_:;#/\\s]', t;
        }());
    ;
    (function (t) {
        Object.defineProperty(t, '__esModule', { value: true });
        ;
        ;
        var e = rg, n = w3, r = (function () {
                function s(i) {
                    this.subTrees = [];
                    this.type = i.type;
                    this.content = i.content;
                    i.attributes && (this.attributes = i.attributes);
                    i.subTrees && (this.subTrees = i.subTrees);
                    ;
                }
                return Object.defineProperty(s.prototype, 'isValid', {
                    get: function () {
                        return this.subTrees.length ? this.subTrees.every(function (i) {
                            return i.isValid;
                        }) : true;
                    },
                    enumerable: false,
                    configurable: true
                }), s.prototype.toString = function () {
                    return this.type + ' - ' + this.content;
                }, s.buildTree = function (i, o) {
                    var a = new e.Tokenizer(o), l = a.tokenizeString(i), u = new s({
                            type: s.Type.root,
                            content: i
                        });
                    return this.buildTreeFromTokens(u, l.reverse());
                }, s.buildTreeFromTokens = function (i, o, a) {
                    if (a === void 0 && (a = ''), !i) {
                        return null;
                    }
                    if (!o.length) {
                        return i;
                    }
                    var l = o.pop();
                    if (!l) {
                        return null;
                    }
                    if (l.type === n.Token.Type.text) {
                        var u = new s({
                            type: s.Type.text,
                            content: l.content
                        });
                        i.subTrees.push(u);
                    }
                    if (l.type === n.Token.Type.startTag) {
                        var f = l.content, u = new s({
                                type: s.Type.tag,
                                content: f,
                                attributes: l.attributes
                            }), d = s.buildTreeFromTokens(u, o, f);
                        if (!d) {
                            return null;
                        }
                        i.subTrees.push(d);
                    }
                    if (l.type === n.Token.Type.endTag) {
                        var f = l.content;
                        return f === a ? i : null;
                    }
                    return !o.length && a !== '' ? null : this.buildTreeFromTokens(i, o, a);
                }, s;
            }());
        ;
        (function (s) {
            (function (i) {
                i[i.root = 0] = 'root';
                i[i.text = 1] = 'text';
                i[i.tag = 2] = 'tag';
                ;
            }(s.Type || (s.Type = {})));
        }(r = t.ParseTree || (t.ParseTree = {})));
        ;
        ;
    }(eA));
    var Vf = {
        Tag: void 0,
        Tag: cie
    };
    Object.defineProperty(Vf, '__esModule', { value: true });
    ;
    var cie = (function () {
        function t(e) {
            var n;
            this.tagName = e.tagName;
            this.insertLineBreaks = e.insertLineBreaks;
            this.suppressLineBreaks = e.suppressLineBreaks;
            this.noNesting = e.noNesting;
            this.markupGenerator = (n = e.markupGenerator) !== null && n !== void 0 ? n : function (r, s) {
                return '<' + r.tagName + '>' + s + '</' + r.tagName + '>';
            };
            ;
        }
        return t.create = function (e, n, r) {
            var s, i, o;
            return r === void 0 && (r = {}), new t({
                tagName: e,
                insertLineBreaks: (s = r.insertLineBreaks) !== null && s !== void 0 ? s : true,
                suppressLineBreaks: (i = r.suppressLineBreaks) !== null && i !== void 0 ? i : false,
                noNesting: (o = r.noNesting) !== null && o !== void 0 ? o : false,
                markupGenerator: n
            });
        }, t;
    }());
    ;
    Object.defineProperty(ng, '__esModule', { value: true });
    ;
    var e6 = eA, t6 = Vf, lie = (function () {
            function t(e, n) {
                this.options = n;
                this.escapeHTML = false;
                this.tags = e;
                n && (this.escapeHTML = n.escapeHTML);
                ;
            }
            return Object.defineProperty(t, 'defaultTags', {
                get: function () {
                    return {
                        b: t6.Tag.create('b'),
                        i: t6.Tag.create('i')
                    };
                },
                enumerable: false,
                configurable: true
            }), t.prototype.parse = function (e, n, r, s) {
                n === void 0 && (n = false);
                r === void 0 && (r = true);
                s === void 0 && (s = true);
                ;
                var i = e6.ParseTree.buildTree(e, this.tags);
                return !i || !i.isValid ? e : this.treeToHtml(i.subTrees, r, s, n);
            }, t.prototype.addTag = function (e, n) {
                this.tags[e] = n;
            }, t.prototype.treeToHtml = function (e, n, r, s) {
                var i = this;
                s === void 0 && (s = false);
                var o = '', a = false;
                return e.forEach(function (l) {
                    var u;
                    if (l.type === e6.ParseTree.Type.text) {
                        var f = l.content;
                        r && (f = i.escapeHTML ? t.escapeHTML(f) : f);
                        n && !a && (f = f.replace(/(\r\n|\n|\r)/gm, '<br>'), a = false);
                        o += f;
                        ;
                    } else {
                        var d = i.tags[l.content], p = i.treeToHtml(l.subTrees, d.insertLineBreaks, r, s);
                        s ? o += p : o += d.markupGenerator(d, p, (u = l.attributes) !== null && u !== void 0 ? u : {});
                        a = d.suppressLineBreaks;
                        ;
                    }
                }), o;
            }, t.escapeHTML = function (e) {
                return e.replace(/[&<>]/g, function (n) {
                    return t.tagsToReplace[n] || n;
                });
            }, t.tagsToReplace = {
                '&': '&amp;',
                '<': '&lt;',
                '>': '&gt;'
            }, t;
        }());
    ;
    (function (t) {
        Object.defineProperty(t, '__esModule', { value: true });
        ;
        ;
        var e = ng;
        Object.defineProperty(t, 'BBCodeParser', {
            enumerable: true,
            get: function () {
                return e.BBCodeParser;
            }
        });
        var n = Vf;
        Object.defineProperty(t, 'Tag', {
            enumerable: true,
            get: function () {
                return n.Tag;
            }
        });
    }(Zi));
    const uie = {
            install: t => {
                const e = { section: Zi.Tag.create('section', (i, o, {section: a}) => `<div ${ a ? `class="section ${ a }"` : 'class="section"' }>${ o }</div>`) };
                [
                    'b',
                    'bold',
                    'B'
                ].forEach(i => {
                    ;
                });
                [
                    'i',
                    'italic',
                    'I'
                ].forEach(i => {
                    ;
                });
                ;
                ;
                ;
                const s = new Zi.BBCodeParser(e);
                t.directive('bb', {
                    mounted(i, o) {
                        const a = document.createElement('div');
                        ;
                        ;
                        ;
                    },
                    updated(i, o) {
                        const a = document.createElement('div');
                        ;
                        ;
                        ;
                    }
                });
                t.mixin({
                    beforeCreate() {
                        this.$options.bb && Object.keys(this.$options.bb).forEach(i => {
                            const o = this.$options.bb[i];
                            if (o instanceof Function) {
                                s.addTag(i, Zi.Tag.create(i, o));
                                return;
                            }
                            s.addTag(i, Zi.Tag.create(i, o.generator, o.options));
                        });
                    }
                });
                t.config.globalProperties.$bb = i => (typeof i != 'string' && console.warn(`[BBCodePlugin] Received unexpected ${ typeof i } with value ${ i };converting to string before parsing.`), s.parse(String(i)));
                ;
            }
        }, hie = at({
            data() {
                return { showPowerNav: false };
            },
            computed: {
                debugNav() {
                    return this.$refs.debugNav;
                },
                replayer() {
                    return this.$debugReplayer;
                }
            },
            mounted() {
                window.addEventListener('keydown', t => {
                    var e, n, r, s;
                    return t.key === ',' ? (e = this.replayer) == null ? void 0 : e.toPreviousEntity() : t.key === '.' ? (n = this.replayer) == null ? void 0 : n.toNextEntity() : t.key === 'q' ? (r = this.replayer) == null ? void 0 : r.toPreviousMarker() : t.key === 'w' ? (s = this.replayer) == null ? void 0 : s.toNextMarker() : null;
                });
            },
            methods: {
                onPreviousClick() {
                    var t;
                    (t = this.replayer) == null || t.toPreviousMarker();
                },
                onNextClick() {
                    var t;
                    (t = this.replayer) == null || t.toNextMarker();
                },
                onOpenPowerNavClick() {
                    this.showPowerNav = true;
                    this.debugNav.focus();
                    ;
                },
                onClosePowerNavClick() {
                    this.showPowerNav = false;
                    this.debugNav.focus();
                    ;
                },
                onMarkerClick(t) {
                    var e;
                    (e = this.replayer) == null || e.toMarkerIndex(t);
                },
                onKillClick() {
                    var t;
                    (t = this.replayer) == null || t.kill();
                },
                onDisconnectClick() {
                    var t;
                    (t = this.replayer) == null || t.disconnect();
                }
            }
        }), vo = t => (Ri('data-v-220ec4c0'), t = t(), Mi(), t), pie = vo(() => V('p', null, 'MARKERS', -1)), mie = ['onClick'], gie = vo(() => V('br', null, null, -1)), _ie = vo(() => V('p', { class: 'title blurred' }, 'DEBUG', -1)), bie = vo(() => V('svg', { viewBox: '0 0 20 10' }, [V('polygon', { points: '0,10 10,0 20,10' })], -1)), Eie = vo(() => V('div', { class: 'visually-hidden' }, 'Open debug menu', -1)), Tie = [
            bie,
            Eie
        ], Sie = vo(() => V('svg', { viewBox: '0 0 60 50' }, [
            V('polygon', {
                class: 'outline',
                points: '40,35.6 20,25 40,14.4'
            }),
            V('polygon', { points: '40,35.6 20,25 40,14.4' })
        ], -1)), wie = vo(() => V('div', { class: 'visually-hidden' }, 'Previous', -1)), Oie = [
            Sie,
            wie
        ], Aie = vo(() => V('svg', { viewBox: '0 0 60 50' }, [
            V('polygon', {
                class: 'outline',
                points: '40,35.6 20,25 40,14.4'
            }),
            V('polygon', { points: '40,35.6 20,25 40,14.4' })
        ], -1)), Cie = vo(() => V('div', { class: 'visually-hidden' }, 'Next', -1)), Iie = [
            Aie,
            Cie
        ];
    function kie(t, e, n, r, s, i) {
        return t.replayer ? (G(), K('div', fie, [
            t.showPowerNav ? (G(), K('div', die, [
                V('button', {
                    class: 'close',
                    onClick: e[0] || (e[0] = (...o) => t.onClosePowerNavClick && t.onClosePowerNavClick(...o))
                }, 'X'),
                pie,
                V('ul', null, [(G(true), K(gt, null, wn(t.replayer.markerMap, (o, a) => (G(), K('li', {
                        key: a,
                        class: nt({ active: a === t.replayer.currentMarkerItemIndex }),
                        onClick: l => t.onMarkerClick(a)
                    }, Nt(o[1].marker), 11, mie))), 128))]),
                V('button', {
                    class: 'option',
                    onClick: e[1] || (e[1] = (...o) => t.onKillClick && t.onKillClick(...o))
                }, [
                    Tn('KILL'),
                    gie,
                    Tn('ROOM')
                ]),
                V('button', {
                    class: 'option',
                    onClick: e[2] || (e[2] = (...o) => t.onDisconnectClick && t.onDisconnectClick(...o))
                }, 'DISCONNECT')
            ])) : De('', true),
            _ie,
            t.replayer.markerMap.length ? (G(), K('p', vie, Nt(t.replayer.currentMarkerItemIndex) + ' : ' + Nt(t.replayer.currentMarkerItem[1].marker) + ' (' + Nt(t.replayer.currentEntityItemIndex) + ') ', 1)) : (G(), K('p', yie, 'Item #' + Nt(t.replayer.currentEntityItemIndex), 1)),
            t.showPowerNav ? De('', true) : (G(), K('button', {
                key: 3,
                class: 'open-power-nav',
                onClick: e[3] || (e[3] = (...o) => t.onOpenPowerNavClick && t.onOpenPowerNavClick(...o))
            }, Tie)),
            V('button', {
                class: 'direction previous',
                onClick: e[4] || (e[4] = (...o) => t.onPreviousClick && t.onPreviousClick(...o))
            }, Oie),
            V('button', {
                class: 'direction next',
                onClick: e[5] || (e[5] = (...o) => t.onNextClick && t.onNextClick(...o))
            }, Iie)
        ], 512)) : De('', true);
    }
    const Nie = Je(hie, [
        [
            'render',
            kie
        ],
        [
            '__scopeId',
            'data-v-220ec4c0'
        ]
    ]);
    function xie(t, e) {
        for (var n = -1, r = t == null ? 0 : t.length; ++n < r && e(t[n], n, t) !== false;) {
            ;
        }
        return t;
    }
    var Pie = xie, Rie = j7, Mie = Rie(Object.keys, Object), Die = Mie, $ie = Mv, Lie = Die, Fie = Object.prototype, Uie = Fie.hasOwnProperty;
    function Bie(t) {
        if (!$ie(t)) {
            return Lie(t);
        }
        var e = [];
        for (var n in Object(t))
            Uie.call(t, n) && n != 'constructor' && e.push(n);
        return e;
    }
    var qie = Bie, Vie = Q7, Gie = qie, jie = Hm;
    function Wie(t) {
        return jie(t) ? Vie(t) : Gie(t);
    }
    var sg = Wie, Hie = Mf, zie = sg;
    function Yie(t, e) {
        return t && Hie(e, zie(e), t);
    }
    var Kie = Yie, Zie = Mf, Xie = Df;
    function Qie(t, e) {
        return t && Zie(e, Xie(e), t);
    }
    var Jie = Qie;
    function eoe(t, e) {
        for (var n = -1, r = t == null ? 0 : t.length, s = 0, i = []; ++n < r;) {
            var o = t[n];
            e(o, n, t) && (i[s++] = o);
        }
        return i;
    }
    var toe = eoe;
    function noe() {
        return [];
    }
    var tA = noe, roe = toe, soe = tA, ioe = Object.prototype, ooe = ioe.propertyIsEnumerable, n6 = Object.getOwnPropertySymbols, aoe = n6 ? function (t) {
            return t == null ? [] : (t = Object(t), roe(n6(t), function (e) {
                return ooe.call(t, e);
            }));
        } : soe, O3 = aoe, coe = Mf, loe = O3;
    function uoe(t, e) {
        return coe(t, loe(t), e);
    }
    var hoe = uoe;
    function foe(t, e) {
        for (var n = -1, r = e.length, s = t.length; ++n < r;) {
            t[s + n] = e[n];
        }
        return t;
    }
    var nA = foe, doe = nA, poe = Rv, moe = O3, goe = tA, _oe = Object.getOwnPropertySymbols, yoe = _oe ? function (t) {
            for (var e = []; t;) {
                doe(e, moe(t));
                t = poe(t);
                ;
            }
            return e;
        } : goe, rA = yoe, voe = Mf, boe = rA;
    function Eoe(t, e) {
        return voe(t, boe(t), e);
    }
    var Toe = Eoe, Soe = nA, woe = Aa;
    function Ooe(t, e, n) {
        var r = e(t);
        return woe(t) ? r : Soe(r, n(t));
    }
    var sA = Ooe, Aoe = sA, Coe = O3, Ioe = sg;
    function koe(t) {
        return Aoe(t, Ioe, Coe);
    }
    var Noe = koe, xoe = sA, Poe = rA, Roe = Df;
    function Moe(t) {
        return xoe(t, Roe, Poe);
    }
    var Doe = Moe, $oe = Rc, Loe = ti, Foe = $oe(Loe, 'DataView'), Uoe = Foe, Boe = Rc, qoe = ti, Voe = Boe(qoe, 'Promise'), Goe = Voe, joe = Rc, Woe = ti, Hoe = joe(Woe, 'Set'), zoe = Hoe, Yoe = Rc, Koe = ti, Zoe = Yoe(Koe, 'WeakMap'), Xoe = Zoe, G0 = Uoe, j0 = Nv, W0 = Goe, H0 = zoe, z0 = Xoe, iA = Tu, Iu = $7, Joe = Iu(G0), eae = Iu(j0), tae = Iu(W0), nae = Iu(H0), rae = Iu(z0), Ja = iA;
    (G0 && Ja(new G0(new ArrayBuffer(1))) != '[object DataView]' || j0 && Ja(new j0()) != '[object Map]' || W0 && Ja(W0.resolve()) != '[object Promise]' || H0 && Ja(new H0()) != '[object Set]' || z0 && Ja(new z0()) != '[object WeakMap]') && (Ja = function (t) {
        var e = iA(t), n = e == '[object Object]' ? t.constructor : void 0, r = n ? Iu(n) : '';
        if (r) {
            switch (r) {
            case Joe:
                return '[object DataView]';
            case eae:
                return '[object Map]';
            case tae:
                return '[object Promise]';
            case nae:
                return '[object Set]';
            case rae:
                return '[object WeakMap]';
            }
        }
        return e;
    });
    var A3 = Ja, sae = Object.prototype, iae = sae.hasOwnProperty;
    function oae(t) {
        var e = t.length, n = new t.constructor(e);
        return e && typeof t[0] == 'string' && iae.call(t, 'index') && (n.index = t.index, n.input = t.input), n;
    }
    var aae = oae, cae = Pv;
    function lae(t, e) {
        var n = e ? cae(t.buffer) : t.buffer;
        return new t.constructor(n, t.byteOffset, t.byteLength);
    }
    var uae = lae;
    function fae(t) {
        var e = new t.constructor(t.source, /\w*$/.exec(t));
        return e.lastIndex = t.lastIndex, e;
    }
    var dae = fae, c6 = Gm, l6 = c6 ? c6.prototype : void 0, u6 = l6 ? l6.valueOf : void 0;
    function pae(t) {
        return u6 ? Object(u6.call(t)) : {};
    }
    var mae = pae, gae = Pv, _ae = uae, yae = dae, vae = mae, bae = V7;
    function Bae(t, e, n) {
        var r = t.constructor;
        switch (e) {
        case '[object ArrayBuffer]':
            return gae(t);
        case '[object Boolean]':
        case '[object Date]':
            return new r(+t);
        case '[object DataView]':
            return _ae(t, n);
        case '[object Float32Array]':
        case '[object Float64Array]':
        case '[object Int8Array]':
        case '[object Int16Array]':
        case '[object Int32Array]':
        case '[object Uint8Array]':
        case '[object Uint8ClampedArray]':
        case '[object Uint16Array]':
        case '[object Uint32Array]':
            return bae(t, n);
        case '[object Map]':
            return new r();
        case '[object Number]':
        case '[object String]':
            return new r(t);
        case '[object RegExp]':
            return yae(t);
        case '[object Set]':
            return new r();
        case '[object Symbol]':
            return vae(t);
        }
    }
    var qae = Bae, Vae = A3, Gae = Oa;
    function Wae(t) {
        return Gae(t) && Vae(t) == '[object Map]';
    }
    var Hae = Wae, zae = Hae, Yae = $v, h6 = Lv, f6 = h6 && h6.isMap, Kae = f6 ? Yae(f6) : zae, Zae = Kae, Xae = A3, Qae = Oa;
    function ece(t) {
        return Qae(t) && Xae(t) == '[object Set]';
    }
    var tce = ece, nce = tce, rce = $v, d6 = Lv, p6 = d6 && d6.isSet, sce = p6 ? rce(p6) : nce, ice = sce, oce = F7, ace = Pie, cce = Fv, lce = Kie, uce = Jie, hce = q7, fce = G7, dce = hoe, pce = Toe, mce = Noe, gce = Doe, _ce = A3, yce = aae, vce = qae, bce = W7, Ece = Aa, Tce = Dv, Sce = Zae, wce = ni, Oce = ice, Ace = sg, Cce = Df, Zt = {};
    Zt['[object Arguments]'] = Zt['[object Array]'] = Zt['[object ArrayBuffer]'] = Zt['[object DataView]'] = Zt['[object Boolean]'] = Zt['[object Date]'] = Zt['[object Float32Array]'] = Zt['[object Float64Array]'] = Zt['[object Int8Array]'] = Zt['[object Int16Array]'] = Zt['[object Int32Array]'] = Zt['[object Map]'] = Zt['[object Number]'] = Zt['[object Object]'] = Zt['[object RegExp]'] = Zt['[object Set]'] = Zt['[object String]'] = Zt['[object Symbol]'] = Zt['[object Uint8Array]'] = Zt['[object Uint8ClampedArray]'] = Zt['[object Uint16Array]'] = Zt['[object Uint32Array]'] = true;
    Zt['[object Error]'] = Zt['[object Function]'] = Zt['[object WeakMap]'] = false;
    function Fp(t, e, n, r, s, i) {
        var o, a = e & 1, l = e & 2, u = e & 4;
        if (n && (o = s ? n(t, r, s, i) : n(t)), o !== void 0) {
            return o;
        }
        if (!wce(t)) {
            return t;
        }
        var f = Ece(t);
        if (f) {
            if (o = yce(t), !a) {
                return fce(t, o);
            }
        } else {
            var d = _ce(t), p = d == '[object Function]' || d == '[object GeneratorFunction]';
            if (Tce(t)) {
                return hce(t, a);
            }
            if (d == '[object Object]' || d == '[object Arguments]' || p && !s) {
                if (o = l || p ? {} : bce(t), !a) {
                    return l ? pce(t, uce(o, t)) : dce(t, lce(o, t));
                }
            } else {
                if (!Zt[d]) {
                    return s ? t : {};
                }
                o = vce(t, d, a);
            }
        }
        i || (i = new oce());
        var _ = i.get(t);
        if (_) {
            return _;
        }
        i.set(t, o);
        Oce(t) ? t.forEach(function (g) {
            o.add(Fp(g, e, n, g, t, i));
        }) : Sce(t) && t.forEach(function (g, b) {
            o.set(b, Fp(g, e, n, b, t, i));
        });
        ;
        var v = u ? l ? gce : mce : l ? Cce : Ace, y = f ? void 0 : v(t);
        return ace(y || t, function (g, b) {
            y && (b = g, g = t[b]);
            cce(o, b, Fp(g, e, n, b, t, i));
            ;
        }), o;
    }
    var ele = Fp, tle = ele;
    function sle(t) {
        return tle(t, 1 | 4);
    }
    var ile = sle;
    const lA = vu(ile), ole = at({
            emits: { resolve: () => true },
            data() {
                return {
                    screen: 'options',
                    vibe: null,
                    message: '',
                    content: null,
                    isContent: true,
                    values: {}
                };
            },
            mounted() {
                var e, n;
                const t = (n = (e = this.$debugRecorder) == null ? void 0 : e.room) == null ? void 0 : n.appTag;
                t && (this.values = lA(this.$ecastValues), this.content = uS.getPromptGuess(this.values, t) ?? null);
            },
            methods: {
                onFeedbackClick() {
                    this.screen = 'feedback';
                },
                onDebugClick() {
                    this.screen = 'debug';
                },
                onVibeClick(t) {
                    this.vibe = t;
                },
                async onSubmitClick() {
                    this.$debugRecorder && (this.screen === 'debug' && (await this.$debugRecorder.send(this.message), this.$emit('resolve')), this.screen === 'feedback' && (await uS.send({
                        room: this.$debugRecorder.room,
                        name: this.$ecast.name,
                        role: this.$ecast.role,
                        content: this.isContent ? this.content : null,
                        message: this.message ?? '',
                        vibe: this.vibe ?? 'none',
                        values: this.values
                    }), this.$emit('resolve')));
                }
            }
        }), Ps = t => (Ri('data-v-2c53389f'), t = t(), Mi(), t), fle = Ps(() => V('img', {
            src: 'http://127.0.0.1:8080/bundles/main/pp10-nopus-opus/assets/ad9172fc.png',
            alt: 'Leave Feedback'
        }, null, -1)), dle = Ps(() => V('span', null, [
            Tn('LEAVE'),
            V('br'),
            Tn('FEEDBACK')
        ], -1)), ple = [
            fle,
            dle
        ], mle = Ps(() => V('img', {
            src: 'https://bundles.jackbox.tv/main/pp10-nopus-opus/assets/dc131b16.png',
            alt: 'Send Debug'
        }, null, -1)), gle = Ps(() => V('span', null, [
            Tn('SEND A'),
            V('br'),
            Tn('DEBUG')
        ], -1)), _le = [
            mle,
            gle
        ], vle = Ps(() => V('img', {
            class: 'image',
            src: 'http://127.0.0.1:8080/bundles/main/pp10-nopus-opus/assets/ad9172fc.png',
            alt: 'Feedback'
        }, null, -1)), ble = Ps(() => V('h3', { class: 'text' }, 'Send Feedback', -1)), Ele = Ps(() => V('p', { class: 'cta' }, 'CHOOSE A VIBE', -1)), Sle = Ps(() => V('img', {
            src: 'https://bundles.jackbox.tv/main/pp10-nopus-opus/assets/38715b18.png',
            alt: 'good'
        }, null, -1)), wle = [Sle], Ole = Ps(() => V('img', {
            src: 'https://bundles.jackbox.tv/main/pp10-nopus-opus/assets/b0d7c822.png',
            alt: 'good'
        }, null, -1)), Ale = [Ole], Cle = Ps(() => V('img', {
            src: 'https://bundles.jackbox.tv/main/pp10-nopus-opus/assets/06150f24.png',
            alt: 'bad'
        }, null, -1)), Ile = [Cle], Ple = Ps(() => V('img', {
            class: 'image',
            src: 'https://bundles.jackbox.tv/main/pp10-nopus-opus/assets/dc131b16.png',
            alt: 'Debug'
        }, null, -1)), Rle = Ps(() => V('h3', { class: 'text' }, 'What is Happening?', -1));
    function Dle(t, e, n, r, s, i) {
        return G(), K('div', ule, [t.screen === 'options' ? (G(), K('div', hle, [
                V('button', {
                    class: 'feedback-button',
                    onClick: e[0] || (e[0] = (...o) => t.onFeedbackClick && t.onFeedbackClick(...o))
                }, ple),
                V('button', { onClick: e[1] || (e[1] = (...o) => t.onDebugClick && t.onDebugClick(...o)) }, _le)
            ])) : t.screen === 'feedback' ? (G(), K('div', yle, [
                vle,
                ble,
                V('div', {
                    class: nt([
                        'vibes',
                        { 'has-selected': t.vibe }
                    ])
                }, [
                    Ele,
                    V('div', Tle, [
                        V('button', {
                            class: nt({ selected: t.vibe === 'good' }),
                            onClick: e[2] || (e[2] = o => t.onVibeClick('good'))
                        }, wle, 2),
                        V('button', {
                            class: nt({ selected: t.vibe === 'meh' }),
                            onClick: e[3] || (e[3] = o => t.onVibeClick('meh'))
                        }, Ale, 2),
                        V('button', {
                            class: nt({ selected: t.vibe === 'bad' }),
                            onClick: e[4] || (e[4] = o => t.onVibeClick('bad'))
                        }, Ile, 2)
                    ])
                ], 2),
                V('div', kle, [
                    t.content ? (G(), K('div', Nle, [
                        qe(V('input', {
                            'onUpdate:modelValue': e[5] || (e[5] = o => t.isContent = o),
                            type: 'checkbox'
                        }, null, 512), [[
                                oB,
                                t.isContent
                            ]]),
                        V('span', null, [
                            Tn('Feedback is about: '),
                            V('em', null, Nt(t.content), 1)
                        ])
                    ])) : De('', true),
                    qe(V('textarea', {
                        'onUpdate:modelValue': e[6] || (e[6] = o => t.message = o),
                        rows: '3',
                        placeholder: '(optional) more details',
                        'aria-label': 'Details'
                    }, null, 512), [[
                            lT,
                            t.message
                        ]]),
                    V('button', { onClick: e[7] || (e[7] = Si((...o) => t.onSubmitClick && t.onSubmitClick(...o), ['prevent'])) }, Nt(t.$t('ACTION.SUBMIT')), 1)
                ])
            ])) : t.screen === 'debug' ? (G(), K('div', xle, [
                Ple,
                Rle,
                V('div', Mle, [
                    qe(V('textarea', {
                        'onUpdate:modelValue': e[8] || (e[8] = o => t.message = o),
                        rows: '3',
                        placeholder: 'Enter details',
                        'aria-label': 'Details'
                    }, null, 512), [[
                            lT,
                            t.message
                        ]]),
                    V('button', { onClick: e[9] || (e[9] = Si((...o) => t.onSubmitClick && t.onSubmitClick(...o), ['prevent'])) }, Nt(t.$t('ACTION.OK')), 1)
                ])
            ])) : De('', true)]);
    }
    const $le = Je(ole, [
            [
                'render',
                Dle
            ],
            [
                '__scopeId',
                'data-v-2c53389f'
            ]
        ]), Lle = at({
            methods: {
                onFeedbackClick() {
                    this.$showModal($le);
                }
            }
        });
    function Fle(t, e, n, r, s, i) {
        return G(), K('div', {
            class: 'feedback-button',
            onClick: e[0] || (e[0] = (...o) => t.onFeedbackClick && t.onFeedbackClick(...o))
        }, 'SEND FEEDBACK');
    }
    const Ule = Je(Lle, [
            [
                'render',
                Fle
            ],
            [
                '__scopeId',
                'data-v-6f2f1788'
            ]
        ]), Ble = {
            install: (t, e) => {
                if (!t.config.globalProperties.$debugRecorder && !t.config.globalProperties.$debugReplayer) {
                    if (e.replayer) {
                        t.config.globalProperties.$debugReplayer = e.replayer;
                        t.component('Debug', Nie);
                        ;
                        return;
                    }
                    if (t.config.globalProperties.$debugRecorder = new wX(e.client, e.room), !t.config.globalProperties.$showModal) {
                        console.warn('[debugPlugin] Sending debug and feedback messages is disabled because the modalPlugin is missing.');
                        return;
                    }
                    (!Gs.isProduction() || Gs.getQueryParam('feedback')) && t.component('Debug', Ule);
                }
            }
        };
    var qle = ti, Vle = function () {
            return qle.Date.now();
        }, Gle = Vle;
    function Wle(t) {
        for (var e = t.length; e-- && /\s/.test(t.charAt(e));) {
            ;
        }
        return e;
    }
    var Hle = Wle, zle = Hle;
    function Kle(t) {
        return t && t.slice(0, zle(t) + 1).replace(/^\s+/, '');
    }
    var Zle = Kle, Xle = Tu, Qle = Oa;
    function eue(t) {
        return typeof t == 'symbol' || Qle(t) && Xle(t) == '[object Symbol]';
    }
    var ig = eue, tue = Zle, m6 = ni, nue = ig, g6 = 0 / 0, oue = parseInt;
    function aue(t) {
        if (typeof t == 'number') {
            return t;
        }
        if (nue(t)) {
            return g6;
        }
        if (m6(t)) {
            var e = typeof t.valueOf == 'function' ? t.valueOf() : t;
            t = m6(e) ? e + '' : e;
        }
        if (typeof t != 'string') {
            return t === 0 ? t : +t;
        }
        t = tue(t);
        var n = /^0b[01]+$/i.test(t);
        return n || /^0o[0-7]+$/i.test(t) ? oue(t.slice(2), n ? 2 : 8) : /^[-+]0x[0-9a-f]+$/i.test(t) ? g6 : +t;
    }
    var cue = aue, lue = ni, Ly = Gle, _6 = cue, hue = Math.max, fue = Math.min;
    function due(t, e, n) {
        var r, s, i, o, a, l, u = 0, f = false, d = false, p = true;
        if (typeof t != 'function') {
            throw new TypeError('Expected a function');
        }
        e = _6(e) || 0;
        lue(n) && (f = !!n.leading, d = 'maxWait' in n, i = d ? hue(_6(n.maxWait) || 0, e) : i, p = 'trailing' in n ? !!n.trailing : p);
        ;
        function _(x) {
            var M = r, L = s;
            return r = s = void 0, u = x, o = t.apply(L, M), o;
        }
        function v(x) {
            return u = x, a = setTimeout(b, e), f ? _(x) : o;
        }
        function y(x) {
            var M = x - l, L = x - u, U = e - M;
            return d ? fue(U, i - L) : U;
        }
        function g(x) {
            var M = x - l, L = x - u;
            return l === void 0 || M >= e || M < 0 || d && L >= i;
        }
        function b() {
            var x = Ly();
            if (g(x)) {
                return A(x);
            }
            a = setTimeout(b, y(x));
        }
        function A(x) {
            return a = void 0, p && r ? _(x) : (r = s = void 0, o);
        }
        function N() {
            a !== void 0 && clearTimeout(a);
            u = 0;
            r = l = s = a = void 0;
            ;
        }
        function I() {
            return a === void 0 ? o : A(Ly());
        }
        function O() {
            var x = Ly(), M = g(x);
            if (r = arguments, s = this, l = x, M) {
                if (a === void 0) {
                    return v(l);
                }
                if (d) {
                    return clearTimeout(a), a = setTimeout(b, e), _(l);
                }
            }
            return a === void 0 && (a = setTimeout(b, e)), o;
        }
        return O.cancel = N, O.flush = I, O;
    }
    var pue = due;
    const mue = vu(pue);
    var gue = Aa, _ue = ig;
    function bue(t, e) {
        if (gue(t)) {
            return false;
        }
        var n = typeof t;
        return n == 'number' || n == 'symbol' || n == 'boolean' || t == null || _ue(t) ? true : /^\w*$/.test(t) || !/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/.test(t) || e != null && t in Object(e);
    }
    var Eue = bue, fA = L7;
    function C3(t, e) {
        if (typeof t != 'function' || e != null && typeof e != 'function') {
            throw new TypeError('Expected a function');
        }
        var n = function () {
            var r = arguments, s = e ? e.apply(this, r) : r[0], i = n.cache;
            if (i.has(s)) {
                return i.get(s);
            }
            var o = t.apply(this, r);
            return n.cache = i.set(s, o) || i, o;
        };
        return n.cache = new (C3.Cache || fA)(), n;
    }
    C3.Cache = fA;
    var Sue = C3, wue = Sue;
    function Aue(t) {
        var e = wue(t, function (r) {
                return n.size === 500 && n.clear(), r;
            }), n = e.cache;
        return e;
    }
    var Cue = Aue, Iue = Cue, xue = Iue(function (t) {
            var e = [];
            return t.charCodeAt(0) === 46 && e.push(''), t.replace(/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, function (n, r, s, i) {
                e.push(s ? i.replace(/\\(\\)?/g, '$1') : r || n);
            }), e;
        }), Pue = xue;
    function Rue(t, e) {
        for (var n = -1, r = t == null ? 0 : t.length, s = Array(r); ++n < r;) {
            ;
        }
        return s;
    }
    var dA = Rue, y6 = Gm, Mue = dA, Due = Aa, $ue = ig, v6 = y6 ? y6.prototype : void 0, b6 = v6 ? v6.toString : void 0;
    function pA(t) {
        if (typeof t == 'string') {
            return t;
        }
        if (Due(t)) {
            return Mue(t, pA) + '';
        }
        if ($ue(t)) {
            return b6 ? b6.call(t) : '';
        }
        var e = t + '';
        return e == '0' && 1 / t == -1e+400 ? '-0' : e;
    }
    var Fue = pA, Uue = Fue;
    function Bue(t) {
        return t == null ? '' : Uue(t);
    }
    var que = Bue, Vue = Aa, Gue = Eue, jue = Pue, Wue = que;
    function Hue(t, e) {
        return Vue(t) ? t : Gue(t, e) ? [t] : jue(Wue(t));
    }
    var mA = Hue, zue = ig;
    function Kue(t) {
        if (typeof t == 'string' || zue(t)) {
            return t;
        }
        var e = t + '';
        return e == '0' && 1 / t == -1e+400 ? '-0' : e;
    }
    var gA = Kue, Zue = Fv, Xue = mA, Que = Uv, E6 = ni, Jue = gA;
    function ehe(t, e, n, r) {
        if (!E6(t)) {
            return t;
        }
        e = Xue(e, t);
        for (var s = -1, i = e.length, o = i - 1, a = t; a != null && ++s < i;) {
            var l = Jue(e[s]), u = n;
            if (l === '__proto__' || l === 'constructor' || l === 'prototype') {
                return t;
            }
            if (s != o) {
                var f = a[l];
                u = r ? r(f, l, a) : void 0;
                u === void 0 && (u = E6(f) ? f : Que(e[s + 1]) ? [] : {});
                ;
            }
            Zue(a, l, u);
            a = a[l];
            ;
        }
        return t;
    }
    var the = ehe, nhe = the;
    function rhe(t, e, n) {
        return t == null ? t : nhe(t, e, n);
    }
    var she = rhe;
    const ihe = vu(she);
    class ohe {
        constructor() {
            Ae(this, 'wsClient');
            Ae(this, 'keyMap');
            Ae(this, 'providerMap');
            Ae(this, 'mappedValues', Tc({}));
            Ae(this, 'shouldParseBlobcast', false);
            Ae(this, 'pausedKeys', null);
            Ae(this, 'keyMapKeys');
            Ae(this, 'providerMapKeys');
            Ae(this, 'hotValues');
            Ae(this, 'newValues');
            Ae(this, 'pause', (e = []) => {
                this.pausedKeys = e;
            });
            Ae(this, 'resume', () => {
                this.pausedKeys = null;
                this.sync();
                ;
            });
            Ae(this, 'sync', mue(() => {
                this.wsClient && (!this.keyMap && !this.providerMap || this.pausedKeys && !this.pausedKeys.length || (this.hotValues = {}, this.newValues = {}, this.normalize().mapKeysToValues().mapProvidersToValues().deleteDropped().hydrateRefs().syncExisting(), delete this.hotValues, delete this.newValues));
            }, 50));
        }
        setWSClient(e) {
            this.wsClient = e;
            this.setupWatcher();
            ;
        }
        setupWatcher() {
            this.wsClient.entities = Tc(this.wsClient.entities);
            pc(this.wsClient.entities, (e, n) => {
                this.sync();
            });
            ;
        }
        valueForEntity(e) {
            return e instanceof Pr.ArtifactEntity || e instanceof Pr.DoodleEntity || e instanceof Pr.TextMapEntity || e instanceof Pr.NumberEntity ? e : e instanceof Pr.ObjectEntity ? lA(e.val) : e instanceof Pr.TextEntity ? e.text : null;
        }
        normalize() {
            var n;
            const e = Object.keys(this.wsClient.entities);
            for (let r = 0; r < e.length; r++) {
                let s = e[r];
                if ((n = this.pausedKeys) != null && n.includes(s)) {
                    continue;
                }
                const i = this.valueForEntity(this.wsClient.entities[s]);
                if (i != null) {
                    if (this.shouldParseBlobcast) {
                        const o = s.split(':');
                        if (o[0] === 'bc') {
                            if (o[1] === 'customer') {
                                if (o[2] !== `${ this.wsClient.id }`) {
                                    continue;
                                }
                                s = 'player';
                            } else {
                                o[1] === 'room' && (s = 'room');
                            }
                        }
                    }
                    this.hotValues[s] = i;
                }
            }
            return this;
        }
        hydrateRefs() {
            const e = (n, r, s = false) => {
                const i = n.$ref ?? n.ref;
                if (i) {
                    const o = this.hotValues[i];
                    if (o === void 0) {
                        throw new Error(`[ecastPlugin] entity "${ r }" referenced entity "${ i }" but it does not exist`);
                    }
                    ihe(this.newValues, r, o);
                } else {
                    s && Object.entries(n).forEach(([o, a]) => {
                        a !== null && typeof a == 'object' && e(a, `${ r }.${ o }`, s);
                    });
                }
            };
            return Object.entries(this.newValues).forEach(([n, r]) => {
                r && Object.entries(r).forEach(([s, i]) => {
                    i !== null && typeof i == 'object' && e(i, `${ n }.${ s }`, this.keyHasDeepRefs(n));
                });
            }), this;
        }
        keyHasDeepRefs(e) {
            var n, r, s, i;
            return !!((r = (n = this.keyMap) == null ? void 0 : n[e]) != null && r.hasDeepRefs || (i = (s = this.providerMap) == null ? void 0 : s[e]) != null && i.hasDeepRefs);
        }
        mapKeysToValues() {
            if (!this.keyMap) {
                return this;
            }
            for (let e = 0; e < this.keyMapKeys.length; e++) {
                this.newValues[this.keyMapKeys[e]] = this.hotValues[this.keyMap[this.keyMapKeys[e]].key];
            }
            return this;
        }
        mapProvidersToValues() {
            if (!this.providerMap) {
                return this;
            }
            for (let e = 0; e < this.providerMapKeys.length; e++) {
                this.newValues[this.providerMapKeys[e]] = this.providerMap[this.providerMapKeys[e]].fn(this.hotValues, this.wsClient);
            }
            return this;
        }
        deleteDropped() {
            const e = Object.keys(this.mappedValues);
            for (let n = 0; n < e.length; n++) {
                this.newValues[e[n]] || delete this.mappedValues[e[n]];
            }
            return this;
        }
        syncExisting() {
            const e = Object.keys(this.newValues);
            for (let n = 0; n < e.length; n++) {
                this.mappedValues[e[n]] = this.newValues[e[n]];
            }
            return this.mappedValues;
        }
        addKeys(e) {
            this.keyMap || (this.keyMap = {});
            Object.keys(e).forEach(n => {
                if (typeof e[n] == 'function') {
                    const r = e[n];
                    this.keyMap[n] = {
                        key: r(this.wsClient),
                        hasDeepRefs: false
                    };
                    return;
                }
                if (typeof e[n] == 'object') {
                    const r = e[n];
                    this.keyMap[n] = {
                        key: r.fn ? r.fn(this.wsClient) : r.key,
                        hasDeepRefs: r.hasDeepRefs ?? false
                    };
                    return;
                }
                this.keyMap[n] = { key: e[n] };
            });
            this.keyMapKeys = Object.keys(this.keyMap);
            this.sync();
            ;
        }
        purgeKeys(e) {
            this.keyMap && (Object.keys(e).forEach(n => {
                this.keyMap[n] && delete this.keyMap[n];
            }), this.keyMapKeys = Object.keys(this.keyMap), this.sync());
        }
        addProviders(e) {
            this.providerMap || (this.providerMap = {});
            Object.keys(e).forEach(n => {
                if (typeof e[n] == 'object') {
                    const r = e[n];
                    this.providerMap[n] = {
                        fn: r.fn,
                        hasDeepRefs: r.hasDeepRefs ?? false
                    };
                    return;
                }
                this.providerMap[n] = { fn: e[n] };
            });
            this.providerMapKeys = Object.keys(this.providerMap);
            this.sync();
            ;
        }
        purgeProviders(e) {
            this.providerMap && (Object.keys(e).forEach(n => {
                this.providerMap[n] && delete this.providerMap[n];
            }), this.providerMapKeys = Object.keys(this.providerMap), this.sync());
        }
    }
    const ys = new ohe(), ahe = {
            install: (t, e) => {
                t.config.globalProperties.$setupEcast = n => {
                    ys.setWSClient(n.wsClient);
                    n.wsClient.on('artifact', r => Sh.add(r));
                    n.wsClient.on('connection', r => {
                        r.status === 'connected' && ys.setupWatcher();
                    });
                    ys.sync();
                    t.config.globalProperties.$ecast = ys.wsClient;
                    t.config.globalProperties.$ecastValues = ys.mappedValues;
                    t.config.globalProperties.$ecastRoom = n.room;
                    t.config.globalProperties.$ecastWelcome = n.welcome;
                    t.config.globalProperties.$syncEcast = ys.sync;
                    t.config.globalProperties.$pauseEcastUpdates = ys.pause;
                    t.config.globalProperties.$resumeEcastUpdates = ys.resume;
                    t.mixin({
                        beforeCreate() {
                            this.$options.ecastKeys && ys.addKeys(this.$options.ecastKeys);
                            this.$options.ecastProviders && ys.addProviders(this.$options.ecastProviders);
                            ;
                        },
                        beforeDestroy() {
                            this.$options.ecastKeys && ys.purgeKeys(this.$options.ecastKeys);
                            this.$options.ecastProviders && ys.purgeProviders(this.$options.ecastProviders);
                            ;
                        }
                    });
                    ;
                };
                e != null && e.wsClient && t.config.globalProperties.$setupEcast(e);
                ;
            }
        }, ku = {
            fatal: { error: Symbol('fatal.error') },
            modal: { active: Symbol('modal.active') },
            textDescriptions: { announcement: Symbol('textDescriptions.announcement') }
        }, _A = Object.prototype.toString;
    function yA(t) {
        switch (_A.call(t)) {
        case '[object Error]':
        case '[object Exception]':
        case '[object DOMException]':
            return true;
        default:
            return xu(t, Error);
        }
    }
    function Nu(t, e) {
        return _A.call(t) === `[object ${ e }]`;
    }
    function vA(t) {
        return Nu(t, 'ErrorEvent');
    }
    function T6(t) {
        return Nu(t, 'DOMError');
    }
    function che(t) {
        return Nu(t, 'DOMException');
    }
    function Oc(t) {
        return Nu(t, 'String');
    }
    function lhe(t) {
        return t === null || typeof t != 'object' && typeof t != 'function';
    }
    function og(t) {
        return Nu(t, 'Object');
    }
    function I3(t) {
        return typeof Event < 'u' && xu(t, Event);
    }
    function uhe(t) {
        return typeof Element < 'u' && xu(t, Element);
    }
    function hhe(t) {
        return Nu(t, 'RegExp');
    }
    function bA(t) {
        return !!(t && t.then && typeof t.then == 'function');
    }
    function fhe(t) {
        return og(t) && 'nativeEvent' in t && 'preventDefault' in t && 'stopPropagation' in t;
    }
    function dhe(t) {
        return typeof t == 'number' && t !== t;
    }
    function xu(t, e) {
        try {
            return t instanceof e;
        } catch {
            return false;
        }
    }
    function dp(t) {
        return t && t.Math == Math ? t : void 0;
    }
    const Ys = typeof globalThis == 'object' && dp(globalThis) || typeof window == 'object' && dp(window) || typeof self == 'object' && dp(self) || typeof global == 'object' && dp(global) || (function () {
        return this;
    }()) || {};
    function Gf() {
        return Ys;
    }
    function k3(t, e, n) {
        const r = n || Ys, s = r.__SENTRY__ = r.__SENTRY__ || {};
        return s[t] || (s[t] = e());
    }
    const phe = Gf();
    function Y0(t, e = {}) {
        try {
            let n = t;
            const s = [];
            let i = 0, o = 0;
            const l = ' > '.length;
            let u;
            const f = Array.isArray(e) ? e : e.keyAttrs, d = !Array.isArray(e) && e.maxStringLength || 80;
            for (; n && i++ < 5 && (u = ghe(n, f), !(u === 'html' || i > 1 && o + s.length * l + u.length >= d));) {
                s.push(u);
                o += u.length;
                n = n.parentNode;
                ;
            }
            return s.reverse().join(' > ');
        } catch {
            return '<unknown>';
        }
    }
    function ghe(t, e) {
        const n = t, r = [];
        let s, i, o, a, l;
        if (!n || !n.tagName) {
            return '';
        }
        r.push(n.tagName.toLowerCase());
        const u = e && e.length ? e.filter(d => n.getAttribute(d)).map(d => [
            d,
            n.getAttribute(d)
        ]) : null;
        if (u && u.length) {
            u.forEach(d => {
                r.push(`[${ d[0] }="${ d[1] }"]`);
            });
        } else {
            if (n.id && r.push(`#${ n.id }`), s = n.className, s && Oc(s)) {
                for (i = s.split(/\s+/), l = 0; l < i.length; l++) {
                    r.push(`.${ i[l] }`);
                }
            }
        }
        const f = [
            'aria-label',
            'type',
            'name',
            'title',
            'alt'
        ];
        for (l = 0; l < f.length; l++) {
            o = f[l];
            a = n.getAttribute(o);
            a && r.push(`[${ o }="${ a }"]`);
            ;
        }
        return r.join('');
    }
    function _he() {
        try {
            return phe.document.location.href;
        } catch {
            return '';
        }
    }
    class fh extends Error {
        constructor(e, n = 'warn') {
            super(e);
            this.message = e;
            this.name = new.target.prototype.constructor.name;
            Object.setPrototypeOf(this, new.target.prototype);
            this.logLevel = n;
            ;
        }
    }
    ;
    function vhe(t) {
        return t === 'http' || t === 'https';
    }
    function bhe(t, e = false) {
        const {
            host: n,
            path: r,
            pass: s,
            port: i,
            projectId: o,
            protocol: a,
            publicKey: l
        } = t;
        return `${ a }://${ l }${ e && s ? `:${ s }` : '' }@${ n }${ i ? `:${ i }` : '' }/${ r && `${ r }/` }${ o }`;
    }
    function Ehe(t) {
        const e = /^(?:(\w+):)\/\/(?:(\w+)(?::(\w+)?)?@)([\w.-]+)(?::(\d+))?\/(.+)/.exec(t);
        if (!e) {
            throw new fh(`Invalid Sentry Dsn: ${ t }`);
        }
        const [n, r, s = '', i, o = '', a] = e.slice(1);
        let l = '', u = a;
        const f = u.split('/');
        if (f.length > 1 && (l = f.slice(0, -1).join('/'), u = f.pop()), u) {
            const d = u.match(/^\d+/);
            d && (u = d[0]);
        }
        return EA({
            host: i,
            pass: s,
            path: l,
            projectId: u,
            port: o,
            protocol: n,
            publicKey: r
        });
    }
    function EA(t) {
        return {
            protocol: t.protocol,
            publicKey: t.publicKey || '',
            pass: t.pass || '',
            host: t.host,
            port: t.port || '',
            path: t.path || '',
            projectId: t.projectId
        };
    }
    function The(t) {
        if (!(typeof __SENTRY_DEBUG__ > 'u' || __SENTRY_DEBUG__)) {
            return;
        }
        const {
            port: e,
            projectId: n,
            protocol: r
        } = t;
        if ([
                'protocol',
                'publicKey',
                'host',
                'projectId'
            ].forEach(i => {
                if (!t[i]) {
                    throw new fh(`Invalid Sentry Dsn: ${ i } missing`);
                }
            }), !n.match(/^\d+$/)) {
            throw new fh(`Invalid Sentry Dsn: Invalid projectId ${ n }`);
        }
        if (!vhe(r)) {
            throw new fh(`Invalid Sentry Dsn: Invalid protocol ${ r }`);
        }
        if (e && isNaN(parseInt(e, 10))) {
            throw new fh(`Invalid Sentry Dsn: Invalid port ${ e }`);
        }
        return true;
    }
    function She(t) {
        const e = typeof t == 'string' ? Ehe(t) : EA(t);
        return The(e), e;
    }
    const g1 = [
        'debug',
        'info',
        'warn',
        'error',
        'log',
        'assert',
        'trace'
    ];
    function TA(t) {
        if (!('console' in Ys)) {
            return t();
        }
        const e = Ys.console, n = {};
        g1.forEach(r => {
            const s = e[r] && e[r].__sentry_original__;
            r in e && s && (n[r] = e[r], e[r] = s);
        });
        try {
            return t();
        } finally {
            Object.keys(n).forEach(r => {
                ;
            });
        }
    }
    function S6() {
        let t = false;
        const e = {
            enable: () => {
                t = true;
            },
            disable: () => {
                t = false;
            }
        };
        return typeof __SENTRY_DEBUG__ > 'u' || __SENTRY_DEBUG__ ? g1.forEach(n => {
            ;
        }) : g1.forEach(n => {
            ;
        }), e;
    }
    let On;
    typeof __SENTRY_DEBUG__ > 'u' || __SENTRY_DEBUG__ ? On = k3('logger', S6) : On = S6();
    function w6(t, e = 0) {
        return typeof t != 'string' || e === 0 || t.length <= e ? t : `${ t.slice(0, e) }...`;
    }
    function O6(t, e) {
        if (!Array.isArray(t)) {
            return '';
        }
        const n = [];
        for (let r = 0; r < t.length; r++) {
            const s = t[r];
            try {
                n.push(String(s));
            } catch {
                n.push('[value cannot be serialized]');
            }
        }
        return n.join(e);
    }
    function Ohe(t, e, n = false) {
        return Oc(t) ? hhe(e) ? e.test(t) : Oc(e) ? n ? t === e : t.includes(e) : false : false;
    }
    function ag(t, e = [], n = false) {
        return e.some(r => Ohe(t, r, n));
    }
    function Qn(t, e, n) {
        if (!(e in t)) {
            return;
        }
        const r = t[e], s = n(r);
        if (typeof s == 'function') {
            try {
                wA(s, r);
            } catch {
            }
        }
        ;
    }
    function SA(t, e, n) {
        Object.defineProperty(t, e, {
            value: n,
            writable: true,
            configurable: true
        });
    }
    function wA(t, e) {
        const n = e.prototype || {};
        ;
        SA(t, '__sentry_original__', e);
        ;
    }
    function N3(t) {
        return t.__sentry_original__;
    }
    function OA(t) {
        if (yA(t)) {
            return {
                message: t.message,
                name: t.name,
                stack: t.stack,
                ...C6(t)
            };
        }
        if (I3(t)) {
            const e = {
                type: t.type,
                target: A6(t.target),
                currentTarget: A6(t.currentTarget),
                ...C6(t)
            };
            return typeof CustomEvent < 'u' && xu(t, CustomEvent) && (e.detail = t.detail), e;
        } else {
            return t;
        }
    }
    function A6(t) {
        try {
            return uhe(t) ? Y0(t) : Object.prototype.toString.call(t);
        } catch {
            return '<unknown>';
        }
    }
    function C6(t) {
        if (typeof t == 'object' && t !== null) {
            const e = {};
            for (const n in t)
                Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            return e;
        } else {
            return {};
        }
    }
    function Ahe(t, e = 40) {
        const n = Object.keys(OA(t));
        if (n.sort(), !n.length) {
            return '[object has no keys]';
        }
        if (n[0].length >= e) {
            return w6(n[0], e);
        }
        for (let r = n.length; r > 0; r--) {
            const s = n.slice(0, r).join(', ');
            if (!(s.length > e)) {
                return r === n.length ? s : w6(s, e);
            }
        }
        return '';
    }
    function Che(t) {
        return K0(t, new Map());
    }
    function K0(t, e) {
        if (og(t)) {
            const n = e.get(t);
            if (n !== void 0) {
                return n;
            }
            const r = {};
            e.set(t, r);
            for (const s of Object.keys(t))
                typeof t[s] < 'u' && (r[s] = K0(t[s], e));
            return r;
        }
        if (Array.isArray(t)) {
            const n = e.get(t);
            if (n !== void 0) {
                return n;
            }
            const r = [];
            return e.set(t, r), t.forEach(s => {
                r.push(K0(s, e));
            }), r;
        }
        return t;
    }
    ;
    function ha(t) {
        try {
            return !t || typeof t != 'function' ? '<anonymous>' : t.name || '<anonymous>';
        } catch {
            return '<anonymous>';
        }
    }
    const Z0 = Gf();
    function Ihe() {
        if (!('fetch' in Z0)) {
            return false;
        }
        try {
            return new Headers(), new Request('http://www.example.com'), new Response(), true;
        } catch {
            return false;
        }
    }
    function I6(t) {
        return t && /^function fetch\(\)\s+\{\s+\[native code\]\s+\}$/.test(t.toString());
    }
    function khe() {
        if (!Ihe()) {
            return false;
        }
        if (I6(Z0.fetch)) {
            return true;
        }
        let t = false;
        const e = Z0.document;
        if (e && typeof e.createElement == 'function') {
            try {
                const n = e.createElement('iframe');
                ;
                e.head.appendChild(n);
                n.contentWindow && n.contentWindow.fetch && (t = I6(n.contentWindow.fetch));
                e.head.removeChild(n);
                ;
            } catch (n) {
                (typeof __SENTRY_DEBUG__ > 'u' || __SENTRY_DEBUG__) && On.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', n);
            }
        }
        return t;
    }
    const pp = Gf();
    function Nhe() {
        const t = pp.chrome, e = t && t.app && t.app.runtime, n = 'history' in pp && !!pp.history.pushState && !!pp.history.replaceState;
        return !e && n;
    }
    const un = Gf(), kh = { t: kh[t] || [] }, k6 = {};
    function xhe(t) {
        if (!k6[t]) {
            switch (k6[t] = true, t) {
            case 'console':
                Phe();
                break;
            case 'dom':
                Bhe();
                break;
            case 'xhr':
                Dhe();
                break;
            case 'fetch':
                Rhe();
                break;
            case 'history':
                $he();
                break;
            case 'error':
                qhe();
                break;
            case 'unhandledrejection':
                Vhe();
                break;
            default:
                (typeof __SENTRY_DEBUG__ > 'u' || __SENTRY_DEBUG__) && On.warn('unknown instrumentation type:', t);
                return;
            }
        }
    }
    function oc(t, e) {
        ;
        kh[t].push(e);
        xhe(t);
        ;
    }
    function Ks(t, e) {
        if (!(!t || !kh[t])) {
            for (const n of kh[t] || [])
                try {
                    n(e);
                } catch (r) {
                    (typeof __SENTRY_DEBUG__ > 'u' || __SENTRY_DEBUG__) && On.error(`Error while triggering instrumentation handler.
Type: ${ t }
Name: ${ ha(n) }
Error:`, r);
                }
        }
    }
    function Phe() {
        'console' in un && g1.forEach(function (t) {
            t in un.console && Qn(un.console, t, function (e) {
                return function (...n) {
                    Ks('console', {
                        args: n,
                        level: t
                    });
                    e && e.apply(un.console, n);
                    ;
                };
            });
        });
    }
    function Rhe() {
        khe() && Qn(un, 'fetch', function (t) {
            return function (...e) {
                const {
                        method: n,
                        url: r
                    } = Mhe(e), s = {
                        args: e,
                        fetchData: {
                            method: n,
                            url: r
                        },
                        startTimestamp: Date.now()
                    };
                return Ks('fetch', { ...s }), t.apply(un, e).then(i => (Ks('fetch', {
                    ...s,
                    endTimestamp: Date.now(),
                    response: i
                }), i), i => {
                    throw Ks('fetch', {
                        ...s,
                        endTimestamp: Date.now(),
                        error: i
                    }), i;
                });
            };
        });
    }
    function X0(t, e) {
        return !!t && typeof t == 'object' && !!t[e];
    }
    function N6(t) {
        return typeof t == 'string' ? t : t ? X0(t, 'url') ? t.url : t.toString ? t.toString() : '' : '';
    }
    function Mhe(t) {
        if (t.length === 0) {
            return {
                method: 'GET',
                url: ''
            };
        }
        if (t.length === 2) {
            const [n, r] = t;
            return {
                url: N6(n),
                method: X0(r, 'method') ? String(r.method).toUpperCase() : 'GET'
            };
        }
        const e = t[0];
        return {
            url: N6(e),
            method: X0(e, 'method') ? String(e.method).toUpperCase() : 'GET'
        };
    }
    function Dhe() {
        if (!('XMLHttpRequest' in un)) {
            return;
        }
        const t = XMLHttpRequest.prototype;
        Qn(t, 'open', function (e) {
            return function (...n) {
                const r = n[1], s = this['__sentry_xhr_v2__'] = {
                        method: Oc(n[0]) ? n[0].toUpperCase() : n[0],
                        url: n[1],
                        request_headers: {}
                    };
                Oc(r) && s.method === 'POST' && r.match(/sentry_key/) && (this.__sentry_own_request__ = true);
                const i = () => {
                    const o = this['__sentry_xhr_v2__'];
                    if (o && this.readyState === 4) {
                        try {
                            ;
                        } catch {
                        }
                        Ks('xhr', {
                            args: n,
                            endTimestamp: Date.now(),
                            startTimestamp: Date.now(),
                            xhr: this
                        });
                    }
                };
                return 'onreadystatechange' in this && typeof this.onreadystatechange == 'function' ? Qn(this, 'onreadystatechange', function (o) {
                    return function (...a) {
                        return i(), o.apply(this, a);
                    };
                }) : this.addEventListener('readystatechange', i), Qn(this, 'setRequestHeader', function (o) {
                    return function (...a) {
                        const [l, u] = a, f = this['__sentry_xhr_v2__'];
                        return f && (f.request_headers[l.toLowerCase()] = u), o.apply(this, a);
                    };
                }), e.apply(this, n);
            };
        });
        Qn(t, 'send', function (e) {
            return function (...n) {
                const r = this['__sentry_xhr_v2__'];
                return r && n[0] !== void 0 && (r.body = n[0]), Ks('xhr', {
                    args: n,
                    startTimestamp: Date.now(),
                    xhr: this
                }), e.apply(this, n);
            };
        });
        ;
    }
    let mp;
    function $he() {
        if (!Nhe()) {
            return;
        }
        const t = un.onpopstate;
        un.onpopstate = function (...n) {
            const r = un.location.href, s = mp;
            if (mp = r, Ks('history', {
                    from: s,
                    to: r
                }), t) {
                try {
                    return t.apply(this, n);
                } catch {
                }
            }
        };
        function e(n) {
            return function (...r) {
                const s = r.length > 2 ? r[2] : void 0;
                if (s) {
                    const i = mp, o = String(s);
                    mp = o;
                    Ks('history', {
                        from: i,
                        to: o
                    });
                    ;
                }
                return n.apply(this, r);
            };
        }
        Qn(un.history, 'pushState', e);
        Qn(un.history, 'replaceState', e);
        ;
    }
    ;
    let gp, _p;
    function Fhe(t, e) {
        if (!t || t.type !== e.type) {
            return true;
        }
        try {
            if (t.target !== e.target) {
                return true;
            }
        } catch {
        }
        return false;
    }
    function Uhe(t) {
        if (t.type !== 'keypress') {
            return false;
        }
        try {
            const e = t.target;
            if (!e || !e.tagName) {
                return true;
            }
            if (e.tagName === 'INPUT' || e.tagName === 'TEXTAREA' || e.isContentEditable) {
                return false;
            }
        } catch {
        }
        return true;
    }
    function x6(t, e = false) {
        return n => {
            if (!n || _p === n || Uhe(n)) {
                return;
            }
            const r = n.type === 'keypress' ? 'input' : n.type;
            gp === void 0 ? (t({
                event: n,
                name: r,
                global: e
            }), _p = n) : Fhe(_p, n) && (t({
                event: n,
                name: r,
                global: e
            }), _p = n);
            clearTimeout(gp);
            gp = un.setTimeout(() => {
                gp = void 0;
            }, 1000);
            ;
        };
    }
    function Bhe() {
        if (!('document' in un)) {
            return;
        }
        const t = Ks.bind(null, 'dom'), e = x6(t, true);
        un.document.addEventListener('click', e, false);
        un.document.addEventListener('keypress', e, false);
        [
            'EventTarget',
            'Node'
        ].forEach(n => {
            const r = un[n] && un[n].prototype;
            !r || !r.hasOwnProperty || !r.hasOwnProperty('addEventListener') || (Qn(r, 'addEventListener', function (s) {
                return function (i, o, a) {
                    if (i === 'click' || i == 'keypress') {
                        try {
                            const l = this, u = l.__sentry_instrumentation_handlers__ = l.__sentry_instrumentation_handlers__ || {}, f = u[i] = u[i] || { refCount: 0 };
                            if (!f.handler) {
                                const d = x6(t);
                                f.handler = d;
                                s.call(this, i, d, a);
                                ;
                            }
                            f.refCount++;
                        } catch {
                        }
                    }
                    return s.call(this, i, o, a);
                };
            }), Qn(r, 'removeEventListener', function (s) {
                return function (i, o, a) {
                    if (i === 'click' || i == 'keypress') {
                        try {
                            const l = this, u = l.__sentry_instrumentation_handlers__ || {}, f = u[i];
                            f && (f.refCount--, f.refCount <= 0 && (s.call(this, i, f.handler, a), f.handler = void 0, delete u[i]), Object.keys(u).length === 0 && delete l.__sentry_instrumentation_handlers__);
                        } catch {
                        }
                    }
                    return s.call(this, i, o, a);
                };
            }));
        });
        ;
    }
    let yp = null;
    function qhe() {
        yp = un.onerror;
        un.onerror = function (t, e, n, r, s) {
            return Ks('error', {
                column: r,
                error: s,
                line: n,
                msg: t,
                url: e
            }), yp && !yp.__SENTRY_LOADER__ ? yp.apply(this, arguments) : false;
        };
        un.onerror.__SENTRY_INSTRUMENTED__ = true;
        ;
    }
    let vp = null;
    function Vhe() {
        vp = un.onunhandledrejection;
        un.onunhandledrejection = function (t) {
            return Ks('unhandledrejection', t), vp && !vp.__SENTRY_LOADER__ ? vp.apply(this, arguments) : true;
        };
        un.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;
        ;
    }
    function Ghe() {
        const t = typeof WeakSet == 'function', e = t ? new WeakSet() : [];
        function n(s) {
            if (t) {
                return e.has(s) ? true : (e.add(s), false);
            }
            for (let i = 0; i < e.length; i++) {
                if (e[i] === s) {
                    return true;
                }
            }
            return e.push(s), false;
        }
        function r(s) {
            if (t) {
                e.delete(s);
            } else {
                for (let i = 0; i < e.length; i++) {
                    if (e[i] === s) {
                        e.splice(i, 1);
                        break;
                    }
                }
            }
        }
        return [
            n,
            r
        ];
    }
    function Nh() {
        const t = Ys, e = t.crypto || t.msCrypto;
        if (e && e.randomUUID) {
            return e.randomUUID().replace(/-/g, '');
        }
        const n = e && e.getRandomValues ? () => e.getRandomValues(new Uint8Array(1))[0] : () => Math.random() * 16;
        return ([10000000] + 1000 + 4000 + 8000 + 100000000000).replace(/[018]/g, r => (r ^ (n() & 15) >> r / 4).toString(16));
    }
    function AA(t) {
        return t.exception && t.exception.values ? t.exception.values[0] : void 0;
    }
    function Go(t) {
        const {
            message: e,
            event_id: n
        } = t;
        if (e) {
            return e;
        }
        const r = AA(t);
        return r ? r.type && r.value ? `${ r.type }: ${ r.value }` : r.type || r.value || n || '<unknown>' : n || '<unknown>';
    }
    function Q0(t, e, n) {
        const r = t.exception = t.exception || {}, s = r.values = r.values || [], i = s[0] = s[0] || {};
        i.value || (i.value = e || '');
        i.type || (i.type = n || 'Error');
        ;
    }
    function _1(t, e) {
        const n = AA(t);
        if (!n) {
            return;
        }
        const s = n.mechanism;
        if (n.mechanism = {
                ...r,
                ...s,
                ...e
            }, e && 'data' in e) {
            const i = {
                ...s && s.data,
                ...e.data
            };
            n.mechanism.data = i;
        }
    }
    function jhe(t) {
        return Array.isArray(t) ? t : [t];
    }
    function Whe() {
        return typeof __SENTRY_BROWSER_BUNDLE__ < 'u' && !!__SENTRY_BROWSER_BUNDLE__;
    }
    function Hhe() {
        return !Whe() && Object.prototype.toString.call(typeof process < 'u' ? process : 0) === '[object process]';
    }
    function zhe(t, e) {
        return t.require(e);
    }
    function Yhe(t, e = 100, n = 1e+400) {
        try {
            return J0('', t, e, n);
        } catch (r) {
            return { ERROR: `**non-serializable** (${ r })` };
        }
    }
    function CA(t, e = 3, n = 102400) {
        const r = Yhe(t, e);
        return Qhe(r) > n ? CA(t, e - 1, n) : r;
    }
    function J0(t, e, n = 1e+400, r = 1e+400, s = Ghe()) {
        const [i, o] = s;
        if (e == null || [
                'number',
                'boolean',
                'string'
            ].includes(typeof e) && !dhe(e)) {
            return e;
        }
        const a = Khe(t, e);
        if (!a.startsWith('[object ')) {
            return a;
        }
        if (e.__sentry_skip_normalization__) {
            return e;
        }
        const l = typeof e.__sentry_override_normalization_depth__ == 'number' ? e.__sentry_override_normalization_depth__ : n;
        if (l === 0) {
            return a.replace('object ', '');
        }
        if (i(e)) {
            return '[Circular ~]';
        }
        const u = e;
        if (u && typeof u.toJSON == 'function') {
            try {
                const _ = u.toJSON();
                return J0('', _, l - 1, r, s);
            } catch {
            }
        }
        const f = Array.isArray(e) ? [] : {};
        let d = 0;
        const p = OA(e);
        for (const _ in p) {
            if (!Object.prototype.hasOwnProperty.call(p, _)) {
                continue;
            }
            if (d >= r) {
                f[_] = '[MaxProperties ~]';
                break;
            }
            const v = p[_];
            f[_] = J0(_, v, l - 1, r, s);
            d++;
            ;
        }
        return o(e), f;
    }
    function Khe(t, e) {
        try {
            if (t === 'domain' && e && typeof e == 'object' && e._events) {
                return '[Domain]';
            }
            if (t === 'domainEmitter') {
                return '[DomainEmitter]';
            }
            if (typeof global < 'u' && e === global) {
                return '[Global]';
            }
            if (typeof window < 'u' && e === window) {
                return '[Window]';
            }
            if (typeof document < 'u' && e === document) {
                return '[Document]';
            }
            if (fhe(e)) {
                return '[SyntheticEvent]';
            }
            if (typeof e == 'number' && e !== e) {
                return '[NaN]';
            }
            if (typeof e == 'function') {
                return `[Function: ${ ha(e) }]`;
            }
            if (typeof e == 'symbol') {
                return `[${ String(e) }]`;
            }
            if (typeof e == 'bigint') {
                return `[BigInt: ${ String(e) }]`;
            }
            const n = Zhe(e);
            return /^HTML(\w*)Element$/.test(n) ? `[HTMLElement: ${ n }]` : `[object ${ n }]`;
        } catch (n) {
            return `**non-serializable** (${ n })`;
        }
    }
    function Zhe(t) {
        const e = Object.getPrototypeOf(t);
        return e ? e.constructor.name : 'null prototype';
    }
    function Xhe(t) {
        return ~-encodeURI(t).split(/%..|./).length;
    }
    function Qhe(t) {
        return Xhe(JSON.stringify(t));
    }
    var Qi;
    (function (t) {
        t[t.PENDING = 0] = 'PENDING';
        ;
        t[t.RESOLVED = 1] = 'RESOLVED';
        ;
        t[t.REJECTED = 2] = 'REJECTED';
    }(Qi || (Qi = {})));
    class gi {
        __init() {
            this._state = Qi.PENDING;
        }
        __init2() {
            this._handlers = [];
        }
        constructor(e) {
            gi.prototype.__init.call(this);
            gi.prototype.__init2.call(this);
            gi.prototype.__init3.call(this);
            gi.prototype.__init4.call(this);
            gi.prototype.__init5.call(this);
            gi.prototype.__init6.call(this);
            ;
            try {
                e(this._resolve, this._reject);
            } catch (n) {
                this._reject(n);
            }
        }
        then(e, n) {
            return new gi((r, s) => {
                this._handlers.push([
                    false,
                    i => {
                        if (!e) {
                            r(i);
                        } else {
                            try {
                                r(e(i));
                            } catch (o) {
                                s(o);
                            }
                        }
                    },
                    i => {
                        if (!n) {
                            s(i);
                        } else {
                            try {
                                r(n(i));
                            } catch (o) {
                                s(o);
                            }
                        }
                    }
                ]);
                this._executeHandlers();
                ;
            });
        }
        catch(e) {
            return this.then(n => n, e);
        }
        finally(e) {
            return new gi((n, r) => {
                let s, i;
                return this.then(o => {
                    i = false;
                    s = o;
                    e && e();
                    ;
                }, o => {
                    i = true;
                    s = o;
                    e && e();
                    ;
                }).then(() => {
                    if (i) {
                        r(s);
                        return;
                    }
                    n(s);
                });
            });
        }
        __init3() {
            this._resolve = e => {
                this._setResult(Qi.RESOLVED, e);
            };
        }
        __init4() {
            this._reject = e => {
                this._setResult(Qi.REJECTED, e);
            };
        }
        __init5() {
            this._setResult = (e, n) => {
                if (this._state === Qi.PENDING) {
                    if (bA(n)) {
                        n.then(this._resolve, this._reject);
                        return;
                    }
                    this._state = e;
                    this._value = n;
                    this._executeHandlers();
                    ;
                }
            };
        }
        __init6() {
            this._executeHandlers = () => {
                if (this._state === Qi.PENDING) {
                    return;
                }
                const e = this._handlers.slice();
                this._handlers = [];
                e.forEach(n => {
                    n[0] || (this._state === Qi.RESOLVED && n[1](this._value), this._state === Qi.REJECTED && n[2](this._value), n[0] = true);
                });
                ;
            };
        }
    }
    function Uy(t) {
        if (!t) {
            return {};
        }
        const e = t.match(/^(([^:/?#]+):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/);
        if (!e) {
            return {};
        }
        const n = e[6] || '', r = e[8] || '';
        return {
            host: e[4],
            path: e[5],
            protocol: e[2],
            search: n,
            hash: r,
            relative: e[5] + n + r
        };
    }
    const Jhe = [
        'fatal',
        'error',
        'warning',
        'log',
        'info',
        'debug'
    ];
    function efe(t) {
        return t === 'warn' ? 'warning' : Jhe.includes(t) ? t : 'log';
    }
    const IA = Gf(), e2 = { nowSeconds: () => Date.now() / 1000 };
    function tfe() {
        const {performance: t} = IA;
        if (!t || !t.now) {
            return;
        }
        const e = Date.now() - t.now();
        return {
            now: () => t.now(),
            timeOrigin: e
        };
    }
    function nfe() {
        try {
            return zhe(nN, 'perf_hooks').performance;
        } catch {
            return;
        }
    }
    const By = Hhe() ? nfe() : tfe(), P6 = By === void 0 ? e2 : { nowSeconds: () => (By.timeOrigin + By.now()) / 1000 }, kA = e2.nowSeconds.bind(e2), NA = P6.nowSeconds.bind(P6);
    ((() => {
        const {performance: t} = IA;
        if (!t || !t.now) {
            return;
        }
        const n = t.now(), r = Date.now(), s = t.timeOrigin ? Math.abs(t.timeOrigin + n - r) : 3600000, i = s < 3600000, o = t.timing && t.timing.navigationStart, l = typeof o == 'number' ? Math.abs(o + n - r) : 3600000, u = l < 3600000;
        return i || u ? s <= l ? t.timeOrigin : o : r;
    })());
    ;
    function sfe(t) {
        const e = NA(), n = {
                sid: Nh(),
                init: true,
                timestamp: e,
                started: e,
                duration: 0,
                status: 'ok',
                errors: 0,
                ignoreDuration: false,
                toJSON: () => ofe(n)
            };
        return t && cg(n, t), n;
    }
    function cg(t, e = {}) {
        if (e.user && (!t.ipAddress && e.user.ip_address && (t.ipAddress = e.user.ip_address), !t.did && !e.did && (t.did = e.user.id || e.user.email || e.user.username)), t.timestamp = e.timestamp || NA(), e.ignoreDuration && (t.ignoreDuration = e.ignoreDuration), e.sid && (t.sid = e.sid.length === 32 ? e.sid : Nh()), e.init !== void 0 && (t.init = e.init), !t.did && e.did && (t.did = `${ e.did }`), typeof e.started == 'number' && (t.started = e.started), t.ignoreDuration) {
            ;
        } else {
            if (typeof e.duration == 'number') {
                ;
            } else {
                const n = t.timestamp - t.started;
                ;
            }
        }
        e.release && (t.release = e.release);
        e.environment && (t.environment = e.environment);
        !t.ipAddress && e.ipAddress && (t.ipAddress = e.ipAddress);
        !t.userAgent && e.userAgent && (t.userAgent = e.userAgent);
        typeof e.errors == 'number' && (t.errors = e.errors);
        e.status && (t.status = e.status);
        ;
    }
    function ife(t, e) {
        let n = {};
        e ? n = { status: e } : t.status === 'ok' && (n = { status: 'exited' });
        cg(t, n);
        ;
    }
    function ofe(t) {
        return Che({
            sid: `${ t.sid }`,
            init: t.init,
            started: new Date(t.started * 1000).toISOString(),
            timestamp: new Date(t.timestamp * 1000).toISOString(),
            status: t.status,
            errors: t.errors,
            did: typeof t.did == 'number' || typeof t.did == 'string' ? `${ t.did }` : void 0,
            duration: t.duration,
            attrs: {
                release: t.release,
                environment: t.environment,
                ip_address: t.ipAddress,
                user_agent: t.userAgent
            }
        });
    }
    ;
    class xl {
        constructor() {
            this._notifyingListeners = false;
            this._scopeListeners = [];
            this._eventProcessors = [];
            this._breadcrumbs = [];
            this._attachments = [];
            this._user = {};
            this._tags = {};
            this._extra = {};
            this._contexts = {};
            this._sdkProcessingMetadata = {};
            ;
        }
        static clone(e) {
            const n = new xl();
            return e && (n._breadcrumbs = [...e._breadcrumbs], n._tags = { ...e._tags }, n._extra = { ...e._extra }, n._contexts = { ...e._contexts }, n._user = e._user, n._level = e._level, n._span = e._span, n._session = e._session, n._transactionName = e._transactionName, n._fingerprint = e._fingerprint, n._eventProcessors = [...e._eventProcessors], n._requestSession = e._requestSession, n._attachments = [...e._attachments], n._sdkProcessingMetadata = { ...e._sdkProcessingMetadata }), n;
        }
        addScopeListener(e) {
            this._scopeListeners.push(e);
        }
        addEventProcessor(e) {
            return this._eventProcessors.push(e), this;
        }
        setUser(e) {
            return this._user = e || {}, this._session && cg(this._session, { user: e }), this._notifyScopeListeners(), this;
        }
        getUser() {
            return this._user;
        }
        getRequestSession() {
            return this._requestSession;
        }
        setRequestSession(e) {
            return this._requestSession = e, this;
        }
        setTags(e) {
            return this._tags = {
                ...this._tags,
                ...e
            }, this._notifyScopeListeners(), this;
        }
        setTag(e, n) {
            return this._tags = {
                ...this._tags,
                [e]: n
            }, this._notifyScopeListeners(), this;
        }
        setExtras(e) {
            return this._extra = {
                ...this._extra,
                ...e
            }, this._notifyScopeListeners(), this;
        }
        setExtra(e, n) {
            return this._extra = {
                ...this._extra,
                [e]: n
            }, this._notifyScopeListeners(), this;
        }
        setFingerprint(e) {
            return this._fingerprint = e, this._notifyScopeListeners(), this;
        }
        setLevel(e) {
            return this._level = e, this._notifyScopeListeners(), this;
        }
        setTransactionName(e) {
            return this._transactionName = e, this._notifyScopeListeners(), this;
        }
        setContext(e, n) {
            return n === null ? delete this._contexts[e] : this._contexts[e] = n, this._notifyScopeListeners(), this;
        }
        setSpan(e) {
            return this._span = e, this._notifyScopeListeners(), this;
        }
        getSpan() {
            return this._span;
        }
        getTransaction() {
            const e = this.getSpan();
            return e && e.transaction;
        }
        setSession(e) {
            return e ? this._session = e : delete this._session, this._notifyScopeListeners(), this;
        }
        getSession() {
            return this._session;
        }
        update(e) {
            if (!e) {
                return this;
            }
            if (typeof e == 'function') {
                const n = e(this);
                return n instanceof xl ? n : this;
            }
            return e instanceof xl ? (this._tags = {
                ...this._tags,
                ...e._tags
            }, this._extra = {
                ...this._extra,
                ...e._extra
            }, this._contexts = {
                ...this._contexts,
                ...e._contexts
            }, e._user && Object.keys(e._user).length && (this._user = e._user), e._level && (this._level = e._level), e._fingerprint && (this._fingerprint = e._fingerprint), e._requestSession && (this._requestSession = e._requestSession)) : og(e) && (e = e, this._tags = {
                ...this._tags,
                ...e.tags
            }, this._extra = {
                ...this._extra,
                ...e.extra
            }, this._contexts = {
                ...this._contexts,
                ...e.contexts
            }, e.user && (this._user = e.user), e.level && (this._level = e.level), e.fingerprint && (this._fingerprint = e.fingerprint), e.requestSession && (this._requestSession = e.requestSession)), this;
        }
        clear() {
            return this._breadcrumbs = [], this._tags = {}, this._extra = {}, this._user = {}, this._contexts = {}, this._level = void 0, this._transactionName = void 0, this._fingerprint = void 0, this._requestSession = void 0, this._span = void 0, this._session = void 0, this._notifyScopeListeners(), this._attachments = [], this;
        }
        addBreadcrumb(e, n) {
            const r = typeof n == 'number' ? n : 100;
            if (r <= 0) {
                return this;
            }
            const s = {
                timestamp: kA(),
                ...e
            };
            return this._breadcrumbs = [
                ...this._breadcrumbs,
                s
            ].slice(-r), this._notifyScopeListeners(), this;
        }
        getLastBreadcrumb() {
            return this._breadcrumbs[this._breadcrumbs.length - 1];
        }
        clearBreadcrumbs() {
            return this._breadcrumbs = [], this._notifyScopeListeners(), this;
        }
        addAttachment(e) {
            return this._attachments.push(e), this;
        }
        getAttachments() {
            return this._attachments;
        }
        clearAttachments() {
            return this._attachments = [], this;
        }
        applyToEvent(e, n = {}) {
            if (this._extra && Object.keys(this._extra).length && (e.extra = {
                    ...this._extra,
                    ...e.extra
                }), this._tags && Object.keys(this._tags).length && (e.tags = {
                    ...this._tags,
                    ...e.tags
                }), this._user && Object.keys(this._user).length && (e.user = {
                    ...this._user,
                    ...e.user
                }), this._contexts && Object.keys(this._contexts).length && (e.contexts = {
                    ...this._contexts,
                    ...e.contexts
                }), this._level && (e.level = this._level), this._transactionName && (e.transaction = this._transactionName), this._span) {
                ;
                const r = this._span.transaction;
                if (r) {
                    ;
                    const s = r.name;
                    s && (e.tags = {
                        transaction: s,
                        ...e.tags
                    });
                }
            }
            return this._applyFingerprint(e), e.breadcrumbs = [
                ...e.breadcrumbs || [],
                ...this._breadcrumbs
            ], e.breadcrumbs = e.breadcrumbs.length > 0 ? e.breadcrumbs : void 0, e.sdkProcessingMetadata = {
                ...e.sdkProcessingMetadata,
                ...this._sdkProcessingMetadata
            }, this._notifyEventProcessors([
                ...xA(),
                ...this._eventProcessors
            ], e, n);
        }
        setSDKProcessingMetadata(e) {
            return this._sdkProcessingMetadata = {
                ...this._sdkProcessingMetadata,
                ...e
            }, this;
        }
        _notifyEventProcessors(e, n, r, s = 0) {
            return new gi((i, o) => {
                const a = e[s];
                if (n === null || typeof a != 'function') {
                    i(n);
                } else {
                    const l = a({ ...n }, r);
                    (typeof __SENTRY_DEBUG__ > 'u' || __SENTRY_DEBUG__) && a.id && l === null && On.log(`Event processor "${ a.id }" dropped event`);
                    bA(l) ? l.then(u => this._notifyEventProcessors(e, u, r, s + 1).then(i)).then(null, o) : this._notifyEventProcessors(e, l, r, s + 1).then(i).then(null, o);
                    ;
                }
            });
        }
        _notifyScopeListeners() {
            this._notifyingListeners || (this._notifyingListeners = true, this._scopeListeners.forEach(e => {
                e(this);
            }), this._notifyingListeners = false);
        }
        _applyFingerprint(e) {
            ;
            this._fingerprint && (e.fingerprint = e.fingerprint.concat(this._fingerprint));
            e.fingerprint && !e.fingerprint.length && delete e.fingerprint;
            ;
        }
    }
    function xA() {
        return k3('globalEventProcessors', () => []);
    }
    function PA(t) {
        xA().push(t);
    }
    ;
    class MA {
        constructor(e, n = new xl(), r = 4) {
            this._version = r;
            this._stack = [{ scope: n }];
            e && this.bindClient(e);
            ;
        }
        isOlderThan(e) {
            return this._version < e;
        }
        bindClient(e) {
            const n = this.getStackTop();
            ;
            e && e.setupIntegrations && e.setupIntegrations();
            ;
        }
        pushScope() {
            const e = xl.clone(this.getScope());
            return this.getStack().push({
                client: this.getClient(),
                scope: e
            }), e;
        }
        popScope() {
            return this.getStack().length <= 1 ? false : !!this.getStack().pop();
        }
        withScope(e) {
            const n = this.pushScope();
            try {
                e(n);
            } finally {
                this.popScope();
            }
        }
        getClient() {
            return this.getStackTop().client;
        }
        getScope() {
            return this.getStackTop().scope;
        }
        getStack() {
            return this._stack;
        }
        getStackTop() {
            return this._stack[this._stack.length - 1];
        }
        captureException(e, n) {
            const r = this._lastEventId = n && n.event_id ? n.event_id : Nh(), s = new Error('Sentry syntheticException');
            return this._withClient((i, o) => {
                i.captureException(e, {
                    originalException: e,
                    syntheticException: s,
                    ...n,
                    event_id: r
                }, o);
            }), r;
        }
        captureMessage(e, n, r) {
            const s = this._lastEventId = r && r.event_id ? r.event_id : Nh(), i = new Error(e);
            return this._withClient((o, a) => {
                o.captureMessage(e, n, {
                    originalException: e,
                    syntheticException: i,
                    ...r,
                    event_id: s
                }, a);
            }), s;
        }
        captureEvent(e, n) {
            const r = n && n.event_id ? n.event_id : Nh();
            return e.type || (this._lastEventId = r), this._withClient((s, i) => {
                s.captureEvent(e, {
                    ...n,
                    event_id: r
                }, i);
            }), r;
        }
        lastEventId() {
            return this._lastEventId;
        }
        addBreadcrumb(e, n) {
            const {
                scope: r,
                client: s
            } = this.getStackTop();
            if (!s) {
                return;
            }
            const {
                beforeBreadcrumb: i = null,
                maxBreadcrumbs: o = 100
            } = s.getOptions && s.getOptions() || {};
            if (o <= 0) {
                return;
            }
            const l = {
                    timestamp: kA(),
                    ...e
                }, u = i ? TA(() => i(l, n)) : l;
            if (u !== null) {
                s.emit && s.emit('beforeAddBreadcrumb', u, n);
                r.addBreadcrumb(u, o);
            }
        }
        setUser(e) {
            this.getScope().setUser(e);
        }
        setTags(e) {
            this.getScope().setTags(e);
        }
        setExtras(e) {
            this.getScope().setExtras(e);
        }
        setTag(e, n) {
            this.getScope().setTag(e, n);
        }
        setExtra(e, n) {
            this.getScope().setExtra(e, n);
        }
        setContext(e, n) {
            this.getScope().setContext(e, n);
        }
        configureScope(e) {
            const {
                scope: n,
                client: r
            } = this.getStackTop();
            r && e(n);
        }
        run(e) {
            const n = R6(this);
            try {
                e(this);
            } finally {
                R6(n);
            }
        }
        getIntegration(e) {
            const n = this.getClient();
            if (!n) {
                return null;
            }
            try {
                return n.getIntegration(e);
            } catch {
                return (typeof __SENTRY_DEBUG__ > 'u' || __SENTRY_DEBUG__) && On.warn(`Cannot retrieve integration ${ e.id } from the current Hub`), null;
            }
        }
        startTransaction(e, n) {
            const r = this._callExtensionMethod('startTransaction', e, n);
            return (typeof __SENTRY_DEBUG__ > 'u' || __SENTRY_DEBUG__) && !r && console.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':
Sentry.addTracingExtensions();
Sentry.init({...});
`), r;
        }
        traceHeaders() {
            return this._callExtensionMethod('traceHeaders');
        }
        captureSession(e = false) {
            if (e) {
                return this.endSession();
            }
            this._sendSessionUpdate();
        }
        endSession() {
            const n = this.getStackTop().scope, r = n.getSession();
            r && ife(r);
            this._sendSessionUpdate();
            n.setSession();
            ;
        }
        startSession(e) {
            const {
                    scope: n,
                    client: r
                } = this.getStackTop(), {
                    release: s,
                    environment: i = 'production'
                } = r && r.getOptions() || {}, {userAgent: o} = Ys.navigator || {}, a = sfe({
                    release: s,
                    environment: i,
                    user: n.getUser(),
                    ...o && { userAgent: o },
                    ...e
                }), l = n.getSession && n.getSession();
            return l && l.status === 'ok' && cg(l, { status: 'exited' }), this.endSession(), n.setSession(a), a;
        }
        shouldSendDefaultPii() {
            const e = this.getClient(), n = e && e.getOptions();
            return !!(n && n.sendDefaultPii);
        }
        _sendSessionUpdate() {
            const {
                    scope: e,
                    client: n
                } = this.getStackTop(), r = e.getSession();
            r && n && n.captureSession && n.captureSession(r);
        }
        _withClient(e) {
            const {
                scope: n,
                client: r
            } = this.getStackTop();
            r && e(r, n);
        }
        _callExtensionMethod(e, ...n) {
            const s = lg().__SENTRY__;
            if (s && s.extensions && typeof s.extensions[e] == 'function') {
                return s.extensions[e].apply(this, n);
            }
            (typeof __SENTRY_DEBUG__ > 'u' || __SENTRY_DEBUG__) && On.warn(`Extension method ${ e } couldn't be found, doing nothing.`);
        }
    }
    function lg() {
        return Ys.__SENTRY__ = Ys.__SENTRY__ || {
            extensions: {},
            hub: void 0
        }, Ys;
    }
    function R6(t) {
        const e = lg(), n = t2(e);
        return DA(e, t), n;
    }
    function wr() {
        const t = lg();
        if (t.__SENTRY__ && t.__SENTRY__.acs) {
            const e = t.__SENTRY__.acs.getCurrentHub();
            if (e) {
                return e;
            }
        }
        return lfe(t);
    }
    function lfe(t = lg()) {
        return (!ufe(t) || t2(t).isOlderThan(4)) && DA(t, new MA()), t2(t);
    }
    function ufe(t) {
        return !!(t && t.__SENTRY__ && t.__SENTRY__.hub);
    }
    function t2(t) {
        return k3('hub', () => new MA(), t);
    }
    function DA(t, e) {
        if (!t) {
            return false;
        }
        const n = t.__SENTRY__ = t.__SENTRY__ || {};
        return n.hub = e, true;
    }
    function hfe(t, e) {
        return wr().captureException(t, { captureContext: e });
    }
    function ffe(t) {
        wr().withScope(t);
    }
    function dfe(t) {
        const e = t.protocol ? `${ t.protocol }:` : '', n = t.port ? `:${ t.port }` : '';
        return `${ e }//${ t.host }${ n }${ t.path ? `/${ t.path }` : '' }/api/`;
    }
    function pfe(t, e) {
        const n = She(t), r = `${ dfe(n) }embed/error-page/`;
        let s = `dsn=${ bhe(n) }`;
        for (const i in e)
            if (i !== 'dsn') {
                if (i === 'user') {
                    const o = e.user;
                    if (!o) {
                        continue;
                    }
                    o.name && (s += `&name=${ encodeURIComponent(o.name) }`);
                    o.email && (s += `&email=${ encodeURIComponent(o.email) }`);
                    ;
                } else {
                    s += `&${ encodeURIComponent(i) }=${ encodeURIComponent(e[i]) }`;
                }
            }
        return `${ r }?${ s }`;
    }
    let M6;
    class Xh {
        constructor() {
            Xh.prototype.__init.call(this);
        }
        static __initStatic() {
            this.id = 'FunctionToString';
        }
        __init() {
            this.name = Xh.id;
        }
        setupOnce() {
            M6 = Function.prototype.toString;
            try {
                Function.prototype.toString = function (...e) {
                    const n = N3(this) || this;
                    return M6.apply(n, e);
                };
            } catch {
            }
        }
    }
    Xh.__initStatic();
    const mfe = [
        /^Script error\.?$/,
        /^Javascript error: Script error\.? on line 0$/
    ];
    class Pl {
        static __initStatic() {
            this.id = 'InboundFilters';
        }
        __init() {
            this.name = Pl.id;
        }
        constructor(e = {}) {
            this._options = e;
            Pl.prototype.__init.call(this);
            ;
        }
        setupOnce(e, n) {
            const r = s => {
                const i = n();
                if (i) {
                    const o = i.getIntegration(Pl);
                    if (o) {
                        const a = i.getClient(), l = a ? a.getOptions() : {}, u = gfe(o._options, l);
                        return _fe(s, u) ? null : s;
                    }
                }
                return s;
            };
            ;
            e(r);
            ;
        }
    }
    Pl.__initStatic();
    function gfe(t = {}, e = {}) {
        return {
            allowUrls: [
                ...t.allowUrls || [],
                ...e.allowUrls || []
            ],
            denyUrls: [
                ...t.denyUrls || [],
                ...e.denyUrls || []
            ],
            ignoreErrors: [
                ...t.ignoreErrors || [],
                ...e.ignoreErrors || [],
                ...mfe
            ],
            ignoreTransactions: [
                ...t.ignoreTransactions || [],
                ...e.ignoreTransactions || []
            ],
            ignoreInternal: t.ignoreInternal !== void 0 ? t.ignoreInternal : true
        };
    }
    function _fe(t, e) {
        return e.ignoreInternal && Sfe(t) ? ((typeof __SENTRY_DEBUG__ > 'u' || __SENTRY_DEBUG__) && On.warn(`Event dropped due to being internal Sentry Error.
Event: ${ Go(t) }`), true) : yfe(t, e.ignoreErrors) ? ((typeof __SENTRY_DEBUG__ > 'u' || __SENTRY_DEBUG__) && On.warn(`Event dropped due to being matched by \`ignoreErrors\` option.
Event: ${ Go(t) }`), true) : vfe(t, e.ignoreTransactions) ? ((typeof __SENTRY_DEBUG__ > 'u' || __SENTRY_DEBUG__) && On.warn(`Event dropped due to being matched by \`ignoreTransactions\` option.
Event: ${ Go(t) }`), true) : bfe(t, e.denyUrls) ? ((typeof __SENTRY_DEBUG__ > 'u' || __SENTRY_DEBUG__) && On.warn(`Event dropped due to being matched by \`denyUrls\` option.
Event: ${ Go(t) }.
Url: ${ y1(t) }`), true) : Efe(t, e.allowUrls) ? false : ((typeof __SENTRY_DEBUG__ > 'u' || __SENTRY_DEBUG__) && On.warn(`Event dropped due to not being matched by \`allowUrls\` option.
Event: ${ Go(t) }.
Url: ${ y1(t) }`), true);
    }
    function yfe(t, e) {
        return t.type || !e || !e.length ? false : Tfe(t).some(n => ag(n, e));
    }
    function vfe(t, e) {
        if (t.type !== 'transaction' || !e || !e.length) {
            return false;
        }
        const n = t.transaction;
        return n ? ag(n, e) : false;
    }
    function bfe(t, e) {
        if (!e || !e.length) {
            return false;
        }
        const n = y1(t);
        return n ? ag(n, e) : false;
    }
    function Efe(t, e) {
        if (!e || !e.length) {
            return true;
        }
        const n = y1(t);
        return n ? ag(n, e) : true;
    }
    function Tfe(t) {
        if (t.message) {
            return [t.message];
        }
        if (t.exception) {
            const {values: e} = t.exception;
            try {
                const {
                    type: n = '',
                    value: r = ''
                } = e && e[e.length - 1] || {};
                return [
                    `${ r }`,
                    `${ n }: ${ r }`
                ];
            } catch {
                return (typeof __SENTRY_DEBUG__ > 'u' || __SENTRY_DEBUG__) && On.error(`Cannot extract message for event ${ Go(t) }`), [];
            }
        }
        return [];
    }
    function Sfe(t) {
        try {
            return t.exception.values[0].type === 'SentryError';
        } catch {
        }
        return false;
    }
    function wfe(t = []) {
        for (let e = t.length - 1; e >= 0; e--) {
            const n = t[e];
            if (n && n.filename !== '<anonymous>' && n.filename !== '[native code]') {
                return n.filename || null;
            }
        }
        return null;
    }
    function y1(t) {
        try {
            let e;
            try {
                e = t.exception.values[0].stacktrace.frames;
            } catch {
            }
            return e ? wfe(e) : null;
        } catch {
            return (typeof __SENTRY_DEBUG__ > 'u' || __SENTRY_DEBUG__) && On.error(`Cannot extract url for event ${ Go(t) }`), null;
        }
    }
    const Yn = Ys;
    let n2 = 0;
    function $A() {
        return n2 > 0;
    }
    function Ofe() {
        n2++;
        setTimeout(() => {
            n2--;
        });
        ;
    }
    function Zl(t, e = {}, n) {
        if (typeof t != 'function') {
            return t;
        }
        try {
            const s = t.__sentry_wrapped__;
            if (s) {
                return s;
            }
            if (N3(t)) {
                return t;
            }
        } catch {
            return t;
        }
        const r = function () {
            const s = Array.prototype.slice.call(arguments);
            try {
                n && typeof n == 'function' && n.apply(this, arguments);
                const i = s.map(o => Zl(o, e));
                return t.apply(this, i);
            } catch (i) {
                throw Ofe(), ffe(o => {
                    o.addEventProcessor(a => (e.mechanism && (Q0(a, void 0, void 0), _1(a, e.mechanism)), a.extra = {
                        ...a.extra,
                        arguments: s
                    }, a));
                    hfe(i);
                    ;
                }), i;
            }
        };
        try {
            for (const s in t)
                Object.prototype.hasOwnProperty.call(t, s) && (r[s] = t[s]);
        } catch {
        }
        wA(r, t);
        SA(t, '__sentry_wrapped__', r);
        ;
        try {
            Object.getOwnPropertyDescriptor(r, 'name').configurable && Object.defineProperty(r, 'name', {
                get() {
                    return t.name;
                }
            });
        } catch {
        }
        return r;
    }
    function LA(t, e) {
        const n = x3(t, e), r = {
                type: e && e.name,
                value: kfe(e)
            };
        return n.length && (r.stacktrace = { frames: n }), r.type === void 0 && r.value === '' && (r.value = 'Unrecoverable error caught'), r;
    }
    function Afe(t, e, n, r) {
        const i = wr().getClient(), o = i && i.getOptions().normalizeDepth, a = {
                exception: {
                    values: [{
                            type: I3(e) ? e.constructor.name : r ? 'UnhandledRejection' : 'Error',
                            value: `Non-Error ${ r ? 'promise rejection' : 'exception' } captured with keys: ${ Ahe(e) }`
                        }]
                },
                extra: { __serialized__: CA(e, o) }
            };
        if (n) {
            const l = x3(t, n);
            l.length && (a.exception.values[0].stacktrace = { frames: l });
        }
        return a;
    }
    function qy(t, e) {
        return { exception: { values: [LA(t, e)] } };
    }
    function x3(t, e) {
        const n = e.stacktrace || e.stack || '', r = Ife(e);
        try {
            return t(n, r);
        } catch {
        }
        return [];
    }
    ;
    function Ife(t) {
        if (t) {
            if (typeof t.framesToPop == 'number') {
                return t.framesToPop;
            }
            if (/Minified React error #\d+;/i.test(t.message)) {
                return 1;
            }
        }
        return 0;
    }
    function kfe(t) {
        const e = t && t.message;
        return e ? e.error && typeof e.error.message == 'string' ? e.error.message : e : 'No error message';
    }
    function FA(t, e, n, r, s) {
        let i;
        if (vA(e) && e.error) {
            return qy(t, e.error);
        }
        if (T6(e) || che(e)) {
            const o = e;
            if ('stack' in e) {
                i = qy(t, e);
            } else {
                const a = o.name || (T6(o) ? 'DOMError' : 'DOMException'), l = o.message ? `${ a }: ${ o.message }` : a;
                i = D6(t, l, n, r);
                Q0(i, l);
                ;
            }
            return 'code' in o && (i.tags = {
                ...i.tags,
                'DOMException.code': `${ o.code }`
            }), i;
        }
        return yA(e) ? qy(t, e) : og(e) || I3(e) ? (i = Afe(t, e, n, s), _1(i, { synthetic: true }), i) : (i = D6(t, e, n, r), Q0(i, `${ e }`, void 0), _1(i, { synthetic: true }), i);
    }
    function D6(t, e, n, r) {
        const s = { message: e };
        if (r && n) {
            const i = x3(t, n);
            i.length && (s.exception = {
                values: [{
                        value: e,
                        stacktrace: { frames: i }
                    }]
            });
        }
        return s;
    }
    ;
    class Qh {
        static __initStatic() {
            this.id = 'Breadcrumbs';
        }
        __init() {
            this.name = Qh.id;
        }
        constructor(e) {
            Qh.prototype.__init.call(this);
            this.options = {
                console: true,
                dom: true,
                fetch: true,
                history: true,
                sentry: true,
                xhr: true,
                ...e
            };
            ;
        }
        setupOnce() {
            this.options.console && oc('console', Pfe);
            this.options.dom && oc('dom', xfe(this.options.dom));
            this.options.xhr && oc('xhr', Rfe);
            this.options.fetch && oc('fetch', Mfe);
            this.options.history && oc('history', Dfe);
            ;
        }
        addSentryBreadcrumb(e) {
            this.options.sentry && wr().addBreadcrumb({
                category: `sentry.${ e.type === 'transaction' ? 'transaction' : 'event' }`,
                event_id: e.event_id,
                level: e.level,
                message: Go(e)
            }, { event: e });
        }
    }
    Qh.__initStatic();
    function xfe(t) {
        function e(n) {
            let r, s = typeof t == 'object' ? t.serializeAttribute : void 0, i = typeof t == 'object' && typeof t.maxStringLength == 'number' ? t.maxStringLength : void 0;
            i && i > 1024 && ((typeof __SENTRY_DEBUG__ > 'u' || __SENTRY_DEBUG__) && On.warn(`\`dom.maxStringLength\` cannot exceed ${ 1024 }, but a value of ${ i } was configured. Sentry will use ${ 1024 } instead.`), i = 1024);
            typeof s == 'string' && (s = [s]);
            ;
            try {
                const o = n.event;
                r = $fe(o) ? Y0(o.target, {
                    keyAttrs: s,
                    maxStringLength: i
                }) : Y0(o, {
                    keyAttrs: s,
                    maxStringLength: i
                });
            } catch {
                r = '<unknown>';
            }
            r.length !== 0 && wr().addBreadcrumb({
                category: `ui.${ n.name }`,
                message: r
            }, {
                event: n.event,
                name: n.name,
                global: n.global
            });
        }
        return e;
    }
    function Pfe(t) {
        for (let n = 0; n < t.args.length; n++) {
            if (t.args[n] === 'ref=Ref<') {
                t.args[n + 1] = 'viewRef';
                break;
            }
        }
        const e = {
            category: 'console',
            data: {
                arguments: t.args,
                logger: 'console'
            },
            level: efe(t.level),
            message: O6(t.args, ' ')
        };
        if (t.level === 'assert') {
            if (t.args[0] === false) {
                ;
                e.data.arguments = t.args.slice(1);
                ;
            } else {
                return;
            }
        }
        wr().addBreadcrumb(e, {
            input: t.args,
            level: t.level
        });
    }
    function Rfe(t) {
        const {
                startTimestamp: e,
                endTimestamp: n
            } = t, r = t.xhr['__sentry_xhr_v2__'];
        if (!e || !n || !r) {
            return;
        }
        const {
                method: s,
                url: i,
                status_code: o,
                body: a
            } = r, l = {
                method: s,
                url: i,
                status_code: o
            }, u = {
                xhr: t.xhr,
                input: a,
                startTimestamp: e,
                endTimestamp: n
            };
        wr().addBreadcrumb({
            category: 'xhr',
            data: l,
            type: 'http'
        }, u);
    }
    function Mfe(t) {
        const {
            startTimestamp: e,
            endTimestamp: n
        } = t;
        if (n && !(t.fetchData.url.match(/sentry_key/) && t.fetchData.method === 'POST')) {
            if (t.error) {
                const r = t.fetchData, s = {
                        data: t.error,
                        input: t.args,
                        startTimestamp: e,
                        endTimestamp: n
                    };
                wr().addBreadcrumb({
                    category: 'fetch',
                    data: r,
                    level: 'error',
                    type: 'http'
                }, s);
            } else {
                const r = {
                        ...t.fetchData,
                        status_code: t.response && t.response.status
                    }, s = {
                        input: t.args,
                        response: t.response,
                        startTimestamp: e,
                        endTimestamp: n
                    };
                wr().addBreadcrumb({
                    category: 'fetch',
                    data: r,
                    type: 'http'
                }, s);
            }
        }
    }
    function Dfe(t) {
        let e = t.from, n = t.to;
        const r = Uy(Yn.location.href);
        let s = Uy(e);
        const i = Uy(n);
        s.path || (s = r);
        r.protocol === i.protocol && r.host === i.host && (n = i.relative);
        r.protocol === s.protocol && r.host === s.host && (e = s.relative);
        wr().addBreadcrumb({
            category: 'navigation',
            data: {
                from: e,
                to: n
            }
        });
        ;
    }
    function $fe(t) {
        return t && !!t.target;
    }
    class ta {
        static __initStatic() {
            this.id = 'GlobalHandlers';
        }
        __init() {
            this.name = ta.id;
        }
        __init2() {
            this._installFunc = {
                onerror: Lfe,
                onunhandledrejection: Ffe
            };
        }
        constructor(e) {
            ta.prototype.__init.call(this);
            ta.prototype.__init2.call(this);
            this._options = {
                onerror: true,
                onunhandledrejection: true,
                ...e
            };
            ;
        }
        setupOnce() {
            Error.stackTraceLimit = 50;
            const e = this._options;
            for (const n in e) {
                const r = this._installFunc[n];
                r && e[n] && (qfe(n), r(), this._installFunc[n] = void 0);
            }
        }
    }
    ta.__initStatic();
    function Lfe() {
        oc('error', t => {
            const [e, n, r] = qA();
            if (!e.getIntegration(ta)) {
                return;
            }
            const {
                msg: s,
                url: i,
                line: o,
                column: a,
                error: l
            } = t;
            if ($A() || l && l.__sentry_own_request__) {
                return;
            }
            const u = l === void 0 && Oc(s) ? Bfe(s, i, o, a) : UA(FA(n, l || s, void 0, r, false), i, o, a);
            ;
            BA(e, l, u, 'onerror');
            ;
        });
    }
    function Ffe() {
        oc('unhandledrejection', t => {
            const [e, n, r] = qA();
            if (!e.getIntegration(ta)) {
                return;
            }
            let s = t;
            try {
                'reason' in t ? s = t.reason : 'detail' in t && 'reason' in t.detail && (s = t.detail.reason);
            } catch {
            }
            if ($A() || s && s.__sentry_own_request__) {
                return true;
            }
            const i = lhe(s) ? Ufe(s) : FA(n, s, void 0, r, true);
            ;
            BA(e, s, i, 'onunhandledrejection');
            ;
        });
    }
    function Ufe(t) {
        return {
            exception: {
                values: [{
                        type: 'UnhandledRejection',
                        value: `Non-Error promise rejection captured with value: ${ String(t) }`
                    }]
            }
        };
    }
    function Bfe(t, e, n, r) {
        ;
        let i = vA(t) ? t.message : t, o = 'Error';
        const a = i.match(/^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i);
        return a && (o = a[1], i = a[2]), UA({
            exception: {
                values: [{
                        type: o,
                        value: i
                    }]
            }
        }, e, n, r);
    }
    function UA(t, e, n, r) {
        const s = t.exception = t.exception || {}, i = s.values = s.values || [], o = i[0] = i[0] || {}, a = o.stacktrace = o.stacktrace || {}, l = a.frames = a.frames || [], u = isNaN(parseInt(r, 10)) ? void 0 : r, f = isNaN(parseInt(n, 10)) ? void 0 : n, d = Oc(e) && e.length > 0 ? e : _he();
        return l.length === 0 && l.push({
            colno: u,
            filename: d,
            function: '?',
            in_app: true,
            lineno: f
        }), t;
    }
    function qfe(t) {
        (typeof __SENTRY_DEBUG__ > 'u' || __SENTRY_DEBUG__) && On.log(`Global Handler attached: ${ t }`);
    }
    function BA(t, e, n, r) {
        _1(n, {
            handled: false,
            type: r
        });
        t.captureEvent(n, { originalException: e });
        ;
    }
    function qA() {
        const t = wr(), e = t.getClient(), n = e && e.getOptions() || {
                stackParser: () => [],
                attachStacktrace: false
            };
        return [
            t,
            n.stackParser,
            n.attachStacktrace
        ];
    }
    const Vfe = [
        'EventTarget',
        'Window',
        'Node',
        'ApplicationCache',
        'AudioTrackList',
        'ChannelMergerNode',
        'CryptoOperation',
        'EventSource',
        'FileReader',
        'HTMLUnknownElement',
        'IDBDatabase',
        'IDBRequest',
        'IDBTransaction',
        'KeyOperation',
        'MediaController',
        'MessagePort',
        'ModalWindow',
        'Notification',
        'SVGElementInstance',
        'Screen',
        'TextTrack',
        'TextTrackCue',
        'TextTrackList',
        'WebSocket',
        'WebSocketWorker',
        'Worker',
        'XMLHttpRequest',
        'XMLHttpRequestEventTarget',
        'XMLHttpRequestUpload'
    ];
    class Jh {
        static __initStatic() {
            this.id = 'TryCatch';
        }
        __init() {
            this.name = Jh.id;
        }
        constructor(e) {
            Jh.prototype.__init.call(this);
            this._options = {
                XMLHttpRequest: true,
                eventTarget: true,
                requestAnimationFrame: true,
                setInterval: true,
                setTimeout: true,
                ...e
            };
            ;
        }
        setupOnce() {
            this._options.setTimeout && Qn(Yn, 'setTimeout', $6);
            this._options.setInterval && Qn(Yn, 'setInterval', $6);
            this._options.requestAnimationFrame && Qn(Yn, 'requestAnimationFrame', Gfe);
            this._options.XMLHttpRequest && 'XMLHttpRequest' in Yn && Qn(XMLHttpRequest.prototype, 'send', jfe);
            ;
            const e = this._options.eventTarget;
            e && (Array.isArray(e) ? e : Vfe).forEach(Wfe);
        }
    }
    Jh.__initStatic();
    function $6(t) {
        return function (...e) {
            const n = e[0];
            return e[0] = Zl(n, {
                mechanism: {
                    data: { function: ha(t) },
                    handled: true,
                    type: 'instrument'
                }
            }), t.apply(this, e);
        };
    }
    function Gfe(t) {
        return function (e) {
            return t.apply(this, [Zl(e, {
                    mechanism: {
                        data: {
                            function: 'requestAnimationFrame',
                            handler: ha(t)
                        },
                        handled: true,
                        type: 'instrument'
                    }
                })]);
        };
    }
    function jfe(t) {
        return function (...e) {
            const n = this;
            return [
                'onload',
                'onerror',
                'onprogress',
                'onreadystatechange'
            ].forEach(s => {
                s in n && typeof n[s] == 'function' && Qn(n, s, function (i) {
                    const o = {
                            mechanism: {
                                data: {
                                    function: s,
                                    handler: ha(i)
                                },
                                handled: true,
                                type: 'instrument'
                            }
                        }, a = N3(i);
                    return a && (o.mechanism.data.handler = ha(a)), Zl(i, o);
                });
            }), t.apply(this, e);
        };
    }
    function Wfe(t) {
        const e = Yn, n = e[t] && e[t].prototype;
        !n || !n.hasOwnProperty || !n.hasOwnProperty('addEventListener') || (Qn(n, 'addEventListener', function (r) {
            return function (s, i, o) {
                try {
                    typeof i.handleEvent == 'function' && (i.handleEvent = Zl(i.handleEvent, {
                        mechanism: {
                            data: {
                                function: 'handleEvent',
                                handler: ha(i),
                                target: t
                            },
                            handled: true,
                            type: 'instrument'
                        }
                    }));
                } catch {
                }
                return r.apply(this, [
                    s,
                    Zl(i, {
                        mechanism: {
                            data: {
                                function: 'addEventListener',
                                handler: ha(i),
                                target: t
                            },
                            handled: true,
                            type: 'instrument'
                        }
                    }),
                    o
                ]);
            };
        }), Qn(n, 'removeEventListener', function (r) {
            return function (s, i, o) {
                const a = i;
                try {
                    const l = a && a.__sentry_wrapped__;
                    l && r.call(this, s, l, o);
                } catch {
                }
                return r.call(this, s, a, o);
            };
        }));
    }
    ;
    class Rl {
        static __initStatic() {
            this.id = 'LinkedErrors';
        }
        __init() {
            this.name = Rl.id;
        }
        constructor(e = {}) {
            Rl.prototype.__init.call(this);
            this._key = e.key || 'cause';
            this._limit = e.limit || 5;
            ;
        }
        setupOnce() {
            const e = wr().getClient();
            e && PA((n, r) => {
                const s = wr().getIntegration(Rl);
                return s ? Yfe(e.getOptions().stackParser, s._key, s._limit, n, r) : n;
            });
        }
    }
    Rl.__initStatic();
    function Yfe(t, e, n, r, s) {
        if (!r.exception || !r.exception.values || !s || !xu(s.originalException, Error)) {
            return r;
        }
        const i = VA(t, n, s.originalException, e);
        return r.exception.values = [
            ...i,
            ...r.exception.values
        ], r;
    }
    function VA(t, e, n, r, s = []) {
        if (!xu(n[r], Error) || s.length + 1 >= e) {
            return s;
        }
        const i = LA(t, n[r]);
        return VA(t, e, n[r], r, [
            i,
            ...s
        ]);
    }
    class Ml {
        constructor() {
            Ml.prototype.__init.call(this);
        }
        static __initStatic() {
            this.id = 'HttpContext';
        }
        __init() {
            this.name = Ml.id;
        }
        setupOnce() {
            PA(e => {
                if (wr().getIntegration(Ml)) {
                    if (!Yn.navigator && !Yn.location && !Yn.document) {
                        return e;
                    }
                    const n = e.request && e.request.url || Yn.location && Yn.location.href, {referrer: r} = Yn.document || {}, {userAgent: s} = Yn.navigator || {}, i = {
                            ...e.request && e.request.headers,
                            ...r && { Referer: r },
                            ...s && { 'User-Agent': s }
                        }, o = {
                            ...e.request,
                            ...n && { url: n },
                            headers: i
                        };
                    return {
                        ...e,
                        request: o
                    };
                }
                return e;
            });
        }
    }
    Ml.__initStatic();
    class Dl {
        constructor() {
            Dl.prototype.__init.call(this);
        }
        static __initStatic() {
            this.id = 'Dedupe';
        }
        __init() {
            this.name = Dl.id;
        }
        setupOnce(e, n) {
            const r = s => {
                if (s.type) {
                    return s;
                }
                const i = n().getIntegration(Dl);
                if (i) {
                    try {
                        if (Kfe(s, i._previousEvent)) {
                            return (typeof __SENTRY_DEBUG__ > 'u' || __SENTRY_DEBUG__) && On.warn('Event dropped due to being a duplicate of previously captured event.'), null;
                        }
                    } catch {
                        return i._previousEvent = s;
                    }
                    return i._previousEvent = s;
                }
                return s;
            };
            ;
            e(r);
            ;
        }
    }
    Dl.__initStatic();
    function Kfe(t, e) {
        return e ? !!(Zfe(t, e) || Xfe(t, e)) : false;
    }
    function Zfe(t, e) {
        const n = t.message, r = e.message;
        return !(!n && !r || n && !r || !n && r || n !== r || !jA(t, e) || !GA(t, e));
    }
    function Xfe(t, e) {
        const n = L6(e), r = L6(t);
        return !(!n || !r || n.type !== r.type || n.value !== r.value || !jA(t, e) || !GA(t, e));
    }
    function GA(t, e) {
        let n = F6(t), r = F6(e);
        if (!n && !r) {
            return true;
        }
        if (n && !r || !n && r || (n = n, r = r, r.length !== n.length)) {
            return false;
        }
        for (let s = 0; s < r.length; s++) {
            const i = r[s], o = n[s];
            if (i.filename !== o.filename || i.lineno !== o.lineno || i.colno !== o.colno || i.function !== o.function) {
                return false;
            }
        }
        return true;
    }
    function jA(t, e) {
        let n = t.fingerprint, r = e.fingerprint;
        if (!n && !r) {
            return true;
        }
        if (n && !r || !n && r) {
            return false;
        }
        n = n;
        r = r;
        ;
        try {
            return n.join('') === r.join('');
        } catch {
            return false;
        }
    }
    function L6(t) {
        return t.exception && t.exception.values && t.exception.values[0];
    }
    function F6(t) {
        const e = t.exception;
        if (e) {
            try {
                return e.values[0].stacktrace.frames;
            } catch {
                return;
            }
        }
    }
    new Pl();
    new Xh();
    new Jh();
    new Qh();
    new ta();
    new Rl();
    new Dl();
    new Ml();
    ;
    function Qfe(t = {}, e = wr()) {
        if (!Yn.document) {
            (typeof __SENTRY_DEBUG__ > 'u' || __SENTRY_DEBUG__) && On.error('Global document not defined in showReportDialog call');
            return;
        }
        const {
                client: n,
                scope: r
            } = e.getStackTop(), s = t.dsn || n && n.getDsn();
        if (!s) {
            (typeof __SENTRY_DEBUG__ > 'u' || __SENTRY_DEBUG__) && On.error('DSN not configured for showReportDialog call');
            return;
        }
        r && (t.user = {
            ...r.getUser(),
            ...t.user
        });
        t.eventId || (t.eventId = e.lastEventId());
        ;
        const i = Yn.document.createElement('script');
        ;
        ;
        t.onLoad && (i.onload = t.onLoad);
        ;
        const o = Yn.document.head || Yn.document.body;
        o ? o.appendChild(i) : (typeof __SENTRY_DEBUG__ > 'u' || __SENTRY_DEBUG__) && On.error('Not injecting report dialog. No injection point found in HTML');
    }
    const Jfe = at({
            setup() {
                return { fatalError: oo(ku.fatal.error) };
            },
            computed: {
                message() {
                    var r, s, i, o;
                    const t = ((s = (r = this.fatalError) == null ? void 0 : r.event) == null ? void 0 : s.event_id) ?? 'Unknown';
                    let e = '';
                    const n = (o = (i = this.fatalError) == null ? void 0 : i.hint) == null ? void 0 : o.originalException;
                    return n ? typeof n == 'string' ? e = n : e = n.message : e = 'An unknown error occured', `Version:
${ window.tv.manifest.loader.version }

Event ID:
${ t }

${ e }`;
                }
            },
            methods: {
                onFeedbackClick() {
                    var t, e;
                    Qfe({ id: ((e = (t = this.fatalError) == null ? void 0 : t.event) == null ? void 0 : e.event_id) ?? 'Unknown' });
                }
            }
        }), jf = t => (Ri('data-v-a7272d53'), t = t(), Mi(), t), nde = jf(() => V('a', {
            class: 'logo',
            href: '/',
            'aria-label': 'Jackbox Games Logo'
        }, null, -1)), sde = jf(() => V('h1', null, 'You have encountered an error', -1)), ide = jf(() => V('p', null, 'Something went wrong! But don\'t worry, you can try a few things to get going.', -1)), ode = jf(() => V('ul', null, [
            V('li', null, 'Refresh the page'),
            V('li', null, 'Turn off adblockers or other browser extensions.'),
            V('li', null, 'Check your connection to the Internet.'),
            V('li', null, 'Make sure you\'re using an up-to-date browser.'),
            V('li', null, 'If that doesn\'t work, let us know.')
        ], -1)), ade = jf(() => V('hr', null, null, -1));
    function lde(t, e, n, r, s, i) {
        return G(), K('div', ede, [V('div', tde, [
                nde,
                V('div', rde, [
                    sde,
                    ide,
                    ode,
                    V('button', { onClick: e[0] || (e[0] = (...o) => t.onFeedbackClick && t.onFeedbackClick(...o)) }, 'Tell us what happened'),
                    ade,
                    V('pre', cde, Nt(t.message), 1)
                ])
            ])]);
    }
    const ude = Je(Jfe, [
            [
                'render',
                lde
            ],
            [
                '__scopeId',
                'data-v-a7272d53'
            ]
        ]), Ep = Tc({ hasCrashed: false }), hde = {
            install: t => {
                if (t.config.globalProperties.$handleEcastError) {
                    return;
                }
                t.provide(ku.fatal.error, Jr(() => Ep));
                const e = (n, r) => {
                    var s, i;
                    if (n instanceof Ch.EcastEntityNotFound || n instanceof Ch.EcastFilterError || n instanceof Ch.EcastRateLimitExceeded || n instanceof Error && ((s = n.message) != null && s.includes('Socket not ready to send')) || n instanceof Error && ((i = n.message) != null && i.includes('No connection available'))) {
                        return console.warn(n);
                    }
                    throw r ? console.error(r, n) : console.error(n), n;
                };
                window.tv.onError = async (n, r) => {
                    if (n.level === 'error' && (Ep.hasCrashed = true, Ep.event = n, Ep.hint = r), t.config.globalProperties.$debugRecorder) {
                        return await t.config.globalProperties.$debugRecorder.sendToEcast();
                    }
                };
                t.component('Fatal', ude);
                t.config.globalProperties.$handleEcastError = e;
                ;
            }
        };
    var fde = mA, dde = gA;
    function pde(t, e) {
        e = fde(e, t);
        for (var n = 0, r = e.length; t != null && n < r;) {
            t = t[dde(e[n++])];
        }
        return n && n == r ? t : void 0;
    }
    var mde = pde, gde = mde;
    function _de(t, e, n) {
        var r = t == null ? void 0 : gde(t, e);
        return r === void 0 ? n : r;
    }
    var yde = _de;
    const vde = vu(yde);
    var bde = Math.floor, Ede = Math.random;
    function Tde(t, e) {
        return t + bde(Ede() * (e - t + 1));
    }
    var Sde = Tde, wde = Sde;
    function Ode(t) {
        var e = t.length;
        return e ? t[wde(0, e - 1)] : void 0;
    }
    var WA = Ode, Ade = dA;
    function Cde(t, e) {
        return Ade(e, function (n) {
            return t[n];
        });
    }
    var Ide = Cde, kde = Ide, Nde = sg;
    function xde(t) {
        return t == null ? [] : kde(t, Nde(t));
    }
    var Pde = xde, Rde = WA, Mde = Pde;
    function Dde(t) {
        return Rde(Mde(t));
    }
    var $de = Dde, Lde = WA, Fde = $de, Ude = Aa;
    function Bde(t) {
        var e = Ude(t) ? Lde : Fde;
        return e(t);
    }
    var qde = Bde;
    const Vde = vu(qde);
    function U6(t, e) {
        const n = t.global.locale, r = t.global.messages[n], s = vde(r, e);
        return Array.isArray(s) || console.warn(`[i18nPlugin] Translation with key ${ e } is not an array`), Vde(s);
    }
    const Gde = {
            install: (t, e) => {
                t.directive('ts', (n, r) => {
                    const s = U6(e.i18n, r.value);
                    ;
                });
                t.config.globalProperties.$ts = function (r) {
                    return U6(e.i18n, r) || '';
                };
                t.config.globalProperties.$t = e.i18n.global.t;
                t.config.globalProperties.$tc = e.i18n.global.tc;
                t.config.globalProperties.$te = e.i18n.global.te;
                t.config.globalProperties.$tm = e.i18n.global.tm;
                ;
            }
        }, jde = at({
            props: {
                image: String,
                text: String,
                subtext: String,
                classes: {
                    type: [
                        Array,
                        String
                    ],
                    default: () => 'jbg'
                },
                dismissText: String
            }
        }), Yde = {
            key: 0,
            class: 'image',
            src: 'https://bundles.jackbox.tv/main/pp10-nopus-opus/assets/928ef0da.png',
            alt: 'Kicked'
        }, Kde = {
            key: 1,
            class: 'image',
            src: 'https://bundles.jackbox.tv/main/pp10-nopus-opus/assets/0bb76a2d.png',
            alt: 'Thank You'
        }, Zde = {
            key: 2,
            class: 'image',
            src: 'https://bundles.jackbox.tv/main/pp10-nopus-opus/assets/ed4469b3.png',
            alt: 'Error'
        };
    function epe(t, e, n, r, s, i) {
        const o = fn('bb');
        return G(), K('div', {
            class: nt([
                'error-model',
                t.classes
            ])
        }, [
            t.image === 'tear' ? (G(), K('img', Yde)) : t.image === 'moon' ? (G(), K('img', Kde)) : (G(), K('img', Zde)),
            qe(V('h3', Xde, null, 512), [[
                    o,
                    t.text
                ]]),
            t.subtext ? qe((G(), K('h3', Qde, null, 512)), [[
                    o,
                    t.subtext
                ]]) : De('', true),
            V('div', Jde, [qe(V('button', { onClick: e[0] || (e[0] = Si(a => t.$emit('resolve'), ['prevent'])) }, null, 512), [[
                        o,
                        t.dismissText
                    ]])])
        ], 2);
    }
    const tpe = Je(jde, [
            [
                'render',
                epe
            ],
            [
                '__scopeId',
                'data-v-39debcb6'
            ]
        ]), npe = at({
            props: {
                text: String,
                subtext: String,
                classes: {
                    type: [
                        Array,
                        String
                    ],
                    default: () => 'jbg'
                },
                options: Array
            },
            emits: ['resolve']
        }), ope = ['onClick'];
    function ape(t, e, n, r, s, i) {
        const o = fn('bb');
        return G(), K('div', {
            class: nt([
                'options-modal',
                t.classes
            ])
        }, [
            qe(V('h3', rpe, null, 512), [[
                    o,
                    t.text
                ]]),
            t.subtext ? qe((G(), K('h3', spe, null, 512)), [[
                    o,
                    t.subtext
                ]]) : De('', true),
            V('div', ipe, [(G(true), K(gt, null, wn(t.options, (a, l) => qe((G(), K('button', {
                    key: l,
                    class: nt(a.classes),
                    onClick: Si(u => t.$emit('resolve', a.value), ['prevent'])
                }, null, 10, ope)), [[
                        o,
                        a.text
                    ]])), 128))])
        ], 2);
    }
    const cpe = Je(npe, [
            [
                'render',
                ape
            ],
            [
                '__scopeId',
                'data-v-adb60058'
            ]
        ]), lpe = at({
            data() {
                return {
                    classes: 'jbg',
                    props: null,
                    resolve: null,
                    content: null
                };
            },
            beforeMount() {
                this.$registerModal(this);
            },
            methods: {
                show(t, e = {}, n = {}) {
                    return this.props = e, this.classes = n.classes || 'jbg', t === 'Error' ? this.content = tpe : t === 'Options' ? this.content = cpe : this.content = t, new Promise(r => {
                        this.resolve = r;
                    });
                },
                onResolve(...t) {
                    this.props = null;
                    this.resolve(...t);
                    ;
                },
                onBackgroundClick() {
                    this.props = null;
                    this.resolve();
                    ;
                }
            }
        });
    function upe(t, e, n, r, s, i) {
        return G(), wt(Ta, { name: 'modal-transition' }, {
            default: go(() => [t.props ? (G(), K('div', {
                    key: 0,
                    class: nt([
                        'modal',
                        t.classes
                    ]),
                    onKeyup: e[0] || (e[0] = pv((...o) => t.onBackgroundClick && t.onBackgroundClick(...o), ['esc'])),
                    onClick: e[1] || (e[1] = Si((...o) => t.onBackgroundClick && t.onBackgroundClick(...o), ['self']))
                }, [t.content ? (G(), wt(Rm(t.content), Dm({
                        key: 0,
                        class: 'content'
                    }, t.props, { onResolve: t.onResolve }), null, 16, ['onResolve'])) : De('', true)], 34)) : De('', true)]),
            _: 1
        });
    }
    const hpe = Je(lpe, [
            [
                'render',
                upe
            ],
            [
                '__scopeId',
                'data-v-dc92e8d3'
            ]
        ]), fpe = {
            install: t => {
                if (t.config.globalProperties.$showModal) {
                    return;
                }
                let e;
                const n = () => {
                        if (!e) {
                            throw new Error('No ModalComponent is registered');
                        }
                        return e.onBackgroundClick();
                    }, r = (i, o, a) => {
                        if (!e) {
                            throw new Error('No ModalComponent is registered');
                        }
                        return e.show(i, o, a);
                    }, s = i => {
                        e = i;
                    };
                t.component('Modal', hpe);
                t.config.globalProperties.$hideModal = n;
                t.config.globalProperties.$showModal = r;
                t.config.globalProperties.$registerModal = s;
                ;
            }
        }, dpe = {
            install: t => {
                const e = new Map();
                t.directive('pointerbox', {
                    mounted(n, r) {
                        const s = new k0(n, {
                            restrictToBox: r.modifiers.restrict,
                            isMultitouch: r.modifiers.multi
                        });
                        e.set(n, s);
                    },
                    unmounted(n) {
                        var r;
                        (r = e.get(n)) == null || r.destroy();
                        e.delete(n);
                        ;
                    }
                });
                t.directive('pointerbox-translate', {
                    mounted(n, r) {
                        n.setAttribute('data-pointerboxtranslateid', r.value.id ?? '');
                        n.setAttribute('data-pointerboxtranslatewidth', r.value.width ?? '');
                        n.setAttribute('data-pointerboxtranslateheight', r.value.height ?? '');
                        ;
                    },
                    unmounted(n) {
                        n.removeAttribute('data-pointerboxtranslateid');
                        n.removeAttribute('data-pointerboxtranslatewidth');
                        n.removeAttribute('data-pointerboxtranslateheight');
                        ;
                    }
                });
                ;
            }
        }, ppe = at({
            setup() {
                return { announcment: oo(ku.textDescriptions.announcement) };
            },
            ecastKeys: { textDescriptions: 'textDescriptions' },
            data() {
                return { lines: [] };
            },
            computed: {
                textDescriptions() {
                    return !this.$ecastValues || !this.$ecastValues.textDescriptions ? null : this.$ecastValues.textDescriptions;
                }
            },
            watch: {
                announcment: function (e) {
                    this.lines.push({
                        id: Math.random(),
                        category: 'announce',
                        text: e
                    });
                },
                'textDescriptions.latestDescriptions': function (e) {
                    !e || !e.length || e.forEach(n => {
                        n.id !== void 0 && this.lines.find(r => r.id === n.id) || this.lines.push(n);
                    });
                }
            }
        });
    function gpe(t, e, n, r, s, i) {
        return G(), K('div', mpe, [(G(true), K(gt, null, wn(t.lines, o => (G(), K('p', { key: o.id }, Nt(o.text), 1))), 128))]);
    }
    const _pe = Je(ppe, [[
                'render',
                gpe
            ]]), B6 = Qr(''), ype = {
            install: t => {
                if (t.config.globalProperties.$announce) {
                    return;
                }
                t.provide(ku.textDescriptions.announcement, Jr(() => B6.value));
                const e = n => {
                    B6.value = n;
                };
                t.component('TextDescriptions', _pe);
                t.config.globalProperties.$announce = e;
                ;
            }
        }, vpe = {
            install: t => {
                let e = '', n = '';
                const r = i => i instanceof Function ? i() : i, s = i => {
                        const o = document.querySelector('meta[name="theme-color"]');
                        o && (document.body && (document.body.style.background = i), o.setAttribute('content', i), n = i);
                    };
                t.config.globalProperties.$setThemeColor = function (o) {
                    this.$options.themeColor = o;
                    s(o);
                    ;
                };
                t.mixin({
                    mounted() {
                        if (!this.$options.themeColor) {
                            return;
                        }
                        const i = r(this.$options.themeColor);
                        s(i);
                        this.$attrs.name === 'game' && (e = i);
                        ;
                    },
                    beforeDestroy() {
                        !this.$options.themeColor || r(this.$options.themeColor) !== n || s(e);
                    }
                });
                ;
            }
        }, bpe = {
            install: t => {
                t.config.globalProperties.$vibrate = (e = [
                    100,
                    100
                ]) => {
                    var n;
                    if (!((n = window.navigator) != null && n.vibrate)) {
                        return false;
                    }
                    try {
                        return window.navigator.vibrate(e), true;
                    } catch {
                        return false;
                    }
                };
            }
        };
    const r2 = typeof window < 'u', Epe = typeof Symbol == 'function' && typeof Symbol.toStringTag == 'symbol', xa = t => Epe ? Symbol(t) : t, Tpe = (t, e, n) => Spe({
            l: t,
            k: e,
            s: n
        }), Spe = t => JSON.stringify(t).replace(/\u2028/g, '\\u2028').replace(/\u2029/g, '\\u2029').replace(/\u0027/g, '\\u0027'), $n = t => typeof t == 'number' && isFinite(t), wpe = t => R3(t) === '[object Date]', fa = t => R3(t) === '[object RegExp]', ug = t => lt(t) && Object.keys(t).length === 0;
    function Ope(t, e) {
        if (typeof console < 'u') {
            console.warn('[intlify] ' + t);
            e && console.warn(e.stack);
        }
    }
    const tr = Object.assign;
    function q6(t) {
        return t.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&apos;');
    }
    const Ape = Object.prototype.hasOwnProperty;
    function P3(t, e) {
        return Ape.call(t, e);
    }
    const Xt = Array.isArray, Sn = t => typeof t == 'function', $e = t => typeof t == 'string', It = t => typeof t == 'boolean', Qt = t => t !== null && typeof t == 'object', HA = Object.prototype.toString, R3 = t => HA.call(t), lt = t => R3(t) === '[object Object]', Cpe = t => t == null ? '' : Xt(t) || lt(t) && t.toString === HA ? JSON.stringify(t, null, 2) : String(t);
    ;
    function hg(t, e, n = {}) {
        const {
                domain: r,
                messages: s,
                args: i
            } = n, o = t, a = new SyntaxError(String(o));
        return a.code = t, e && (a.location = e), a.domain = r, a;
    }
    function Ipe(t) {
        throw t;
    }
    function kpe(t, e, n) {
        return {
            line: t,
            column: e,
            offset: n
        };
    }
    function s2(t, e, n) {
        const r = {
            start: t,
            end: e
        };
        return n != null && (r.source = n), r;
    }
    const br = `
`, xpe = String.fromCharCode(8232), Ppe = String.fromCharCode(8233);
    function Rpe(t) {
        const e = t;
        let n = 0, r = 1, s = 1, i = 0;
        const o = M => e[M] === '\r' && e[M + 1] === br, a = M => e[M] === br, l = M => e[M] === Ppe, u = M => e[M] === xpe, f = M => o(M) || a(M) || l(M) || u(M), d = () => n, p = () => r, _ = () => s, v = () => i, y = M => o(M) || l(M) || u(M) ? br : e[M], g = () => y(n), b = () => y(n + i);
        function A() {
            return i = 0, f(n) && (r++, s = 0), o(n) && n++, n++, s++, e[n];
        }
        function N() {
            return o(n + i) && i++, i++, e[n + i];
        }
        function I() {
            n = 0;
            r = 1;
            s = 1;
            i = 0;
            ;
        }
        function O(M = 0) {
            i = M;
        }
        function x() {
            const M = n + i;
            for (; M !== n;) {
                A();
            }
            i = 0;
        }
        return {
            index: d,
            line: p,
            column: _,
            peekOffset: v,
            charAt: y,
            currentChar: g,
            currentPeek: b,
            next: A,
            peek: N,
            reset: I,
            resetPeek: O,
            skipToPeek: x
        };
    }
    const $o = void 0;
    function Dpe(t, e = {}) {
        const n = e.location !== false, r = Rpe(t), s = () => r.index(), i = () => kpe(r.line(), r.column(), r.index()), o = i(), a = s(), l = {
                currentType: 14,
                offset: a,
                startLoc: o,
                endLoc: o,
                lastType: 14,
                lastOffset: a,
                lastStartLoc: o,
                lastEndLoc: o,
                braceNest: 0,
                inLinked: false,
                text: ''
            }, u = () => l, {onError: f} = e;
        function d(T, S, P, ...B) {
            const te = u();
            if (S.column += P, S.offset += P, f) {
                const le = s2(te.startLoc, S), me = hg(T, le, {
                        domain: 'tokenizer',
                        args: B
                    });
                f(me);
            }
        }
        function p(T, S, P) {
            T.endLoc = i();
            T.currentType = S;
            ;
            const B = { type: S };
            return n && (B.loc = s2(T.startLoc, T.endLoc)), P != null && (B.value = P), B;
        }
        const _ = T => p(T, 14);
        function v(T, S) {
            return T.currentChar() === S ? (T.next(), S) : (d(1, i(), 0, S), '');
        }
        function y(T) {
            let S = '';
            for (; T.currentPeek() === ' ' || T.currentPeek() === br;) {
                S += T.currentPeek();
                T.peek();
                ;
            }
            return S;
        }
        function g(T) {
            const S = y(T);
            return T.skipToPeek(), S;
        }
        function b(T) {
            if (T === $o) {
                return false;
            }
            const S = T.charCodeAt(0);
            return S >= 97 && S <= 122 || S >= 65 && S <= 90 || S === 95;
        }
        function A(T) {
            if (T === $o) {
                return false;
            }
            const S = T.charCodeAt(0);
            return S >= 48 && S <= 57;
        }
        function N(T, S) {
            const {currentType: P} = S;
            if (P !== 2) {
                return false;
            }
            y(T);
            const B = b(T.currentPeek());
            return T.resetPeek(), B;
        }
        function I(T, S) {
            const {currentType: P} = S;
            if (P !== 2) {
                return false;
            }
            y(T);
            const B = T.currentPeek() === '-' ? T.peek() : T.currentPeek(), te = A(B);
            return T.resetPeek(), te;
        }
        function O(T, S) {
            const {currentType: P} = S;
            if (P !== 2) {
                return false;
            }
            y(T);
            const B = T.currentPeek() === '\'';
            return T.resetPeek(), B;
        }
        function x(T, S) {
            const {currentType: P} = S;
            if (P !== 8) {
                return false;
            }
            y(T);
            const B = T.currentPeek() === '.';
            return T.resetPeek(), B;
        }
        function M(T, S) {
            const {currentType: P} = S;
            if (P !== 9) {
                return false;
            }
            y(T);
            const B = b(T.currentPeek());
            return T.resetPeek(), B;
        }
        function L(T, S) {
            const {currentType: P} = S;
            if (!(P === 8 || P === 12)) {
                return false;
            }
            y(T);
            const B = T.currentPeek() === ':';
            return T.resetPeek(), B;
        }
        function U(T, S) {
            const {currentType: P} = S;
            if (P !== 10) {
                return false;
            }
            const B = () => {
                    const le = T.currentPeek();
                    return le === '{' ? b(T.peek()) : le === '@' || le === '%' || le === '|' || le === ':' || le === '.' || le === ' ' || !le ? false : le === br ? (T.peek(), B()) : b(le);
                }, te = B();
            return T.resetPeek(), te;
        }
        function ee(T) {
            y(T);
            const S = T.currentPeek() === '|';
            return T.resetPeek(), S;
        }
        function ae(T) {
            const S = y(T), P = T.currentPeek() === '%' && T.peek() === '{';
            return T.resetPeek(), {
                isModulo: P,
                hasSpace: S.length > 0
            };
        }
        function Z(T, S = true) {
            const P = (te = false, le = '', me = false) => {
                    const ye = T.currentPeek();
                    return ye === '{' ? le === '%' ? false : te : ye === '@' || !ye ? le === '%' ? true : te : ye === '%' ? (T.peek(), P(te, '%', true)) : ye === '|' ? le === '%' || me ? true : !(le === ' ' || le === br) : ye === ' ' ? (T.peek(), P(true, ' ', me)) : ye === br ? (T.peek(), P(true, br, me)) : true;
                }, B = P();
            return S && T.resetPeek(), B;
        }
        function fe(T, S) {
            const P = T.currentChar();
            return P === $o ? $o : S(P) ? (T.next(), P) : null;
        }
        function ge(T) {
            return fe(T, P => {
                const B = P.charCodeAt(0);
                return B >= 97 && B <= 122 || B >= 65 && B <= 90 || B >= 48 && B <= 57 || B === 95 || B === 36;
            });
        }
        function Y(T) {
            return fe(T, P => {
                const B = P.charCodeAt(0);
                return B >= 48 && B <= 57;
            });
        }
        function Q(T) {
            return fe(T, P => {
                const B = P.charCodeAt(0);
                return B >= 48 && B <= 57 || B >= 65 && B <= 70 || B >= 97 && B <= 102;
            });
        }
        function ue(T) {
            let S = '', P = '';
            for (; S = Y(T);) {
                P += S;
            }
            return P;
        }
        function _e(T) {
            g(T);
            const S = T.currentChar();
            return S !== '%' && d(1, i(), 0, S), T.next(), '%';
        }
        function Oe(T) {
            let S = '';
            for (;;) {
                const P = T.currentChar();
                if (P === '{' || P === '}' || P === '@' || P === '|' || !P) {
                    break;
                }
                if (P === '%') {
                    if (Z(T)) {
                        S += P;
                        T.next();
                        ;
                    } else {
                        break;
                    }
                } else {
                    if (P === ' ' || P === br) {
                        if (Z(T)) {
                            S += P;
                            T.next();
                            ;
                        } else {
                            if (ee(T)) {
                                break;
                            }
                            S += P;
                            T.next();
                            ;
                        }
                    } else {
                        S += P;
                        T.next();
                        ;
                    }
                }
            }
            return S;
        }
        function be(T) {
            g(T);
            let S = '', P = '';
            for (; S = ge(T);) {
                P += S;
            }
            return T.currentChar() === $o && d(7, i(), 0), P;
        }
        function Ce(T) {
            g(T);
            let S = '';
            return T.currentChar() === '-' ? (T.next(), S += `-${ ue(T) }`) : S += ue(T), T.currentChar() === $o && d(7, i(), 0), S;
        }
        function Me(T) {
            g(T);
            v(T, '\'');
            ;
            let S = '', P = '';
            const B = le => le !== '\'' && le !== br;
            for (; S = fe(T, B);) {
                S === '\\' ? P += Fe(T) : P += S;
            }
            const te = T.currentChar();
            return te === br || te === $o ? (d(3, i(), 0), te === br && (T.next(), v(T, '\'')), P) : (v(T, '\''), P);
        }
        function Fe(T) {
            const S = T.currentChar();
            switch (S) {
            case '\\':
            case '\'':
                return T.next(), `\\${ S }`;
            case 'u':
                return st(T, S, 4);
            case 'U':
                return st(T, S, 6);
            default:
                return d(4, i(), 0, S), '';
            }
        }
        function st(T, S, P) {
            v(T, S);
            let B = '';
            for (let te = 0; te < P; te++) {
                const le = Q(T);
                if (!le) {
                    d(5, i(), 0, `\\${ S }${ B }${ T.currentChar() }`);
                    break;
                }
                B += le;
            }
            return `\\${ S }${ B }`;
        }
        function Ve(T) {
            g(T);
            let S = '', P = '';
            const B = te => te !== '{' && te !== '}' && te !== ' ' && te !== br;
            for (; S = fe(T, B);) {
                P += S;
            }
            return P;
        }
        function Ke(T) {
            let S = '', P = '';
            for (; S = ge(T);) {
                P += S;
            }
            return P;
        }
        function rt(T) {
            const S = (P = false, B) => {
                const te = T.currentChar();
                return te === '{' || te === '%' || te === '@' || te === '|' || !te || te === ' ' ? B : te === br ? (B += te, T.next(), S(P, B)) : (B += te, T.next(), S(true, B));
            };
            return S(false, '');
        }
        function w(T) {
            g(T);
            const S = v(T, '|');
            return g(T), S;
        }
        function R(T, S) {
            let P = null;
            switch (T.currentChar()) {
            case '{':
                return S.braceNest >= 1 && d(9, i(), 0), T.next(), P = p(S, 2, '{'), g(T), S.braceNest++, P;
            case '}':
                return S.braceNest > 0 && S.currentType === 2 && d(8, i(), 0), T.next(), P = p(S, 3, '}'), S.braceNest--, S.braceNest > 0 && g(T), S.inLinked && S.braceNest === 0 && (S.inLinked = false), P;
            case '@':
                return S.braceNest > 0 && d(7, i(), 0), P = H(T, S) || _(S), S.braceNest = 0, P;
            default:
                let te = true, le = true, me = true;
                if (ee(T)) {
                    return S.braceNest > 0 && d(7, i(), 0), P = p(S, 1, w(T)), S.braceNest = 0, S.inLinked = false, P;
                }
                if (S.braceNest > 0 && (S.currentType === 5 || S.currentType === 6 || S.currentType === 7)) {
                    return d(7, i(), 0), S.braceNest = 0, X(T, S);
                }
                if (te = N(T, S)) {
                    return P = p(S, 5, be(T)), g(T), P;
                }
                if (le = I(T, S)) {
                    return P = p(S, 6, Ce(T)), g(T), P;
                }
                if (me = O(T, S)) {
                    return P = p(S, 7, Me(T)), g(T), P;
                }
                if (!te && !le && !me) {
                    return P = p(S, 13, Ve(T)), d(2, i(), 0, P.value), g(T), P;
                }
                break;
            }
            return P;
        }
        function H(T, S) {
            const {currentType: P} = S;
            let B = null;
            const te = T.currentChar();
            switch ((P === 8 || P === 9 || P === 12 || P === 10) && (te === br || te === ' ') && d(10, i(), 0), te) {
            case '@':
                return T.next(), B = p(S, 8, '@'), S.inLinked = true, B;
            case '.':
                return g(T), T.next(), p(S, 9, '.');
            case ':':
                return g(T), T.next(), p(S, 10, ':');
            default:
                return ee(T) ? (B = p(S, 1, w(T)), S.braceNest = 0, S.inLinked = false, B) : x(T, S) || L(T, S) ? (g(T), H(T, S)) : M(T, S) ? (g(T), p(S, 12, Ke(T))) : U(T, S) ? (g(T), te === '{' ? R(T, S) || B : p(S, 11, rt(T))) : (P === 8 && d(10, i(), 0), S.braceNest = 0, S.inLinked = false, X(T, S));
            }
        }
        function X(T, S) {
            ;
            if (S.braceNest > 0) {
                return R(T, S) || _(S);
            }
            if (S.inLinked) {
                return H(T, S) || _(S);
            }
            switch (T.currentChar()) {
            case '{':
                return R(T, S) || _(S);
            case '}':
                return d(6, i(), 0), T.next(), p(S, 3, '}');
            case '@':
                return H(T, S) || _(S);
            default:
                if (ee(T)) {
                    return P = p(S, 1, w(T)), S.braceNest = 0, S.inLinked = false, P;
                }
                const {
                    isModulo: te,
                    hasSpace: le
                } = ae(T);
                if (te) {
                    return le ? p(S, 0, Oe(T)) : p(S, 4, _e(T));
                }
                if (Z(T)) {
                    return p(S, 0, Oe(T));
                }
                break;
            }
            return P;
        }
        function k() {
            const {
                currentType: T,
                offset: S,
                startLoc: P,
                endLoc: B
            } = l;
            return l.lastType = T, l.lastOffset = S, l.lastStartLoc = P, l.lastEndLoc = B, l.offset = s(), l.startLoc = i(), r.currentChar() === $o ? p(l, 14) : X(r, l);
        }
        return {
            nextToken: k,
            currentOffset: s,
            currentPosition: i,
            context: u
        };
    }
    ;
    function Fpe(t, e, n) {
        switch (t) {
        case '\\\\':
            return '\\';
        case '\\\'':
            return '\'';
        default: {
                const r = parseInt(e || n, 16);
                return r <= 55295 || r >= 57344 ? String.fromCodePoint(r) : '\uFFFD';
            }
        }
    }
    function Upe(t = {}) {
        const e = t.location !== false, {onError: n} = t;
        function r(b, A, N, I, ...O) {
            const x = b.currentPosition();
            if (x.offset += I, x.column += I, n) {
                const M = s2(N, x), L = hg(A, M, {
                        domain: 'parser',
                        args: O
                    });
                n(L);
            }
        }
        function s(b, A, N) {
            const I = {
                type: b,
                start: A,
                end: A
            };
            return e && (I.loc = {
                start: N,
                end: N
            }), I;
        }
        function i(b, A, N, I) {
            b.end = A;
            I && (b.type = I);
            e && b.loc && (b.loc.end = N);
            ;
        }
        function o(b, A) {
            const N = b.context(), I = s(3, N.offset, N.startLoc);
            return I.value = A, i(I, b.currentOffset(), b.currentPosition()), I;
        }
        function a(b, A) {
            const N = b.context(), {
                    lastOffset: I,
                    lastStartLoc: O
                } = N, x = s(5, I, O);
            return x.index = parseInt(A, 10), b.nextToken(), i(x, b.currentOffset(), b.currentPosition()), x;
        }
        function l(b, A) {
            const N = b.context(), {
                    lastOffset: I,
                    lastStartLoc: O
                } = N, x = s(4, I, O);
            return x.key = A, b.nextToken(), i(x, b.currentOffset(), b.currentPosition()), x;
        }
        function u(b, A) {
            const N = b.context(), {
                    lastOffset: I,
                    lastStartLoc: O
                } = N, x = s(9, I, O);
            return x.value = A.replace(/(?:\\\\|\\'|\\u([0-9a-fA-F]{4})|\\U([0-9a-fA-F]{6}))/g, Fpe), b.nextToken(), i(x, b.currentOffset(), b.currentPosition()), x;
        }
        function f(b) {
            const A = b.nextToken(), N = b.context(), {
                    lastOffset: I,
                    lastStartLoc: O
                } = N, x = s(8, I, O);
            return A.type !== 12 ? (r(b, 12, N.lastStartLoc, 0), x.value = '', i(x, I, O), {
                nextConsumeToken: A,
                node: x
            }) : (A.value == null && r(b, 14, N.lastStartLoc, 0, di(A)), x.value = A.value || '', i(x, b.currentOffset(), b.currentPosition()), { node: x });
        }
        function d(b, A) {
            const N = b.context(), I = s(7, N.offset, N.startLoc);
            return I.value = A, i(I, b.currentOffset(), b.currentPosition()), I;
        }
        function p(b) {
            const A = b.context(), N = s(6, A.offset, A.startLoc);
            let I = b.nextToken();
            if (I.type === 9) {
                const O = f(b);
                N.modifier = O.node;
                I = O.nextConsumeToken || b.nextToken();
                ;
            }
            switch (I.type !== 10 && r(b, 14, A.lastStartLoc, 0, di(I)), I = b.nextToken(), I.type === 2 && (I = b.nextToken()), I.type) {
            case 11:
                I.value == null && r(b, 14, A.lastStartLoc, 0, di(I)), N.key = d(b, I.value || '');
                break;
            case 5:
                I.value == null && r(b, 14, A.lastStartLoc, 0, di(I)), N.key = l(b, I.value || '');
                break;
            case 6:
                I.value == null && r(b, 14, A.lastStartLoc, 0, di(I)), N.key = a(b, I.value || '');
                break;
            case 7:
                I.value == null && r(b, 14, A.lastStartLoc, 0, di(I)), N.key = u(b, I.value || '');
                break;
            default:
                r(b, 13, A.lastStartLoc, 0);
                const O = b.context(), x = s(7, O.offset, O.startLoc);
                return x.value = '', i(x, O.offset, O.startLoc), N.key = x, i(N, O.offset, O.startLoc), {
                    nextConsumeToken: I,
                    node: N
                };
            }
            return i(N, b.currentOffset(), b.currentPosition()), { node: N };
        }
        function _(b) {
            const A = b.context(), N = A.currentType === 1 ? b.currentOffset() : A.offset, I = A.currentType === 1 ? A.endLoc : A.startLoc, O = s(2, N, I);
            O.items = [];
            let x = null;
            do {
                const U = x || b.nextToken();
                switch (x = null, U.type) {
                case 0:
                    U.value == null && r(b, 14, A.lastStartLoc, 0, di(U)), O.items.push(o(b, U.value || ''));
                    break;
                case 6:
                    U.value == null && r(b, 14, A.lastStartLoc, 0, di(U)), O.items.push(a(b, U.value || ''));
                    break;
                case 5:
                    U.value == null && r(b, 14, A.lastStartLoc, 0, di(U)), O.items.push(l(b, U.value || ''));
                    break;
                case 7:
                    U.value == null && r(b, 14, A.lastStartLoc, 0, di(U)), O.items.push(u(b, U.value || ''));
                    break;
                case 8:
                    const ee = p(b);
                    O.items.push(ee.node), x = ee.nextConsumeToken || null;
                    break;
                }
            } while (A.currentType !== 14 && A.currentType !== 1);
            const M = A.currentType === 1 ? A.lastOffset : b.currentOffset(), L = A.currentType === 1 ? A.lastEndLoc : b.currentPosition();
            return i(O, M, L), O;
        }
        function v(b, A, N, I) {
            const O = b.context();
            let x = I.items.length === 0;
            const M = s(1, A, N);
            M.cases = [];
            M.cases.push(I);
            ;
            do {
                const L = _(b);
                x || (x = L.items.length === 0);
                M.cases.push(L);
                ;
            } while (O.currentType !== 14);
            return x && r(b, 11, N, 0), i(M, b.currentOffset(), b.currentPosition()), M;
        }
        function y(b) {
            const A = b.context(), {
                    offset: N,
                    startLoc: I
                } = A, O = _(b);
            return A.currentType === 14 ? O : v(b, N, I, O);
        }
        function g(b) {
            const A = Dpe(b, tr({}, t)), N = A.context(), I = s(0, N.offset, N.startLoc);
            return e && I.loc && (I.loc.source = b), I.body = y(A), N.currentType !== 14 && r(A, 14, N.lastStartLoc, 0, b[N.offset] || ''), i(I, A.currentOffset(), A.currentPosition()), I;
        }
        return { parse: g };
    }
    function di(t) {
        if (t.type === 14) {
            return 'EOF';
        }
        const e = (t.value || '').replace(/\r?\n/gu, '\\n');
        return e.length > 10 ? e.slice(0, 9) + '\u2026' : e;
    }
    function Bpe(t, e = {}) {
        const n = {
            ast: t,
            helpers: new Set()
        };
        return {
            context: () => n,
            helper: i => (n.helpers.add(i), i)
        };
    }
    function G6(t, e) {
        for (let n = 0; n < t.length; n++) {
            M3(t[n], e);
        }
    }
    function M3(t, e) {
        switch (t.type) {
        case 1:
            G6(t.cases, e), e.helper('plural');
            break;
        case 2:
            G6(t.items, e);
            break;
        case 6:
            M3(t.key, e), e.helper('linked'), e.helper('type');
            break;
        case 5:
            e.helper('interpolate'), e.helper('list');
            break;
        case 4:
            e.helper('interpolate'), e.helper('named');
            break;
        }
    }
    function qpe(t, e = {}) {
        const n = Bpe(t);
        n.helper('normalize');
        t.body && M3(t.body, n);
        ;
        const r = n.context();
        ;
    }
    function Vpe(t, e) {
        const {
                sourceMap: n,
                filename: r,
                breakLineCode: s,
                needIndent: i
            } = e, o = {
                source: t.loc.source,
                filename: r,
                code: '',
                column: 1,
                line: 1,
                offset: 0,
                map: void 0,
                breakLineCode: s,
                needIndent: i,
                indentLevel: 0
            }, a = () => o;
        function l(y, g) {
            ;
        }
        function u(y, g = true) {
            const b = g ? s : '';
            l(i ? b + '  '.repeat(y) : b);
        }
        function f(y = true) {
            const g = ++o.indentLevel;
            y && u(g);
        }
        function d(y = true) {
            const g = --o.indentLevel;
            y && u(g);
        }
        function p() {
            u(o.indentLevel);
        }
        return {
            context: a,
            push: l,
            indent: f,
            deindent: d,
            newline: p,
            helper: y => `_${ y }`,
            needIndent: () => o.needIndent
        };
    }
    function Gpe(t, e) {
        const {helper: n} = t;
        t.push(`${ n('linked') }(`);
        Xl(t, e.key);
        e.modifier ? (t.push(', '), Xl(t, e.modifier), t.push(', _type')) : t.push(', undefined, _type');
        t.push(')');
        ;
    }
    function jpe(t, e) {
        const {
            helper: n,
            needIndent: r
        } = t;
        t.push(`${ n('normalize') }([`);
        t.indent(r());
        ;
        const s = e.items.length;
        for (let i = 0; i < s && (Xl(t, e.items[i]), i !== s - 1); i++) {
            t.push(', ');
        }
        t.deindent(r());
        t.push('])');
        ;
    }
    function Wpe(t, e) {
        const {
            helper: n,
            needIndent: r
        } = t;
        if (e.cases.length > 1) {
            t.push(`${ n('plural') }([`);
            t.indent(r());
            ;
            const s = e.cases.length;
            for (let i = 0; i < s && (Xl(t, e.cases[i]), i !== s - 1); i++) {
                t.push(', ');
            }
            t.deindent(r());
            t.push('])');
            ;
        }
    }
    function Hpe(t, e) {
        e.body ? Xl(t, e.body) : t.push('null');
    }
    function Xl(t, e) {
        const {helper: n} = t;
        switch (e.type) {
        case 0:
            Hpe(t, e);
            break;
        case 1:
            Wpe(t, e);
            break;
        case 2:
            jpe(t, e);
            break;
        case 6:
            Gpe(t, e);
            break;
        case 8:
            t.push(JSON.stringify(e.value), e);
            break;
        case 7:
            t.push(JSON.stringify(e.value), e);
            break;
        case 5:
            t.push(`${ n('interpolate') }(${ n('list') }(${ e.index }))`, e);
            break;
        case 4:
            t.push(`${ n('interpolate') }(${ n('named') }(${ JSON.stringify(e.key) }))`, e);
            break;
        case 9:
            t.push(JSON.stringify(e.value), e);
            break;
        case 3:
            t.push(JSON.stringify(e.value), e);
            break;
        }
    }
    const zpe = (t, e = {}) => {
        const n = $e(e.mode) ? e.mode : 'normal', r = $e(e.filename) ? e.filename : 'message.intl', s = !!e.sourceMap, i = e.breakLineCode != null ? e.breakLineCode : n === 'arrow' ? ';' : `
`, o = e.needIndent ? e.needIndent : n !== 'arrow', a = t.helpers || [], l = Vpe(t, {
                mode: n,
                filename: r,
                sourceMap: s,
                breakLineCode: i,
                needIndent: o
            });
        l.push(n === 'normal' ? 'function __msg__ (ctx) {' : '(ctx) => {');
        l.indent(o);
        if (a.length > 0) {
            l.push(`const { ${ a.map(d => `${ d }: _${ d }`).join(', ') } } = ctx`);
            l.newline();
        }
        l.push('return ');
        Xl(l, t);
        l.deindent(o);
        l.push('}');
        ;
        const {
            code: u,
            map: f
        } = l.context();
        return {
            ast: t,
            code: u,
            map: f ? f.toJSON() : void 0
        };
    };
    function Ype(t, e = {}) {
        const n = tr({}, e), s = Upe(n).parse(t);
        return qpe(s, n), zpe(s, n);
    }
    const Pa = [];
    Pa[0] = {
        w: [0],
        i: [
            3,
            0
        ],
        '[': [4],
        o: [7]
    };
    Pa[1] = {
        w: [1],
        '.': [2],
        '[': [4],
        o: [7]
    };
    Pa[2] = {
        w: [2],
        i: [
            3,
            0
        ],
        0: [
            3,
            0
        ]
    };
    Pa[3] = {
        i: [
            3,
            0
        ],
        0: [
            3,
            0
        ],
        w: [
            1,
            1
        ],
        '.': [
            2,
            1
        ],
        '[': [
            4,
            1
        ],
        o: [
            7,
            1
        ]
    };
    Pa[4] = {
        '\'': [
            5,
            0
        ],
        '"': [
            6,
            0
        ],
        '[': [
            4,
            2
        ],
        ']': [
            1,
            3
        ],
        o: 8,
        l: [
            4,
            0
        ]
    };
    Pa[5] = {
        '\'': [
            4,
            0
        ],
        o: 8,
        l: [
            5,
            0
        ]
    };
    Pa[6] = {
        '"': [
            4,
            0
        ],
        o: 8,
        l: [
            6,
            0
        ]
    };
    ;
    function Zpe(t) {
        return /^\s?(?:true|false|-?[\d.]+|'[^']*'|"[^"]*")\s?$/.test(t);
    }
    function Xpe(t) {
        const e = t.charCodeAt(0), n = t.charCodeAt(t.length - 1);
        return e === n && (e === 34 || e === 39) ? t.slice(1, -1) : t;
    }
    function Qpe(t) {
        if (t == null) {
            return 'o';
        }
        switch (t.charCodeAt(0)) {
        case 91:
        case 93:
        case 46:
        case 34:
        case 39:
            return t;
        case 95:
        case 36:
        case 45:
            return 'i';
        case 9:
        case 10:
        case 13:
        case 160:
        case 65279:
        case 8232:
        case 8233:
            return 'w';
        }
        return 'i';
    }
    function Jpe(t) {
        const e = t.trim();
        return t.charAt(0) === '0' && isNaN(parseInt(t)) ? false : Zpe(e) ? Xpe(e) : '*' + e;
    }
    function e1e(t) {
        const e = [];
        let n = -1, r = 0, s = 0, i, o, a, l, u, f, d;
        const p = [];
        p[0] = () => {
            o === void 0 ? o = a : o += a;
        };
        p[1] = () => {
            if (o !== void 0) {
                e.push(o);
                o = void 0;
            }
        };
        p[2] = () => {
            p[0]();
            s++;
            ;
        };
        p[3] = () => {
            if (s > 0) {
                s--;
                r = 4;
                p[0]();
                ;
            } else {
                if (s = 0, o === void 0 || (o = Jpe(o), o === false)) {
                    return false;
                }
                p[1]();
            }
        };
        ;
        function _() {
            const v = t[n + 1];
            if (r === 5 && v === '\'' || r === 6 && v === '"') {
                return n++, a = '\\' + v, p[0](), true;
            }
        }
        for (; r !== null;) {
            if (n++, i = t[n], !(i === '\\' && _())) {
                if (l = Qpe(i), d = Pa[r], u = d[l] || d.l || 8, u === 8 || (r = u[0], u[1] !== void 0 && (f = p[u[1]], f && (a = i, f() === false)))) {
                    return;
                }
                if (r === 7) {
                    return e;
                }
            }
        }
    }
    const j6 = new Map();
    function t1e(t, e) {
        return Qt(t) ? t[e] : null;
    }
    function n1e(t, e) {
        if (!Qt(t)) {
            return null;
        }
        let n = j6.get(e);
        if (n || (n = e1e(e), n && j6.set(e, n)), !n) {
            return null;
        }
        const r = n.length;
        let s = t, i = 0;
        for (; i < r;) {
            const o = s[n[i]];
            if (o === void 0) {
                return null;
            }
            s = o;
            i++;
            ;
        }
        return s;
    }
    const r1e = t => t, s1e = t => '', o1e = t => t.length === 0 ? '' : t.join(''), a1e = Cpe;
    function W6(t, e) {
        return t = Math.abs(t), e === 2 ? t ? t > 1 ? 1 : 0 : 1 : t ? Math.min(t, 2) : 0;
    }
    function c1e(t) {
        const e = $n(t.pluralIndex) ? t.pluralIndex : -1;
        return t.named && ($n(t.named.count) || $n(t.named.n)) ? $n(t.named.count) ? t.named.count : $n(t.named.n) ? t.named.n : e : e;
    }
    function l1e(t, e) {
        e.count || (e.count = t);
        e.n || (e.n = t);
        ;
    }
    function u1e(t = {}) {
        const e = t.locale, n = c1e(t), r = Qt(t.pluralRules) && $e(e) && Sn(t.pluralRules[e]) ? t.pluralRules[e] : W6, s = Qt(t.pluralRules) && $e(e) && Sn(t.pluralRules[e]) ? W6 : void 0, i = b => b[r(n, b.length, s)], o = t.list || [], a = b => o[b], l = t.named || {};
        $n(t.pluralIndex) && l1e(n, l);
        const u = b => l[b];
        function f(b) {
            const A = Sn(t.messages) ? t.messages(b) : Qt(t.messages) ? t.messages[b] : false;
            return A || (t.parent ? t.parent.message(b) : s1e);
        }
        const d = b => t.modifiers ? t.modifiers[b] : r1e, p = lt(t.processor) && Sn(t.processor.normalize) ? t.processor.normalize : o1e, _ = lt(t.processor) && Sn(t.processor.interpolate) ? t.processor.interpolate : a1e, v = lt(t.processor) && $e(t.processor.type) ? t.processor.type : 'text', g = {
                list: a,
                named: u,
                plural: i,
                linked: (b, ...A) => {
                    const [N, I] = A;
                    let O = 'text', x = '';
                    A.length === 1 ? Qt(N) ? (x = N.modifier || x, O = N.type || O) : $e(N) && (x = N || x) : A.length === 2 && ($e(N) && (x = N || x), $e(I) && (O = I || O));
                    let M = f(b)(g);
                    return O === 'vnode' && Xt(M) && x && (M = M[0]), x ? d(x)(M, O) : M;
                },
                message: f,
                type: v,
                interpolate: _,
                normalize: p
            };
        return g;
    }
    function h1e(t, e, n) {
        return [...new Set([
                n,
                ...Xt(e) ? e : Qt(e) ? Object.keys(e) : $e(e) ? [e] : [n]
            ])];
    }
    function zA(t, e, n) {
        const r = $e(n) ? n : 'en-US', s = t;
        s.__localeChainCache || (s.__localeChainCache = new Map());
        let i = s.__localeChainCache.get(r);
        if (!i) {
            i = [];
            let o = [n];
            for (; Xt(o);) {
                o = H6(i, o, e);
            }
            const a = Xt(e) || !lt(e) ? e : e.default ? e.default : null;
            o = $e(a) ? [a] : a;
            Xt(o) && H6(i, o, false);
            s.__localeChainCache.set(r, i);
            ;
        }
        return i;
    }
    function H6(t, e, n) {
        let r = true;
        for (let s = 0; s < e.length && It(r); s++) {
            const i = e[s];
            $e(i) && (r = f1e(t, e[s], n));
        }
        return r;
    }
    function f1e(t, e, n) {
        let r;
        const s = e.split('-');
        do {
            const i = s.join('-');
            r = d1e(t, i, n);
            s.splice(-1, 1);
            ;
        } while (s.length && r === true);
        return r;
    }
    function d1e(t, e, n) {
        let r = false;
        if (!t.includes(e) && (r = true, e)) {
            r = e[e.length - 1] !== '!';
            const s = e.replace(/!/g, '');
            t.push(s);
            (Xt(n) || lt(n)) && n[s] && (r = n[s]);
            ;
        }
        return r;
    }
    const fg = -1, Y6 = t => `${ t.charAt(0).toLocaleUpperCase() }${ t.substr(1) }`;
    function m1e() {
        return {
            upper: (t, e) => e === 'text' && $e(t) ? t.toUpperCase() : e === 'vnode' && Qt(t) && '__v_isVNode' in t ? t.children.toUpperCase() : t,
            lower: (t, e) => e === 'text' && $e(t) ? t.toLowerCase() : e === 'vnode' && Qt(t) && '__v_isVNode' in t ? t.children.toLowerCase() : t,
            capitalize: (t, e) => e === 'text' && $e(t) ? Y6(t) : e === 'vnode' && Qt(t) && '__v_isVNode' in t ? Y6(t.children) : t
        };
    }
    let YA;
    function g1e(t) {
        YA = t;
    }
    let KA;
    function _1e(t) {
        KA = t;
    }
    let ZA;
    function y1e(t) {
        ZA = t;
    }
    let K6 = 0;
    function v1e(t = {}) {
        const e = $e(t.version) ? t.version : '9.2.2', n = $e(t.locale) ? t.locale : 'en-US', r = Xt(t.fallbackLocale) || lt(t.fallbackLocale) || $e(t.fallbackLocale) || t.fallbackLocale === false ? t.fallbackLocale : n, s = lt(t.messages) ? t.messages : { [n]: {} }, i = lt(t.datetimeFormats) ? t.datetimeFormats : { [n]: {} }, o = lt(t.numberFormats) ? t.numberFormats : { [n]: {} }, a = tr({}, t.modifiers || {}, m1e()), l = t.pluralRules || {}, u = Sn(t.missing) ? t.missing : null, f = It(t.missingWarn) || fa(t.missingWarn) ? t.missingWarn : true, d = It(t.fallbackWarn) || fa(t.fallbackWarn) ? t.fallbackWarn : true, p = !!t.fallbackFormat, _ = !!t.unresolving, v = Sn(t.postTranslation) ? t.postTranslation : null, y = lt(t.processor) ? t.processor : null, g = It(t.warnHtmlMessage) ? t.warnHtmlMessage : true, b = !!t.escapeParameter, A = Sn(t.messageCompiler) ? t.messageCompiler : YA, N = Sn(t.messageResolver) ? t.messageResolver : KA || t1e, I = Sn(t.localeFallbacker) ? t.localeFallbacker : ZA || h1e, O = Qt(t.fallbackContext) ? t.fallbackContext : void 0, x = Sn(t.onWarn) ? t.onWarn : Ope, M = t, L = Qt(M.__datetimeFormatters) ? M.__datetimeFormatters : new Map(), U = Qt(M.__numberFormatters) ? M.__numberFormatters : new Map(), ee = Qt(M.__meta) ? M.__meta : {};
        K6++;
        const ae = {
            version: e,
            cid: K6,
            locale: n,
            fallbackLocale: r,
            messages: s,
            modifiers: a,
            pluralRules: l,
            missing: u,
            missingWarn: f,
            fallbackWarn: d,
            fallbackFormat: p,
            unresolving: _,
            postTranslation: v,
            processor: y,
            warnHtmlMessage: g,
            escapeParameter: b,
            messageCompiler: A,
            messageResolver: N,
            localeFallbacker: I,
            fallbackContext: O,
            onWarn: x,
            __meta: ee
        };
        return ae.datetimeFormats = i, ae.numberFormats = o, ae.__datetimeFormatters = L, ae.__numberFormatters = U, ae;
    }
    function D3(t, e, n, r, s) {
        const {
            missing: i,
            onWarn: o
        } = t;
        if (i !== null) {
            const a = i(t, n, e, s);
            return $e(a) ? a : e;
        } else {
            return e;
        }
    }
    function oh(t, e, n) {
        const r = t;
        ;
        t.localeFallbacker(t, n, e);
        ;
    }
    const b1e = t => t;
    let Z6 = Object.create(null);
    function E1e(t, e = {}) {
        {
            const r = (e.onCacheKey || b1e)(t), s = Z6[r];
            if (s) {
                return s;
            }
            let i = false;
            const o = e.onError || Ipe;
            ;
            const {code: a} = Ype(t, e), l = new Function(`return ${ a }`)();
            return i ? l : Z6[r] = l;
        }
    }
    let XA = 15;
    const Vy = () => ++XA, ml = {
            INVALID_ARGUMENT: XA,
            INVALID_DATE_ARGUMENT: Vy(),
            INVALID_ISO_DATE_ARGUMENT: Vy(),
            __EXTEND_POINT__: Vy()
        };
    function gl(t) {
        return hg(t, null, void 0);
    }
    const X6 = () => '', _c = t => Sn(t);
    function Q6(t, ...e) {
        const {
                fallbackFormat: n,
                postTranslation: r,
                unresolving: s,
                messageCompiler: i,
                fallbackLocale: o,
                messages: a
            } = t, [l, u] = i2(...e), f = It(u.missingWarn) ? u.missingWarn : t.missingWarn, d = It(u.fallbackWarn) ? u.fallbackWarn : t.fallbackWarn, p = It(u.escapeParameter) ? u.escapeParameter : t.escapeParameter, _ = !!u.resolvedMessage, v = $e(u.default) || It(u.default) ? It(u.default) ? i ? l : () => l : u.default : n ? i ? l : () => l : '', y = n || v !== '', g = $e(u.locale) ? u.locale : t.locale;
        p && T1e(u);
        let [b, A, N] = _ ? [
                l,
                g,
                a[g] || {}
            ] : QA(t, l, g, o, d, f), I = b, O = l;
        if (!_ && !($e(I) || _c(I)) && y && (I = v, O = I), !_ && (!($e(I) || _c(I)) || !$e(A))) {
            return s ? fg : l;
        }
        let x = false;
        const M = () => {
                x = true;
            }, L = _c(I) ? I : JA(t, l, A, I, O, M);
        if (x) {
            return I;
        }
        const U = O1e(t, A, N, u), ee = u1e(U), ae = S1e(t, L, ee);
        return r ? r(ae, l) : ae;
    }
    function T1e(t) {
        Xt(t.list) ? t.list = t.list.map(e => $e(e) ? q6(e) : e) : Qt(t.named) && Object.keys(t.named).forEach(e => {
            $e(t.named[e]) && (t.named[e] = q6(t.named[e]));
        });
    }
    function QA(t, e, n, r, s, i) {
        const {
                messages: o,
                onWarn: a,
                messageResolver: l,
                localeFallbacker: u
            } = t, f = u(t, r, n);
        let d = {
                src: t,
                channelCount: O,
                channelCountMode: O,
                channelInterpretation: O
            }, p, _ = null;
        ;
        for (let y = 0; y < f.length && (p = f[y], d = o[p] || {}, (_ = l(d, e)) === null && (_ = d[e]), !($e(_) || Sn(_))); y++) {
            const g = D3(t, e, p, i, 'translate');
            g !== e && (_ = g);
        }
        return [
            _,
            p,
            d
        ];
    }
    function JA(t, e, n, r, s, i) {
        const {
            messageCompiler: o,
            warnHtmlMessage: a
        } = t;
        if (_c(r)) {
            const u = r;
            return u.locale = u.locale || n, u.key = u.key || e, u;
        }
        if (o == null) {
            const u = () => r;
            return u.locale = n, u.key = e, u;
        }
        const l = o(r, w1e(t, n, s, r, a, i));
        return l.locale = n, l.key = e, l.source = r, l;
    }
    function S1e(t, e, n) {
        return e(n);
    }
    function i2(...t) {
        const [e, n, r] = t, s = {};
        if (!$e(e) && !$n(e) && !_c(e)) {
            throw gl(ml.INVALID_ARGUMENT);
        }
        const i = $n(e) ? String(e) : (_c(e), e);
        return $n(n) ? s.plural = n : $e(n) ? s.default = n : lt(n) && !ug(n) ? s.named = n : Xt(n) && (s.list = n), $n(r) ? s.plural = r : $e(r) ? s.default = r : lt(r) && tr(s, r), [
            i,
            s
        ];
    }
    function w1e(t, e, n, r, s, i) {
        return {
            warnHtmlMessage: s,
            onError: o => {
                throw i && i(o), o;
            },
            onCacheKey: o => Tpe(e, n, o)
        };
    }
    function O1e(t, e, n, r) {
        const {
                modifiers: s,
                pluralRules: i,
                messageResolver: o,
                fallbackLocale: a,
                fallbackWarn: l,
                missingWarn: u,
                fallbackContext: f
            } = t, p = {
                locale: e,
                modifiers: s,
                pluralRules: i,
                messages: _ => {
                    let v = o(n, _);
                    if (v == null && f) {
                        const [, , y] = QA(f, _, e, a, l, u);
                        v = o(y, _);
                    }
                    if ($e(v)) {
                        let y = false;
                        const b = JA(t, _, e, v, _, () => {
                            y = true;
                        });
                        return y ? X6 : b;
                    } else {
                        return _c(v) ? v : X6;
                    }
                }
            };
        return t.processor && (p.processor = t.processor), r.list && (p.list = r.list), r.named && (p.named = r.named), $n(r.plural) && (p.pluralIndex = r.plural), p;
    }
    function J6(t, ...e) {
        const {
                datetimeFormats: n,
                unresolving: r,
                fallbackLocale: s,
                onWarn: i,
                localeFallbacker: o
            } = t, {__datetimeFormatters: a} = t, [l, u, f, d] = o2(...e), p = It(f.missingWarn) ? f.missingWarn : t.missingWarn;
        It(f.fallbackWarn) ? f.fallbackWarn : t.fallbackWarn;
        const _ = !!f.part, v = $e(f.locale) ? f.locale : t.locale, y = o(t, s, v);
        if (!$e(l) || l === '') {
            return new Intl.DateTimeFormat(v, d).format(u);
        }
        let g = {
                allowRecurse: !!e,
                _leaveCb: void 0,
                _leaveCb: () => {
                    b();
                    ;
                    delete f.delayedLeave;
                    ;
                },
                x: O = u ? Math.abs(u === 'y' ? I : N) : ek(N * N + I * I),
                max: M - L,
                min: L,
                v: y = (parseFloat(n.amount) || parseFloat(n.each) * (U > y ? y - 1 : u ? u === 'y' ? y / U : U : Math.max(U, y / U)) || 0) * (s === 'edges' ? -1 : 1),
                b: y < 0 ? i - y : i,
                u: ts(n.amount || n.each) || 0,
                VERSION: '1.8.3',
                iteratee: function (w, R) {
                    return A(w, R, 1e+400);
                },
                each: g.forEach = function (w, R, H) {
                    R = b(R, H);
                    var X, k;
                    if (L(w)) {
                        for (X = 0, k = w.length; X < k; X++) {
                            R(w[X], X, w);
                        }
                    } else {
                        var T = g.keys(w);
                        for (X = 0, k = T.length; X < k; X++) {
                            R(w[T[X]], T[X], w);
                        }
                    }
                    return w;
                },
                map: g.collect = function (w, R, H) {
                    R = A(R, H);
                    for (var X = !L(w) && g.keys(w), k = (X || w).length, T = Array(k), S = 0; S < k; S++) {
                        var P = X ? X[S] : S;
                        T[S] = R(w[P], P, w);
                    }
                    return T;
                },
                reduce: g.foldl = g.inject = U(1),
                reduceRight: g.foldr = U(-1),
                find: g.detect = function (w, R, H) {
                    var X;
                    if (L(w) ? X = g.findIndex(w, R, H) : X = g.findKey(w, R, H), X !== void 0 && X !== -1) {
                        return w[X];
                    }
                },
                filter: g.select = function (w, R, H) {
                    var X = [];
                    return R = A(R, H), g.each(w, function (k, T, S) {
                        R(k, T, S) && X.push(k);
                    }), X;
                },
                reject: function (w, R, H) {
                    return g.filter(w, g.negate(A(R)), H);
                },
                every: g.all = function (w, R, H) {
                    R = A(R, H);
                    for (var X = !L(w) && g.keys(w), k = (X || w).length, T = 0; T < k; T++) {
                        var S = X ? X[T] : T;
                        if (!R(w[S], S, w)) {
                            return false;
                        }
                    }
                    return true;
                },
                some: g.any = function (w, R, H) {
                    R = A(R, H);
                    for (var X = !L(w) && g.keys(w), k = (X || w).length, T = 0; T < k; T++) {
                        var S = X ? X[T] : T;
                        if (R(w[S], S, w)) {
                            return true;
                        }
                    }
                    return false;
                },
                contains: g.includes = g.include = function (w, R, H, X) {
                    return L(w) || (w = g.values(w)), (typeof H != 'number' || X) && (H = 0), g.indexOf(w, R, H) >= 0;
                },
                invoke: function (w, R) {
                    var H = l.call(arguments, 2), X = g.isFunction(R);
                    return g.map(w, function (k) {
                        var T = X ? R : k[R];
                        return T == null ? T : T.apply(k, H);
                    });
                },
                pluck: function (w, R) {
                    return g.map(w, g.property(R));
                },
                where: function (w, R) {
                    return g.filter(w, g.matcher(R));
                },
                findWhere: function (w, R) {
                    return g.find(w, g.matcher(R));
                },
                max: function (w, R, H) {
                    var X = -1e+400, k = -1e+400, T, S;
                    if (R == null && w != null) {
                        w = L(w) ? w : g.values(w);
                        for (var P = 0, B = w.length; P < B; P++) {
                            T = w[P];
                            T > X && (X = T);
                            ;
                        }
                    } else {
                        R = A(R, H);
                        g.each(w, function (te, le, me) {
                            S = R(te, le, me);
                            (S > k || S === -null && X === -null) && (X = te, k = S);
                            ;
                        });
                        ;
                    }
                    return X;
                },
                min: function (w, R, H) {
                    var X = 1e+400, k = 1e+400, T, S;
                    if (R == null && w != null) {
                        w = L(w) ? w : g.values(w);
                        for (var P = 0, B = w.length; P < B; P++) {
                            T = w[P];
                            T < X && (X = T);
                            ;
                        }
                    } else {
                        R = A(R, H);
                        g.each(w, function (te, le, me) {
                            S = R(te, le, me);
                            (S < k || S === null && X === null) && (X = te, k = S);
                            ;
                        });
                        ;
                    }
                    return X;
                },
                shuffle: function (w) {
                    for (var R = L(w) ? w : g.values(w), H = R.length, X = Array(H), k = 0, T; k < H; k++) {
                        T = g.random(0, k);
                        T !== k && (X[k] = X[T]);
                        ;
                        ;
                    }
                    return X;
                },
                sample: function (w, R, H) {
                    return R == null || H ? (L(w) || (w = g.values(w)), w[g.random(w.length - 1)]) : g.shuffle(w).slice(0, Math.max(0, R));
                },
                sortBy: function (w, R, H) {
                    return R = A(R, H), g.pluck(g.map(w, function (X, k, T) {
                        return {
                            value: X,
                            index: k,
                            criteria: R(X, k, T)
                        };
                    }).sort(function (X, k) {
                        var T = X.criteria, S = k.criteria;
                        if (T !== S) {
                            if (T > S || T === void 0) {
                                return 1;
                            }
                            if (T < S || S === void 0) {
                                return -1;
                            }
                        }
                        return X.index - k.index;
                    }), 'value');
                },
                groupBy: ee(function (w, R, H) {
                    g.has(w, H) ? w[H].push(R) : w[H] = [R];
                }),
                indexBy: ee(function (w, R, H) {
                    w[H] = R;
                }),
                countBy: ee(function (w, R, H) {
                    g.has(w, H) ? w[H]++ : w[H] = 1;
                }),
                toArray: function (w) {
                    return w ? g.isArray(w) ? l.call(w) : L(w) ? g.map(w, g.identity) : g.values(w) : [];
                },
                size: function (w) {
                    return w == null ? 0 : L(w) ? w.length : g.keys(w).length;
                },
                partition: function (w, R, H) {
                    R = A(R, H);
                    var X = [], k = [];
                    return g.each(w, function (T, S, P) {
                        (R(T, S, P) ? X : k).push(T);
                    }), [
                        X,
                        k
                    ];
                },
                first: g.head = g.take = function (w, R, H) {
                    if (w != null) {
                        return R == null || H ? w[0] : g.initial(w, w.length - R);
                    }
                },
                initial: function (w, R, H) {
                    return l.call(w, 0, Math.max(0, w.length - (R == null || H ? 1 : R)));
                },
                last: function (w, R, H) {
                    if (w != null) {
                        return R == null || H ? w[w.length - 1] : g.rest(w, Math.max(0, w.length - R));
                    }
                },
                rest: g.tail = g.drop = function (w, R, H) {
                    return l.call(w, R == null || H ? 1 : R);
                },
                compact: function (w) {
                    return g.filter(w, g.identity);
                },
                flatten: function (w, R) {
                    return ae(w, R, false);
                },
                without: function (w) {
                    return g.difference(w, l.call(arguments, 1));
                },
                uniq: g.unique = function (w, R, H, X) {
                    g.isBoolean(R) || (X = H, H = R, R = false);
                    H != null && (H = A(H, X));
                    ;
                    for (var k = [], T = [], S = 0, P = M(w); S < P; S++) {
                        var B = w[S], te = H ? H(B, S, w) : B;
                        R ? ((!S || T !== te) && k.push(B), T = te) : H ? g.contains(T, te) || (T.push(te), k.push(B)) : g.contains(k, B) || k.push(B);
                    }
                    return k;
                },
                union: function () {
                    return g.uniq(ae(arguments, true, true));
                },
                intersection: function (w) {
                    for (var R = [], H = arguments.length, X = 0, k = M(w); X < k; X++) {
                        var T = w[X];
                        if (!g.contains(R, T)) {
                            for (var S = 1; S < H && g.contains(arguments[S], T); S++) {
                                ;
                            }
                            S === H && R.push(T);
                        }
                    }
                    return R;
                },
                difference: function (w) {
                    var R = ae(arguments, true, true, 1);
                    return g.filter(w, function (H) {
                        return !g.contains(R, H);
                    });
                },
                zip: function () {
                    return g.unzip(arguments);
                },
                unzip: function (w) {
                    for (var R = w && g.max(w, M).length || 0, H = Array(R), X = 0; X < R; X++) {
                        ;
                    }
                    return H;
                },
                object: function (w, R) {
                    for (var H = { X: g.pluck(w, X) }, X = 0, k = M(w); X < k; X++) {
                        R ? H[w[X]] = R[X] : H[w[X][0]] = w[X][1];
                    }
                    return H;
                },
                findIndex: Z(1),
                findLastIndex: Z(-1),
                sortedIndex: function (w, R, H, X) {
                    H = A(H, X, 1);
                    for (var k = H(R), T = 0, S = M(w); T < S;) {
                        var P = Math.floor((T + S) / 2);
                        H(w[P]) < k ? T = P + 1 : S = P;
                    }
                    return T;
                },
                indexOf: fe(1, g.findIndex, g.sortedIndex),
                lastIndexOf: fe(-1, g.findLastIndex),
                range: function (w, R, H) {
                    if (R == null) {
                        R = w || 0;
                        w = 0;
                    }
                    H = H || 1;
                    ;
                    for (var X = Math.max(Math.ceil((R - w) / H), 0), k = Array(X), T = 0; T < X; T++, w += H) {
                        ;
                    }
                    return k;
                },
                bind: function (w, R) {
                    if (_ && w.bind === _) {
                        return _.apply(w, l.call(arguments, 1));
                    }
                    if (!g.isFunction(w)) {
                        throw new TypeError('Bind must be called on a function');
                    }
                    var H = l.call(arguments, 2), X = function () {
                            return ge(w, X, R, this, H.concat(l.call(arguments)));
                        };
                    return X;
                },
                partial: function (w) {
                    var R = l.call(arguments, 1), H = function () {
                            for (var X = 0, k = R.length, T = Array(k), S = 0; S < k; S++) {
                                T[S] = R[S] === g ? arguments[X++] : R[S];
                            }
                            for (; X < arguments.length;) {
                                T.push(arguments[X++]);
                            }
                            return ge(w, H, this, this, T);
                        };
                    return H;
                },
                bindAll: function (w) {
                    var R, H = arguments.length, X;
                    if (H <= 1) {
                        throw new Error('bindAll must be passed function names');
                    }
                    for (R = 1; R < H; R++) {
                        X = arguments[R];
                        w[X] = g.bind(w[X], w);
                        ;
                    }
                    return w;
                },
                memoize: function (w, R) {
                    var H = function (X) {
                        var k = H.cache, T = '' + (R ? R.apply(this, arguments) : X);
                        return g.has(k, T) || (k[T] = w.apply(this, arguments)), k[T];
                    };
                    return H.cache = {}, H;
                },
                delay: function (w, R) {
                    var H = l.call(arguments, 2);
                    return setTimeout(function () {
                        return w.apply(null, H);
                    }, R);
                },
                defer: g.partial(g.delay, g, 1),
                throttle: function (w, R, H) {
                    var X, k, T, S = null, P = 0;
                    H || (H = {});
                    var B = function () {
                        P = H.leading === false ? 0 : g.now();
                        S = null;
                        T = w.apply(X, k);
                        S || (X = k = null);
                        ;
                    };
                    return function () {
                        var te = g.now();
                        !P && H.leading === false && (P = te);
                        var le = R - (te - P);
                        return X = this, k = arguments, le <= 0 || le > R ? (S && (clearTimeout(S), S = null), P = te, T = w.apply(X, k), S || (X = k = null)) : !S && H.trailing !== false && (S = setTimeout(B, le)), T;
                    };
                },
                debounce: function (w, R, H) {
                    var X, k, T, S, P, B = function () {
                            var te = g.now() - S;
                            te < R && te >= 0 ? X = setTimeout(B, R - te) : (X = null, H || (P = w.apply(T, k), X || (T = k = null)));
                        };
                    return function () {
                        T = this;
                        k = arguments;
                        S = g.now();
                        ;
                        var te = H && !X;
                        return X || (X = setTimeout(B, R)), te && (P = w.apply(T, k), T = k = null), P;
                    };
                },
                wrap: function (w, R) {
                    return g.partial(R, w);
                },
                negate: function (w) {
                    return function () {
                        return !w.apply(this, arguments);
                    };
                },
                compose: function () {
                    var w = arguments, R = w.length - 1;
                    return function () {
                        for (var H = R, X = w[R].apply(this, arguments); H--;) {
                            X = w[H].call(this, X);
                        }
                        return X;
                    };
                },
                after: function (w, R) {
                    return function () {
                        if (--w < 1) {
                            return R.apply(this, arguments);
                        }
                    };
                },
                before: function (w, R) {
                    var H;
                    return function () {
                        return --w > 0 && (H = R.apply(this, arguments)), w <= 1 && (R = null), H;
                    };
                },
                once: g.partial(g.before, 2),
                keys: function (w) {
                    if (!g.isObject(w)) {
                        return [];
                    }
                    if (p) {
                        return p(w);
                    }
                    var R = [];
                    for (var H in w)
                        g.has(w, H) && R.push(H);
                    return Y && ue(w, R), R;
                },
                allKeys: function (w) {
                    if (!g.isObject(w)) {
                        return [];
                    }
                    var R = [];
                    for (var H in w)
                        R.push(H);
                    return Y && ue(w, R), R;
                },
                values: function (w) {
                    for (var R = g.keys(w), H = R.length, X = Array(H), k = 0; k < H; k++) {
                        ;
                    }
                    return X;
                },
                mapObject: function (w, R, H) {
                    R = A(R, H);
                    for (var X = g.keys(w), k = X.length, T = { S: R(w[S], S, w) }, S, P = 0; P < k; P++) {
                        S = X[P];
                        ;
                        ;
                    }
                    return T;
                },
                pairs: function (w) {
                    for (var R = g.keys(w), H = R.length, X = Array(H), k = 0; k < H; k++) {
                        ;
                    }
                    return X;
                },
                invert: function (w) {
                    for (var R = {}, H = g.keys(w), X = 0, k = H.length; X < k; X++) {
                        R[w[H[X]]] = H[X];
                    }
                    return R;
                },
                functions: g.methods = function (w) {
                    var R = [];
                    for (var H in w)
                        g.isFunction(w[H]) && R.push(H);
                    return R.sort();
                },
                extend: N(g.allKeys),
                extendOwn: g.assign = N(g.keys),
                findKey: function (w, R, H) {
                    R = A(R, H);
                    for (var X = g.keys(w), k, T = 0, S = X.length; T < S; T++) {
                        if (k = X[T], R(w[k], k, w)) {
                            return k;
                        }
                    }
                },
                pick: function (w, R, H) {
                    var X = {
                            T: R[k],
                            k: w[R[k]],
                            k: [
                                R[k],
                                w[R[k]]
                            ],
                            k: R(k)
                        }, k = w, T, S;
                    if (k == null) {
                        return X;
                    }
                    g.isFunction(R) ? (S = g.allKeys(k), T = b(R, H)) : (S = ae(arguments, false, false, 1), T = function (me, ye, de) {
                        return ye in de;
                    }, k = Object(k));
                    for (var P = 0, B = S.length; P < B; P++) {
                        var te = S[P], le = k[te];
                        T(le, te, k) && (X[te] = le);
                    }
                    return X;
                },
                omit: function (w, R, H) {
                    if (g.isFunction(R)) {
                        R = g.negate(R);
                    } else {
                        var X = g.map(ae(arguments, false, false, 1), String);
                        R = function (k, T) {
                            return !g.contains(X, T);
                        };
                    }
                    return g.pick(w, R, H);
                },
                defaults: N(g.allKeys, true),
                create: function (w, R) {
                    var H = I(w);
                    return R && g.extendOwn(H, R), H;
                },
                clone: function (w) {
                    return g.isObject(w) ? g.isArray(w) ? w.slice() : g.extend({}, w) : w;
                },
                tap: function (w, R) {
                    return R(w), w;
                },
                isMatch: function (w, R) {
                    var H = g.keys(R), X = H.length;
                    if (w == null) {
                        return !X;
                    }
                    for (var k = Object(w), T = 0; T < X; T++) {
                        var S = H[T];
                        if (R[S] !== k[S] || !(S in k)) {
                            return false;
                        }
                    }
                    return true;
                },
                isEqual: function (w, R) {
                    return _e(w, R);
                },
                isEmpty: function (w) {
                    return w == null ? true : L(w) && (g.isArray(w) || g.isString(w) || g.isArguments(w)) ? w.length === 0 : g.keys(w).length === 0;
                },
                isElement: function (w) {
                    return !!(w && w.nodeType === 1);
                },
                isArray: d || function (w) {
                    return u.call(w) === '[object Array]';
                },
                isObject: function (w) {
                    var R = typeof w;
                    return R === 'function' || R === 'object' && !!w;
                },
                isFinite: function (w) {
                    return isFinite(w) && !isNaN(parseFloat(w));
                },
                isNaN: function (w) {
                    return g.isNumber(w) && w !== +w;
                },
                isBoolean: function (w) {
                    return w === true || w === false || u.call(w) === '[object Boolean]';
                },
                isNull: function (w) {
                    return w === null;
                },
                isUndefined: function (w) {
                    return w === void 0;
                },
                has: function (w, R) {
                    return w != null && f.call(w, R);
                },
                noConflict: function () {
                    return n._ = r, this;
                },
                identity: function (w) {
                    return w;
                },
                constant: function (w) {
                    return function () {
                        return w;
                    };
                },
                noop: function () {
                },
                property: O,
                propertyOf: function (w) {
                    return w == null ? function () {
                    } : function (R) {
                        return w[R];
                    };
                },
                matcher: g.matches = function (w) {
                    return w = g.extendOwn({}, w), function (R) {
                        return g.isMatch(R, w);
                    };
                },
                times: function (w, R, H) {
                    var X = Array(Math.max(0, w));
                    R = b(R, H, 1);
                    for (var k = 0; k < w; k++) {
                        ;
                    }
                    return X;
                },
                random: function (w, R) {
                    return R == null && (R = w, w = 0), w + Math.floor(Math.random() * (R - w + 1));
                },
                now: Date.now || function () {
                    return new Date().getTime();
                },
                escape: Ce(Oe),
                unescape: Ce(be),
                result: function (w, R, H) {
                    var X = w == null ? void 0 : w[R];
                    return X === void 0 && (X = H), g.isFunction(X) ? X.call(w) : X;
                },
                uniqueId: function (w) {
                    var R = ++Me + '';
                    return w ? w + R : R;
                },
                templateSettings: {
                    evaluate: /<%([\s\S]+?)%>/g,
                    interpolate: /<%=([\s\S]+?)%>/g,
                    escape: /<%-([\s\S]+?)%>/g
                },
                template: function (w, R, H) {
                    !R && H && (R = H);
                    R = g.defaults({}, R, g.templateSettings);
                    ;
                    var X = RegExp([
                            (R.escape || /(.)^/).source,
                            (R.interpolate || /(.)^/).source,
                            (R.evaluate || /(.)^/).source
                        ].join('|') + '|$', 'g'), k = 0, T = '__p+=\'';
                    w.replace(X, function (te, le, me, ye, de) {
                        return T += w.slice(k, de).replace(/\\|'|\r|\n|\u2028|\u2029/g, Ke), k = de + te.length, le ? T += `'+
((__t=(` + le + `))==null?'':_.escape(__t))+
'` : me ? T += `'+
((__t=(` + me + `))==null?'':__t)+
'` : ye && (T += `';
` + ye + `
__p+='`), te;
                    });
                    T += `';
`;
                    R.variable || (T = `with(obj||{}){
` + T + `}
`);
                    T = `var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};
` + T + `return __p;
`;
                    ;
                    try {
                        var S = new Function(R.variable || 'obj', '_', T);
                    } catch (te) {
                        throw te.source = T, te;
                    }
                    var P = function (te) {
                            return S.call(this, te, g);
                        }, B = R.variable || 'obj';
                    return P.source = 'function(' + B + `){
` + T + '}', P;
                },
                chain: function (w) {
                    var R = g(w);
                    return R._chain = true, R;
                },
                mixin: function (w) {
                    g.each(g.functions(w), function (R) {
                        var H = g[R] = w[R];
                        g.prototype[R] = function () {
                            var X = [this._wrapped];
                            return a.apply(X, arguments), rt(this, H.apply(g, X));
                        };
                    });
                }
            }, b, A = null;
        ;
        for (let x = 0; x < y.length && (b = y[x], g = n[b] || {}, A = g[l], !lt(A)); x++) {
            D3(t, l, b, p, 'datetime format');
        }
        if (!lt(A) || !$e(b)) {
            return r ? fg : l;
        }
        let I = `${ b }__${ l }`;
        ug(d) || (I = `${ I }__${ JSON.stringify(d) }`);
        let O = a.get(I);
        return O || (O = new Intl.DateTimeFormat(b, tr({}, A, d)), a.set(I, O)), _ ? O.formatToParts(u) : O.format(u);
    }
    const eC = [
        'localeMatcher',
        'weekday',
        'era',
        'year',
        'month',
        'day',
        'hour',
        'minute',
        'second',
        'timeZoneName',
        'formatMatcher',
        'hour12',
        'timeZone',
        'dateStyle',
        'timeStyle',
        'calendar',
        'dayPeriod',
        'numberingSystem',
        'hourCycle',
        'fractionalSecondDigits'
    ];
    function o2(...t) {
        const [e, n, r, s] = t, i = {};
        let o = {}, a;
        if ($e(e)) {
            const l = e.match(/(\d{4}-\d{2}-\d{2})(T|\s)?(.*)/);
            if (!l) {
                throw gl(ml.INVALID_ISO_DATE_ARGUMENT);
            }
            const u = l[3] ? l[3].trim().startsWith('T') ? `${ l[1].trim() }${ l[3].trim() }` : `${ l[1].trim() }T${ l[3].trim() }` : l[1].trim();
            a = new Date(u);
            try {
                a.toISOString();
            } catch {
                throw gl(ml.INVALID_ISO_DATE_ARGUMENT);
            }
        } else {
            if (wpe(e)) {
                if (isNaN(e.getTime())) {
                    throw gl(ml.INVALID_DATE_ARGUMENT);
                }
                a = e;
            } else {
                if ($n(e)) {
                    a = e;
                } else {
                    throw gl(ml.INVALID_ARGUMENT);
                }
            }
        }
        return $e(n) ? i.key = n : lt(n) && Object.keys(n).forEach(l => {
            eC.includes(l) ? o[l] = n[l] : i[l] = n[l];
        }), $e(r) ? i.locale = r : lt(r) && (o = r), lt(s) && (o = s), [
            i.key || '',
            a,
            i,
            o
        ];
    }
    function ew(t, e, n) {
        const r = t;
        for (const s in n) {
            const i = `${ e }__${ s }`;
            r.__datetimeFormatters.has(i) && r.__datetimeFormatters.delete(i);
        }
    }
    function tw(t, ...e) {
        const {
                numberFormats: n,
                unresolving: r,
                fallbackLocale: s,
                onWarn: i,
                localeFallbacker: o
            } = t, {__numberFormatters: a} = t, [l, u, f, d] = a2(...e), p = It(f.missingWarn) ? f.missingWarn : t.missingWarn;
        It(f.fallbackWarn) ? f.fallbackWarn : t.fallbackWarn;
        const _ = !!f.part, v = $e(f.locale) ? f.locale : t.locale, y = o(t, s, v);
        if (!$e(l) || l === '') {
            return new Intl.NumberFormat(v, d).format(u);
        }
        let g = {}, b, A = null;
        ;
        for (let x = 0; x < y.length && (b = y[x], g = n[b] || {}, A = g[l], !lt(A)); x++) {
            D3(t, l, b, p, 'number format');
        }
        if (!lt(A) || !$e(b)) {
            return r ? fg : l;
        }
        let I = `${ b }__${ l }`;
        ug(d) || (I = `${ I }__${ JSON.stringify(d) }`);
        let O = a.get(I);
        return O || (O = new Intl.NumberFormat(b, tr({}, A, d)), a.set(I, O)), _ ? O.formatToParts(u) : O.format(u);
    }
    const tC = [
        'localeMatcher',
        'style',
        'currency',
        'currencyDisplay',
        'currencySign',
        'useGrouping',
        'minimumIntegerDigits',
        'minimumFractionDigits',
        'maximumFractionDigits',
        'minimumSignificantDigits',
        'maximumSignificantDigits',
        'compactDisplay',
        'notation',
        'signDisplay',
        'unit',
        'unitDisplay',
        'roundingMode',
        'roundingPriority',
        'roundingIncrement',
        'trailingZeroDisplay'
    ];
    function a2(...t) {
        const [e, n, r, s] = t, i = {};
        let o = {};
        if (!$n(e)) {
            throw gl(ml.INVALID_ARGUMENT);
        }
        const a = e;
        return $e(n) ? i.key = n : lt(n) && Object.keys(n).forEach(l => {
            tC.includes(l) ? o[l] = n[l] : i[l] = n[l];
        }), $e(r) ? i.locale = r : lt(r) && (o = r), lt(s) && (o = s), [
            i.key || '',
            a,
            i,
            o
        ];
    }
    function nw(t, e, n) {
        const r = t;
        for (const s in n) {
            const i = `${ e }__${ s }`;
            r.__numberFormatters.has(i) && r.__numberFormatters.delete(i);
        }
    }
    ;
    let nC = 15;
    const Nr = () => ++nC, Nn = {
            UNEXPECTED_RETURN_TYPE: nC,
            INVALID_ARGUMENT: Nr(),
            MUST_BE_CALL_SETUP_TOP: Nr(),
            NOT_INSLALLED: Nr(),
            NOT_AVAILABLE_IN_LEGACY_MODE: Nr(),
            REQUIRED_VALUE: Nr(),
            INVALID_VALUE: Nr(),
            CANNOT_SETUP_VUE_DEVTOOLS_PLUGIN: Nr(),
            NOT_INSLALLED_WITH_PROVIDE: Nr(),
            UNEXPECTED_ERROR: Nr(),
            NOT_COMPATIBLE_LEGACY_VUE_I18N: Nr(),
            BRIDGE_SUPPORT_VUE_2_ONLY: Nr(),
            MUST_DEFINE_I18N_OPTION_IN_ALLOW_COMPOSITION: Nr(),
            NOT_AVAILABLE_COMPOSITION_IN_LEGACY: Nr(),
            __EXTEND_POINT__: Nr()
        };
    function Ln(t, ...e) {
        return hg(t, null, void 0);
    }
    const c2 = xa('__transrateVNode'), l2 = xa('__datetimeParts'), u2 = xa('__numberParts'), rC = xa('__setPluralRules');
    xa('__intlifyMeta');
    const sC = xa('__injectWithOption');
    function h2(t) {
        if (!Qt(t)) {
            return t;
        }
        for (const e in t)
            if (P3(t, e)) {
                if (!e.includes('.')) {
                    Qt(t[e]) && h2(t[e]);
                } else {
                    const n = e.split('.'), r = n.length - 1;
                    let s = t;
                    for (let i = 0; i < r; i++) {
                        n[i] in s || (s[n[i]] = {});
                        s = s[n[i]];
                        ;
                    }
                    s[n[r]] = t[e];
                    delete t[e];
                    Qt(s[n[r]]) && h2(s[n[r]]);
                    ;
                }
            }
        return t;
    }
    function dg(t, e) {
        const {
                messages: n,
                __i18n: r,
                messageResolver: s,
                flatJson: i
            } = e, o = lt(n) ? n : Xt(r) ? {} : { [t]: {} };
        if (Xt(r) && r.forEach(a => {
                if ('locale' in a && 'resource' in a) {
                    const {
                        locale: l,
                        resource: u
                    } = a;
                    l ? (o[l] = o[l] || {}, xh(u, o[l])) : xh(u, o);
                } else {
                    $e(a) && xh(JSON.parse(a), o);
                }
            }), s == null && i) {
            for (const a in o)
                P3(o, a) && h2(o[a]);
        }
        return o;
    }
    const Tp = t => !Qt(t) || Xt(t);
    function xh(t, e) {
        if (Tp(t) || Tp(e)) {
            throw Ln(Nn.INVALID_VALUE);
        }
        for (const n in t)
            P3(t, n) && (Tp(t[n]) || Tp(e[n]) ? e[n] = t[n] : xh(t[n], e[n]));
    }
    function C1e(t) {
        return t.type;
    }
    function iC(t, e, n) {
        let r = Qt(e.messages) ? e.messages : {};
        '__i18nGlobal' in n && (r = dg(t.locale.value, {
            messages: r,
            __i18n: n.__i18nGlobal
        }));
        const s = Object.keys(r);
        s.length && s.forEach(i => {
            t.mergeLocaleMessage(i, r[i]);
        });
        {
            if (Qt(e.datetimeFormats)) {
                const i = Object.keys(e.datetimeFormats);
                i.length && i.forEach(o => {
                    t.mergeDateTimeFormat(o, e.datetimeFormats[o]);
                });
            }
            if (Qt(e.numberFormats)) {
                const i = Object.keys(e.numberFormats);
                i.length && i.forEach(o => {
                    t.mergeNumberFormat(o, e.numberFormats[o]);
                });
            }
        }
    }
    function rw(t) {
        return Ye(xf, null, t, 0);
    }
    let sw = 0;
    function iw(t) {
        return (e, n, r, s) => t(n, r, Hh() || void 0, s);
    }
    function $3(t = {}, e) {
        const {__root: n} = t, r = n === void 0;
        let s = It(t.inheritLocale) ? t.inheritLocale : true;
        const i = Qr(n && s ? n.locale.value : $e(t.locale) ? t.locale : 'en-US'), o = Qr(n && s ? n.fallbackLocale.value : $e(t.fallbackLocale) || Xt(t.fallbackLocale) || lt(t.fallbackLocale) || t.fallbackLocale === false ? t.fallbackLocale : i.value), a = Qr(dg(i.value, t)), l = Qr(lt(t.datetimeFormats) ? t.datetimeFormats : { [i.value]: {} }), u = Qr(lt(t.numberFormats) ? t.numberFormats : { [i.value]: {} });
        let f = n ? n.missingWarn : It(t.missingWarn) || fa(t.missingWarn) ? t.missingWarn : true, d = n ? n.fallbackWarn : It(t.fallbackWarn) || fa(t.fallbackWarn) ? t.fallbackWarn : true, p = n ? n.fallbackRoot : It(t.fallbackRoot) ? t.fallbackRoot : true, _ = !!t.fallbackFormat, v = Sn(t.missing) ? t.missing : null, y = Sn(t.missing) ? iw(t.missing) : null, g = Sn(t.postTranslation) ? t.postTranslation : null, b = n ? n.warnHtmlMessage : It(t.warnHtmlMessage) ? t.warnHtmlMessage : true, A = !!t.escapeParameter;
        const N = n ? n.modifiers : lt(t.modifiers) ? t.modifiers : {};
        let I = t.pluralRules || n && n.pluralRules, O;
        O = ((() => {
            const oe = {
                version: '9.2.2',
                locale: i.value,
                fallbackLocale: o.value,
                messages: a.value,
                modifiers: N,
                pluralRules: I,
                missing: y === null ? void 0 : y,
                missingWarn: f,
                fallbackWarn: d,
                fallbackFormat: _,
                unresolving: true,
                postTranslation: g === null ? void 0 : g,
                warnHtmlMessage: b,
                escapeParameter: A,
                messageResolver: t.messageResolver,
                __meta: { framework: 'vue' }
            };
            return oe.datetimeFormats = l.value, oe.numberFormats = u.value, oe.__datetimeFormatters = lt(O) ? O.__datetimeFormatters : void 0, oe.__numberFormatters = lt(O) ? O.__numberFormatters : void 0, v1e(oe);
        })());
        oh(O, i.value, o.value);
        ;
        function M() {
            return [
                i.value,
                o.value,
                a.value,
                l.value,
                u.value
            ];
        }
        const L = Jr({
                get: () => i.value,
                set: oe => {
                    ;
                    O.locale = i.value;
                    ;
                }
            }), U = Jr({
                get: () => o.value,
                set: oe => {
                    ;
                    O.fallbackLocale = o.value;
                    oh(O, i.value, oe);
                    ;
                }
            }), ee = Jr(() => a.value), ae = Jr(() => l.value), Z = Jr(() => u.value);
        function fe() {
            return Sn(g) ? g : null;
        }
        function ge(oe) {
            g = oe;
            O.postTranslation = oe;
            ;
        }
        function Y() {
            return v;
        }
        function Q(oe) {
            oe !== null && (y = iw(oe));
            v = oe;
            O.missing = y;
            ;
        }
        const ue = (oe, he, Re, Le, it, yt) => {
            M();
            let W;
            if (W = oe(O), $n(W) && W === fg) {
                const [q, se] = he();
                return n && p ? Le(n) : it(q);
            } else {
                if (yt(W)) {
                    return W;
                }
                throw Ln(Nn.UNEXPECTED_RETURN_TYPE);
            }
        };
        function _e(...oe) {
            return ue(he => Reflect.apply(Q6, null, [
                he,
                ...oe
            ]), () => i2(...oe), 'translate', he => Reflect.apply(he.t, he, [...oe]), he => he, he => $e(he));
        }
        function Oe(...oe) {
            const [he, Re, Le] = oe;
            if (Le && !Qt(Le)) {
                throw Ln(Nn.INVALID_ARGUMENT);
            }
            return _e(he, Re, tr({ resolvedMessage: true }, Le || {}));
        }
        function be(...oe) {
            return ue(he => Reflect.apply(J6, null, [
                he,
                ...oe
            ]), () => o2(...oe), 'datetime format', he => Reflect.apply(he.d, he, [...oe]), () => '', he => $e(he));
        }
        function Ce(...oe) {
            return ue(he => Reflect.apply(tw, null, [
                he,
                ...oe
            ]), () => a2(...oe), 'number format', he => Reflect.apply(he.n, he, [...oe]), () => '', he => $e(he));
        }
        function Me(oe) {
            return oe.map(he => $e(he) || $n(he) || It(he) ? rw(String(he)) : he);
        }
        const st = {
            normalize: Me,
            interpolate: oe => oe,
            type: 'vnode'
        };
        function Ve(...oe) {
            return ue(he => {
                let Re;
                const Le = he;
                try {
                    Le.processor = st;
                    Re = Reflect.apply(Q6, null, [
                        Le,
                        ...oe
                    ]);
                    ;
                } finally {
                    Le.processor = null;
                }
                return Re;
            }, () => i2(...oe), 'translate', he => he[c2](...oe), he => [rw(he)], he => Xt(he));
        }
        function Ke(...oe) {
            return ue(he => Reflect.apply(tw, null, [
                he,
                ...oe
            ]), () => a2(...oe), 'number format', he => he[u2](...oe), () => [], he => $e(he) || Xt(he));
        }
        function rt(...oe) {
            return ue(he => Reflect.apply(J6, null, [
                he,
                ...oe
            ]), () => o2(...oe), 'datetime format', he => he[l2](...oe), () => [], he => $e(he) || Xt(he));
        }
        function w(oe) {
            I = oe;
            O.pluralRules = I;
            ;
        }
        function R(oe, he) {
            const Re = $e(he) ? he : i.value, Le = k(Re);
            return O.messageResolver(Le, oe) !== null;
        }
        function H(oe) {
            let he = null;
            const Re = zA(O, o.value, i.value);
            for (let Le = 0; Le < Re.length; Le++) {
                const it = a.value[Re[Le]] || {}, yt = O.messageResolver(it, oe);
                if (yt != null) {
                    he = yt;
                    break;
                }
            }
            return he;
        }
        function X(oe) {
            const he = H(oe);
            return he ?? (n ? n.tm(oe) || {} : {});
        }
        function k(oe) {
            return a.value[oe] || {};
        }
        function T(oe, he) {
            a.value[oe] = he;
            O.messages = a.value;
            ;
        }
        function S(oe, he) {
            a.value[oe] = a.value[oe] || {};
            xh(he, a.value[oe]);
            O.messages = a.value;
            ;
        }
        function P(oe) {
            return l.value[oe] || {};
        }
        function B(oe, he) {
            l.value[oe] = he;
            O.datetimeFormats = l.value;
            ew(O, oe, he);
            ;
        }
        function te(oe, he) {
            l.value[oe] = tr(l.value[oe] || {}, he);
            O.datetimeFormats = l.value;
            ew(O, oe, he);
            ;
        }
        function le(oe) {
            return u.value[oe] || {};
        }
        function me(oe, he) {
            u.value[oe] = he;
            O.numberFormats = u.value;
            nw(O, oe, he);
            ;
        }
        function ye(oe, he) {
            u.value[oe] = tr(u.value[oe] || {}, he);
            O.numberFormats = u.value;
            nw(O, oe, he);
            ;
        }
        sw++;
        n && r2 && (pc(n.locale, oe => {
            s && (i.value = oe, O.locale = oe, oh(O, i.value, o.value));
        }), pc(n.fallbackLocale, oe => {
            s && (o.value = oe, O.fallbackLocale = oe, oh(O, i.value, o.value));
        }));
        ;
        const de = {
            id: sw,
            locale: L,
            fallbackLocale: U,
            get inheritLocale() {
                return s;
            },
            set inheritLocale(oe) {
                s = oe;
                oe && n && (i.value = n.locale.value, o.value = n.fallbackLocale.value, oh(O, i.value, o.value));
                ;
            },
            get availableLocales() {
                return Object.keys(a.value).sort();
            },
            messages: ee,
            get modifiers() {
                return N;
            },
            get pluralRules() {
                return I || {};
            },
            get isGlobal() {
                return r;
            },
            get missingWarn() {
                return f;
            },
            set missingWarn(oe) {
                f = oe;
                O.missingWarn = f;
                ;
            },
            get fallbackWarn() {
                return d;
            },
            set fallbackWarn(oe) {
                d = oe;
                O.fallbackWarn = d;
                ;
            },
            get fallbackRoot() {
                return p;
            },
            set fallbackRoot(oe) {
                p = oe;
            },
            get fallbackFormat() {
                return _;
            },
            set fallbackFormat(oe) {
                _ = oe;
                O.fallbackFormat = _;
                ;
            },
            get warnHtmlMessage() {
                return b;
            },
            set warnHtmlMessage(oe) {
                b = oe;
                O.warnHtmlMessage = oe;
                ;
            },
            get escapeParameter() {
                return A;
            },
            set escapeParameter(oe) {
                A = oe;
                O.escapeParameter = oe;
                ;
            },
            t: _e,
            getLocaleMessage: k,
            setLocaleMessage: T,
            mergeLocaleMessage: S,
            getPostTranslationHandler: fe,
            setPostTranslationHandler: ge,
            getMissingHandler: Y,
            setMissingHandler: Q,
            [rC]: w
        };
        return de.datetimeFormats = ae, de.numberFormats = Z, de.rt = Oe, de.te = R, de.tm = X, de.d = be, de.n = Ce, de.getDateTimeFormat = P, de.setDateTimeFormat = B, de.mergeDateTimeFormat = te, de.getNumberFormat = le, de.setNumberFormat = me, de.mergeNumberFormat = ye, de[sC] = t.__injectWithOption, de[c2] = Ve, de[l2] = rt, de[u2] = Ke, de;
    }
    function I1e(t) {
        const e = $e(t.locale) ? t.locale : 'en-US', n = $e(t.fallbackLocale) || Xt(t.fallbackLocale) || lt(t.fallbackLocale) || t.fallbackLocale === false ? t.fallbackLocale : e, r = Sn(t.missing) ? t.missing : void 0, s = It(t.silentTranslationWarn) || fa(t.silentTranslationWarn) ? !t.silentTranslationWarn : true, i = It(t.silentFallbackWarn) || fa(t.silentFallbackWarn) ? !t.silentFallbackWarn : true, o = It(t.fallbackRoot) ? t.fallbackRoot : true, a = !!t.formatFallbackMessages, l = lt(t.modifiers) ? t.modifiers : {}, u = t.pluralizationRules, f = Sn(t.postTranslation) ? t.postTranslation : void 0, d = $e(t.warnHtmlInMessage) ? t.warnHtmlInMessage !== 'off' : true, p = !!t.escapeParameterHtml, _ = It(t.sync) ? t.sync : true;
        let v = t.messages;
        if (lt(t.sharedMessages)) {
            const O = t.sharedMessages;
            v = Object.keys(O).reduce((M, L) => {
                const U = M[L] || (M[L] = {});
                return tr(U, O[L]), M;
            }, v || {});
        }
        const {
                __i18n: y,
                __root: g,
                __injectWithOption: b
            } = t, A = t.datetimeFormats, N = t.numberFormats, I = t.flatJson;
        return {
            locale: e,
            fallbackLocale: n,
            messages: v,
            flatJson: I,
            datetimeFormats: A,
            numberFormats: N,
            missing: r,
            missingWarn: s,
            fallbackWarn: i,
            fallbackRoot: o,
            fallbackFormat: a,
            modifiers: l,
            pluralRules: u,
            postTranslation: f,
            warnHtmlMessage: d,
            escapeParameter: p,
            messageResolver: t.messageResolver,
            inheritLocale: _,
            __i18n: y,
            __root: g,
            __injectWithOption: b
        };
    }
    function f2(t = {}, e) {
        {
            const n = $3(I1e(t)), r = {
                    id: n.id,
                    get locale() {
                        return n.locale.value;
                    },
                    set locale(s) {
                        n.locale.value = s;
                    },
                    get fallbackLocale() {
                        return n.fallbackLocale.value;
                    },
                    set fallbackLocale(s) {
                        n.fallbackLocale.value = s;
                    },
                    get messages() {
                        return n.messages.value;
                    },
                    get datetimeFormats() {
                        return n.datetimeFormats.value;
                    },
                    get numberFormats() {
                        return n.numberFormats.value;
                    },
                    get availableLocales() {
                        return n.availableLocales;
                    },
                    get formatter() {
                        return {
                            interpolate() {
                                return [];
                            }
                        };
                    },
                    set formatter(s) {
                    },
                    get missing() {
                        return n.getMissingHandler();
                    },
                    set missing(s) {
                        n.setMissingHandler(s);
                    },
                    get silentTranslationWarn() {
                        return It(n.missingWarn) ? !n.missingWarn : n.missingWarn;
                    },
                    set silentTranslationWarn(s) {
                        ;
                    },
                    get silentFallbackWarn() {
                        return It(n.fallbackWarn) ? !n.fallbackWarn : n.fallbackWarn;
                    },
                    set silentFallbackWarn(s) {
                        ;
                    },
                    get modifiers() {
                        return n.modifiers;
                    },
                    get formatFallbackMessages() {
                        return n.fallbackFormat;
                    },
                    set formatFallbackMessages(s) {
                        ;
                    },
                    get postTranslation() {
                        return n.getPostTranslationHandler();
                    },
                    set postTranslation(s) {
                        n.setPostTranslationHandler(s);
                    },
                    get sync() {
                        return n.inheritLocale;
                    },
                    set sync(s) {
                        ;
                    },
                    get warnHtmlInMessage() {
                        return n.warnHtmlMessage ? 'warn' : 'off';
                    },
                    set warnHtmlInMessage(s) {
                        ;
                    },
                    get escapeParameterHtml() {
                        return n.escapeParameter;
                    },
                    set escapeParameterHtml(s) {
                        ;
                    },
                    get preserveDirectiveContent() {
                        return true;
                    },
                    set preserveDirectiveContent(s) {
                    },
                    get pluralizationRules() {
                        return n.pluralRules || {};
                    },
                    __composer: n,
                    t(...s) {
                        const [i, o, a] = s, l = {};
                        let u = null, f = null;
                        if (!$e(i)) {
                            throw Ln(Nn.INVALID_ARGUMENT);
                        }
                        const d = i;
                        return $e(o) ? l.locale = o : Xt(o) ? u = o : lt(o) && (f = o), Xt(a) ? u = a : lt(a) && (f = a), Reflect.apply(n.t, n, [
                            d,
                            u || f || {},
                            l
                        ]);
                    },
                    rt(...s) {
                        return Reflect.apply(n.rt, n, [...s]);
                    },
                    tc(...s) {
                        const [i, o, a] = s;
                        let u = null, f = null;
                        if (!$e(i)) {
                            throw Ln(Nn.INVALID_ARGUMENT);
                        }
                        const d = i;
                        return $e(o) ? l.locale = o : $n(o) ? 1 = o : Xt(o) ? u = o : lt(o) && (f = o), $e(a) ? l.locale = a : Xt(a) ? u = a : lt(a) && (f = a), Reflect.apply(n.t, n, [
                            d,
                            u || f || {},
                            l
                        ]);
                    },
                    te(s, i) {
                        return n.te(s, i);
                    },
                    tm(s) {
                        return n.tm(s);
                    },
                    getLocaleMessage(s) {
                        return n.getLocaleMessage(s);
                    },
                    setLocaleMessage(s, i) {
                        n.setLocaleMessage(s, i);
                    },
                    mergeLocaleMessage(s, i) {
                        n.mergeLocaleMessage(s, i);
                    },
                    d(...s) {
                        return Reflect.apply(n.d, n, [...s]);
                    },
                    getDateTimeFormat(s) {
                        return n.getDateTimeFormat(s);
                    },
                    setDateTimeFormat(s, i) {
                        n.setDateTimeFormat(s, i);
                    },
                    mergeDateTimeFormat(s, i) {
                        n.mergeDateTimeFormat(s, i);
                    },
                    n(...s) {
                        return Reflect.apply(n.n, n, [...s]);
                    },
                    getNumberFormat(s) {
                        return n.getNumberFormat(s);
                    },
                    setNumberFormat(s, i) {
                        n.setNumberFormat(s, i);
                    },
                    mergeNumberFormat(s, i) {
                        n.mergeNumberFormat(s, i);
                    },
                    getChoiceIndex(s, i) {
                        return -1;
                    },
                    __onComponentInstanceCreated(s) {
                        const {componentInstanceCreatedListener: i} = t;
                        i && i(s, r);
                    }
                };
            return r;
        }
    }
    const L3 = {
        tag: {
            type: [
                String,
                Object
            ]
        },
        locale: { type: String },
        scope: {
            type: String,
            validator: t => t === 'parent' || t === 'global',
            default: 'parent'
        },
        i18n: { type: Object }
    };
    function k1e({slots: t}, e) {
        return e.length === 1 && e[0] === 'default' ? (t.default ? t.default() : []).reduce((r, s) => r = [
            ...r,
            ...Xt(s.children) ? s.children : [s]
        ], []) : e.reduce((n, r) => {
            const s = t[r];
            return s && (n[r] = s()), n;
        }, {});
    }
    function oC(t) {
        return gt;
    }
    const ow = {
        name: 'i18n-t',
        props: tr({
            keypath: {
                type: String,
                required: true
            },
            plural: {
                type: [
                    Number,
                    String
                ],
                validator: t => $n(t) || !isNaN(t)
            }
        }, L3),
        setup(t, e) {
            const {
                    slots: n,
                    attrs: r
                } = e, s = t.i18n || F3({
                    useScope: t.scope,
                    __useComponent: true
                });
            return () => {
                const i = Object.keys(n).filter(d => d !== '_'), o = {};
                t.locale && (o.locale = t.locale);
                t.plural !== void 0 && (o.plural = $e(t.plural) ? +t.plural : t.plural);
                ;
                const a = k1e(e, i), l = s[c2](t.keypath, a, o), u = tr({}, r), f = $e(t.tag) || Qt(t.tag) ? t.tag : oC();
                return dv(f, u, l);
            };
        }
    };
    function N1e(t) {
        return Xt(t) && !$e(t[0]);
    }
    function aC(t, e, n, r) {
        const {
            slots: s,
            attrs: i
        } = e;
        return () => {
            ;
            let a = {
                s: r[s],
                name: 'MaxListenersExceededWarning',
                emitter: t,
                type: e,
                count: o.length,
                textContent: o.value,
                textContent: o.value,
                value: S,
                buffer: i,
                loop: true,
                onprocessorerror: () => o = true,
                timeline: 0,
                c: l < s.length ? s.substring(l, s.length) : '',
                r: n === 'display' && s === 'none' ? qk : Bk,
                xOrigin: I,
                yOrigin: O,
                smooth: !!s,
                origin: n,
                originIsAbsolute: !!r
            };
            t.locale && (o.locale = t.locale);
            $e(t.format) ? o.key = t.format : Qt(t.format) && ($e(t.format.key) && (o.key = t.format.key), a = Object.keys(t.format).reduce((p, _) => n.includes(_) ? tr({}, p, { [_]: t.format[_] }) : p, {}));
            ;
            const l = r(t.value, o, a);
            let u = [o.key];
            Xt(l) ? u = l.map((p, _) => {
                const v = s[p.type], y = v ? v({
                        [p.type]: p.value,
                        index: _,
                        parts: l
                    }) : [p.value];
                return N1e(y) && (y[0].key = `${ p.type }-${ _ }`), y;
            }) : $e(l) && (u = [l]);
            const f = tr({}, i), d = $e(t.tag) || Qt(t.tag) ? t.tag : oC();
            return dv(d, f, u);
        };
    }
    const aw = {
            name: 'i18n-n',
            props: tr({
                value: {
                    type: Number,
                    required: true
                },
                format: {
                    type: [
                        String,
                        Object
                    ]
                }
            }, L3),
            setup(t, e) {
                const n = t.i18n || F3({
                    useScope: 'parent',
                    __useComponent: true
                });
                return aC(t, e, tC, (...r) => n[u2](...r));
            }
        }, cw = {
            name: 'i18n-d',
            props: tr({
                value: {
                    type: [
                        Number,
                        Date
                    ],
                    required: true
                },
                format: {
                    type: [
                        String,
                        Object
                    ]
                }
            }, L3),
            setup(t, e) {
                const n = t.i18n || F3({
                    useScope: 'parent',
                    __useComponent: true
                });
                return aC(t, e, eC, (...r) => n[l2](...r));
            }
        };
    function x1e(t, e) {
        const n = t;
        if (t.mode === 'composition') {
            return n.__getInstance(e) || t.global;
        }
        {
            const r = n.__getInstance(e);
            return r != null ? r.__composer : t.global.__composer;
        }
    }
    function P1e(t) {
        const e = o => {
            const {
                instance: a,
                modifiers: l,
                value: u
            } = o;
            if (!a || !a.$) {
                throw Ln(Nn.UNEXPECTED_ERROR);
            }
            const f = x1e(t, a.$), d = lw(u);
            return [
                Reflect.apply(f.t, f, [...uw(d)]),
                f
            ];
        };
        return {
            created: (o, a) => {
                const [l, u] = e(a);
                r2 && t.global === u && (o.__i18nWatcher = pc(u.locale, () => {
                    a.instance && a.instance.$forceUpdate();
                }));
                ;
                ;
                ;
            },
            unmounted: o => {
                r2 && o.__i18nWatcher && (o.__i18nWatcher(), o.__i18nWatcher = void 0, delete o.__i18nWatcher);
                o.__composer && (o.__composer = void 0, delete o.__composer);
                ;
            },
            beforeUpdate: (o, {value: a}) => {
                if (o.__composer) {
                    const l = o.__composer, u = lw(a);
                    ;
                }
            },
            getSSRProps: o => {
                const [a] = e(o);
                return { textContent: a };
            }
        };
    }
    function lw(t) {
        if ($e(t)) {
            return { path: t };
        }
        if (lt(t)) {
            if (!('path' in t)) {
                throw Ln(Nn.REQUIRED_VALUE, 'path');
            }
            return t;
        } else {
            throw Ln(Nn.INVALID_VALUE);
        }
    }
    function uw(t) {
        const {
                path: e,
                locale: n,
                args: r,
                choice: s,
                plural: i
            } = t, o = {}, a = r || {};
        return $e(n) && (o.locale = n), $n(s) && (o.plural = s), $n(i) && (o.plural = i), [
            e,
            a,
            o
        ];
    }
    function R1e(t, e, ...n) {
        const r = lt(n[0]) ? n[0] : {}, s = !!r.useI18nComponentName;
        (It(r.globalInstall) ? r.globalInstall : true) && (t.component(s ? 'i18n' : ow.name, ow), t.component(aw.name, aw), t.component(cw.name, cw));
        t.directive('t', P1e(e));
        ;
    }
    function M1e(t, e, n) {
        return {
            beforeCreate() {
                const r = Hh();
                if (!r) {
                    throw Ln(Nn.UNEXPECTED_ERROR);
                }
                const s = this.$options;
                if (s.i18n) {
                    const i = s.i18n;
                    s.__i18n && (i.__i18n = s.__i18n);
                    ;
                    this === this.$root ? this.$i18n = hw(t, i) : (i.__injectWithOption = true, this.$i18n = f2(i));
                    ;
                } else {
                    s.__i18n ? this === this.$root ? this.$i18n = hw(t, s) : this.$i18n = f2({
                        __i18n: s.__i18n,
                        __injectWithOption: true,
                        __root: e
                    }) : this.$i18n = t;
                }
                s.__i18nGlobal && iC(e, s, s);
                t.__onComponentInstanceCreated(this.$i18n);
                n.__setInstance(r, this.$i18n);
                this.$t = (...i) => this.$i18n.t(...i);
                this.$rt = (...i) => this.$i18n.rt(...i);
                this.$tc = (...i) => this.$i18n.tc(...i);
                this.$te = (i, o) => this.$i18n.te(i, o);
                this.$d = (...i) => this.$i18n.d(...i);
                this.$n = (...i) => this.$i18n.n(...i);
                this.$tm = i => this.$i18n.tm(i);
                ;
            },
            mounted() {
            },
            unmounted() {
                const r = Hh();
                if (!r) {
                    throw Ln(Nn.UNEXPECTED_ERROR);
                }
                delete this.$t;
                delete this.$rt;
                delete this.$tc;
                delete this.$te;
                delete this.$d;
                delete this.$n;
                delete this.$tm;
                n.__deleteInstance(r);
                delete this.$i18n;
                ;
            }
        };
    }
    function hw(t, e) {
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        t.__composer[rC](e.pluralizationRules || t.pluralizationRules);
        ;
        const n = dg(t.locale, {
            messages: e.messages,
            __i18n: e.__i18n
        });
        return Object.keys(n).forEach(r => t.mergeLocaleMessage(r, n[r])), e.datetimeFormats && Object.keys(e.datetimeFormats).forEach(r => t.mergeDateTimeFormat(r, e.datetimeFormats[r])), e.numberFormats && Object.keys(e.numberFormats).forEach(r => t.mergeNumberFormat(r, e.numberFormats[r])), t;
    }
    const D1e = xa('global-vue-i18n');
    function $1e(t = {}, e) {
        const n = It(t.legacy) ? t.legacy : true, r = It(t.globalInjection) ? t.globalInjection : true, s = n ? !!t.allowComposition : true, i = new Map(), [o, a] = L1e(t, n), l = xa('');
        function u(p) {
            return i.get(p) || null;
        }
        function f(p, _) {
            i.set(p, _);
        }
        function d(p) {
            i.delete(p);
        }
        {
            const p = {
                get mode() {
                    return n ? 'legacy' : 'composition';
                },
                get allowComposition() {
                    return s;
                },
                async install(_, ...v) {
                    _.__VUE_I18N_SYMBOL__ = l;
                    _.provide(_.__VUE_I18N_SYMBOL__, p);
                    !n && r && H1e(_, p.global);
                    R1e(_, p, ...v);
                    n && _.mixin(M1e(a, a.__composer, p));
                    ;
                    const y = _.unmount;
                    _.unmount = () => {
                        p.dispose();
                        y();
                        ;
                    };
                },
                get global() {
                    return a;
                },
                dispose() {
                    o.stop();
                },
                __instances: i,
                __getInstance: u,
                __setInstance: f,
                __deleteInstance: d
            };
            return p;
        }
    }
    function F3(t = {}) {
        const e = Hh();
        if (e == null) {
            throw Ln(Nn.MUST_BE_CALL_SETUP_TOP);
        }
        if (!e.isCE && e.appContext.app != null && !e.appContext.app.__VUE_I18N_SYMBOL__) {
            throw Ln(Nn.NOT_INSLALLED);
        }
        const n = F1e(e), r = B1e(n), s = C1e(e), i = U1e(t, s);
        if (n.mode === 'legacy' && !t.__useComponent) {
            if (!n.allowComposition) {
                throw Ln(Nn.NOT_AVAILABLE_IN_LEGACY_MODE);
            }
            return G1e(e, i, r, t);
        }
        if (i === 'global') {
            return iC(r, t, s), r;
        }
        if (i === 'parent') {
            let l = q1e(n, e, t.__useComponent);
            return l == null && (l = r), l;
        }
        const o = n;
        let a = o.__getInstance(e);
        if (a == null) {
            const l = tr({}, t);
            '__i18n' in s && (l.__i18n = s.__i18n);
            r && (l.__root = r);
            a = $3(l);
            V1e(o, e);
            o.__setInstance(e, a);
            ;
        }
        return a;
    }
    function L1e(t, e, n) {
        const r = ZL();
        {
            const s = e ? r.run(() => f2(t)) : r.run(() => $3(t));
            if (s == null) {
                throw Ln(Nn.UNEXPECTED_ERROR);
            }
            return [
                r,
                s
            ];
        }
    }
    function F1e(t) {
        {
            const e = oo(t.isCE ? D1e : t.appContext.app.__VUE_I18N_SYMBOL__);
            if (!e) {
                throw Ln(t.isCE ? Nn.NOT_INSLALLED_WITH_PROVIDE : Nn.UNEXPECTED_ERROR);
            }
            return e;
        }
    }
    function U1e(t, e) {
        return ug(t) ? '__i18n' in e ? 'local' : 'global' : t.useScope ? t.useScope : 'local';
    }
    function B1e(t) {
        return t.mode === 'composition' ? t.global : t.global.__composer;
    }
    function q1e(t, e, n = false) {
        let r = null;
        const s = e.root;
        let i = e.parent;
        for (; i != null;) {
            const o = t;
            if (t.mode === 'composition') {
                r = o.__getInstance(i);
            } else {
                const a = o.__getInstance(i);
                if (a != null) {
                    r = a.__composer;
                    n && r && !r[sC] && (r = null);
                }
            }
            if (r != null || s === i) {
                break;
            }
            i = i.parent;
        }
        return r;
    }
    function V1e(t, e, n) {
        iv(() => {
        }, e);
        ov(() => {
            t.__deleteInstance(e);
        }, e);
        ;
    }
    function G1e(t, e, n, r = {}) {
        const s = e === 'local', i = AF(null);
        if (s && t.proxy && !(t.proxy.$options.i18n || t.proxy.$options.__i18n)) {
            throw Ln(Nn.MUST_DEFINE_I18N_OPTION_IN_ALLOW_COMPOSITION);
        }
        const o = It(r.inheritLocale) ? r.inheritLocale : true, a = Qr(s && o ? n.locale.value : $e(r.locale) ? r.locale : 'en-US'), l = Qr(s && o ? n.fallbackLocale.value : $e(r.fallbackLocale) || Xt(r.fallbackLocale) || lt(r.fallbackLocale) || r.fallbackLocale === false ? r.fallbackLocale : a.value), u = Qr(dg(a.value, r)), f = Qr(lt(r.datetimeFormats) ? r.datetimeFormats : { [a.value]: {} }), d = Qr(lt(r.numberFormats) ? r.numberFormats : { [a.value]: {} }), p = s ? n.missingWarn : It(r.missingWarn) || fa(r.missingWarn) ? r.missingWarn : true, _ = s ? n.fallbackWarn : It(r.fallbackWarn) || fa(r.fallbackWarn) ? r.fallbackWarn : true, v = s ? n.fallbackRoot : It(r.fallbackRoot) ? r.fallbackRoot : true, y = !!r.fallbackFormat, g = Sn(r.missing) ? r.missing : null, b = Sn(r.postTranslation) ? r.postTranslation : null, A = s ? n.warnHtmlMessage : It(r.warnHtmlMessage) ? r.warnHtmlMessage : true, N = !!r.escapeParameter, I = s ? n.modifiers : lt(r.modifiers) ? r.modifiers : {}, O = r.pluralRules || s && n.pluralRules;
        function x() {
            return [
                a.value,
                l.value,
                u.value,
                f.value,
                d.value
            ];
        }
        const M = Jr({
                get: () => i.value ? i.value.locale.value : a.value,
                set: S => {
                    i.value && (i.value.locale.value = S);
                    ;
                    ;
                }
            }), L = Jr({
                get: () => i.value ? i.value.fallbackLocale.value : l.value,
                set: S => {
                    i.value && (i.value.fallbackLocale.value = S);
                    ;
                    ;
                }
            }), U = Jr(() => i.value ? i.value.messages.value : u.value), ee = Jr(() => f.value), ae = Jr(() => d.value);
        function Z() {
            return i.value ? i.value.getPostTranslationHandler() : b;
        }
        function fe(S) {
            i.value && i.value.setPostTranslationHandler(S);
        }
        function ge() {
            return i.value ? i.value.getMissingHandler() : g;
        }
        function Y(S) {
            i.value && i.value.setMissingHandler(S);
        }
        function Q(S) {
            return x(), S();
        }
        function ue(...S) {
            return i.value ? Q(() => Reflect.apply(i.value.t, null, [...S])) : Q(() => '');
        }
        function _e(...S) {
            return i.value ? Reflect.apply(i.value.rt, null, [...S]) : '';
        }
        function Oe(...S) {
            return i.value ? Q(() => Reflect.apply(i.value.d, null, [...S])) : Q(() => '');
        }
        function be(...S) {
            return i.value ? Q(() => Reflect.apply(i.value.n, null, [...S])) : Q(() => '');
        }
        function Ce(S) {
            return i.value ? i.value.tm(S) : {};
        }
        function Me(S, P) {
            return i.value ? i.value.te(S, P) : false;
        }
        function Fe(S) {
            return i.value ? i.value.getLocaleMessage(S) : {};
        }
        function st(S, P) {
            i.value && (i.value.setLocaleMessage(S, P), u.value[S] = P);
        }
        function Ve(S, P) {
            i.value && i.value.mergeLocaleMessage(S, P);
        }
        function Ke(S) {
            return i.value ? i.value.getDateTimeFormat(S) : {};
        }
        function rt(S, P) {
            i.value && (i.value.setDateTimeFormat(S, P), f.value[S] = P);
        }
        function w(S, P) {
            i.value && i.value.mergeDateTimeFormat(S, P);
        }
        function R(S) {
            return i.value ? i.value.getNumberFormat(S) : {};
        }
        function H(S, P) {
            i.value && (i.value.setNumberFormat(S, P), d.value[S] = P);
        }
        function X(S, P) {
            i.value && i.value.mergeNumberFormat(S, P);
        }
        const k = {
            get id() {
                return i.value ? i.value.id : -1;
            },
            locale: M,
            fallbackLocale: L,
            messages: U,
            datetimeFormats: ee,
            numberFormats: ae,
            get inheritLocale() {
                return i.value ? i.value.inheritLocale : o;
            },
            set inheritLocale(S) {
                i.value && (i.value.inheritLocale = S);
            },
            get availableLocales() {
                return i.value ? i.value.availableLocales : Object.keys(u.value);
            },
            get modifiers() {
                return i.value ? i.value.modifiers : I;
            },
            get pluralRules() {
                return i.value ? i.value.pluralRules : O;
            },
            get isGlobal() {
                return i.value ? i.value.isGlobal : false;
            },
            get missingWarn() {
                return i.value ? i.value.missingWarn : p;
            },
            set missingWarn(S) {
                i.value && (i.value.missingWarn = S);
            },
            get fallbackWarn() {
                return i.value ? i.value.fallbackWarn : _;
            },
            set fallbackWarn(S) {
                i.value && (i.value.missingWarn = S);
            },
            get fallbackRoot() {
                return i.value ? i.value.fallbackRoot : v;
            },
            set fallbackRoot(S) {
                i.value && (i.value.fallbackRoot = S);
            },
            get fallbackFormat() {
                return i.value ? i.value.fallbackFormat : y;
            },
            set fallbackFormat(S) {
                i.value && (i.value.fallbackFormat = S);
            },
            get warnHtmlMessage() {
                return i.value ? i.value.warnHtmlMessage : A;
            },
            set warnHtmlMessage(S) {
                i.value && (i.value.warnHtmlMessage = S);
            },
            get escapeParameter() {
                return i.value ? i.value.escapeParameter : N;
            },
            set escapeParameter(S) {
                i.value && (i.value.escapeParameter = S);
            },
            t: ue,
            getPostTranslationHandler: Z,
            setPostTranslationHandler: fe,
            getMissingHandler: ge,
            setMissingHandler: Y,
            rt: _e,
            d: Oe,
            n: be,
            tm: Ce,
            te: Me,
            getLocaleMessage: Fe,
            setLocaleMessage: st,
            mergeLocaleMessage: Ve,
            getDateTimeFormat: Ke,
            setDateTimeFormat: rt,
            mergeDateTimeFormat: w,
            getNumberFormat: R,
            setNumberFormat: H,
            mergeNumberFormat: X
        };
        function T(S) {
            S.locale.value = a.value;
            S.fallbackLocale.value = l.value;
            Object.keys(u.value).forEach(P => {
                S.mergeLocaleMessage(P, u.value[P]);
            });
            Object.keys(f.value).forEach(P => {
                S.mergeDateTimeFormat(P, f.value[P]);
            });
            Object.keys(d.value).forEach(P => {
                S.mergeNumberFormat(P, d.value[P]);
            });
            S.escapeParameter = N;
            S.fallbackFormat = y;
            S.fallbackRoot = v;
            S.fallbackWarn = _;
            S.missingWarn = p;
            S.warnHtmlMessage = A;
            ;
        }
        return r7(() => {
            if (t.proxy == null || t.proxy.$i18n == null) {
                throw Ln(Nn.NOT_AVAILABLE_COMPOSITION_IN_LEGACY);
            }
            const S = i.value = t.proxy.$i18n.__composer;
            e === 'global' ? (a.value = S.locale.value, l.value = S.fallbackLocale.value, u.value = S.messages.value, f.value = S.datetimeFormats.value, d.value = S.numberFormats.value) : s && T(S);
        }), k;
    }
    const j1e = [
            'locale',
            'fallbackLocale',
            'availableLocales'
        ], W1e = [
            't',
            'rt',
            'd',
            'n',
            'tm'
        ];
    function H1e(t, e) {
        const n = Object.create(null);
        j1e.forEach(r => {
            const s = Object.getOwnPropertyDescriptor(e, r);
            if (!s) {
                throw Ln(Nn.UNEXPECTED_ERROR);
            }
            const i = Zn(s.value) ? {
                get() {
                    return s.value.value;
                },
                set(o) {
                    s.value.value = o;
                }
            } : {
                get() {
                    return s.get && s.get();
                }
            };
            Object.defineProperty(n, r, i);
        });
        t.config.globalProperties.$i18n = n;
        W1e.forEach(r => {
            const s = Object.getOwnPropertyDescriptor(e, r);
            if (!s || !s.value) {
                throw Ln(Nn.UNEXPECTED_ERROR);
            }
            Object.defineProperty(t.config.globalProperties, `$${ r }`, s);
        });
        ;
    }
    g1e(E1e);
    _1e(n1e);
    y1e(zA);
    const z1e = at({
        data() {
            return {
                isVisible: false,
                options: null,
                timeout: null
            };
        },
        beforeMount() {
            this.$registerToast(this);
        },
        methods: {
            show(t) {
                this.isVisible = true;
                this.options = t;
                this.timeout && (window.clearTimeout(this.timeout), this.timeout = null);
                t.duration && (this.timeout = window.setTimeout(() => {
                    this.hide();
                }, t.duration));
                ;
            },
            hide() {
                this.isVisible = false;
                this.options = null;
                this.timeout && (window.clearTimeout(this.timeout), this.timeout = null);
                ;
            }
        }
    });
    function tme(t, e, n, r, s, i) {
        return G(), wt(Ta, { name: 'toast-transition' }, {
            default: go(() => [t.isVisible && t.options ? (G(), K('div', {
                    key: 0,
                    class: nt([
                        t.options.type,
                        'jbg toast'
                    ])
                }, [V('div', K1e, [
                        V('img', {
                            class: 'close',
                            alt: 'close',
                            src: 'https://bundles.jackbox.tv/main/pp10-nopus-opus/assets/c8afd972.svg',
                            onClick: e[0] || (e[0] = (...o) => t.hide && t.hide(...o)),
                            onKeydown: e[1] || (e[1] = pv((...o) => t.hide && t.hide(...o), ['esc']))
                        }, null, 32),
                        V('p', Z1e, Nt(t.options.text), 1),
                        V('p', X1e, Nt(t.options.subtext), 1),
                        t.options.warning ? (G(), K('p', Q1e, Nt(t.options.warning), 1)) : De('', true),
                        t.options.type === 'reconnecting' || t.options.type === 'paused' ? (G(), K('div', J1e)) : De('', true),
                        t.options.type === 'paused' ? (G(), K('div', eme)) : De('', true)
                    ])], 2)) : De('', true)]),
            _: 1
        });
    }
    const nme = Je(z1e, [
            [
                'render',
                tme
            ],
            [
                '__scopeId',
                'data-v-6d2a2aa3'
            ]
        ]), rme = {
            install: t => {
                if (t.config.globalProperties.$showToast) {
                    return;
                }
                let e;
                const n = i => {
                        if (!e) {
                            throw new Error('No ToastComponent is registered to show');
                        }
                        e.show(i);
                    }, r = () => {
                        if (!e) {
                            throw new Error('No ToastComponent is registered to hide');
                        }
                        e.hide();
                    }, s = i => {
                        e = i;
                    };
                t.component('Toast', nme);
                t.config.globalProperties.$showToast = n;
                t.config.globalProperties.$hideToast = r;
                t.config.globalProperties.$registerToast = s;
                ;
            }
        }, sme = at({
            props: {
                options: {
                    type: Object,
                    required: true
                },
                mainView: {
                    type: Object,
                    required: true
                }
            },
            setup() {
                return { fatalError: oo(ku.fatal.error) };
            },
            data() {
                return { isKicked: false };
            },
            computed: {
                ecast() {
                    return this.$ecast;
                },
                ecastValues() {
                    return this.$ecastValues ? this.$ecastValues : null;
                },
                classes() {
                    return [`locale-${ this.$i18n.locale }`];
                },
                shouldShowFatal() {
                    var t;
                    return ((t = this.fatalError) == null ? void 0 : t.hasCrashed) ?? false;
                }
            },
            watch: {
                'ecastValues.hostIsPaused': function (e) {
                    e ? this.$showToast({
                        type: 'paused',
                        text: this.$t('TOAST.PAUSED.TEXT'),
                        subtext: this.$t('TOAST.PAUSED.SUBTEXT')
                    }) : this.$hideToast();
                }
            },
            beforeMount() {
                this.$ecast.on('connection', t => {
                    this.onConnection(t);
                });
                this.$ecast.on('client/connected', t => {
                    this.onClientConnected(t);
                });
                this.$ecast.on('client/disconnected', t => {
                    this.onClientDisconnected(t);
                });
                this.$ecast.on('room/exit', () => {
                    this.onRoomExit();
                });
                this.$ecast.on('client/kicked', () => {
                    this.onClientKicked();
                });
                this.$ecast.on('socketClose', () => {
                    this.onSocketClose();
                });
                ;
            },
            beforeUnmount() {
            },
            methods: {
                onConnection(t) {
                    switch (t.status) {
                    case 'waiting':
                    case 'connecting':
                        this.$showToast({
                            type: 'reconnecting',
                            text: this.$t('TOAST.RECONNECTING.CONTROLLER.TEXT'),
                            subtext: this.$t('TOAST.RECONNECTING.CONTROLLER.SUBTEXT', { attempt: t.attempt })
                        });
                        break;
                    case 'connected':
                        this.$showToast({
                            type: 'generic',
                            text: this.$t('TOAST.RECONNECTED.TEXT'),
                            subtext: this.$t('TOAST.RECONNECTED.SUBTEXT'),
                            duration: 1500
                        });
                        break;
                    }
                },
                onClientConnected(t) {
                    t.role === 'host' && t.reconnect && this.$showToast({
                        type: 'generic',
                        text: this.$t('TOAST.RECONNECTED.TEXT'),
                        subtext: this.$t('TOAST.RECONNECTED.SUBTEXT'),
                        duration: 1500
                    });
                },
                onClientDisconnected(t) {
                    t.role === 'host' && this.$showToast({
                        type: 'reconnecting',
                        text: this.$t('TOAST.RECONNECTING.GAME.TEXT'),
                        subtext: this.$t('TOAST.RECONNECTING.GAME.SUBTEXT')
                    });
                },
                async onRoomExit() {
                    this.$hideToast();
                    await this.$showModal('Error', {
                        image: 'moon',
                        text: this.$t('ERROR.ROOM_DISCONNECTED'),
                        subtext: this.$t('ERROR.ROOM_DESTROYED'),
                        dismissText: this.$t('ACTION.OK')
                    });
                    window.location.reload();
                    ;
                },
                async onClientKicked() {
                    this.isKicked = true;
                    this.$hideToast();
                    await this.$showModal('Error', {
                        image: 'tear',
                        text: this.$t('ERROR.ROOM_DISCONNECTED'),
                        subtext: this.$t('ERROR.PLAYER_KICKED'),
                        dismissText: this.$t('ACTION.OK')
                    });
                    window.location.reload();
                    ;
                },
                async onSocketClose() {
                    this.isKicked || (this.$hideToast(), await this.$showModal('Error', {
                        image: 'moon',
                        text: this.$t('ERROR.ROOM_DISCONNECTED'),
                        dismissText: this.$t('ACTION.OK')
                    }), window.location.reload());
                }
            }
        });
    function ime(t, e, n, r, s, i) {
        const o = We('Fatal'), a = We('TextDescriptions'), l = We('Debug'), u = We('Modal'), f = We('Toast');
        return t.shouldShowFatal ? (G(), wt(o, { key: 0 })) : (G(), K(gt, { key: 1 }, [
            Ye(a),
            (G(), wt(Rm(t.mainView), Dm({
                id: 'game',
                class: t.classes
            }, t.ecastValues), null, 16, ['class'])),
            Ye(l),
            Ye(u),
            Ye(f)
        ], 64));
    }
    const fw = Je(sme, [[
                'render',
                ime
            ]]), ome = at({
            components: { Gallery: oie },
            props: {
                options: {
                    type: Object,
                    required: true
                },
                galleryView: {
                    type: Object,
                    required: true
                }
            },
            setup() {
                return { fatalError: oo(ku.fatal.error) };
            },
            computed: {
                classes() {
                    return [`locale-${ this.$i18n.locale }`];
                },
                shouldShowFatal() {
                    var t;
                    return ((t = this.fatalError) == null ? void 0 : t.hasCrashed) ?? false;
                },
                categoryId() {
                    var t, e;
                    return ((e = (t = this.options.match) == null ? void 0 : t.data) == null ? void 0 : e.categoryId) ?? '';
                },
                artifactId() {
                    var t, e;
                    return ((e = (t = this.options.match) == null ? void 0 : t.data) == null ? void 0 : e.artifactId) ?? '';
                }
            }
        });
    function ame(t, e, n, r, s, i) {
        const o = We('Fatal'), a = We('Gallery'), l = We('Modal'), u = We('Toast');
        return t.shouldShowFatal ? (G(), wt(o, { key: 0 })) : (G(), K(gt, { key: 1 }, [
            Ye(a, {
                view: t.galleryView,
                'artifact-id': t.artifactId,
                'category-id': t.categoryId,
                context: 'standalone'
            }, null, 8, [
                'view',
                'artifact-id',
                'category-id'
            ]),
            Ye(l),
            Ye(u)
        ], 64));
    }
    const dw = Je(ome, [[
            'render',
            ame
        ]]);
    function cme(t, e) {
        var r, s, i;
        if (!t.renderers) {
            throw new Error(`No renderers are available for app ${ (r = e.match) == null ? void 0 : r.data.game }`);
        }
        const n = (i = (s = e == null ? void 0 : e.match) == null ? void 0 : s.params) == null ? void 0 : i.type;
        if (!n || !t.renderers[n]) {
            throw new Error('Generator routes require a valid "type" query param');
        }
        console.log('run', t, e);
    }
    function lme(t, e, n) {
        fw.name = e.app;
        const r = T7(fw, {
            options: e,
            mainView: t.MainView
        });
        if (r.use(Ble, {
                replayer: e.replayer,
                client: n,
                room: e.room
            }), r.use(ahe, {
                wsClient: n,
                room: e.room,
                welcome: e.welcome
            }), r.use(ype), r.use(bpe), t.plugins) {
            const s = i => i.plugin === void 0;
            t.plugins.forEach(i => {
                if (s(i)) {
                    r.use(i);
                    return;
                }
                r.use(i.plugin, ...i.options);
            });
        }
        return r;
    }
    function ume(t, e) {
        return dw.name = e.app, T7(dw, {
            options: e,
            galleryView: t.GalleryView
        });
    }
    function hme(t) {
        return t != null && t.parts ? t.parts[0] === 'gallery' ? 'gallery' : t.parts[0] === 'renderer' ? 'renderer' : 'game' : 'game';
    }
    const fme = t => {
        let e;
        window.tv.register({
            connect: (n, r) => (e = r ? r.setClient(Pr.WSClient, n) : new Pr.WSClient(n), e.connect()),
            mount: n => {
                var a, l;
                const r = hme(n.match);
                if (r === 'renderer') {
                    cme(t, n);
                    return;
                }
                let s = r === 'gallery' ? ume(t, n) : lme(t, n, e), i;
                (a = n.room) != null && a.locale && (i = n.room.locale);
                (l = n.match) != null && l.params.locale && (i = n.match.params.locale);
                Cl.set(i);
                ;
                const o = $1e({
                    fallbackLocale: 'en',
                    locale: Cl.locale,
                    messages: Cl.mergeMessages(nJ, t.messages ?? {})
                });
                return s.use(uie), s.use(fpe), s.use(hde), s.use(o), s.use(Gde, { i18n: o }), s.use(vpe), s.use(rme), s.mount('#app'), () => {
                    s.unmount();
                    s = null;
                    ;
                };
            },
            info: n => ({
                tag: n.app,
                version: n.version,
                type: n.type,
                wrapper: 'vue',
                branch: n.branch
            })
        });
    };
    class dme {
        constructor() {
            Ae(this, 'isDesktop', Qr(false));
            Ae(this, 'mappings', Tc(new Map()));
            Ae(this, 'customMappings', new Map());
            Ae(this, 'defaultMappings', new Map([
                [
                    1,
                    [' ']
                ],
                [
                    2,
                    [
                        'g',
                        'h'
                    ]
                ],
                [
                    3,
                    [
                        'f',
                        'g',
                        'h'
                    ]
                ],
                [
                    4,
                    [
                        'f',
                        'g',
                        'h',
                        'j'
                    ]
                ],
                [
                    5,
                    [
                        'd',
                        'f',
                        'g',
                        'h',
                        'j'
                    ]
                ],
                [
                    6,
                    [
                        'd',
                        'f',
                        'g',
                        'h',
                        'j',
                        'k'
                    ]
                ]
            ]));
            this.defaultMappings = this.getDefaultMappings();
            window.matchMedia('(any-hover: hover)').matches && (this.isDesktop.value = true);
            this.update();
            ;
        }
        reset(e) {
            Dn.remove(`hotkey${ e }`, 'tag');
            this.update();
            ;
        }
        set(e, n) {
            Dn.set(`hotkey${ e }`, n.join('\xB7'), 'tag');
            this.update();
            ;
        }
        checkEvent(e) {
            if (!this.isDesktop.value) {
                if (e instanceof KeyboardEvent) {
                    this.isDesktop.value = true;
                    return;
                }
                e instanceof PointerEvent && e.pointerType === 'mouse' && (this.isDesktop.value = true);
            }
        }
        getKeyFromEvent(e) {
            return e.key === 'Alt' || e.key === 'Backspace' || e.key === 'CapsLock' || e.key === 'Control' || e.key === 'Enter' || e.key === 'Escape' || e.key === 'Meta' || e.key === 'Shift' ? null : e.key.toLowerCase();
        }
        getCountInKeys(e) {
            const n = e ? this.mappings.get(e).keys : this.defaultMappings.get(6);
            return n.push(' '), n;
        }
        update() {
            this.customMappings = this.getCustomMappings();
            this.setMappings();
            ;
        }
        getDefaultMappings() {
            return new Map([
                [
                    1,
                    [' ']
                ],
                [
                    2,
                    [
                        'g',
                        'h'
                    ]
                ],
                [
                    3,
                    [
                        'f',
                        'g',
                        'h'
                    ]
                ],
                [
                    4,
                    [
                        'f',
                        'g',
                        'h',
                        'j'
                    ]
                ],
                [
                    5,
                    [
                        'd',
                        'f',
                        'g',
                        'h',
                        'j'
                    ]
                ],
                [
                    6,
                    [
                        'd',
                        'f',
                        'g',
                        'h',
                        'j',
                        'k'
                    ]
                ]
            ]);
        }
        getCustomMappings() {
            const e = new Map();
            return this.defaultMappings.forEach((n, r) => {
                const s = Dn.get(`hotkey${ r }`, 'tag');
                s && e.set(r, s.split('\xB7'));
            }), e;
        }
        setMappings() {
            this.mappings.clear();
            this.defaultMappings.forEach((e, n) => {
                const r = this.customMappings.get(n), s = {
                        isCustom: false,
                        keys: []
                    };
                r ? (s.isCustom = true, s.keys = r.map(i => i)) : s.keys = e.map(i => i);
                this.mappings.set(n, s);
                ;
            });
            ;
        }
    }
    const pme = {
            install: t => {
                t.config.globalProperties.$hotkeyManager || (t.config.globalProperties.$hotkeyManager = new dme());
            }
        }, mme = {
            AVATARS: {
                0: 'calm light green bird with a single dark green feather on its head',
                1: 'punky yellow bird with yellow feathers that look like a mohawk',
                2: 'fancy teal bird with round yellow feathers on its head and tail',
                3: 'sleek red bird with a pointy head and curly black tail',
                4: 'tufted green bird with yellow wings',
                5: 'wild magenta bird with light pink, unkempt feathers on its head',
                6: 'dramatic white bird with angular black eyebrow feathers',
                7: 'flamboyant purple bird with forward feathers on its head and a big curly tail',
                8: 'chill brown bird with a foxy tail',
                9: 'cute pink bird with a tail that looks like ice cream cones',
                10: 'dorky blue bird with perfect hair',
                11: 'emo pink bird with feathers brushed forward on its head'
            },
            CHANGE_AVATAR: 'Change Avatar',
            LOGO: 'the Dodo Re Mi logo'
        }, Cme = {
            ALT: mme,
            ARIA: gme,
            BEATMAPS: _me,
            COUNT_IN: yme,
            CREDITS: vme,
            DIFFICULTY: bme,
            INFO: Eme,
            MENU: Tme,
            PLAYBACK: Sme,
            QUALITY: wme,
            RESULTS: Ome,
            WELCOME: Ame
        }, Ime = {
            AVATARS: {
                0: 'oiseau calme vert clair avec une seule plume vert foncé sur sa tête',
                1: 'oiseau jaune punk avec plumes jaunes façon crête',
                2: 'oiseau chic bleu sarcelle avec plumes jaunes rondes sur sa tête et sa queue',
                3: 'oiseau rouge au plumage soyeux avec une tête pointue et une queue noire bouclée',
                4: 'oiseau vert touffu avec ailes jaunes',
                5: 'oiseau sauvage magenta avec plumes hirsutes rose clair sur sa tête',
                6: 'oiseau blanc dramatique avec plumes noires angulaires au niveau des sourcils',
                7: 'oiseau violet flamboyant avec plumes vers l\'avant sur sa tête et une grande queue frisée',
                8: 'oiseau marron relax avec queue rousse',
                9: 'oiseau rose mignon avec une queue en forme de cornet de glace',
                10: 'oiseau bleu intello au plumage très soigné',
                11: 'oiseau rose emo avec plumes de sa tête coiffées vers l\'avant'
            },
            CHANGE_AVATAR: 'Changer d\'avatar',
            LOGO: 'logo Dodo Ré Mi'
        }, Bme = {
            ALT: Ime,
            ARIA: kme,
            BEATMAPS: Nme,
            COUNT_IN: xme,
            CREDITS: Pme,
            DIFFICULTY: Rme,
            INFO: Mme,
            MENU: Dme,
            PLAYBACK: $me,
            QUALITY: Lme,
            RESULTS: Fme,
            WELCOME: Ume
        }, qme = {
            AVATARS: {
                0: 'uccello calmo di colore verde chiaro con un\'unica piuma verde scuro sulla testa',
                1: 'uccello punk di colore giallo con piume gialle che sembrano un taglio alla moicana',
                2: 'uccello splendido di colore verde acqua con piume gialle rotonde sulla testa e sulla coda',
                3: 'uccello sinuoso di colore rosso con una testa a punta e una coda nera arricciata',
                4: 'uccello di colore verde con un ciuffo e le ali gialle',
                5: 'uccello selvatico di colore magenta con piume arruffate rosa chiaro in testa',
                6: 'uccello vistoso di colore bianco con piume nere ad angolo come sopracciglia',
                7: 'uccello appariscente di colore viola con piume all\'insù sulla testa e una grande coda arricciata',
                8: 'uccello calmo di colore marrone con una coda di volpe',
                9: 'uccello carino di colore rosa con una coda che ricorda dei coni gelato',
                10: 'uccello maldestro di colore blu con capelli perfetti',
                11: 'uccello emo di colore rosa con piume pettinate in avanti sulla testa'
            },
            CHANGE_AVATAR: 'Cambia avatar',
            LOGO: 'il logo di Dodo Re Mi'
        }, Jme = {
            ALT: qme,
            ARIA: Vme,
            BEATMAPS: Gme,
            COUNT_IN: jme,
            CREDITS: Wme,
            DIFFICULTY: Hme,
            INFO: zme,
            MENU: Yme,
            PLAYBACK: Kme,
            QUALITY: Zme,
            RESULTS: Xme,
            WELCOME: Qme
        }, ege = {
            AVATARS: {
                0: 'ruhiger hellgrüner Vogel mit einer einzigen dunklen Feder auf dem Kopf',
                1: 'punkiger gelber Vogel mit gelben Federn, die wir ein Irokesenschnitt aussehen',
                2: 'schicker türkiser Vogel mit runden, gelben Federn auf dem Kopf sowie einem Schwanz',
                3: 'geschmeidiger roter Vogel mit einem spitzen Kopf und einem lockigen schwarzen Schwanz',
                4: 'grüner Vogel mit gelben Flügeln',
                5: 'wilder magentafarbener Vogel mit ungeglätteten hellrosa Federn auf dem Kopf',
                6: 'dramatisch aussehender weißer Vogel mit rechteckigen schwarzen Federn als Augenbrauen',
                7: 'extravaganter lila Vogel mit nach vorne zeigenden Federn auf dem Kopf sowie einem großen, gelockten Schwanz',
                8: 'entspannter brauner Vogel mit einem Fuchsartigen Schwanz',
                9: 'niedlicher rosa Vogel mit einem Schwanz, der wie Eiswaffeln aussieht',
                10: 'einfältig aussehender blauer Vogel mit perfektem Federkleid',
                11: 'rosa Emo-Vogel, dessen Kopffedern nach vorn gebürstet sind'
            },
            CHANGE_AVATAR: 'Avatar wechseln',
            LOGO: 'das \u201EDodo Re Mi\u201C-Logo '
        }, fge = {
            ALT: ege,
            ARIA: tge,
            BEATMAPS: nge,
            COUNT_IN: rge,
            CREDITS: sge,
            DIFFICULTY: ige,
            INFO: oge,
            MENU: age,
            PLAYBACK: cge,
            QUALITY: lge,
            RESULTS: uge,
            WELCOME: hge
        }, dge = {
            AVATARS: {
                0: 'pájaro sereno de color verde claro con una sola pluma verde oscuro en la cabeza',
                1: 'pájaro amarillo macarra con plumas amarillas que parecen un peinado mohicano',
                2: 'pájaro elegante con plumas amarillas redondas en la cabeza y la cola',
                3: 'pájaro rojo distinguido con la cabeza puntiaguda y una cola negra rizada',
                4: 'pájaro verde con muchas plumas y alas amarillas',
                5: 'pájaro silvestre magenta con plumas rosa claro despeinadas en la cabeza',
                6: 'pájaro blanco dramático con plumas negras angulares a modo de ceja',
                7: 'pájaro morado extravagante con plumas hacia delante en la cabeza y una gran cola rizada',
                8: 'pájaro marrón tranquilo con cola de zorro',
                9: 'pájaro rosa bonito con una cola que parece unos cucuruchos de helado',
                10: 'pájaro azul tontorrón con un peinado ideal',
                11: 'pájaro rosa emo con plumas peinadas hacia delante en la cabeza'
            },
            CHANGE_AVATAR: 'Cambiar avatar',
            LOGO: 'el logotipo de Dodo Re Mi'
        }, Oge = {
            ALT: dge,
            ARIA: pge,
            BEATMAPS: mge,
            COUNT_IN: gge,
            CREDITS: _ge,
            DIFFICULTY: yge,
            INFO: vge,
            MENU: bge,
            PLAYBACK: Ege,
            QUALITY: Tge,
            RESULTS: Sge,
            WELCOME: wge
        }, Age = {
            AVATARS: {
                0: 'ave tranquila de color verde claro con una sola pluma verde oscura en la cabeza',
                1: 'ave amarilla con plumas amarillas en forma de cresta punk',
                2: 'ave distinguida verde azulada con plumas amarillas en la cabeza y cola',
                3: 'ave roja elegante con la cabeza puntiaguda y cola negra enrulada',
                4: 'ave verde con copete y alas amarillas',
                5: 'ave magenta con tonos rosados y plumas alborotadas en la cabeza',
                6: 'ave blanca impresionante con cejas angulares de plumas negras',
                7: 'ave violeta llamativa con plumas hacia adelante en la cabeza y una cola larga y enrulada',
                8: 'ave marrón tranquila con cola de zorro',
                9: 'ave rosa adorable con una cola que parece un cono de helado',
                10: 'ave azul tonta con cabello perfecto',
                11: 'ave rosa rebelde con plumas peinadas hacia adelante en la cabeza'
            },
            CHANGE_AVATAR: 'Cambiar avatar',
            LOGO: 'el logotipo de Dodo Re Mi'
        }, Fge = {
            ALT: Age,
            ARIA: Cge,
            BEATMAPS: Ige,
            COUNT_IN: kge,
            CREDITS: Nge,
            DIFFICULTY: xge,
            INFO: Pge,
            MENU: Rge,
            PLAYBACK: Mge,
            QUALITY: Dge,
            RESULTS: $ge,
            WELCOME: Lge
        }, Uge = {
            AVATARS: {
                0: 'pássaro calmo, verde-claro, com uma única pena verde-escura na cabeça',
                1: 'pássaro punk, amarelo, com penacho amarelo em formato de moicano',
                2: 'pássaro chique, verde-azul, com penas amarelas arredondadas na cabeça e na cauda',
                3: 'pássaro elegante, vermelho, com cabeça pontuda e cauda preta enroladinha',
                4: 'pássaro topetudo, verde, com asas amarelas',
                5: 'pássaro selvagem, púrpura, com penacho bagunçado rosa-claro',
                6: 'pássaro dramático, branco, com penas pretas angulosas nas sobrancelhas',
                7: 'pássaro fabuloso, roxo, com um topete de penas e uma grande cauda enrolada',
                8: 'pássaro tranquilão, marrom, com cauda de raposa',
                9: 'pássaro fofo, rosa, com uma cauda semelhante a sorvetes de casquinha',
                10: 'pássaro nerd, azul, com cabelo arrumadinho',
                11: 'pássaro emo, rosa, com penacho penteado para a frente'
            },
            CHANGE_AVATAR: 'Trocar avatar',
            LOGO: 'logotipo de Dodo Re Mi'
        }, Xge = {
            ALT: Uge,
            ARIA: Bge,
            BEATMAPS: qge,
            COUNT_IN: Vge,
            CREDITS: Gge,
            DIFFICULTY: jge,
            INFO: Wge,
            MENU: Hge,
            PLAYBACK: zge,
            QUALITY: Yge,
            RESULTS: Kge,
            WELCOME: Zge
        }, Qge = {
            en: Cme,
            fr: Bme,
            it: Jme,
            de: fge,
            es: Oge,
            'es-XL': Fge,
            'pt-BR': Xge
        };
    class lr {
        static difficultyI18ByNumber(e) {
            return this.difficulty.numberToI18n[e];
        }
        static categoryI18nBySlug(e) {
            return this.category.slugToI18n[e];
        }
        static categoryI18ByKey(e) {
            return this.category.keyToI18n[e];
        }
        static categoryKeyBySlug(e) {
            return this.category.slugToKey[e];
        }
        static categorySortOrderByKey(e) {
            return this.category.sortOrder[e];
        }
        static categorySlugByKey(e) {
            return this.category.keyToSlug[e];
        }
        static instrumentIconBySlug(e) {
            return this.instrument.slugToIcon[e];
        }
    }
    Ae(lr, 'difficulty', {
        numberToI18n: [
            '',
            'DIFFICULTY.VERY_EASY',
            'DIFFICULTY.EASY',
            'DIFFICULTY.MEDIUM',
            'DIFFICULTY.HARD',
            'DIFFICULTY.VERY_HARD'
        ]
    });
    Ae(lr, 'category', {
        slugToI18n: {
            'aux-percussion': 'BEATMAPS.PERCUSSION',
            bass: 'BEATMAPS.BASS',
            'counter-melody': 'BEATMAPS.COUNTER',
            drums: 'BEATMAPS.DRUMS',
            harmony: 'BEATMAPS.HARMONY',
            melody: 'BEATMAPS.MELODY',
            signature: 'BEATMAPS.SIGNATURE'
        },
        keyToI18n: {
            AuxPercussion: 'BEATMAPS.PERCUSSION',
            Bass: 'BEATMAPS.BASS',
            CounterMelody: 'BEATMAPS.COUNTER',
            Drums: 'BEATMAPS.DRUMS',
            Harmony: 'BEATMAPS.HARMONY',
            Melody: 'BEATMAPS.MELODY',
            Signature: 'BEATMAPS.SIGNATURE'
        },
        slugToKey: {
            'aux-percussion': 'AuxPercussion',
            bass: 'Bass',
            'counter-melody': 'CounterMelody',
            drums: 'Drums',
            harmony: 'Harmony',
            melody: 'Melody',
            signature: 'Signature'
        },
        keyToSlug: {
            AuxPercussion: 'aux-percussion',
            Bass: 'bass',
            CounterMelody: 'counter-melody',
            Drums: 'drums',
            Harmony: 'harmony',
            Melody: 'melody',
            Signature: 'signature'
        },
        sortOrder: {
            Melody: 0,
            CounterMelody: 1,
            Harmony: 2,
            Bass: 3,
            Drums: 4,
            AuxPercussion: 5,
            Signature: 6
        }
    });
    Ae(lr, 'instrument', {
        slugToIcon: {
            'agnes-the-dog': 'dog',
            'agnes-the-dog-howls': 'dog',
            'alarm-clock': 'clock',
            'arp-synth': 'synth',
            'baby-sloppy-horn': 'trombone',
            banjo: 'banjo',
            'bari-sax': 'sax',
            'bass-flute': 'flute',
            bassoon: 'flute',
            beatbox: 'mouth',
            bitdrums: 'synth',
            bottlecaps: 'shaker',
            'burpin-conga': 'mouth',
            'burps-melody': 'mouth',
            cajon: 'woodblock',
            cannon: 'canon',
            'car-alarm': 'car',
            castanets: 'castanets',
            'casual-saxophone': 'sax',
            caxixi: 'shaker',
            'cello-bowed': 'cello',
            'cello-plucked': 'cello',
            'cheeks-melody': 'mouth',
            'cheeks-percussion': 'mouth',
            clarinet: 'flute',
            'constant-scream': 'mouth',
            'continuous-agnes': 'dog',
            'continuous-burp': 'mouth',
            'continuous-doug': 'mouth',
            'continuous-flute': 'flute',
            'continuous-jan': 'mouth',
            'continuous-kazoo': 'kazoo',
            'continuous-lip-flipper': 'mouth',
            'continuous-natures-bugle': 'poop',
            'continuous-shredding-guitar': 'electric-guitar',
            'continuous-slide-whistle': 'whistle',
            'continuous-taz': 'cat',
            'contrabass-clarinet': 'flute',
            'contrabass-flute': 'flute',
            contrabassoon: 'flute',
            'cow-bell': 'bell',
            cussin: 'mouth',
            didgeridoo: 'whistle',
            'dinner-bell': 'bell',
            'dj-drums': 'synth',
            'double-bass-bowed': 'cello',
            'double-bass-plucked': 'cello',
            doug: 'mouth',
            'drum-set-clean': 'drumKit',
            'eb-soprano-clarinet': 'flute',
            'electric-bass': 'electric-guitar',
            euphonium: 'tuba',
            'extra-sloppy-horn': 'trombone',
            'extra-tall-bongos': 'tallBongo',
            'fast-food-cup': 'cup',
            'field-drums': 'snare',
            flugelhorn: 'frenchHorn',
            flute: 'flute',
            'french-horn-redo': 'frenchHorn',
            gargles: 'mouth',
            goat: 'goat',
            gong: 'gong',
            'grandmas-piano': 'piano',
            guiro: 'fish',
            'guitar-acoustic-chords': 'guitar',
            'guitar-acoustic-notes': 'guitar',
            'guitar-electric-chords': 'electric-guitar',
            'guitar-electric-noamp': 'electric-guitar',
            'guitar-metal-chords': 'electric-guitar',
            'guitar-metal-notes': 'electric-guitar',
            'guitar-rock-chords': 'electric-guitar',
            'guitar-rock-notes': 'electric-guitar',
            'h0-ly-crap': 'poop',
            'husky-clarinet': 'flute',
            'jaw-harp': 'mouth',
            'jazz-drums': 'drumKit',
            kazoo: 'kazoo',
            'kettle-drums': 'snare',
            'kung-fu-drums': 'hands',
            'lil-ukulele-friend-redo': 'guitar',
            'lip-flipper': 'mouth',
            'little-congas': 'bongos',
            'marching-bass-drum': 'snare',
            'marching-drums': 'snare',
            marimba: 'xylophone',
            mario: 'mouth',
            'mommy-sax': 'sax',
            mosquito: 'mosquito',
            'music-box': 'woodblock',
            oboe: 'flute',
            ocarina: 'ocarina',
            piccolo: 'flute',
            'piccolo-trumpet': 'trumpet',
            'pieces-of-wood': 'sticks',
            'pluck-synth': 'synth',
            'plucky-violin': 'cello',
            'plucky-violins-cousin': 'cello',
            'pots-n-pans': 'pots',
            'rain-stick': 'whistle',
            'rave-synth': 'synth',
            rhodes: 'piano',
            'robot-synth': 'synth',
            'shaky-shaker': 'shaker',
            'shy-flute': 'flute',
            'sloppy-horn-sampler': 'trombone',
            'sloppy-horn-senior': 'trombone',
            'snap-clap-stomp': 'hands',
            'snare-drum': 'snare',
            'squeeze-box': 'accordion',
            'tall-bongos': 'tallBongo',
            tamborine: 'tamborine',
            'taz-the-cat': 'cat',
            'the-beef': 'synth',
            tootsaphone: 'poop',
            trumpet: 'trumpet',
            tuba: 'tuba',
            tutorial: 'cap',
            'uncle-sax': 'sax',
            vibes: 'xylophone',
            vibraslap: 'vibraslap',
            violin: 'cello',
            'violins-cousin': 'cello',
            'voice-alto': 'mouth',
            'voice-soprano': 'mouth',
            'weird-oboe': 'flute',
            whistle: 'mouth',
            'wind-chimes': 'chimes',
            'wobble-bass': 'electric-guitar',
            'wood-block': 'woodblock'
        }
    });
    ;
    const Jge = at({
            props: {
                avatar: {
                    type: Number,
                    required: true
                }
            }
        }), Ot = t => (Ri('data-v-762a6505'), t = t(), Mi(), t), e_e = Ot(() => V('path', {
            class: 'legs',
            d: 'm260.33,479.5c.14,9.96-15.51,9.97-15.36,0,0,0,0-69.65,0-69.65h15.36v69.65Zm45.85-69.65h-15.49v69.65c0,4.24,3.44,7.68,7.68,7.68s7.68-3.44,7.68-7.68l.13-69.65Z'
        }, null, -1)), r_e = Ot(() => V('path', {
            class: 'body',
            d: 'm427.34,191.3c-31.47-32.8-78.21-44.55-122.57-35.13-107.61,20.57-142.69,175.09-176.04,263.77,40.53,20.16,86.68,26.16,131.6,24.48,40.59-.35,85.58-5.03,121.13-23.13,85.67-37.54,106.25-162.21,45.88-229.98'
        }, null, -1)), s_e = Ot(() => V('path', {
            class: 'feathers',
            d: 'm91.21,270.01c-14.4-23.74-23.13-39.67-26.2-47.8-13.81,47.97-3.21,102.5,25.15,143.21-14.53-7.92-28.44-16.34-41.47-25.82,7.83,39.15,45.74,69,83.16,81.3,0,0,12.37-46.11,20.31-68.63-27.13-32.83-47.45-60.25-60.95-82.26m141.58,11.04c-67.49-1.5-131.89,229.74-27.26,87.83-.19,4.84-6.88,27.27-2.78,30.81,13.63,7.21,40.81-25.98,47.61-36.28,6.28-10.33,11.81-21.51,14.88-33.31,4.93-22.08-7.48-49.46-32.44-49.05m74.29-176.81c-4.9-17.55-9.09-40.99-26.39-49.82-18.45-7.86-31.49,15.17-24.67,30.91,1.85,4.86,6.08,11.01,12.67,18.43,19.77,19.58,31.8,37.05,36.09,52.41-.14,1.98,5.89-.63,7.68-.34-.18-15.36-2.8-40.04-5.38-51.58Z'
        }, null, -1)), i_e = [
            r_e,
            s_e
        ], a_e = Ot(() => V('path', {
            class: 'body',
            d: 'm341.25,153.29c-38.56-1.39-79.06,10.63-104.91,40.51-57.31,63.16-79.73,147.99-108.6,226.14,41.16,19.52,87.26,26.43,132.6,24.48,40.58-.35,85.58-5.04,121.13-23.13,121.51-54.31,102.75-263.79-40.22-267.99'
        }, null, -1)), c_e = Ot(() => V('path', {
            class: 'feathers',
            d: 'm109.06,219.14c2.5-5.46-5.75-4.52-9.79-4.03-39.06,7.01-61.12,54.76-56.25,92.05-10.25-10.47-21.39-18.52-38.49-23.61-1.06,67.22,62.63,119.11,124.2,136.4,2.69-8,5.44-15.97,8.25-23.9-39.64-30.25-28.75-114.47,21.6-125.36-18.53-30.58-55.85-19.23-67.38,10.27.68-21.55,7.69-42.59,17.85-61.81m102.42,62.49c-18.35,3.35-34.86,26.3-42.33,44.35l-.19.1c6.44-2.87,12.27-5.83,19.39-9.98-21.03,34.19-27.3,44.35-32.44,53.46.63-.75-4.81,9.27-.86,6.72,8.01-3.54,16.45-5.93,24.09-10.17-2.68,4.18-30.04,48.15-32.06,50.87,3.15,5.9,23.87-3.26,31.67-5.57,26.97-10.75,40.36-14.32,58.26-31.68,33.96-27.61,29.19-109.02-25.53-98.1m97.23-249.52c.05-8.48-8.66,3.14-10.27,4.42-26.13,30.97-44.83,73.77-50.1,113.07-4-22.91-5.67-51.71-7.97-73.62-1.08-1.87-2.69-1.12-3.74.67-20.11,31.18-32.02,77.36-29.56,118.83-2.19-2.56-9.77-28.42-14.59-26.78-12.68,16.3-9.49,63.01,7.1,76.12,32.21-56.04,73.46-93.81,141.67-90.51,3.25-43.42,14.66-93.2,32.73-129.29,1.15-2.18,1.15-3.62,0-4.32-35.94,14.1-58.18,56.83-71.12,94.16.45-27.58,2.4-55.16,5.86-82.74Z'
        }, null, -1)), l_e = [
            a_e,
            c_e
        ], h_e = Ot(() => V('path', {
            class: 'body',
            d: 'm351.9,153.06c-145.64-15.71-184.78,160.75-224.16,266.88,89.43,38.11,223.82,39.36,297.02-31.42,70.05-74.69,38.65-225.27-72.85-235.46'
        }, null, -1)), f_e = Ot(() => V('path', {
            class: 'feathers',
            d: 'm113.47,246.69c-35.76-6.86-45.17,27.33-34.07,56.15-55.31-80.2-106.43,21.56-23.32,54.52-32.26-8.59-45.14,25.83-20.93,44.63,24.52,17.96,67.15,21.49,106.26,23.8l-12.67-5.86c.45-1.41,23.77-68.79,25.05-72.37-6.65-15.19-11.54-31.26-16.03-47.13-6.5-17.76-4.85-45.92-24.28-53.75m170.18,86.68c-2.51-10.55-4.98-18.29-9.69-26.3.7,1.66-80.95-2.59-74.68-7.97-15.37,9.52-35.22,22.73-42.14,39.16-11.36,22.64,12.88,37.22,32.25,24.86-29.74,49.46,39.51,65.92,45.21,8.16,8.34,55.32,69.47,40.79,49.05-37.91m80.44-177.38c33.47-101.26-65.61-124.6-59.32-41.85-13.57-88.04-114.45-68.93-60.76,22.27-47.46-62.94-91.28,31.16-17.66,68.92,33.85-47.51,91.74-58.07,137.74-49.34Z'
        }, null, -1)), d_e = Ot(() => V('path', {
            class: 'feathers top',
            d: 'm113.09,283.64c-11.66-9.82-20.87,2.23-21.4,15.84-2.52,11.61,10.17,38.26,15.93,45.5-8.19-8.89-16.8-16.89-25.82-24-14.93-9.86-17.88-18.87-31.48-12.29-24.95,23.13,25.18,53.01,47.8,63.93-19.74-2.81-53.5-15.77-53.75,12.48,2.89,24.52,63.86,26.44,85.81,30.62,6.53-19.13,13.15-38.23,19.87-57.3-9.24-22.94-33.37-75.14-36.95-74.77m162.79,28.8c-13.93-42.75-71.8-26.05-92.14,1.83-21.19,24.14,3.54,44.63,25.05,20.44-27.69,53.52,25.56,52.2,27.64-3.17,5.59,51.37,62.08,38.4,39.45-19.1m-9.69-142.64c-12.78-8.26-26.29-22.61-41.66-22.37-8.73,1.79-12.37,10.44-12.29,19.97.19,9.66,7.39,19.39,21.6,29.18,9.47-10.69,19.83-20.23,32.35-26.78m9.21-71.32c-38.71-1.94-22.95,39.69-4.51,68.92,12.13-5.97,25.37-10.09,38.97-12.19-11.64-26.16-14.25-50.99-34.46-56.73m74.29,7.77c-26.28-31.77-36.59,28.66-37.63,48.66,13.13-1.8,26.98-2.43,39.83-.86,2.9-14.29,6.18-36.66-2.21-47.8Z'
        }, null, -1)), p_e = [
            h_e,
            f_e,
            d_e
        ], g_e = Ot(() => V('path', {
            class: 'body',
            d: 'm218.19,214.53c-2.01,3.1-8.51,12.63-10.27,15.65h-.19l.1.1-1.34,2.11c.13-.13.26-.26.38-.38-36.49,57.91-56.56,123.97-79.13,187.94,45.57,23.03,98.75,26.56,149.01,24.09,55.1-1.7,113.65-15.19,150.6-57.3,41.89-47.62,45.66-127.64,11.71-180.16-37.62-55.4-91.5-94.41-141.87-134-2.55,36.93-61.38,111.5-79,141.96'
        }, null, -1)), __e = Ot(() => V('path', {
            class: 'feathers',
            d: 'm149.66,293.53c-36.47-63.88-136.29-26.41-129.96,43.87,5.24,58.16,71.55,74.35,119.5,87.35l-10.46-4.8c1.47-4.29,2.94-8.54,4.42-12.77-30.44-9.38-86.83-38.82-57.21-76.21,12.46-14.48,21.62-18.29,36.67-18.81,18.61-.52,23.87,13.07,11.23,26.11-4.66,5.37-16.09,6.29-24.48,6.05-6.27-1.15-4.03.83,6.72,5.95,11.46,6.39,23.46,2.01,31.58-7.1,13.11-12.5,21.09-32.75,12-49.62m100.11-14.21c-.64-3.01-1.54-5.7-2.69-8.06-22.95,16.23-44.73,30.18-59.41,52.89-10.37,15.58-17.59,33.56-20.25,52.02-.1,7.77-5.13,21.57-1.73,27.84,53.71-15.65,98.83-66.1,84.08-124.69'
        }, null, -1)), y_e = [
            g_e,
            __e
        ], b_e = Ot(() => V('path', {
            class: 'body',
            d: 'm236.81,193.32c-25.47,27.04-43.71,59.29-58.65,93.01.62,4.16-33.49,89.64-44.92,93.11-91.3,60.83,6.69,77.13,46.26,58.26,59.52,12.23,147.51,10.47,201.95-16.41,88.43-38.42,108.35-172.68,38.49-236.8,15.99-26.52,13.5-68-9.21-89.56-.83,0-1.67.67-2.5,2.02-4.99,8.77-11.1,16.54-18.33,23.32-.53-18.07-16.16-50.56-31.67-61.34-23.32,43.95-87.93,93.72-121.42,134.38'
        }, null, -1)), E_e = Ot(() => V('path', {
            class: 'feathers',
            d: 'm125.95,386.92c2.69-2.94,5.12-5.44,7.29-7.49-25.92,22.78-53.87,32.94-89.07,39.55-2.35.51-3.73.72-4.22,2.69,15.36,7.61,22.66,9.68,38.3,9.98,19.43,23.65,67.84,17.75,93.01,9.5-4.3,1.11-18.17,3.42-23.61,2.78-11.83-.19-36.01-5.54-15.36-17.28,9.01-5.54-11.97-1.77-19.01-3.94-15.2-3.06-16.9-3.87-6.34-14.59,8.02-8.31,11.21-13.04,19-21.21m115.47-52.12c19.73-22.74,8.47-65.6-22.75-69.3-17.45-2.73-28.01,9.35-40.51,20.83-10.28,9.48-29.76,29-43.58,42.91-31.37,36.38,62.93,46.26,80.34,32.35,10.17-7.68,19-16.61,26.49-26.78'
        }, null, -1)), T_e = Ot(() => V('path', {
            class: 'feathers top',
            d: 'm129.7,344.21c-.38-3.78,1.25-8.77,4.9-14.97-13.25,13.12-24.16,23.26-32.73,30.43-3.08,3.03-12.92,9.59-12.67,13.82,5.11,18.76,51.8-.95,64.79-9.21-20.41,22.94-2.16,24.48,17.85,18.81,15.42-4.24,30.06-11.63,43.1-21.5-25.22,10.86-45.21,9.97-34.84-21.21-11.24,5.83-19.16,11.6-30.33,12.86-8.86.91-18.5.02-20.06-9.02m50.68-4.51c-.06.19-.16.42-.29.67.06-.06.16-.13.29-.19v-.48Z'
        }, null, -1)), S_e = [
            b_e,
            E_e,
            T_e
        ], O_e = Ot(() => V('path', {
            class: 'body',
            d: 'm210.84,442.81c56.23,3.81,119.7,3.04,170.61-21.7,127.76-57.95,98.22-278.38-53.96-267.87-124.91,2.33-161.79,162.01-198.83,266.52-.26.73,5.97,2.68,6.82,3.07,0,0,75.37,19.97,75.37,19.97Z'
        }, null, -1)), A_e = Ot(() => V('path', {
            class: 'feathers',
            d: 'm69.51,236.77c-6.08-11.91-11.43-24.16-16.03-36.77-.45-1.22-1.28-1.6-2.5-1.15-6.1,32.73-6.78,67.49.67,99.95,29.91,33.07,59.43,58.91,83.91,84.78v.1c-36.59-23-90.98-58.41-135.56-86.12l4.61,12.1-.1-.58c8.02,18.4,14.88,40.8,32.26,52.52,30.96,15.16,62.04,22.62,95.72,32.07l-126.44-11.04c6.25,8.57,24.48,21.37,33.03,26.69,23.12,4.87,62.57-5.34,92.55-7.59-13.84,4.1-22.19,6.91-44.84,12.87-25.53,7.9-35.73,6.36-51.94,15.46,18.83,3.91,37.99,7.04,56.93,10.56,2.05.58,3.97.29,5.76-.86,10.69-6.66,21.47-13.12,32.36-19.39l-1.25-.58c5.31-15.68,10.72-31.33,16.23-46.95-15.75-25.47-62.28-109.7-75.37-136.05m184.05,165.23c10.01,10.73,1.55-48.09,1.54-52.23,2.76-9.07-58.64-42.27-66.82-43.4-.75-.78-3.22,1.31-3.26,2.59-21.55,38.38-45.37,105.85-65,151.89-5.42,14.97,35.22-28.17,37.93-29.09,7.42-7.62,18.05-15.61,23.81-23.91,3.93-19.53,4.6-47.2,6.14-66.63,3.29,43.42,4.8,65.46,9.5,99.66,1.16,3.18,2.05,28.71,5.95,20.93,11.7-25.41,16.85-52.07,22.75-76.91-.26-3.69-.83-4.18-2.98-8.83-4.84-11.49-7.08-21.11-13.35-31.88,14.42,19.85,29.11,39.13,43.78,57.8m3.36-226.97c3.2-2.11,6.5-4.03,9.89-5.76-76.57-56.32-89.3-76.68-161.39-47.24,46.55,20.93,91.14,32.88,138.64,62.31-61.65-16.4-66.5-17.49-99.37,3.46-7.23,4.03-20.29,13.06-39.17,27.07,31.02-6.67,82.11-7.93,120.11-8.93,9.11-11.37,19.6-22.5,31.3-30.92m45.12-53c-8.19-27.91-14.05-45.6-17.57-53.09-5.21-14.4-55.62-48.65-66.63-57.7-3.28-2.83-5.22-3.03-6.82-6.05-.77-1.09-.74-.7.1,1.15,11.19,21.92,49.99,96.01,65.29,133.65,12.61,29.19,9.12,26.05-10.46-9.41-34.28-66.82-60.17-72.27-117.23-75.75,38.17,29.82,89,75.59,118.96,113.96,13.94-7.46,29.6-12.23,45.51-14.31-3.46-8.13-7.17-18.95-11.14-32.45Z'
        }, null, -1)), C_e = [
            O_e,
            A_e
        ], k_e = Ot(() => V('path', {
            class: 'body',
            d: 'm279.24,163.66c-94.04,38.57-119.14,172.16-150.5,256.28,40.52,20.19,86.68,26.14,131.6,24.48,40.58-.35,85.58-5.04,121.13-23.13,89.04-38.68,108.55-174.44,37.15-238.04,0,0-52.8-55.08-139.37-19.58Z'
        }, null, -1)), N_e = Ot(() => V('path', {
            class: 'feathers',
            d: 'm89.48,240.93c-15.29-20,19.54,103.96,24.96,131.79l-106.16-10.85c-2.18-.13-3.42.42-3.74,1.63-.32,1.15.51,2.21,2.5,3.17,56.28,27.25,78.63,38.72,125.16,54.9l-3.46-1.63c7.55-22.14,15.2-44.25,22.94-66.33-.58-1.09-1.18-2.21-1.82-3.36l-60.37-109.33m110,41.95l1.92,26.4c-13.79,22.54-35.56,62.51-46.84,84.76-.89,2.37-2.72,6.21-5.47,11.52-2.75,5.31-2.37,6.14,1.15,2.5s12.16-9.79,25.92-18.43c13.55-8.07,69.55-45.6,80.24-51.26-8.25-14.69-36.13-39.68-56.92-55.48m116.62-128.53c-38.44-20.67-78.72-41.12-112.11-54.71,12.58,19.44,52.13,46.81,75.25,64.02,46.91,33.09,55.9,37.67,111.34,74.1,25.45-43.3,55.02-106.52,55.58-157.7-9.4,16.01-55.43,94.59-63.83,108.75-17.53-8.83-39.61-20.32-66.23-34.46Z'
        }, null, -1)), x_e = [
            k_e,
            N_e
        ], R_e = Ot(() => V('path', {
            class: 'body',
            d: 'm427.34,191.3c-3.93-4.1-24.27-43.38-24.27-43.38l-12.67,17.12c-177.99-49.1-214.07,124.01-261.67,254.9,76.87,34.7,175.82,33.8,252.73,1.35,85.67-37.55,106.25-162.22,45.88-229.99'
        }, null, -1)), M_e = Ot(() => V('path', {
            class: 'feathers',
            d: 'm252.65,330.67c-.89-4.25,4.64-7.56,6.43-2.98,1.17,3.77-.51,18.08-.19,28.32,3.82,10.62,19.04,17.95,28.41,9.5,11.85-12.62,8.2-33.24,6.14-52.02-3.07-41.9-77.78-31.47-114.03-28.99-21.54,2.88-37.88,19.02-43.19,40.12-2.84,13.98-4.55,36.58,10.84,43.19,8.6,4,21.41-2.57,24.09-12.19,1.16-6.18-.1-20.03-.58-26.11-.71-5.9,6.44-5.67,5.86-.1.71,10.39-1.9,21.55,2.21,31.39,3.68,10.54,17.88,12.96,25.92,5.76,11.01-8.2,5.84-28.29,7.01-40.03,1.46-2.64,5.15-2.13,7.01-.1h-.19c1.26,12.97-4.11,30.53,7.01,40.12,11.08,8.7,25.07,2.28,27.36-11.14,0,0-.1-24.76-.1-24.76m-18.43-143.4c-5.47,12.61-7.58,13.09-7.01,17.85l.58-.1v-.38c64.9-65.28,104.61-6.53,177.28-22.08-5.12-7.53-5.21-18.59-4.13-27.55,4.6-1.13,1.62,2.86,1.82,5.85.12,6.78.35,15.84,5.18,20.93.83-.26.1.1.1.1,20.17,26.14,55.37,20.23,68.25-9.79,5.93-15.28,3.61-44.77-18.72-42.62-15.78-1.06-30.92,4.21-47.03,2.4-64.37-15.42-142.41-6.61-176.32,55.39M160.12,7.97C-17.74,62.21-69.08,370.46,138.53,424.26l-9.41-4.32c2.11-6.14,4.22-12.29,6.33-18.43-92.51-58.72-102.12-224.9-5.28-280.76,19.54-10.9,61.56-19.46,67.29,7.2-.62,14.86-20.8,20.17-33.12,16.8l-.48,1.54c31.8,21.92,74.81,6.62,104.62-13.24,42.89-26.56,43.68-88.53,3.07-116.91C239.63-5.74,196.6-2.13,160.12,7.97Z'
        }, null, -1)), D_e = [
            R_e,
            M_e
        ], L_e = Ot(() => V('path', {
            class: 'body',
            d: 'm427.34,191.3c-169.76-133.72-259.43,94.21-298.61,228.64,76.87,34.7,175.82,33.8,252.73,1.35,85.67-37.55,106.25-162.22,45.88-229.99'
        }, null, -1)), F_e = Ot(() => V('path', {
            class: 'feathers',
            d: 'm53.77,206.95c-14.84,11.47-32.03,24.91-37.15,42.14,0,.58.1,1.12.29,1.63,17.91-9.5,38.82-6.5,17.66,14.88-90.52,75.1,23.6,135.74,94.16,154.35,1.54-4.54,3.1-9.09,4.7-13.63-70.15-39.32-.62-99.2,24-144.55,40.99-85.66-48.79-97.97-103.67-54.81M372.82,65.37c-18.71-5.95-30.65,16.2-34.36,30.91-2.13,14.27.12,19.63,6.53,38.78-21.17-33.93-55.37-11.29-43.96,21.79,11.6,26.94,38.47,44.71,60.95,61.72,7.44,4.27,15.13,13.57,24.28,9.6,1.15.77,4.61-3.36,10.37-12.38,13.2-21.74,24.77-40.42,32.64-63.83,9.14-28.96-14.31-65.94-31.39-18.62.1-23.91,1.51-57.98-25.05-67.96Z'
        }, null, -1)), U_e = Ot(() => V('path', {
            class: 'feathers top',
            d: 'm245.82,340.95c5.44-5,6.11-7.18,10.65-11.71,5.58,2.14-19.15,22.58-22.75,28.41-1.48,1.41-35.64,41.3-36.67,40.99,223.36-26.37-65.09-269.62-50.87-27.36,14.51-32.07,31.31-54.8,58.07-77.75l2.3.58c-23.88,20.74-44.08,47.68-60.18,79.57,1.38,7.84,1.25,17.4,5.76,23.61,12.88,4.69,26.95,2.53,43.87,1.44,10.38-14.71,37.56-42.46,49.82-57.78'
        }, null, -1)), B_e = [
            L_e,
            F_e,
            U_e
        ], V_e = Ot(() => V('path', {
            class: 'body',
            d: 'm427.34,191.3c-31.47-32.8-78.21-44.55-122.57-35.13-107.61,20.57-142.69,175.09-176.04,263.77,40.53,20.16,86.68,26.16,131.6,24.48,40.59-.35,85.58-5.03,121.13-23.13,85.67-37.54,106.25-162.21,45.88-229.98'
        }, null, -1)), G_e = Ot(() => V('path', {
            class: 'feathers',
            d: 'm152.25,296.79l.1-.48-.1-.19.19-.19-60.95,5.18c-.55.67,36.59,103.62,36.57,104.34-.38-.86-44.88-99.04-45.21-99.83l-48.47,37.15c-.54.91,94.93,74.25,95.12,74.87,10.52-18.22,19.47-99.49,22.75-120.85m92.15-5.47l-.48-.29-88.11,50.97-6.05,3.46v.1h-.29c21.05,12.82,72.74,44.28,93.11,56.73h.38l1.44-110.96m115.57-190.34c-.1-21.6-29.46-29.99-44.15-16.7-7.52,7.49-21.91,24.83-18.05,33.88l.96-.19c.06-.19.16-.38.29-.58,0-.06.06-.1.19-.1,4.17-9.11,12.59-17.97,23.13-18.72,7.76.07,13.21,9.5,9.21,16.22-6.02,13.51-21.52,6.14-31.48,4.7-2.95,1.02-7.64-.17-10.65,1.06h.77c-8.92,1.79-12.56,5.87-20.54,6.34-10.25.77-19.94-11.87-11.61-20.25,0-.06.03-.1.1-.1,10.51-6.97,24.71,3.65,31,12.19h1.06c2.06-7.6-9.77-17.59-17.28-24.38-14.86-14.78-42.09-8.82-47.32,11.71-4.32,33.31,36.57,48.46,59.41,28.32l3.26,26.01c6.33-2.13,13-3.72,19.68-4.9l-1.92-23.04c22.25,12.91,57.49-2.85,53.94-31.48Z'
        }, null, -1)), j_e = Ot(() => V('path', {
            class: 'feathers top',
            d: 'm74.89,281.05c-47.97-52.91-107.51,40.7-40.22,62.39l-.29-.29v-.38l48.47-37.15c.02.24.25.67.38.86.38-9.34-2.4-17.82-8.35-25.44m74.48,64.41c-.06.06-.1.13-.1.19-.13,0-.16.06-.1.19-12.81,22.8,14.73,40.89,30.24,19.29-11.83,24.16,16.97,39.93,31.39,17.76-.1-.1-61.38-37.3-61.43-37.43m-4.51-101.27c-38.78-30.78-87.09,21.68-53.37,57.69-.09-.2-.09-.57,0-.77l60.95-5.18-.19.19.1.19-.1.48c11.51-16.08,8.25-40.4-7.39-52.6m96.37,158.86c.33-.37.51-.82.77-1.15l-30.81-18.72v.1c-.13,0-.16.06-.1.19-12.89,22.44,14.76,40.75,30.14,19.58Z'
        }, null, -1)), W_e = [
            V_e,
            G_e,
            j_e
        ], z_e = Ot(() => V('path', {
            class: 'body',
            d: 'm304.87,156.08c-94.26,18.24-129.7,135.36-159.05,214.34-28.49-43.69-51.63-89.82-71.56-136.34l-2.44.81c-18.73,13.21-35.38,31.72-44.06,53.18.1.19,21.13,22.6,21.12,22.84h-.1l-.1.1c26.15,27.64,55.01,56.67,88.69,83.89-2.91,8.36-5.8,16.69-8.64,25.05,54.48,27.37,117.77,27.38,177.19,21.98,46.2-4.96,90.89-20.74,121.42-55.19,79.89-98.68,16.6-258.5-122.48-230.65'
        }, null, -1)), Y_e = Ot(() => V('path', {
            class: 'feathers',
            d: 'm89.04,403.38c17.26,7.98,27.6,12.45,40.99,16.7,2.75-8.06,5.54-16.13,8.35-24.19-33.66-27.2-62.56-56.27-88.69-83.89l.1-.1h.1l-.1-.19c-11.15,15.21-30.54,39.24-29.37,50.97,17.33,15.15,44.04,29.03,68.63,40.7m42.04-156.07c-.32-.96-.8-1.5-1.44-1.63l-.1-.48c-13.48,6.6-26.19,14.97-39.35,25.92,14.37,31.47,36.86,69.44,56.63,100.31,3.77-10.75,7.38-21.51,11.33-32.16-8.28-29.01-17.06-65.48-27.07-91.95m115.05,122.25c6.13-36.91-27.08-33.22-39.16-6.72,8.07-48.16-29.3-25.38-46.75-1.06-26.41,72.58,4.08,65.57,45.31,7.1-.28,4.96-6.81,27.18-2.78,30.81,12.53,6.73,35.55-20.75,43.39-30.14m135.43-254.8c2.95-43.91-102.06-29.37-125.26-13.73-6.2,3.41-13.67,9.14-11.33,17.38,3.07,20.6,5.14,41.44,6.05,62.49,35.81-27.95,90.1-34.1,131.69-18.24.38-15.93,0-31.9-1.15-47.9Z'
        }, null, -1)), K_e = Ot(() => V('path', {
            class: 'feathers top',
            d: 'm260,343.38c16.26-30.58-6.86-74.89-43.87-57.49-29.05,14.9-44.25,46-56.92,76.88,8-11.73,35.66-38.3,46.36-22.56,1.26,3.73,1.06,20.48.38,23.61,12.12-26.55,45.3-30.14,39.16,6.72,6.13-8.51,11.06-17.36,14.88-27.16'
        }, null, -1)), Z_e = [
            z_e,
            Y_e,
            K_e
        ], Q_e = Ot(() => V('path', {
            class: 'body',
            d: 'm304.87,155.69c-85.74,16.74-119.78,111.87-148.39,183.91-6.33,17.8-12.45,35.72-18.62,53.56-8.48,14.16-18.75,34.65-27.55,47.8-24.06,34.26,7.13,7.01,18.14,1.25.64,1.76-28.12,58.72-21.79,57.88,16.92-11.3,32.49-32.36,46.46-46.55,1.4,2.36,3.01,27.01,7.77,25.44,8.99-13.85,14.43-30.22,19.77-41.47,59.1,12.05,146.8,10.1,200.8-16.6,138.74-67.15,89.2-299.08-76.6-265.21'
        }, null, -1)), J_e = Ot(() => V('path', {
            class: 'eyes emo',
            d: 'm439.63,242.46c1.85-14.67-22.74-14.91-22.75,0,0,7.63,20.64,16.7,22.75,0Zm-129.77,5.57c0,14.91,23.17,14.78,22.75,0-.45-15.75-22.75-14.32-22.75,0Z'
        }, null, -1)), eye = Ot(() => V('path', {
            class: 'feathers',
            d: 'm276.74,343.92c1.35-1.72,1.91-2.45,1.63-3.94-9.73,4.74-23.71,12.96-41.95,24.67,2.97-3.38,2.62-21.3,5.28-24.86l-29.76,11.04c-2.3.75,10.79-26.92,8.93-26.2l-19.48,1.63,12.86-27.93-.1.48c.79-2.14,1.71-4.69,2.5-6.43-24.13,17.33-45.57,41.59-65.56,62.58v.1c-4.15,6.18,37.59-10.12,38.01-9.21-59.33,95.27-48.45,72.61,30.72,23.61.19,19.01.13,30.52-.19,34.55-.06,4.03.42,5.57,1.44,4.61,18.29-22.35,35.51-39.67,55.67-64.69m115.85-160.58c-.9-.7-.64.35.77,3.17,1.81,3.02,7.33,19.65,9.02,27.07-16.92-11.48-36.93-27.72-53.66-36.28,1.87,3.82,7.79,24.53,8.73,25.34-10.82-5.54-26.29-13.25-35.8-13.53-.26,0-.48.03-.67.1.26.19.54.35.86.48v.1c18.92,11.21,36.79,24.41,53.56,39.16,3.46.81-10.11-24.38-9.79-25.15,21.98,14.47,41.22,33.92,60.76,50.97,2.53-1.85-2.32-13.06-3.74-20.35-.13,0-.64-1.86-.58-1.92-1.79-6.21-3.74-12.32-5.86-18.33,9.02,5.12,17.63,10.24,25.82,15.36,4.88,2.35,1.92-4.41.19-7.1-6.54-12.54-19.62-35.37-33.21-40.31,3.14,4.03,8.06,11.68,14.78,22.94-6.85-6.33-23.64-16.66-31.2-21.69Z'
        }, null, -1)), tye = [
            Q_e,
            J_e,
            eye
        ], rye = Ot(() => V('path', {
            class: 'body',
            d: 'm402.51,289.92c0,89.27-38.24,154.39-125.03,154.39s-125.03-65.11-125.03-154.39,51.05-172.02,125.03-172.02,125.03,82.74,125.03,172.02Z'
        }, null, -1)), sye = Ot(() => V('path', {
            class: 'feathers',
            d: 'm236.37,386.86c0,6.79-5.51,12.3-12.3,12.3s-12.3-5.51-12.3-12.3,5.51-12.3,12.3-12.3,12.3,5.51,12.3,12.3Zm-44.51-59.29c-9.06,0-16.4,7.34-16.4,16.4s7.34,16.4,16.4,16.4,16.4-7.34,16.4-16.4-7.34-16.4-16.4-16.4Zm158.83,25.17c-5.13,0-9.28,4.16-9.28,9.28s4.16,9.28,9.28,9.28,9.28-4.16,9.28-9.28-4.16-9.28-9.28-9.28Zm-43.44,46.42c-7.74,0-14.01,6.27-14.01,14.01s6.27,14.01,14.01,14.01,14.01-6.27,14.01-14.01-6.27-14.01-14.01-14.01Zm-63.48-115.75c-5.47,0-9.91,4.44-9.91,9.91s4.44,9.91,9.91,9.91,9.91-4.44,9.91-9.91-4.44-9.91-9.91-9.91Zm53.57,35.27c-8.5,0-15.38,6.89-15.38,15.38s6.89,15.38,15.38,15.38,15.38-6.89,15.38-15.38-6.89-15.38-15.38-15.38Zm-106.49-45.59c-2.68,0-4.85,2.17-4.85,4.85s2.17,4.85,4.85,4.85,4.85-2.17,4.85-4.85-2.17-4.85-4.85-4.85Zm17.41-101.68c-2.68,0-4.85,2.17-4.85,4.85s2.17,4.85,4.85,4.85,4.85-2.17,4.85-4.85-2.17-4.85-4.85-4.85Zm62.43,244.03c-2.68,0-4.85,2.17-4.85,4.85s2.17,4.85,4.85,4.85,4.85-2.17,4.85-4.85-2.17-4.85-4.85-4.85Zm52.32-122.12c-2.68,0-4.85,2.17-4.85,4.85s2.17,4.85,4.85,4.85,4.85-2.17,4.85-4.85-2.17-4.85-4.85-4.85Zm-66.44,63.85c-2.68,0-4.85,2.17-4.85,4.85s2.17,4.85,4.85,4.85,4.85-2.17,4.85-4.85-2.17-4.85-4.85-4.85Zm25.37-109.33c-2.68,0-4.85,2.17-4.85,4.85s2.17,4.85,4.85,4.85,4.85-2.17,4.85-4.85-2.17-4.85-4.85-4.85Zm30.77-112.84c-2.68,0-4.85,2.17-4.85,4.85s2.17,4.85,4.85,4.85,4.85-2.17,4.85-4.85-2.17-4.85-4.85-4.85Z'
        }, null, -1)), iye = [
            rye,
            sye
        ], oye = Ot(() => V('path', {
            class: 'eyes',
            d: 'm439.63,242.46c.33-14.78-23.12-14.9-22.75,0-.4,14.8,23.1,14.68,22.75,0Zm-129.77,5.57c0,14.91,23.17,14.78,22.75,0-.45-15.75-22.75-14.32-22.75,0Z'
        }, null, -1)), aye = Ot(() => V('path', {
            class: 'beak',
            d: 'm345.85,298.42c5.42,46.48,82.83,42.85,88.98-.77l4.13-2.88c2.94-.32,4.77-1.09,5.47-2.3.17-15.23-11.4-29.2-23.04-37.82-30.82-20.14-79.86,6.01-75.54,43.77Z'
        }, null, -1)), cye = Ot(() => V('path', {
            class: 'mouth',
            d: 'm437.81,295.45l.19-.19h.19c-1.11-1.38-107.2-1.04-91.76,3.36,24.28.89,66.94-1.43,89.17-1.34-.1-.42.77-.8,1.06-.96.32-.35.56-.69.96-.67.06-.13.13-.19.19-.19Z'
        }, null, -1));
    function lye(t, e, n, r, s, i) {
        return G(), K('svg', {
            viewBox: '0 0 500 500',
            class: nt([
                'avatar',
                `avatar-${ t.avatar }`
            ])
        }, [
            e_e,
            V('g', t_e, [
                t.avatar === 0 ? (G(), K('g', n_e, i_e)) : t.avatar === 1 ? (G(), K('g', o_e, l_e)) : t.avatar === 2 ? (G(), K('g', u_e, p_e)) : t.avatar === 3 ? (G(), K('g', m_e, y_e)) : t.avatar === 4 ? (G(), K('g', v_e, S_e)) : t.avatar === 5 ? (G(), K('g', w_e, C_e)) : t.avatar === 6 ? (G(), K('g', I_e, x_e)) : t.avatar === 7 ? (G(), K('g', P_e, D_e)) : t.avatar === 8 ? (G(), K('g', $_e, B_e)) : t.avatar === 9 ? (G(), K('g', q_e, W_e)) : t.avatar === 10 ? (G(), K('g', H_e, Z_e)) : t.avatar === 11 ? (G(), K('g', X_e, tye)) : t.avatar === 99 ? (G(), K('g', nye, iye)) : De('', true),
                oye,
                aye,
                cye
            ])
        ], 2);
    }
    const U3 = Je(Jge, [
            [
                'render',
                lye
            ],
            [
                '__scopeId',
                'data-v-762a6505'
            ]
        ]), uye = {}, fye = V('path', { d: 'm50,0C22.39,0,0,22.39,0,50s22.39,50,50,50,50-22.39,50-50S77.61,0,50,0Zm17.31,72.45c-12.4,0-22.45-10.05-22.45-22.45-.4-16.04-23.92-16.03-24.32,0,0,6.72,5.44,12.16,12.16,12.16,3.13.17,6.82-1.94,9.58-3.07l4.12,9.43-4.72,2.06c-14.3,6.59-31.81-4.71-31.44-20.58.76-29.62,44.16-29.61,44.91,0,0,6.72,5.44,12.16,12.16,12.16,16.03-.4,16.04-23.92,0-24.32-3.44-.2-7.13,2.2-10.06,3.61l-4.64-9.19,4.59-2.32c14.32-7.64,32.98,3.68,32.56,20.06,0,12.4-10.05,22.45-22.45,22.45Z' }, null, -1), dye = [fye];
    function pye(t, e) {
        return G(), K('svg', hye, dye);
    }
    const mye = Je(uye, [[
                'render',
                pye
            ]]), gye = at({
            props: {
                category: {
                    type: String,
                    required: true
                },
                slug: {
                    type: String,
                    required: true
                }
            },
            computed: {
                categoryClass() {
                    return lr.categorySlugByKey(this.category);
                },
                icon() {
                    return lr.instrumentIconBySlug(this.slug);
                }
            }
        });
    function a0e(t, e, n, r, s, i) {
        return G(), K('svg', {
            viewBox: '0 0 180 180',
            class: nt([
                'instrument',
                `type-${ t.categoryClass }`
            ])
        }, [t.icon === 'accordion' ? (G(), K('path', _ye)) : t.icon === 'banjo' ? (G(), K('path', yye)) : t.icon === 'bell' ? (G(), K('path', vye)) : t.icon === 'bongos' ? (G(), K('path', bye)) : t.icon === 'canon' ? (G(), K('path', Eye)) : t.icon === 'cap' ? (G(), K('path', Tye)) : t.icon === 'car' ? (G(), K('path', Sye)) : t.icon === 'castanets' ? (G(), K('path', wye)) : t.icon === 'cat' ? (G(), K('path', Oye)) : t.icon === 'cello' ? (G(), K('path', Aye)) : t.icon === 'chimes' ? (G(), K('path', Cye)) : t.icon === 'clock' ? (G(), K('path', Iye)) : t.icon === 'cup' ? (G(), K('path', kye)) : t.icon === 'dog' ? (G(), K('path', Nye)) : t.icon === 'drumKit' ? (G(), K('path', xye)) : t.icon === 'fish' ? (G(), K('path', Pye)) : t.icon === 'flute' ? (G(), K('path', Rye)) : t.icon === 'frenchHorn' ? (G(), K('path', Mye)) : t.icon === 'gong' ? (G(), K('path', Dye)) : t.icon === 'guitar' ? (G(), K('path', $ye)) : t.icon === 'hands' ? (G(), K('path', Lye)) : t.icon === 'kazoo' ? (G(), K('path', Fye)) : t.icon === 'mouth' ? (G(), K('path', Uye)) : t.icon === 'ocarina' ? (G(), K('path', Bye)) : t.icon === 'piano' ? (G(), K('path', qye)) : t.icon === 'poop' ? (G(), K('path', Vye)) : t.icon === 'pots' ? (G(), K('path', Gye)) : t.icon === 'sax' ? (G(), K('path', jye)) : t.icon === 'shaker' ? (G(), K('path', Wye)) : t.icon === 'snare' ? (G(), K('path', Hye)) : t.icon === 'sticks' ? (G(), K('path', zye)) : t.icon === 'synth' ? (G(), K('path', Yye)) : t.icon === 'tallBongo' ? (G(), K('path', Kye)) : t.icon === 'tamborine' ? (G(), K('path', Zye)) : t.icon === 'trombone' ? (G(), K('path', Xye)) : t.icon === 'trumpet' ? (G(), K('path', Qye)) : t.icon === 'tuba' ? (G(), K('path', Jye)) : t.icon === 'vibraslap' ? (G(), K('path', e0e)) : t.icon === 'whistle' ? (G(), K('path', t0e)) : t.icon === 'woodblock' ? (G(), K('path', n0e)) : t.icon === 'xylophone' ? (G(), K('path', r0e)) : t.icon === 'goat' ? (G(), K('path', s0e)) : t.icon === 'mosquito' ? (G(), K('path', i0e)) : t.icon === 'electric-guitar' ? (G(), K('path', o0e)) : De('', true)], 2);
    }
    const cC = Je(gye, [
            [
                'render',
                a0e
            ],
            [
                '__scopeId',
                'data-v-1717ac28'
            ]
        ]), c0e = at({
            components: {
                AvatarSVG: U3,
                InfinitySVG: mye,
                InstrumentSVG: cC
            },
            props: {
                choice: {
                    type: Object,
                    required: true
                }
            },
            computed: {
                difficultyKey() {
                    return lr.difficultyI18ByNumber(this.choice.beatmap.config.difficulty);
                }
            }
        });
    function h0e(t, e, n, r, s, i) {
        const o = We('InstrumentSVG'), a = We('InfinitySVG'), l = We('AvatarSVG'), u = fn('t');
        return G(), K('button', {
            class: nt([
                { selected: t.choice.isSelected },
                'choice has-icon has-sub'
            ])
        }, [
            Ye(o, {
                category: t.choice.beatmap.config.category,
                slug: t.choice.instrumentSlug,
                class: 'icon'
            }, null, 8, [
                'category',
                'slug'
            ]),
            Tn(' ' + Nt(t.choice.label) + ' ', 1),
            t.choice.beatmap.config.type === 'Continuous' ? (G(), wt(a, {
                key: 0,
                class: 'infinity'
            })) : De('', true),
            qe(V('span', l0e, null, 512), [[
                    u,
                    t.difficultyKey
                ]]),
            t.choice.players ? (G(), K('div', u0e, [(G(true), K(gt, null, wn(t.choice.players, f => (G(), K('div', {
                    key: f.name,
                    focusable: 'false',
                    class: 'avatar-wrapper'
                }, [Ye(l, { avatar: f.avatar }, null, 8, ['avatar'])]))), 128))])) : De('', true)
        ], 2);
    }
    const f0e = Je(c0e, [
            [
                'render',
                h0e
            ],
            [
                '__scopeId',
                'data-v-30b2a248'
            ]
        ]), d0e = at({
            components: { AvatarSVG: U3 },
            props: {
                info: {
                    type: Object,
                    required: true
                },
                isVip: {
                    type: Boolean,
                    default: () => false
                },
                players: {
                    type: Object,
                    required: false
                },
                responseKey: {
                    type: String,
                    required: false
                }
            },
            emits: { didRequestChangeVip: () => true },
            methods: {
                async onAvatarClick() {
                    if (!this.players || !this.responseKey) {
                        return;
                    }
                    const t = Object.values(this.players).map(s => s.avatar), e = [], n = [];
                    let r = this.info.avatar;
                    for (let s = 0; s < 12; s++) {
                        t.includes(s) || (s < this.info.avatar ? e.push(s) : n.push(s));
                    }
                    n.length ? r = n[0] : e.length && (r = e[0]);
                    try {
                        await this.$ecast.updateObject(this.responseKey, { changeAvatar: r });
                    } catch (s) {
                        this.$handleEcastError(s);
                    }
                },
                onChangeHostClick() {
                    this.isVip && this.$emit('didRequestChangeVip');
                }
            }
        }), y0e = [
            'aria-label',
            'disabled'
        ];
    function v0e(t, e, n, r, s, i) {
        const o = We('AvatarSVG'), a = fn('t'), l = fn('bb');
        return G(), K('div', p0e, [V('div', m0e, [
                t.info.isAudience ? qe((G(), K('p', g0e, null, 512)), [[
                        a,
                        'AUDIENCE.NAME'
                    ]]) : (G(), K('p', _0e, Nt(t.info.name), 1)),
                V('button', {
                    class: 'change-avatar',
                    'aria-label': t.$t('ARIA.CHANGE_AVATAR'),
                    disabled: !t.responseKey,
                    onClick: e[0] || (e[0] = (...u) => t.onAvatarClick && t.onAvatarClick(...u))
                }, [Ye(o, {
                        focusable: 'false',
                        class: 'header-avatar',
                        avatar: t.info.avatar
                    }, null, 8, ['avatar'])], 8, y0e),
                t.isVip ? qe((G(), K('button', {
                    key: 2,
                    class: 'change-host',
                    onClick: e[1] || (e[1] = (...u) => t.onChangeHostClick && t.onChangeHostClick(...u))
                }, null, 512)), [[
                        l,
                        t.$t('MENU.CHANGE_HOST')
                    ]]) : De('', true)
            ])]);
    }
    const Hf = Je(d0e, [
            [
                'render',
                v0e
            ],
            [
                '__scopeId',
                'data-v-dbeb3660'
            ]
        ]), pw = (t, e, n) => ({
            endTime: e,
            insertTime: n,
            type: 'exponentialRampToValue',
            value: t
        }), mw = (t, e, n) => ({
            endTime: e,
            insertTime: n,
            type: 'linearRampToValue',
            value: t
        }), d2 = (t, e) => ({
            startTime: e,
            type: 'setValue',
            value: t
        }), uC = (t, e, n) => ({
            duration: n,
            startTime: e,
            type: 'setValueCurve',
            values: t
        }), hC = (t, e, {
            startTime: n,
            target: r,
            timeConstant: s
        }) => r + (e - r) * Math.exp((n - t) / s), _l = t => t.type === 'exponentialRampToValue', v1 = t => t.type === 'linearRampToValue', Vo = t => _l(t) || v1(t), B3 = t => t.type === 'setValue', Ji = t => t.type === 'setValueCurve', b1 = (t, e, n, r) => {
            const s = t[e];
            return s === void 0 ? r : Vo(s) || B3(s) ? s.value : Ji(s) ? s.values[s.values.length - 1] : hC(n, b1(t, e - 1, s.startTime, r), s);
        }, gw = (t, e, n, r, s) => n === void 0 ? [
            r.insertTime,
            s
        ] : Vo(n) ? [
            n.endTime,
            n.value
        ] : B3(n) ? [
            n.startTime,
            n.value
        ] : Ji(n) ? [
            n.startTime + n.duration,
            n.values[n.values.length - 1]
        ] : [
            n.startTime,
            b1(t, e - 1, n.startTime, s)
        ], p2 = t => t.type === 'cancelAndHold', m2 = t => t.type === 'cancelScheduledValues', Lo = t => p2(t) || m2(t) ? t.cancelTime : _l(t) || v1(t) ? t.endTime : t.startTime, _w = (t, e, n, {
            endTime: r,
            value: s
        }) => n === s ? s : 0 < n && 0 < s || n < 0 && s < 0 ? n * (s / n) ** ((t - e) / (r - e)) : 0, yw = (t, e, n, {
            endTime: r,
            value: s
        }) => n + (t - e) / (r - e) * (s - n), b0e = (t, e) => {
            const n = Math.floor(e), r = Math.ceil(e);
            return n === r ? t[n] : (1 - (e - n)) * t[n] + (1 - (r - e)) * t[r];
        }, E0e = (t, {
            duration: e,
            startTime: n,
            values: r
        }) => {
            const s = (t - n) / e * (r.length - 1);
            return b0e(r, s);
        }, Sp = t => t.type === 'setTarget';
    class T0e {
        constructor(e) {
            this._automationEvents = [];
            this._currenTime = 0;
            this._defaultValue = e;
            ;
        }
        [Symbol.iterator]() {
            return this._automationEvents[Symbol.iterator]();
        }
        add(e) {
            const n = Lo(e);
            if (p2(e) || m2(e)) {
                const r = this._automationEvents.findIndex(i => m2(e) && Ji(i) ? i.startTime + i.duration >= n : Lo(i) >= n), s = this._automationEvents[r];
                if (r !== -1 && (this._automationEvents = this._automationEvents.slice(0, r)), p2(e)) {
                    const i = this._automationEvents[this._automationEvents.length - 1];
                    if (s !== void 0 && Vo(s)) {
                        if (Sp(i)) {
                            throw new Error('The internal list is malformed.');
                        }
                        const o = Ji(i) ? i.startTime + i.duration : Lo(i), a = Ji(i) ? i.values[i.values.length - 1] : i.value, l = _l(s) ? _w(n, o, a, s) : yw(n, o, a, s), u = _l(s) ? pw(l, n, this._currenTime) : mw(l, n, this._currenTime);
                        this._automationEvents.push(u);
                    }
                    i !== void 0 && Sp(i) && this._automationEvents.push(d2(this.getValue(n), n));
                    i !== void 0 && Ji(i) && i.startTime + i.duration > n && (this._automationEvents[this._automationEvents.length - 1] = uC(new Float32Array([
                        6,
                        7
                    ]), i.startTime, n - i.startTime));
                    ;
                }
            } else {
                const r = this._automationEvents.findIndex(o => Lo(o) > n), s = r === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[r - 1];
                if (s !== void 0 && Ji(s) && Lo(s) + s.duration > n) {
                    return false;
                }
                const i = _l(e) ? pw(e.value, e.endTime, this._currenTime) : v1(e) ? mw(e.value, n, this._currenTime) : e;
                if (r === -1) {
                    this._automationEvents.push(i);
                } else {
                    if (Ji(e) && n + e.duration > Lo(this._automationEvents[r])) {
                        return false;
                    }
                    this._automationEvents.splice(r, 0, i);
                }
            }
            return true;
        }
        flush(e) {
            const n = this._automationEvents.findIndex(r => Lo(r) > e);
            if (n > 1) {
                const r = this._automationEvents.slice(n - 1), s = r[0];
                Sp(s) && r.unshift(d2(b1(this._automationEvents, n - 2, s.startTime, this._defaultValue), s.startTime));
                this._automationEvents = r;
                ;
            }
        }
        getValue(e) {
            if (this._automationEvents.length === 0) {
                return this._defaultValue;
            }
            const n = this._automationEvents.findIndex(o => Lo(o) > e), r = this._automationEvents[n], s = (n === -1 ? this._automationEvents.length : n) - 1, i = this._automationEvents[s];
            if (i !== void 0 && Sp(i) && (r === void 0 || !Vo(r) || r.insertTime > e)) {
                return hC(e, b1(this._automationEvents, s - 1, i.startTime, this._defaultValue), i);
            }
            if (i !== void 0 && B3(i) && (r === void 0 || !Vo(r))) {
                return i.value;
            }
            if (i !== void 0 && Ji(i) && (r === void 0 || !Vo(r) || i.startTime + i.duration > e)) {
                return e < i.startTime + i.duration ? E0e(e, i) : i.values[i.values.length - 1];
            }
            if (i !== void 0 && Vo(i) && (r === void 0 || !Vo(r))) {
                return i.value;
            }
            if (r !== void 0 && _l(r)) {
                const [o, a] = gw(this._automationEvents, s, i, r, this._defaultValue);
                return _w(e, o, a, r);
            }
            if (r !== void 0 && v1(r)) {
                const [o, a] = gw(this._automationEvents, s, i, r, this._defaultValue);
                return yw(e, o, a, r);
            }
            return this._defaultValue;
        }
    }
    const S0e = t => ({
            cancelTime: t,
            type: 'cancelAndHold'
        }), w0e = t => ({
            cancelTime: t,
            type: 'cancelScheduledValues'
        }), O0e = (t, e) => ({
            endTime: e,
            type: 'exponentialRampToValue',
            value: t
        }), A0e = (t, e) => ({
            endTime: e,
            type: 'linearRampToValue',
            value: t
        }), C0e = (t, e, n) => ({
            startTime: e,
            target: t,
            timeConstant: n,
            type: 'setTarget'
        }), I0e = () => new DOMException('', 'AbortError'), k0e = t => (e, n, [r, s, i], o) => {
            t(e[s], [
                n,
                r,
                i
            ], a => a[0] === n && a[1] === r, o);
        }, N0e = t => (e, n, r) => {
            const s = [];
            for (let i = 0; i < r.numberOfInputs; i += 1) {
                s.push(new Set());
            }
            t.set(e, {
                activeInputs: s,
                outputs: new Set(),
                passiveInputs: new WeakMap(),
                renderer: n
            });
        }, x0e = t => (e, n) => {
            t.set(e, {
                activeInputs: new Set(),
                passiveInputs: new WeakMap(),
                renderer: n
            });
        }, Ql = new WeakSet(), fC = new WeakMap(), q3 = new WeakMap(), dC = new WeakMap(), V3 = new WeakMap(), pg = new WeakMap(), pC = new WeakMap(), g2 = new WeakMap(), _2 = new WeakMap(), y2 = new WeakMap(), mC = {
            construct() {
                return mC;
            }
        }, P0e = t => {
            try {
                const e = new Proxy(t, mC);
                new e();
            } catch {
                return false;
            }
            return true;
        }, bw = (t, e) => {
            const n = [];
            let r = t.replace(/^[\s]+/, ''), s = r.match(/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/);
            for (; s !== null;) {
                const i = s[1].slice(1, -1), o = s[0].replace(/([\s]+)?;?$/, '').replace(i, new URL(i, e).toString());
                n.push(o);
                r = r.slice(s[0].length).replace(/^[\s]+/, '');
                s = r.match(/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/);
                ;
            }
            return [
                n.join(';'),
                r
            ];
        }, Ew = t => {
            if (t !== void 0 && !Array.isArray(t)) {
                throw new TypeError('The parameterDescriptors property of given value for processorCtor is not an array.');
            }
        }, Tw = t => {
            if (!P0e(t)) {
                throw new TypeError('The given value for processorCtor should be a constructor.');
            }
            if (t.prototype === null || typeof t.prototype != 'object') {
                throw new TypeError('The given value for processorCtor should have a prototype.');
            }
        }, R0e = (t, e, n, r, s, i, o, a, l, u, f, d, p) => {
            let _ = 0;
            return (v, y, g = { credentials: 'omit' }) => {
                const b = f.get(v);
                if (b !== void 0 && b.has(y)) {
                    return Promise.resolve();
                }
                const A = u.get(v);
                if (A !== void 0) {
                    const O = A.get(y);
                    if (O !== void 0) {
                        return O;
                    }
                }
                const N = i(v), I = N.audioWorklet === void 0 ? s(y).then(([O, x]) => {
                        const [M, L] = bw(O, x), U = `${ M };((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${ L }
})})(window,'_AWGS')`;
                        return n(U);
                    }).then(() => {
                        const O = p._AWGS.pop();
                        if (O === void 0) {
                            throw new SyntaxError();
                        }
                        r(N.currentTime, N.sampleRate, () => O(class {
                        }, void 0, (x, M) => {
                            if (x.trim() === '') {
                                throw e();
                            }
                            const L = _2.get(N);
                            if (L !== void 0) {
                                if (L.has(x)) {
                                    throw e();
                                }
                                Tw(M);
                                Ew(M.parameterDescriptors);
                                L.set(x, M);
                                ;
                            } else {
                                Tw(M);
                                Ew(M.parameterDescriptors);
                                _2.set(N, new Map([[
                                        x,
                                        M
                                    ]]));
                                ;
                            }
                        }, N.sampleRate, void 0, void 0));
                    }) : Promise.all([
                        s(y),
                        Promise.resolve(t(d, d))
                    ]).then(([[O, x], M]) => {
                        const L = _ + 1;
                        _ = L;
                        const [U, ee] = bw(O, x), ge = `${ U };((AudioWorkletProcessor,registerProcessor)=>{${ ee }
})(${ M ? 'AudioWorkletProcessor' : 'class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}' },(n,p)=>registerProcessor(n,class extends p{${ M ? '' : '__c = (a) => a.forEach(e=>this.__b.add(e.buffer));' }process(i,o,p){${ M ? '' : 'i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));' }return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${ L }',class extends AudioWorkletProcessor{process(){return !1}})`, Y = new Blob([ge], { type: 'application/javascript; charset=utf-8' }), Q = URL.createObjectURL(Y);
                        return N.audioWorklet.addModule(Q, g).then(() => {
                            if (a(N)) {
                                return N;
                            }
                            const ue = o(N);
                            return ue.audioWorklet.addModule(Q, g).then(() => ue);
                        }).then(ue => {
                            if (l === null) {
                                throw new SyntaxError();
                            }
                            try {
                                new l(ue, `__sac${ L }`);
                            } catch {
                                throw new SyntaxError();
                            }
                        }).finally(() => URL.revokeObjectURL(Q));
                    });
                return A === void 0 ? u.set(v, new Map([[
                        y,
                        I
                    ]])) : A.set(y, I), I.then(() => {
                    const O = f.get(v);
                    O === void 0 ? f.set(v, new Set([y])) : O.add(y);
                }).finally(() => {
                    const O = u.get(v);
                    O !== void 0 && O.delete(y);
                }), I;
            };
        }, Zs = (t, e) => {
            const n = t.get(e);
            if (n === void 0) {
                throw new Error('A value with the given key could not be found.');
            }
            return n;
        }, mg = (t, e) => {
            const n = Array.from(t).filter(e);
            if (n.length > 1) {
                throw Error('More than one element was found.');
            }
            if (n.length === 0) {
                throw Error('No element was found.');
            }
            const [r] = n;
            return t.delete(r), r;
        }, gC = (t, e, n, r) => {
            const s = Zs(t, e), i = mg(s, o => o[0] === n && o[1] === r);
            return s.size === 0 && t.delete(e), i;
        }, zf = t => Zs(pC, t), Jl = t => {
            if (Ql.has(t)) {
                throw new Error('The AudioNode is already stored.');
            }
            Ql.add(t);
            zf(t).forEach(e => e(true));
            ;
        }, _C = t => 'port' in t, Yf = t => {
            if (!Ql.has(t)) {
                throw new Error('The AudioNode is not stored.');
            }
            Ql.delete(t);
            zf(t).forEach(e => e(false));
            ;
        }, v2 = (t, e) => {
            !_C(t) && e.every(n => n.size === 0) && Yf(t);
        }, M0e = (t, e, n, r, s, i, o, a, l, u, f, d, p) => {
            const _ = new WeakMap();
            return (v, y, g, b, A) => {
                const {
                        activeInputs: N,
                        passiveInputs: I
                    } = i(y), {outputs: O} = i(v), x = a(v), M = L => {
                        const U = l(y), ee = l(v);
                        if (L) {
                            const ae = gC(I, v, g, b);
                            t(N, v, ae, false);
                            !A && !d(v) && n(ee, U, g, b);
                            p(y) && Jl(y);
                            ;
                        } else {
                            const ae = r(N, v, g, b);
                            e(I, b, ae, false);
                            !A && !d(v) && s(ee, U, g, b);
                            ;
                            const Z = o(y);
                            if (Z === 0) {
                                f(y) && v2(y, N);
                            } else {
                                const fe = _.get(y);
                                fe !== void 0 && clearTimeout(fe);
                                _.set(y, setTimeout(() => {
                                    f(y) && v2(y, N);
                                }, Z * 1000));
                                ;
                            }
                        }
                    };
                return u(O, [
                    y,
                    g,
                    b
                ], L => L[0] === y && L[1] === g && L[2] === b, true) ? (x.add(M), f(v) ? t(N, v, [
                    g,
                    b,
                    M
                ], true) : e(I, b, [
                    v,
                    g,
                    M
                ], true), true) : false;
            };
        }, D0e = t => (e, n, [r, s, i], o) => {
            const a = e.get(r);
            a === void 0 ? e.set(r, new Set([[
                    s,
                    n,
                    i
                ]])) : t(a, [
                s,
                n,
                i
            ], l => l[0] === s && l[1] === n, o);
        }, $0e = t => (e, n) => {
            const r = t(e, {
                channelCount: 1,
                channelCountMode: 'explicit',
                channelInterpretation: 'discrete',
                gain: 0
            });
            n.connect(r).connect(e.destination);
            const s = () => {
                n.removeEventListener('ended', s);
                n.disconnect(r);
                r.disconnect();
                ;
            };
            n.addEventListener('ended', s);
        }, L0e = t => (e, n) => {
            t(e).add(n);
        }, F0e = {
            channelCount: 2,
            channelCountMode: 'max',
            channelInterpretation: 'speakers',
            fftSize: 2048,
            maxDecibels: -30,
            minDecibels: -100,
            smoothingTimeConstant: 0.8
        }, U0e = (t, e, n, r, s, i) => class extends t {
            constructor(a, l) {
                const u = s(a), f = {
                        ...F0e,
                        ...l
                    }, d = r(u, f), p = i(u) ? e() : null;
                super(a, false, d, p);
                this._nativeAnalyserNode = d;
                ;
            }
            get fftSize() {
                return this._nativeAnalyserNode.fftSize;
            }
            set fftSize(a) {
                this._nativeAnalyserNode.fftSize = a;
            }
            get frequencyBinCount() {
                return this._nativeAnalyserNode.frequencyBinCount;
            }
            get maxDecibels() {
                return this._nativeAnalyserNode.maxDecibels;
            }
            set maxDecibels(a) {
                const l = this._nativeAnalyserNode.maxDecibels;
                if (this._nativeAnalyserNode.maxDecibels = a, !(a > this._nativeAnalyserNode.minDecibels)) {
                    throw this._nativeAnalyserNode.maxDecibels = l, n();
                }
            }
            get minDecibels() {
                return this._nativeAnalyserNode.minDecibels;
            }
            set minDecibels(a) {
                const l = this._nativeAnalyserNode.minDecibels;
                if (this._nativeAnalyserNode.minDecibels = a, !(this._nativeAnalyserNode.maxDecibels > a)) {
                    throw this._nativeAnalyserNode.minDecibels = l, n();
                }
            }
            get smoothingTimeConstant() {
                return this._nativeAnalyserNode.smoothingTimeConstant;
            }
            set smoothingTimeConstant(a) {
                this._nativeAnalyserNode.smoothingTimeConstant = a;
            }
            getByteFrequencyData(a) {
                this._nativeAnalyserNode.getByteFrequencyData(a);
            }
            getByteTimeDomainData(a) {
                this._nativeAnalyserNode.getByteTimeDomainData(a);
            }
            getFloatFrequencyData(a) {
                this._nativeAnalyserNode.getFloatFrequencyData(a);
            }
            getFloatTimeDomainData(a) {
                this._nativeAnalyserNode.getFloatTimeDomainData(a);
            }
        }, mr = (t, e) => t.context === e, B0e = (t, e, n) => () => {
            const r = new WeakMap(), s = async (i, o) => {
                    let a = e(i);
                    if (!mr(a, o)) {
                        const u = {
                            channelCount: a.channelCount,
                            channelCountMode: a.channelCountMode,
                            channelInterpretation: a.channelInterpretation,
                            fftSize: a.fftSize,
                            maxDecibels: a.maxDecibels,
                            minDecibels: a.minDecibels,
                            smoothingTimeConstant: a.smoothingTimeConstant
                        };
                        a = t(o, u);
                    }
                    return r.set(o, a), await n(i, o, a), a;
                };
            return {
                render(i, o) {
                    const a = r.get(o);
                    return a !== void 0 ? Promise.resolve(a) : s(i, o);
                }
            };
        }, E1 = t => {
            try {
                t.copyToChannel(new Float32Array(1), 0, -1);
            } catch {
                return false;
            }
            return true;
        }, $i = () => new DOMException('', 'IndexSizeError'), G3 = t => {
            ;
        }, V0e = (t, e, n, r, s, i, o, a) => {
            let l = null;
            return class yC {
                constructor(f) {
                    if (s === null) {
                        throw new Error('Missing the native OfflineAudioContext constructor.');
                    }
                    const {
                        length: d,
                        numberOfChannels: p,
                        sampleRate: _
                    } = {
                        ...q0e,
                        ...f
                    };
                    l === null && (l = new s(1, 1, 44100));
                    const v = r !== null && e(i, i) ? new r({
                        length: d,
                        numberOfChannels: p,
                        sampleRate: _
                    }) : l.createBuffer(p, d, _);
                    if (v.numberOfChannels === 0) {
                        throw n();
                    }
                    return typeof v.copyFromChannel != 'function' ? (o(v), G3(v)) : e(E1, () => E1(v)) || a(v), t.add(v), v;
                }
                static [Symbol.hasInstance](f) {
                    return f !== null && typeof f == 'object' && Object.getPrototypeOf(f) === yC.prototype || t.has(f);
                }
            };
        }, Rr = -3.4028234663852886e+38, Er = -Rr, ao = t => Ql.has(t), j0e = (t, e, n, r, s, i, o, a) => class extends t {
            constructor(u, f) {
                const d = i(u), p = {
                        ...G0e,
                        ...f
                    }, _ = s(d, p), v = o(d), y = v ? e() : null;
                super(u, false, _, y);
                this._audioBufferSourceNodeRenderer = y;
                this._isBufferNullified = false;
                this._isBufferSet = p.buffer !== null;
                this._nativeAudioBufferSourceNode = _;
                this._onended = null;
                this._playbackRate = n(this, v, _.playbackRate, Er, Rr);
                ;
            }
            get buffer() {
                return this._isBufferNullified ? null : this._nativeAudioBufferSourceNode.buffer;
            }
            set buffer(u) {
                if (this._nativeAudioBufferSourceNode.buffer = u, u !== null) {
                    if (this._isBufferSet) {
                        throw r();
                    }
                    this._isBufferSet = true;
                }
            }
            get loop() {
                return this._nativeAudioBufferSourceNode.loop;
            }
            set loop(u) {
                this._nativeAudioBufferSourceNode.loop = u;
            }
            get loopEnd() {
                return this._nativeAudioBufferSourceNode.loopEnd;
            }
            set loopEnd(u) {
                this._nativeAudioBufferSourceNode.loopEnd = u;
            }
            get loopStart() {
                return this._nativeAudioBufferSourceNode.loopStart;
            }
            set loopStart(u) {
                this._nativeAudioBufferSourceNode.loopStart = u;
            }
            get onended() {
                return this._onended;
            }
            set onended(u) {
                const f = typeof u == 'function' ? a(this, u) : null;
                this._nativeAudioBufferSourceNode.onended = f;
                const d = this._nativeAudioBufferSourceNode.onended;
                this._onended = d !== null && d === f ? u : d;
            }
            get playbackRate() {
                return this._playbackRate;
            }
            start(u = 0, f = 0, d) {
                if (this._nativeAudioBufferSourceNode.start(u, f, d), this._audioBufferSourceNodeRenderer !== null && (this._audioBufferSourceNodeRenderer.start = d === void 0 ? [
                        u,
                        f
                    ] : [
                        u,
                        f,
                        d
                    ]), this.context.state !== 'closed') {
                    Jl(this);
                    const p = () => {
                        this._nativeAudioBufferSourceNode.removeEventListener('ended', p);
                        ao(this) && Yf(this);
                        ;
                    };
                    this._nativeAudioBufferSourceNode.addEventListener('ended', p);
                }
            }
            stop(u = 0) {
                this._nativeAudioBufferSourceNode.stop(u);
                this._audioBufferSourceNodeRenderer !== null && (this._audioBufferSourceNodeRenderer.stop = u);
                ;
            }
        }, W0e = (t, e, n, r, s) => () => {
            const i = new WeakMap();
            let o = null, a = null;
            const l = async (u, f) => {
                let d = n(u);
                const p = mr(d, f);
                if (!p) {
                    const _ = {
                        buffer: d.buffer,
                        channelCount: d.channelCount,
                        channelCountMode: d.channelCountMode,
                        channelInterpretation: d.channelInterpretation,
                        loop: d.loop,
                        loopEnd: d.loopEnd,
                        loopStart: d.loopStart,
                        playbackRate: d.playbackRate.value
                    };
                    d = e(f, _);
                    o !== null && d.start(...o);
                    a !== null && d.stop(a);
                    ;
                }
                return i.set(f, d), p ? await t(f, u.playbackRate, d.playbackRate) : await r(f, u.playbackRate, d.playbackRate), await s(u, f, d), d;
            };
            return {
                set start(u) {
                    o = u;
                },
                set stop(u) {
                    a = u;
                },
                render(u, f) {
                    const d = i.get(f);
                    return d !== void 0 ? Promise.resolve(d) : l(u, f);
                }
            };
        }, H0e = t => 'playbackRate' in t, z0e = t => 'frequency' in t && 'gain' in t, Y0e = t => 'offset' in t, K0e = t => !('frequency' in t) && 'gain' in t, Z0e = t => 'detune' in t && 'frequency' in t, X0e = t => 'pan' in t, Tr = t => Zs(fC, t), Kf = t => Zs(dC, t), b2 = (t, e) => {
            const {activeInputs: n} = Tr(t);
            n.forEach(s => s.forEach(([i]) => {
                e.includes(t) || b2(i, [
                    ...e,
                    t
                ]);
            }));
            const r = H0e(t) ? [t.playbackRate] : _C(t) ? Array.from(t.parameters.values()) : z0e(t) ? [
                t.Q,
                t.detune,
                t.frequency,
                t.gain
            ] : Y0e(t) ? [t.offset] : K0e(t) ? [t.gain] : Z0e(t) ? [
                t.detune,
                t.frequency
            ] : X0e(t) ? [t.pan] : [];
            for (const s of r) {
                const i = Kf(s);
                i !== void 0 && i.activeInputs.forEach(([o]) => b2(o, e));
            }
            ao(t) && Yf(t);
        }, vC = t => {
            b2(t.destination, []);
        }, Q0e = t => t === void 0 || typeof t == 'number' || typeof t == 'string' && (t === 'balanced' || t === 'interactive' || t === 'playback'), J0e = (t, e, n, r, s, i, o, a, l) => class extends t {
            constructor(f = {}) {
                if (l === null) {
                    throw new Error('Missing the native AudioContext constructor.');
                }
                let d;
                try {
                    d = new l(f);
                } catch (v) {
                    throw v.code === 12 && v.message === 'sampleRate is not in range' ? n() : v;
                }
                if (d === null) {
                    throw r();
                }
                if (!Q0e(f.latencyHint)) {
                    throw new TypeError(`The provided value '${ f.latencyHint }' is not a valid enum value of type AudioContextLatencyCategory.`);
                }
                if (f.sampleRate !== void 0 && d.sampleRate !== f.sampleRate) {
                    throw n();
                }
                super(d, 2);
                const {latencyHint: p} = f, {sampleRate: _} = d;
                if (this._baseLatency = typeof d.baseLatency == 'number' ? d.baseLatency : p === 'balanced' ? 512 / _ : p === 'interactive' || p === void 0 ? 256 / _ : p === 'playback' ? 1024 / _ : Math.max(2, Math.min(128, Math.round(p * _ / 128))) * 128 / _, this._nativeAudioContext = d, l.name === 'webkitAudioContext' ? (this._nativeGainNode = d.createGain(), this._nativeOscillatorNode = d.createOscillator(), this._nativeGainNode.gain.value = 1e-37, this._nativeOscillatorNode.connect(this._nativeGainNode).connect(d.destination), this._nativeOscillatorNode.start()) : (this._nativeGainNode = null, this._nativeOscillatorNode = null), this._state = null, d.state === 'running') {
                    this._state = 'suspended';
                    const v = () => {
                        this._state === 'suspended' && (this._state = null);
                        d.removeEventListener('statechange', v);
                        ;
                    };
                    d.addEventListener('statechange', v);
                }
            }
            get baseLatency() {
                return this._baseLatency;
            }
            get state() {
                return this._state !== null ? this._state : this._nativeAudioContext.state;
            }
            close() {
                return this.state === 'closed' ? this._nativeAudioContext.close().then(() => {
                    throw e();
                }) : (this._state === 'suspended' && (this._state = null), this._nativeAudioContext.close().then(() => {
                    this._nativeGainNode !== null && this._nativeOscillatorNode !== null && (this._nativeOscillatorNode.stop(), this._nativeGainNode.disconnect(), this._nativeOscillatorNode.disconnect());
                    vC(this);
                    ;
                }));
            }
            createMediaElementSource(f) {
                return new s(this, { mediaElement: f });
            }
            createMediaStreamDestination() {
                return new i(this);
            }
            createMediaStreamSource(f) {
                return new o(this, { mediaStream: f });
            }
            createMediaStreamTrackSource(f) {
                return new a(this, { mediaStreamTrack: f });
            }
            resume() {
                return this._state === 'suspended' ? new Promise((f, d) => {
                    const p = () => {
                        this._nativeAudioContext.removeEventListener('statechange', p);
                        this._nativeAudioContext.state === 'running' ? f() : this.resume().then(f, d);
                        ;
                    };
                    this._nativeAudioContext.addEventListener('statechange', p);
                }) : this._nativeAudioContext.resume().catch(f => {
                    throw f === void 0 || f.code === 15 ? e() : f;
                });
            }
            suspend() {
                return this._nativeAudioContext.suspend().catch(f => {
                    throw f === void 0 ? e() : f;
                });
            }
        }, e2e = (t, e, n, r, s, i, o, a) => class extends t {
            constructor(u, f) {
                const d = i(u), p = o(d), _ = s(d, f, p), v = p ? e(a) : null;
                super(u, false, _, v);
                this._isNodeOfNativeOfflineAudioContext = p;
                this._nativeAudioDestinationNode = _;
                ;
            }
            get channelCount() {
                return this._nativeAudioDestinationNode.channelCount;
            }
            set channelCount(u) {
                if (this._isNodeOfNativeOfflineAudioContext) {
                    throw r();
                }
                if (u > this._nativeAudioDestinationNode.maxChannelCount) {
                    throw n();
                }
                this._nativeAudioDestinationNode.channelCount = u;
            }
            get channelCountMode() {
                return this._nativeAudioDestinationNode.channelCountMode;
            }
            set channelCountMode(u) {
                if (this._isNodeOfNativeOfflineAudioContext) {
                    throw r();
                }
                this._nativeAudioDestinationNode.channelCountMode = u;
            }
            get maxChannelCount() {
                return this._nativeAudioDestinationNode.maxChannelCount;
            }
        }, t2e = t => {
            const e = new WeakMap(), n = async (r, s) => {
                    const i = s.destination;
                    return e.set(s, i), await t(r, s, i), i;
                };
            return {
                render(r, s) {
                    const i = e.get(s);
                    return i !== void 0 ? Promise.resolve(i) : n(r, s);
                }
            };
        }, n2e = (t, e, n, r, s, i, o, a) => (l, u) => {
            const f = u.listener, d = () => {
                    const O = new Float32Array(1), x = e(u, {
                            channelCount: 1,
                            channelCountMode: 'explicit',
                            channelInterpretation: 'speakers',
                            numberOfInputs: 9
                        }), M = o(u);
                    let L = false, U = [
                            0,
                            0,
                            -1,
                            0,
                            1,
                            0
                        ], ee = [
                            0,
                            0,
                            0
                        ];
                    const ae = () => {
                            if (L) {
                                return;
                            }
                            L = true;
                            const Y = r(u, 256, 9, 0);
                            Y.onaudioprocess = ({inputBuffer: Q}) => {
                                const ue = [
                                    i(Q, O, 0),
                                    i(Q, O, 1),
                                    i(Q, O, 2),
                                    i(Q, O, 3),
                                    i(Q, O, 4),
                                    i(Q, O, 5)
                                ];
                                ue.some((Oe, be) => Oe !== U[be]) && (f.setOrientation(...ue), U = ue);
                                const _e = [
                                    i(Q, O, 6),
                                    i(Q, O, 7),
                                    i(Q, O, 8)
                                ];
                                _e.some((Oe, be) => Oe !== ee[be]) && (f.setPosition(..._e), ee = _e);
                            };
                            x.connect(Y);
                            ;
                        }, Z = Y => Q => {
                            if (Q !== U[Y]) {
                                U[Y] = Q;
                                f.setOrientation(...U);
                            }
                        }, fe = Y => Q => {
                            if (Q !== ee[Y]) {
                                ee[Y] = Q;
                                f.setPosition(...ee);
                            }
                        }, ge = (Y, Q, ue) => {
                            const _e = n(u, {
                                channelCount: 1,
                                channelCountMode: 'explicit',
                                channelInterpretation: 'discrete',
                                offset: Q
                            });
                            _e.connect(x, 0, Y);
                            _e.start();
                            Object.defineProperty(_e.offset, 'defaultValue', {
                                get() {
                                    return Q;
                                }
                            });
                            ;
                            const Oe = t({ context: l }, M, _e.offset, Er, Rr);
                            return a(Oe, 'value', be => () => be.call(Oe), be => Ce => {
                                try {
                                    be.call(Oe, Ce);
                                } catch (Me) {
                                    if (Me.code !== 9) {
                                        throw Me;
                                    }
                                }
                                ae();
                                M && ue(Ce);
                                ;
                            }), Oe.cancelAndHoldAtTime = (be => M ? () => {
                                throw s();
                            } : (...Ce) => {
                                const Me = be.apply(Oe, Ce);
                                return ae(), Me;
                            })(Oe.cancelAndHoldAtTime), Oe.cancelScheduledValues = (be => M ? () => {
                                throw s();
                            } : (...Ce) => {
                                const Me = be.apply(Oe, Ce);
                                return ae(), Me;
                            })(Oe.cancelScheduledValues), Oe.exponentialRampToValueAtTime = (be => M ? () => {
                                throw s();
                            } : (...Ce) => {
                                const Me = be.apply(Oe, Ce);
                                return ae(), Me;
                            })(Oe.exponentialRampToValueAtTime), Oe.linearRampToValueAtTime = (be => M ? () => {
                                throw s();
                            } : (...Ce) => {
                                const Me = be.apply(Oe, Ce);
                                return ae(), Me;
                            })(Oe.linearRampToValueAtTime), Oe.setTargetAtTime = (be => M ? () => {
                                throw s();
                            } : (...Ce) => {
                                const Me = be.apply(Oe, Ce);
                                return ae(), Me;
                            })(Oe.setTargetAtTime), Oe.setValueAtTime = (be => M ? () => {
                                throw s();
                            } : (...Ce) => {
                                const Me = be.apply(Oe, Ce);
                                return ae(), Me;
                            })(Oe.setValueAtTime), Oe.setValueCurveAtTime = (be => M ? () => {
                                throw s();
                            } : (...Ce) => {
                                const Me = be.apply(Oe, Ce);
                                return ae(), Me;
                            })(Oe.setValueCurveAtTime), Oe;
                        };
                    return {
                        forwardX: ge(0, 0, Z(0)),
                        forwardY: ge(1, 0, Z(1)),
                        forwardZ: ge(2, -1, Z(2)),
                        positionX: ge(6, 0, fe(0)),
                        positionY: ge(7, 0, fe(1)),
                        positionZ: ge(8, 0, fe(2)),
                        upX: ge(3, 0, Z(3)),
                        upY: ge(4, 1, Z(4)),
                        upZ: ge(5, 0, Z(5))
                    };
                }, {
                    forwardX: p,
                    forwardY: _,
                    forwardZ: v,
                    positionX: y,
                    positionY: g,
                    positionZ: b,
                    upX: A,
                    upY: N,
                    upZ: I
                } = f.forwardX === void 0 ? d() : f;
            return {
                get forwardX() {
                    return p;
                },
                get forwardY() {
                    return _;
                },
                get forwardZ() {
                    return v;
                },
                get positionX() {
                    return y;
                },
                get positionY() {
                    return g;
                },
                get positionZ() {
                    return b;
                },
                get upX() {
                    return A;
                },
                get upY() {
                    return N;
                },
                get upZ() {
                    return I;
                }
            };
        }, T1 = t => 'context' in t, Zf = t => T1(t[0]), $c = (t, e, n, r) => {
            for (const s of t)
                if (n(s)) {
                    if (r) {
                        return false;
                    }
                    throw Error('The set contains at least one similar element.');
                }
            return t.add(e), true;
        }, Sw = (t, e, [n, r], s) => {
            $c(t, [
                e,
                n,
                r
            ], i => i[0] === e && i[1] === n, s);
        }, ww = (t, [e, n, r], s) => {
            const i = t.get(e);
            i === void 0 ? t.set(e, new Set([[
                    n,
                    r
                ]])) : $c(i, [
                n,
                r
            ], o => o[0] === n, s);
        }, Pu = t => 'inputs' in t, S1 = (t, e, n, r) => {
            if (Pu(e)) {
                const s = e.inputs[r];
                return t.connect(s, n, 0), [
                    s,
                    n,
                    0
                ];
            }
            return t.connect(e, n, r), [
                e,
                n,
                r
            ];
        }, bC = (t, e, n) => {
            for (const r of t)
                if (r[0] === e && r[1] === n) {
                    return t.delete(r), r;
                }
            return null;
        }, r2e = (t, e, n) => mg(t, r => r[0] === e && r[1] === n), EC = (t, e) => {
            if (!zf(t).delete(e)) {
                throw new Error('Missing the expected event listener.');
            }
        }, TC = (t, e, n) => {
            const r = Zs(t, e), s = mg(r, i => i[0] === n);
            return r.size === 0 && t.delete(e), s;
        }, w1 = (t, e, n, r) => {
            Pu(e) ? t.disconnect(e.inputs[r], n, 0) : t.disconnect(e, n, r);
        }, rn = t => Zs(q3, t), ef = t => Zs(V3, t), Ac = t => g2.has(t), Up = t => !Ql.has(t), Ow = (t, e) => new Promise(n => {
            if (e !== null) {
                n(true);
            } else {
                const r = t.createScriptProcessor(256, 1, 1), s = t.createGain(), i = t.createBuffer(1, 2, 44100), o = i.getChannelData(0);
                o[0] = 1;
                o[1] = 1;
                ;
                const a = t.createBufferSource();
                ;
                ;
                a.connect(r).connect(t.destination);
                a.connect(s);
                a.disconnect(s);
                ;
                a.start();
                ;
            }
        }), Gy = (t, e) => {
            const n = new Map();
            for (const r of t)
                for (const s of r) {
                    const i = n.get(s);
                    n.set(s, i === void 0 ? 1 : i + 1);
                }
            n.forEach((r, s) => e(s, r));
        }, O1 = t => 'context' in t, s2e = t => {
            const e = new Map();
            ;
            ;
            ;
        }, i2e = (t, e, n, r) => {
            const {
                    activeInputs: s,
                    passiveInputs: i
                } = Kf(e), {outputs: o} = Tr(t), a = zf(t), l = u => {
                    const f = rn(t), d = ef(e);
                    if (u) {
                        const p = TC(i, t, n);
                        Sw(s, t, p, false);
                        !r && !Ac(t) && f.connect(d, n);
                        ;
                    } else {
                        const p = r2e(s, t, n);
                        ww(i, p, false);
                        !r && !Ac(t) && f.disconnect(d, n);
                        ;
                    }
                };
            return $c(o, [
                e,
                n
            ], u => u[0] === e && u[1] === n, true) ? (a.add(l), ao(t) ? Sw(s, t, [
                n,
                l
            ], true) : ww(i, [
                t,
                n,
                l
            ], true), true) : false;
        }, o2e = (t, e, n, r) => {
            const {
                    activeInputs: s,
                    passiveInputs: i
                } = Tr(e), o = bC(s[r], t, n);
            return o === null ? [
                gC(i, t, n, r)[2],
                false
            ] : [
                o[2],
                true
            ];
        }, a2e = (t, e, n) => {
            const {
                    activeInputs: r,
                    passiveInputs: s
                } = Kf(e), i = bC(r, t, n);
            return i === null ? [
                TC(s, t, n)[1],
                false
            ] : [
                i[2],
                true
            ];
        }, j3 = (t, e, n, r, s) => {
            const [i, o] = o2e(t, n, r, s);
            if (i !== null && (EC(t, i), o && !e && !Ac(t) && w1(rn(t), rn(n), r, s)), ao(n)) {
                const {activeInputs: a} = Tr(n);
                v2(n, a);
            }
        }, W3 = (t, e, n, r) => {
            const [s, i] = a2e(t, n, r);
            if (s !== null) {
                EC(t, s);
                i && !e && !Ac(t) && rn(t).disconnect(ef(n), r);
            }
        }, c2e = (t, e) => {
            const n = Tr(t), r = [];
            for (const s of n.outputs)
                Zf(s) ? j3(t, e, ...s) : W3(t, e, ...s), r.push(s[0]);
            return n.outputs.clear(), r;
        }, l2e = (t, e, n) => {
            const r = Tr(t), s = [];
            for (const i of r.outputs)
                if (i[1] === n) {
                    Zf(i) ? j3(t, e, ...i) : W3(t, e, ...i);
                    s.push(i[0]);
                    r.outputs.delete(i);
                }
            return s;
        }, u2e = (t, e, n, r, s) => {
            const i = Tr(t);
            return Array.from(i.outputs).filter(o => o[0] === n && (r === void 0 || o[1] === r) && (s === void 0 || o[2] === s)).map(o => (Zf(o) ? j3(t, e, ...o) : W3(t, e, ...o), i.outputs.delete(o), o[0]));
        }, h2e = (t, e, n, r, s, i, o, a, l, u, f, d, p, _, v, y) => class extends u {
            constructor(b, A, N, I) {
                super(N);
                this._context = b;
                this._nativeAudioNode = N;
                ;
                const O = f(b);
                d(O) && n(Ow, () => Ow(O, y)) !== true && s2e(N);
                q3.set(this, N);
                pC.set(this, new Set());
                b.state !== 'closed' && A && Jl(this);
                t(this, I, N);
                ;
            }
            get channelCount() {
                return this._nativeAudioNode.channelCount;
            }
            set channelCount(b) {
                this._nativeAudioNode.channelCount = b;
            }
            get channelCountMode() {
                return this._nativeAudioNode.channelCountMode;
            }
            set channelCountMode(b) {
                this._nativeAudioNode.channelCountMode = b;
            }
            get channelInterpretation() {
                return this._nativeAudioNode.channelInterpretation;
            }
            set channelInterpretation(b) {
                this._nativeAudioNode.channelInterpretation = b;
            }
            get context() {
                return this._context;
            }
            get numberOfInputs() {
                return this._nativeAudioNode.numberOfInputs;
            }
            get numberOfOutputs() {
                return this._nativeAudioNode.numberOfOutputs;
            }
            connect(b, A = 0, N = 0) {
                if (A < 0 || A >= this._nativeAudioNode.numberOfOutputs) {
                    throw s();
                }
                const I = f(this._context), O = v(I);
                if (p(b) || _(b)) {
                    throw i();
                }
                if (T1(b)) {
                    const L = rn(b);
                    try {
                        const ee = S1(this._nativeAudioNode, L, A, N), ae = Up(this);
                        (O || ae) && this._nativeAudioNode.disconnect(...ee);
                        this.context.state !== 'closed' && !ae && Up(b) && Jl(b);
                        ;
                    } catch (ee) {
                        throw ee.code === 12 ? i() : ee;
                    }
                    if (e(this, b, A, N, O)) {
                        const ee = l([this], b);
                        Gy(ee, r(O));
                    }
                    return b;
                }
                const x = ef(b);
                if (x.name === 'playbackRate' && x.maxValue === 1024) {
                    throw o();
                }
                try {
                    this._nativeAudioNode.connect(x, A);
                    (O || Up(this)) && this._nativeAudioNode.disconnect(x, A);
                    ;
                } catch (L) {
                    throw L.code === 12 ? i() : L;
                }
                if (i2e(this, b, A, O)) {
                    const L = l([this], b);
                    Gy(L, r(O));
                }
            }
            disconnect(b, A, N) {
                let I;
                const O = f(this._context), x = v(O);
                if (b === void 0) {
                    I = c2e(this, x);
                } else {
                    if (typeof b == 'number') {
                        if (b < 0 || b >= this.numberOfOutputs) {
                            throw s();
                        }
                        I = l2e(this, x, b);
                    } else {
                        if (A !== void 0 && (A < 0 || A >= this.numberOfOutputs) || T1(b) && N !== void 0 && (N < 0 || N >= b.numberOfInputs)) {
                            throw s();
                        }
                        if (I = u2e(this, x, b, A, N), I.length === 0) {
                            throw i();
                        }
                    }
                }
                for (const M of I) {
                    const L = l([this], M);
                    Gy(L, a);
                }
            }
        }, f2e = (t, e, n, r, s, i, o, a, l, u, f, d, p) => (_, v, y, g = null, b = null) => {
            const A = new T0e(y.defaultValue), N = v ? r(A) : null, I = {
                    get defaultValue() {
                        return y.defaultValue;
                    },
                    get maxValue() {
                        return g === null ? y.maxValue : g;
                    },
                    get minValue() {
                        return b === null ? y.minValue : b;
                    },
                    get value() {
                        return y.value;
                    },
                    set value(O) {
                        y.value = O;
                        I.setValueAtTime(O, _.context.currentTime);
                        ;
                    },
                    cancelAndHoldAtTime(O) {
                        if (typeof y.cancelAndHoldAtTime == 'function') {
                            N === null && A.flush(_.context.currentTime);
                            A.add(s(O));
                            y.cancelAndHoldAtTime(O);
                            ;
                        } else {
                            const x = Array.from(A).pop();
                            N === null && A.flush(_.context.currentTime);
                            A.add(s(O));
                            ;
                            const M = Array.from(A).pop();
                            y.cancelScheduledValues(O);
                            x !== M && M !== void 0 && (M.type === 'exponentialRampToValue' ? y.exponentialRampToValueAtTime(M.value, M.endTime) : M.type === 'linearRampToValue' ? y.linearRampToValueAtTime(M.value, M.endTime) : M.type === 'setValue' ? y.setValueAtTime(M.value, M.startTime) : M.type === 'setValueCurve' && y.setValueCurveAtTime(M.values, M.startTime, M.duration));
                            ;
                        }
                        return I;
                    },
                    cancelScheduledValues(O) {
                        return N === null && A.flush(_.context.currentTime), A.add(i(O)), y.cancelScheduledValues(O), I;
                    },
                    exponentialRampToValueAtTime(O, x) {
                        if (O === 0) {
                            throw new RangeError();
                        }
                        if (!Number.isFinite(x) || x < 0) {
                            throw new RangeError();
                        }
                        return N === null && A.flush(_.context.currentTime), A.add(o(O, x)), y.exponentialRampToValueAtTime(O, x), I;
                    },
                    linearRampToValueAtTime(O, x) {
                        return N === null && A.flush(_.context.currentTime), A.add(a(O, x)), y.linearRampToValueAtTime(O, x), I;
                    },
                    setTargetAtTime(O, x, M) {
                        return N === null && A.flush(_.context.currentTime), A.add(l(O, x, M)), y.setTargetAtTime(O, x, M), I;
                    },
                    setValueAtTime(O, x) {
                        return N === null && A.flush(_.context.currentTime), A.add(u(O, x)), y.setValueAtTime(O, x), I;
                    },
                    setValueCurveAtTime(O, x, M) {
                        const L = O instanceof Float32Array ? O : new Float32Array(O);
                        if (d !== null && d.name === 'webkitAudioContext') {
                            const U = x + M, ee = _.context.sampleRate, ae = Math.ceil(x * ee), Z = Math.floor(U * ee), fe = Z - ae, ge = new Float32Array(fe);
                            for (let Q = 0; Q < fe; Q += 1) {
                                const ue = (L.length - 1) / M * ((ae + Q) / ee - x), _e = Math.floor(ue), Oe = Math.ceil(ue);
                                ge[Q] = _e === Oe ? L[_e] : (1 - (ue - _e)) * L[_e] + (1 - (Oe - ue)) * L[Oe];
                            }
                            N === null && A.flush(_.context.currentTime);
                            A.add(f(ge, x, M));
                            y.setValueCurveAtTime(ge, x, M);
                            ;
                            const Y = Z / ee;
                            Y < U && p(I, ge[ge.length - 1], Y);
                            p(I, L[L.length - 1], U);
                            ;
                        } else {
                            N === null && A.flush(_.context.currentTime);
                            A.add(f(L, x, M));
                            y.setValueCurveAtTime(L, x, M);
                            ;
                        }
                        return I;
                    }
                };
            return n.set(I, y), e.set(I, _), t(I, N), I;
        }, d2e = t => ({
            replay(e) {
                for (const n of t)
                    if (n.type === 'exponentialRampToValue') {
                        const {
                            endTime: r,
                            value: s
                        } = n;
                        e.exponentialRampToValueAtTime(s, r);
                    } else {
                        if (n.type === 'linearRampToValue') {
                            const {
                                endTime: r,
                                value: s
                            } = n;
                            e.linearRampToValueAtTime(s, r);
                        } else {
                            if (n.type === 'setTarget') {
                                const {
                                    startTime: r,
                                    target: s,
                                    timeConstant: i
                                } = n;
                                e.setTargetAtTime(s, r, i);
                            } else {
                                if (n.type === 'setValue') {
                                    const {
                                        startTime: r,
                                        value: s
                                    } = n;
                                    e.setValueAtTime(s, r);
                                } else {
                                    if (n.type === 'setValueCurve') {
                                        const {
                                            duration: r,
                                            startTime: s,
                                            values: i
                                        } = n;
                                        e.setValueCurveAtTime(i, s, r);
                                    } else {
                                        throw new Error('Can\'t apply an unknown automation.');
                                    }
                                }
                            }
                        }
                    }
            }
        });
    class SC {
        constructor(e) {
            this._map = new Map(e);
        }
        get size() {
            return this._map.size;
        }
        entries() {
            return this._map.entries();
        }
        forEach(e, n = null) {
            return this._map.forEach((r, s) => e.call(n, r, s, this));
        }
        get(e) {
            return this._map.get(e);
        }
        has(e) {
            return this._map.has(e);
        }
        keys() {
            return this._map.keys();
        }
        values() {
            return this._map.values();
        }
    }
    const p2e = {
            channelCount: 2,
            channelCountMode: 'explicit',
            channelInterpretation: 'speakers',
            numberOfInputs: 1,
            numberOfOutputs: 1,
            parameterData: {},
            processorOptions: {}
        }, m2e = (t, e, n, r, s, i, o, a, l, u, f, d, p, _) => class extends e {
            constructor(y, g, b) {
                var A;
                const N = a(y), I = l(N), O = f({
                        ...p2e,
                        ...b
                    });
                p(O);
                const x = _2.get(N), M = x == null ? void 0 : x.get(g), L = I || N.state !== 'closed' ? N : (A = o(N)) !== null && A !== void 0 ? A : N, U = s(L, I ? null : y.baseLatency, u, g, M, O), ee = I ? r(g, O, M) : null;
                super(y, true, U, ee);
                const ae = [];
                U.parameters.forEach((fe, ge) => {
                    const Y = n(this, I, fe);
                    ae.push([
                        ge,
                        Y
                    ]);
                });
                this._nativeAudioWorkletNode = U;
                this._onprocessorerror = null;
                this._parameters = new SC(ae);
                I && t(N, this);
                ;
                const {activeInputs: Z} = i(this);
                d(U, Z);
            }
            get onprocessorerror() {
                return this._onprocessorerror;
            }
            set onprocessorerror(y) {
                const g = typeof y == 'function' ? _(this, y) : null;
                this._nativeAudioWorkletNode.onprocessorerror = g;
                const b = this._nativeAudioWorkletNode.onprocessorerror;
                this._onprocessorerror = b !== null && b === g ? y : b;
            }
            get parameters() {
                return this._parameters === null ? this._nativeAudioWorkletNode.parameters : this._parameters;
            }
            get port() {
                return this._nativeAudioWorkletNode.port;
            }
        };
    function A1(t, e, n, r, s) {
        if (typeof t.copyFromChannel == 'function') {
            e[n].byteLength === 0 && (e[n] = new Float32Array(128));
            t.copyFromChannel(e[n], r, s);
            ;
        } else {
            const i = t.getChannelData(r);
            if (e[n].byteLength === 0) {
                ;
            } else {
                const o = new Float32Array(i.buffer, s * Float32Array.BYTES_PER_ELEMENT, 128);
                e[n].set(o);
            }
        }
    }
    const wC = (t, e, n, r, s) => {
            typeof t.copyToChannel == 'function' ? e[n].byteLength !== 0 && t.copyToChannel(e[n], r, s) : e[n].byteLength !== 0 && t.getChannelData(r).set(e[n], s);
        }, C1 = (t, e) => {
            const n = [];
            for (let r = 0; r < t; r += 1) {
                const s = [], i = typeof e == 'number' ? e : e[r];
                for (let o = 0; o < i; o += 1) {
                    s.push(new Float32Array(128));
                }
                n.push(s);
            }
            return n;
        }, g2e = (t, e) => {
            const n = Zs(y2, t), r = rn(e);
            return Zs(n, r);
        }, _2e = async (t, e, n, r, s, i, o) => {
            const a = e === null ? Math.ceil(t.context.length / 128) * 128 : e.length, l = r.channelCount * r.numberOfInputs, u = s.reduce((g, b) => g + b, 0), f = u === 0 ? null : n.createBuffer(u, a, n.sampleRate);
            if (i === void 0) {
                throw new Error('Missing the processor constructor.');
            }
            const d = Tr(t), p = await g2e(n, t), _ = C1(r.numberOfInputs, r.channelCount), v = C1(r.numberOfOutputs, s), y = Array.from(t.parameters.keys()).reduce((g, b) => ({
                    ...g,
                    [b]: new Float32Array(128)
                }), {});
            for (let g = 0; g < a; g += 128) {
                if (r.numberOfInputs > 0 && e !== null) {
                    for (let b = 0; b < r.numberOfInputs; b += 1) {
                        for (let A = 0; A < r.channelCount; A += 1) {
                            A1(e, _[b], A, A, g);
                        }
                    }
                }
                i.parameterDescriptors !== void 0 && e !== null && i.parameterDescriptors.forEach(({name: b}, A) => {
                    A1(e, y, b, l + A, g);
                });
                for (let b = 0; b < r.numberOfInputs; b += 1) {
                    for (let A = 0; A < s[b]; A += 1) {
                        v[b][A].byteLength === 0 && (v[b][A] = new Float32Array(128));
                    }
                }
                try {
                    const b = _.map((N, I) => d.activeInputs[I].size === 0 ? [] : N), A = o(g / n.sampleRate, n.sampleRate, () => p.process(b, v, y));
                    if (f !== null) {
                        for (let N = 0, I = 0; N < r.numberOfOutputs; N += 1) {
                            for (let O = 0; O < s[N]; O += 1) {
                                wC(f, v[N], O, I + O, g);
                            }
                            I += s[N];
                        }
                    }
                    if (!A) {
                        break;
                    }
                } catch (b) {
                    t.dispatchEvent(new ErrorEvent('processorerror', {
                        colno: b.colno,
                        filename: b.filename,
                        lineno: b.lineno,
                        message: b.message
                    }));
                    break;
                }
            }
            return f;
        }, y2e = (t, e, n, r, s, i, o, a, l, u, f, d, p, _, v, y) => (g, b, A) => {
            const N = new WeakMap();
            let I = null;
            const O = async (x, M) => {
                let L = f(x), U = null;
                const ee = mr(L, M), ae = Array.isArray(b.outputChannelCount) ? b.outputChannelCount : Array.from(b.outputChannelCount);
                if (d === null) {
                    const Z = ae.reduce((Q, ue) => Q + ue, 0), fe = s(M, {
                            channelCount: Math.max(1, Z),
                            channelCountMode: 'explicit',
                            channelInterpretation: 'discrete',
                            numberOfOutputs: Math.max(1, Z)
                        }), ge = [];
                    for (let Q = 0; Q < x.numberOfOutputs; Q += 1) {
                        ge.push(r(M, {
                            channelCount: 1,
                            channelCountMode: 'explicit',
                            channelInterpretation: 'speakers',
                            numberOfInputs: ae[Q]
                        }));
                    }
                    const Y = o(M, {
                        channelCount: b.channelCount,
                        channelCountMode: b.channelCountMode,
                        channelInterpretation: b.channelInterpretation,
                        gain: 1
                    });
                    Y.connect = e.bind(null, ge);
                    Y.disconnect = l.bind(null, ge);
                    U = [
                        fe,
                        ge,
                        Y
                    ];
                    ;
                } else {
                    ee || (L = new d(M, g));
                }
                if (N.set(M, U === null ? L : U[2]), U !== null) {
                    if (I === null) {
                        if (A === void 0) {
                            throw new Error('Missing the processor constructor.');
                        }
                        if (p === null) {
                            throw new Error('Missing the native OfflineAudioContext constructor.');
                        }
                        const ue = x.channelCount * x.numberOfInputs, _e = A.parameterDescriptors === void 0 ? 0 : A.parameterDescriptors.length, Oe = ue + _e;
                        I = _2e(x, Oe === 0 ? null : await ((async () => {
                            const Ce = new p(Oe, Math.ceil(x.context.length / 128) * 128, M.sampleRate), Me = [], Fe = [];
                            for (let Ke = 0; Ke < b.numberOfInputs; Ke += 1) {
                                Me.push(o(Ce, {
                                    channelCount: b.channelCount,
                                    channelCountMode: b.channelCountMode,
                                    channelInterpretation: b.channelInterpretation,
                                    gain: 1
                                }));
                                Fe.push(s(Ce, {
                                    channelCount: b.channelCount,
                                    channelCountMode: 'explicit',
                                    channelInterpretation: 'discrete',
                                    numberOfOutputs: b.channelCount
                                }));
                                ;
                            }
                            const st = await Promise.all(Array.from(x.parameters.values()).map(async Ke => {
                                    const rt = i(Ce, {
                                        channelCount: 1,
                                        channelCountMode: 'explicit',
                                        channelInterpretation: 'discrete',
                                        offset: Ke.value
                                    });
                                    return await _(Ce, Ke, rt.offset), rt;
                                })), Ve = r(Ce, {
                                    channelCount: 1,
                                    channelCountMode: 'explicit',
                                    channelInterpretation: 'speakers',
                                    numberOfInputs: Math.max(1, ue + _e)
                                });
                            for (let Ke = 0; Ke < b.numberOfInputs; Ke += 1) {
                                Me[Ke].connect(Fe[Ke]);
                                for (let rt = 0; rt < b.channelCount; rt += 1) {
                                    Fe[Ke].connect(Ve, rt, Ke * b.channelCount + rt);
                                }
                            }
                            for (const [Ke, rt] of st.entries())
                                rt.connect(Ve, 0, ue + Ke), rt.start(0);
                            return Ve.connect(Ce.destination), await Promise.all(Me.map(Ke => v(x, Ce, Ke))), y(Ce);
                        })()), M, b, ae, A, u);
                    }
                    const Z = await I, fe = n(M, {
                            buffer: null,
                            channelCount: 2,
                            channelCountMode: 'max',
                            channelInterpretation: 'speakers',
                            loop: false,
                            loopEnd: 0,
                            loopStart: 0,
                            playbackRate: 1
                        }), [ge, Y, Q] = U;
                    if (Z !== null) {
                        fe.buffer = Z;
                        fe.start(0);
                    }
                    fe.connect(ge);
                    ;
                    for (let ue = 0, _e = 0; ue < x.numberOfOutputs; ue += 1) {
                        const Oe = Y[ue];
                        for (let be = 0; be < ae[ue]; be += 1) {
                            ge.connect(Oe, _e + be, be);
                        }
                        _e += ae[ue];
                    }
                    return Q;
                }
                if (ee) {
                    for (const [Z, fe] of x.parameters.entries())
                        await t(M, fe, L.parameters.get(Z));
                } else {
                    for (const [Z, fe] of x.parameters.entries())
                        await _(M, fe, L.parameters.get(Z));
                }
                return await v(x, M, L), L;
            };
            return {
                render(x, M) {
                    a(M, x);
                    const L = N.get(M);
                    return L !== void 0 ? Promise.resolve(L) : O(x, M);
                }
            };
        }, v2e = (t, e, n, r, s, i, o, a, l, u, f, d, p, _, v, y, g, b, A, N) => class extends v {
            constructor(O, x) {
                super(O, x);
                this._nativeContext = O;
                this._audioWorklet = t === void 0 ? void 0 : { addModule: (M, L) => t(this, M, L) };
                ;
            }
            get audioWorklet() {
                return this._audioWorklet;
            }
            createAnalyser() {
                return new e(this);
            }
            createBiquadFilter() {
                return new s(this);
            }
            createBuffer(O, x, M) {
                return new n({
                    length: x,
                    numberOfChannels: O,
                    sampleRate: M
                });
            }
            createBufferSource() {
                return new r(this);
            }
            createChannelMerger(O = 6) {
                return new i(this, { numberOfInputs: O });
            }
            createChannelSplitter(O = 6) {
                return new o(this, { numberOfOutputs: O });
            }
            createConstantSource() {
                return new a(this);
            }
            createConvolver() {
                return new l(this);
            }
            createDelay(O = 1) {
                return new f(this, { maxDelayTime: O });
            }
            createDynamicsCompressor() {
                return new d(this);
            }
            createGain() {
                return new p(this);
            }
            createIIRFilter(O, x) {
                return new _(this, {
                    feedback: x,
                    feedforward: O
                });
            }
            createOscillator() {
                return new y(this);
            }
            createPanner() {
                return new g(this);
            }
            createPeriodicWave(O, x, M = { disableNormalization: false }) {
                return new b(this, {
                    ...M,
                    imag: x,
                    real: O
                });
            }
            createStereoPanner() {
                return new A(this);
            }
            createWaveShaper() {
                return new N(this);
            }
            decodeAudioData(O, x, M) {
                return u(this._nativeContext, O).then(L => (typeof x == 'function' && x(L), L), L => {
                    throw typeof M == 'function' && M(L), L;
                });
            }
        }, E2e = (t, e, n, r, s, i, o, a) => class extends t {
            constructor(u, f) {
                const d = i(u), p = {
                        ...b2e,
                        ...f
                    }, _ = s(d, p), v = o(d), y = v ? n() : null;
                super(u, false, _, y);
                this._Q = e(this, v, _.Q, Er, Rr);
                this._detune = e(this, v, _.detune, 1200 * Math.log2(Er), -1200 * Math.log2(Er));
                this._frequency = e(this, v, _.frequency, u.sampleRate / 2, 0);
                this._gain = e(this, v, _.gain, 40 * Math.log10(Er), Rr);
                this._nativeBiquadFilterNode = _;
                a(this, 1);
                ;
            }
            get detune() {
                return this._detune;
            }
            get frequency() {
                return this._frequency;
            }
            get gain() {
                return this._gain;
            }
            get Q() {
                return this._Q;
            }
            get type() {
                return this._nativeBiquadFilterNode.type;
            }
            set type(u) {
                this._nativeBiquadFilterNode.type = u;
            }
            getFrequencyResponse(u, f, d) {
                try {
                    this._nativeBiquadFilterNode.getFrequencyResponse(u, f, d);
                } catch (p) {
                    throw p.code === 11 ? r() : p;
                }
                if (u.length !== f.length || f.length !== d.length) {
                    throw r();
                }
            }
        }, T2e = (t, e, n, r, s) => () => {
            const i = new WeakMap(), o = async (a, l) => {
                    let u = n(a);
                    const f = mr(u, l);
                    if (!f) {
                        const d = {
                            Q: u.Q.value,
                            channelCount: u.channelCount,
                            channelCountMode: u.channelCountMode,
                            channelInterpretation: u.channelInterpretation,
                            detune: u.detune.value,
                            frequency: u.frequency.value,
                            gain: u.gain.value,
                            type: u.type
                        };
                        u = e(l, d);
                    }
                    return i.set(l, u), f ? (await t(l, a.Q, u.Q), await t(l, a.detune, u.detune), await t(l, a.frequency, u.frequency), await t(l, a.gain, u.gain)) : (await r(l, a.Q, u.Q), await r(l, a.detune, u.detune), await r(l, a.frequency, u.frequency), await r(l, a.gain, u.gain)), await s(a, l, u), u;
                };
            return {
                render(a, l) {
                    const u = i.get(l);
                    return u !== void 0 ? Promise.resolve(u) : o(a, l);
                }
            };
        }, S2e = (t, e) => (n, r) => {
            const s = e.get(n);
            if (s !== void 0) {
                return s;
            }
            const i = t.get(n);
            if (i !== void 0) {
                return i;
            }
            try {
                const o = r();
                return o instanceof Promise ? (t.set(n, o), o.catch(() => false).then(a => (t.delete(n), e.set(n, a), a))) : (e.set(n, o), o);
            } catch {
                return e.set(n, false), false;
            }
        }, O2e = (t, e, n, r, s) => class extends t {
            constructor(o, a) {
                const l = r(o), u = {
                        ...w2e,
                        ...a
                    }, f = n(l, u), d = s(l) ? e() : null;
                super(o, false, f, d);
            }
        }, A2e = (t, e, n) => () => {
            const r = new WeakMap(), s = async (i, o) => {
                    let a = e(i);
                    if (!mr(a, o)) {
                        const u = {
                            channelCount: a.channelCount,
                            channelCountMode: a.channelCountMode,
                            channelInterpretation: a.channelInterpretation,
                            numberOfInputs: a.numberOfInputs
                        };
                        a = t(o, u);
                    }
                    return r.set(o, a), await n(i, o, a), a;
                };
            return {
                render(i, o) {
                    const a = r.get(o);
                    return a !== void 0 ? Promise.resolve(a) : s(i, o);
                }
            };
        }, I2e = (t, e, n, r, s, i) => class extends t {
            constructor(a, l) {
                const u = r(a), f = i({
                        ...C2e,
                        ...l
                    }), d = n(u, f), p = s(u) ? e() : null;
                super(a, false, d, p);
            }
        }, k2e = (t, e, n) => () => {
            const r = new WeakMap(), s = async (i, o) => {
                    let a = e(i);
                    if (!mr(a, o)) {
                        const u = {
                            channelCount: a.channelCount,
                            channelCountMode: a.channelCountMode,
                            channelInterpretation: a.channelInterpretation,
                            numberOfOutputs: a.numberOfOutputs
                        };
                        a = t(o, u);
                    }
                    return r.set(o, a), await n(i, o, a), a;
                };
            return {
                render(i, o) {
                    const a = r.get(o);
                    return a !== void 0 ? Promise.resolve(a) : s(i, o);
                }
            };
        }, N2e = t => (e, n, r) => t(n, e, r), x2e = t => (e, n, r = 0, s = 0) => {
            const i = e[r];
            if (i === void 0) {
                throw t();
            }
            return O1(n) ? i.connect(n, 0, s) : i.connect(n, 0);
        }, P2e = t => (e, n) => {
            const r = t(e, {
                    buffer: null,
                    channelCount: 2,
                    channelCountMode: 'max',
                    channelInterpretation: 'speakers',
                    loop: false,
                    loopEnd: 0,
                    loopStart: 0,
                    playbackRate: 1
                }), s = e.createBuffer(1, 2, 44100);
            return r.buffer = s, r.loop = true, r.connect(n), r.start(), () => {
                r.stop();
                r.disconnect(n);
                ;
            };
        }, M2e = (t, e, n, r, s, i, o) => class extends t {
            constructor(l, u) {
                const f = s(l), d = {
                        ...R2e,
                        ...u
                    }, p = r(f, d), _ = i(f), v = _ ? n() : null;
                super(l, false, p, v);
                this._constantSourceNodeRenderer = v;
                this._nativeConstantSourceNode = p;
                this._offset = e(this, _, p.offset, Er, Rr);
                this._onended = null;
                ;
            }
            get offset() {
                return this._offset;
            }
            get onended() {
                return this._onended;
            }
            set onended(l) {
                const u = typeof l == 'function' ? o(this, l) : null;
                this._nativeConstantSourceNode.onended = u;
                const f = this._nativeConstantSourceNode.onended;
                this._onended = f !== null && f === u ? l : f;
            }
            start(l = 0) {
                if (this._nativeConstantSourceNode.start(l), this._constantSourceNodeRenderer !== null && (this._constantSourceNodeRenderer.start = l), this.context.state !== 'closed') {
                    Jl(this);
                    const u = () => {
                        this._nativeConstantSourceNode.removeEventListener('ended', u);
                        ao(this) && Yf(this);
                        ;
                    };
                    this._nativeConstantSourceNode.addEventListener('ended', u);
                }
            }
            stop(l = 0) {
                this._nativeConstantSourceNode.stop(l);
                this._constantSourceNodeRenderer !== null && (this._constantSourceNodeRenderer.stop = l);
                ;
            }
        }, D2e = (t, e, n, r, s) => () => {
            const i = new WeakMap();
            let o = null, a = null;
            const l = async (u, f) => {
                let d = n(u);
                const p = mr(d, f);
                if (!p) {
                    const _ = {
                        channelCount: d.channelCount,
                        channelCountMode: d.channelCountMode,
                        channelInterpretation: d.channelInterpretation,
                        offset: d.offset.value
                    };
                    d = e(f, _);
                    o !== null && d.start(o);
                    a !== null && d.stop(a);
                    ;
                }
                return i.set(f, d), p ? await t(f, u.offset, d.offset) : await r(f, u.offset, d.offset), await s(u, f, d), d;
            };
            return {
                set start(u) {
                    o = u;
                },
                set stop(u) {
                    a = u;
                },
                render(u, f) {
                    const d = i.get(f);
                    return d !== void 0 ? Promise.resolve(d) : l(u, f);
                }
            };
        }, $2e = t => e => (t[0] = e, t[0]), F2e = (t, e, n, r, s, i) => class extends t {
            constructor(a, l) {
                const u = r(a), f = {
                        ...L2e,
                        ...l
                    }, d = n(u, f), _ = s(u) ? e() : null;
                super(a, false, d, _);
                this._isBufferNullified = false;
                this._nativeConvolverNode = d;
                f.buffer !== null && i(this, f.buffer.duration);
                ;
            }
            get buffer() {
                return this._isBufferNullified ? null : this._nativeConvolverNode.buffer;
            }
            set buffer(a) {
                if (this._nativeConvolverNode.buffer = a, a === null && this._nativeConvolverNode.buffer !== null) {
                    const l = this._nativeConvolverNode.context;
                    this._nativeConvolverNode.buffer = l.createBuffer(1, 1, l.sampleRate);
                    this._isBufferNullified = true;
                    i(this, 0);
                    ;
                } else {
                    this._isBufferNullified = false;
                    i(this, this._nativeConvolverNode.buffer === null ? 0 : this._nativeConvolverNode.buffer.duration);
                    ;
                }
            }
            get normalize() {
                return this._nativeConvolverNode.normalize;
            }
            set normalize(a) {
                this._nativeConvolverNode.normalize = a;
            }
        }, U2e = (t, e, n) => () => {
            const r = new WeakMap(), s = async (i, o) => {
                    let a = e(i);
                    if (!mr(a, o)) {
                        const u = {
                            buffer: a.buffer,
                            channelCount: a.channelCount,
                            channelCountMode: a.channelCountMode,
                            channelInterpretation: a.channelInterpretation,
                            disableNormalization: !a.normalize
                        };
                        a = t(o, u);
                    }
                    return r.set(o, a), Pu(a) ? await n(i, o, a.inputs[0]) : await n(i, o, a), a;
                };
            return {
                render(i, o) {
                    const a = r.get(o);
                    return a !== void 0 ? Promise.resolve(a) : s(i, o);
                }
            };
        }, B2e = (t, e) => (n, r, s) => {
            if (e === null) {
                throw new Error('Missing the native OfflineAudioContext constructor.');
            }
            try {
                return new e(n, r, s);
            } catch (i) {
                throw i.name === 'SyntaxError' ? t() : i;
            }
        }, q2e = () => new DOMException('', 'DataCloneError'), Aw = t => {
            const {
                port1: e,
                port2: n
            } = new MessageChannel();
            return new Promise(r => {
                const s = () => {
                    ;
                    e.close();
                    n.close();
                    r();
                    ;
                };
                ;
                try {
                    e.postMessage(t, [t]);
                } finally {
                    s();
                }
            });
        }, V2e = (t, e, n, r, s, i, o, a, l, u, f) => (d, p) => {
            const _ = o(d) ? d : i(d);
            if (s.has(p)) {
                const v = n();
                return Promise.reject(v);
            }
            try {
                s.add(p);
            } catch {
            }
            return e(l, () => l(_)) ? _.decodeAudioData(p).then(v => (Aw(p).catch(() => {
            }), e(a, () => a(v)) || f(v), t.add(v), v)) : new Promise((v, y) => {
                const g = async () => {
                        try {
                            await Aw(p);
                        } catch {
                        }
                    }, b = A => {
                        y(A);
                        g();
                        ;
                    };
                try {
                    _.decodeAudioData(p, A => {
                        if (typeof A.copyFromChannel != 'function') {
                            u(A);
                            G3(A);
                        }
                        t.add(A);
                        g().then(() => v(A));
                        ;
                    }, A => {
                        b(A === null ? r() : A);
                    });
                } catch (A) {
                    b(A);
                }
            });
        }, G2e = (t, e, n, r, s, i, o, a) => (l, u) => {
            const f = e.get(l);
            if (f === void 0) {
                throw new Error('Missing the expected cycle count.');
            }
            const d = i(l.context), p = a(d);
            if (f === u) {
                if (e.delete(l), !p && o(l)) {
                    const _ = r(l), {outputs: v} = n(l);
                    for (const y of v)
                        if (Zf(y)) {
                            const g = r(y[0]);
                            t(_, g, y[1], y[2]);
                        } else {
                            const g = s(y[0]);
                            _.connect(g, y[1]);
                        }
                }
            } else {
                e.set(l, f - u);
            }
        }, W2e = (t, e, n, r, s, i, o) => class extends t {
            constructor(l, u) {
                const f = s(l), d = {
                        ...j2e,
                        ...u
                    }, p = r(f, d), _ = i(f), v = _ ? n(d.maxDelayTime) : null;
                super(l, false, p, v);
                this._delayTime = e(this, _, p.delayTime);
                o(this, d.maxDelayTime);
                ;
            }
            get delayTime() {
                return this._delayTime;
            }
        }, H2e = (t, e, n, r, s) => i => {
            const o = new WeakMap(), a = async (l, u) => {
                    let f = n(l);
                    const d = mr(f, u);
                    if (!d) {
                        const p = {
                            channelCount: f.channelCount,
                            channelCountMode: f.channelCountMode,
                            channelInterpretation: f.channelInterpretation,
                            delayTime: f.delayTime.value,
                            maxDelayTime: i
                        };
                        f = e(u, p);
                    }
                    return o.set(u, f), d ? await t(u, l.delayTime, f.delayTime) : await r(u, l.delayTime, f.delayTime), await s(l, u, f), f;
                };
            return {
                render(l, u) {
                    const f = o.get(u);
                    return f !== void 0 ? Promise.resolve(f) : a(l, u);
                }
            };
        }, z2e = t => (e, n, r, s) => t(e[s], i => i[0] === n && i[1] === r), Y2e = t => (e, n) => {
            t(e).delete(n);
        }, K2e = t => 'delayTime' in t, Z2e = (t, e, n) => function r(s, i) {
            const o = T1(i) ? i : n(t, i);
            if (K2e(o)) {
                return [];
            }
            if (s[0] === o) {
                return [s];
            }
            if (s.includes(o)) {
                return [];
            }
            const {outputs: a} = e(o);
            return Array.from(a).map(l => r([
                ...s,
                o
            ], l[0])).reduce((l, u) => l.concat(u), []);
        }, wp = (t, e, n) => {
            const r = e[n];
            if (r === void 0) {
                throw t();
            }
            return r;
        }, X2e = t => (e, n = void 0, r = void 0, s = 0) => n === void 0 ? e.forEach(i => i.disconnect()) : typeof n == 'number' ? wp(t, e, n).disconnect() : O1(n) ? r === void 0 ? e.forEach(i => i.disconnect(n)) : s === void 0 ? wp(t, e, r).disconnect(n, 0) : wp(t, e, r).disconnect(n, 0, s) : r === void 0 ? e.forEach(i => i.disconnect(n)) : wp(t, e, r).disconnect(n, 0), Q2e = {
            attack: 0.003,
            channelCount: 2,
            channelCountMode: 'clamped-max',
            channelInterpretation: 'speakers',
            knee: 30,
            ratio: 12,
            release: 0.25,
            threshold: -24
        }, J2e = (t, e, n, r, s, i, o, a) => class extends t {
            constructor(u, f) {
                const d = i(u), p = {
                        ...Q2e,
                        ...f
                    }, _ = r(d, p), v = o(d), y = v ? n() : null;
                super(u, false, _, y);
                this._attack = e(this, v, _.attack);
                this._knee = e(this, v, _.knee);
                this._nativeDynamicsCompressorNode = _;
                this._ratio = e(this, v, _.ratio);
                this._release = e(this, v, _.release);
                this._threshold = e(this, v, _.threshold);
                a(this, 0.006);
                ;
            }
            get attack() {
                return this._attack;
            }
            get channelCount() {
                return this._nativeDynamicsCompressorNode.channelCount;
            }
            set channelCount(u) {
                const f = this._nativeDynamicsCompressorNode.channelCount;
                if (this._nativeDynamicsCompressorNode.channelCount = u, u > 2) {
                    throw this._nativeDynamicsCompressorNode.channelCount = f, s();
                }
            }
            get channelCountMode() {
                return this._nativeDynamicsCompressorNode.channelCountMode;
            }
            set channelCountMode(u) {
                const f = this._nativeDynamicsCompressorNode.channelCountMode;
                if (this._nativeDynamicsCompressorNode.channelCountMode = u, u === 'max') {
                    throw this._nativeDynamicsCompressorNode.channelCountMode = f, s();
                }
            }
            get knee() {
                return this._knee;
            }
            get ratio() {
                return this._ratio;
            }
            get reduction() {
                return typeof this._nativeDynamicsCompressorNode.reduction.value == 'number' ? this._nativeDynamicsCompressorNode.reduction.value : this._nativeDynamicsCompressorNode.reduction;
            }
            get release() {
                return this._release;
            }
            get threshold() {
                return this._threshold;
            }
        }, eve = (t, e, n, r, s) => () => {
            const i = new WeakMap(), o = async (a, l) => {
                    let u = n(a);
                    const f = mr(u, l);
                    if (!f) {
                        const d = {
                            attack: u.attack.value,
                            channelCount: u.channelCount,
                            channelCountMode: u.channelCountMode,
                            channelInterpretation: u.channelInterpretation,
                            knee: u.knee.value,
                            ratio: u.ratio.value,
                            release: u.release.value,
                            threshold: u.threshold.value
                        };
                        u = e(l, d);
                    }
                    return i.set(l, u), f ? (await t(l, a.attack, u.attack), await t(l, a.knee, u.knee), await t(l, a.ratio, u.ratio), await t(l, a.release, u.release), await t(l, a.threshold, u.threshold)) : (await r(l, a.attack, u.attack), await r(l, a.knee, u.knee), await r(l, a.ratio, u.ratio), await r(l, a.release, u.release), await r(l, a.threshold, u.threshold)), await s(a, l, u), u;
                };
            return {
                render(a, l) {
                    const u = i.get(l);
                    return u !== void 0 ? Promise.resolve(u) : o(a, l);
                }
            };
        }, tve = () => new DOMException('', 'EncodingError'), nve = t => e => new Promise((n, r) => {
            if (t === null) {
                r(new SyntaxError());
                return;
            }
            const s = t.document.head;
            if (s === null) {
                r(new SyntaxError());
            } else {
                const i = t.document.createElement('script'), o = new Blob([e], { type: 'application/javascript' }), a = URL.createObjectURL(o), l = t.onerror, u = () => {
                        ;
                        URL.revokeObjectURL(a);
                        ;
                    };
                ;
                ;
                ;
                ;
                ;
                s.appendChild(i);
                ;
            }
        }), rve = t => class {
            constructor(n) {
                this._nativeEventTarget = n;
                this._listeners = new WeakMap();
                ;
            }
            addEventListener(n, r, s) {
                if (r !== null) {
                    let i = this._listeners.get(r);
                    if (i === void 0) {
                        i = t(this, r);
                        typeof r == 'function' && this._listeners.set(r, i);
                    }
                    this._nativeEventTarget.addEventListener(n, i, s);
                    ;
                }
            }
            dispatchEvent(n) {
                return this._nativeEventTarget.dispatchEvent(n);
            }
            removeEventListener(n, r, s) {
                const i = r === null ? void 0 : this._listeners.get(r);
                this._nativeEventTarget.removeEventListener(n, i === void 0 ? null : i, s);
            }
        }, sve = t => (e, n, r) => {
            Object.defineProperties(t, {
                currentFrame: {
                    configurable: true,
                    get() {
                        return Math.round(e * n);
                    }
                },
                currentTime: {
                    configurable: true,
                    get() {
                        return e;
                    }
                }
            });
            try {
                return r();
            } finally {
                if (t !== null) {
                    delete t.currentFrame;
                    delete t.currentTime;
                }
            }
        }, ive = t => async e => {
            try {
                const n = await fetch(e);
                if (n.ok) {
                    return [
                        await n.text(),
                        n.url
                    ];
                }
            } catch {
            }
            throw t();
        }, ave = (t, e, n, r, s, i) => class extends t {
            constructor(a, l) {
                const u = s(a), f = {
                        ...ove,
                        ...l
                    }, d = r(u, f), p = i(u), _ = p ? n() : null;
                super(a, false, d, _);
                this._gain = e(this, p, d.gain, Er, Rr);
                ;
            }
            get gain() {
                return this._gain;
            }
        }, cve = (t, e, n, r, s) => () => {
            const i = new WeakMap(), o = async (a, l) => {
                    let u = n(a);
                    const f = mr(u, l);
                    if (!f) {
                        const d = {
                            channelCount: u.channelCount,
                            channelCountMode: u.channelCountMode,
                            channelInterpretation: u.channelInterpretation,
                            gain: u.gain.value
                        };
                        u = e(l, d);
                    }
                    return i.set(l, u), f ? await t(l, a.gain, u.gain) : await r(l, a.gain, u.gain), await s(a, l, u), u;
                };
            return {
                render(a, l) {
                    const u = i.get(l);
                    return u !== void 0 ? Promise.resolve(u) : o(a, l);
                }
            };
        }, lve = (t, e) => n => e(t, n), uve = t => e => {
            const n = t(e);
            if (n.renderer === null) {
                throw new Error('Missing the renderer of the given AudioNode in the audio graph.');
            }
            return n.renderer;
        }, hve = t => e => {
            var n;
            return (n = t.get(e)) !== null && n !== void 0 ? n : 0;
        }, fve = t => e => {
            const n = t(e);
            if (n.renderer === null) {
                throw new Error('Missing the renderer of the given AudioParam in the audio graph.');
            }
            return n.renderer;
        }, dve = t => e => t.get(e), Wn = () => new DOMException('', 'InvalidStateError'), pve = t => e => {
            const n = t.get(e);
            if (n === void 0) {
                throw Wn();
            }
            return n;
        }, mve = (t, e) => n => {
            let r = t.get(n);
            if (r !== void 0) {
                return r;
            }
            if (e === null) {
                throw new Error('Missing the native OfflineAudioContext constructor.');
            }
            return r = new e(1, 1, 44100), t.set(n, r), r;
        }, gve = t => e => {
            const n = t.get(e);
            if (n === void 0) {
                throw new Error('The context has no set of AudioWorkletNodes.');
            }
            return n;
        }, gg = () => new DOMException('', 'InvalidAccessError'), _ve = t => {
            ;
        }, vve = (t, e, n, r, s, i) => class extends t {
            constructor(a, l) {
                const u = r(a), f = s(u), d = {
                        ...yve,
                        ...l
                    }, p = e(u, f ? null : a.baseLatency, d), _ = f ? n(d.feedback, d.feedforward) : null;
                super(a, false, p, _);
                _ve(p);
                this._nativeIIRFilterNode = p;
                i(this, 1);
                ;
            }
            getFrequencyResponse(a, l, u) {
                return this._nativeIIRFilterNode.getFrequencyResponse(a, l, u);
            }
        }, OC = (t, e, n, r, s, i, o, a, l, u, f) => {
            const d = u.length;
            let p = a;
            for (let _ = 0; _ < d; _ += 1) {
                let v = n[0] * u[_];
                for (let y = 1; y < s; y += 1) {
                    const g = p - y & l - 1;
                    v += n[y] * i[g];
                    v -= t[y] * o[g];
                    ;
                }
                for (let y = s; y < r; y += 1) {
                    v += n[y] * i[p - y & l - 1];
                }
                for (let y = s; y < e; y += 1) {
                    v -= t[y] * o[p - y & l - 1];
                }
                ;
                ;
                p = p + 1 & l - 1;
                f[_] = v;
                ;
            }
            return p;
        }, bve = (t, e, n, r) => {
            const s = n instanceof Float64Array ? n : new Float64Array(n), i = r instanceof Float64Array ? r : new Float64Array(r), o = s.length, a = i.length, l = Math.min(o, a);
            if (s[0] !== 1) {
                for (let v = 0; v < o; v += 1) {
                    ;
                }
                for (let v = 1; v < a; v += 1) {
                    ;
                }
            }
            const f = new Float32Array(32), d = new Float32Array(32), p = e.createBuffer(t.numberOfChannels, t.length, t.sampleRate), _ = t.numberOfChannels;
            for (let v = 0; v < _; v += 1) {
                const y = t.getChannelData(v), g = p.getChannelData(v);
                f.fill(0);
                d.fill(0);
                OC(s, o, i, a, l, f, d, 0, 32, y, g);
                ;
            }
            return p;
        }, Eve = (t, e, n, r, s) => (i, o) => {
            const a = new WeakMap();
            let l = null;
            const u = async (f, d) => {
                let p = null, _ = e(f);
                const v = mr(_, d);
                if (d.createIIRFilter === void 0 ? p = t(d, {
                        buffer: null,
                        channelCount: 2,
                        channelCountMode: 'max',
                        channelInterpretation: 'speakers',
                        loop: false,
                        loopEnd: 0,
                        loopStart: 0,
                        playbackRate: 1
                    }) : v || (_ = d.createIIRFilter(o, i)), a.set(d, p === null ? _ : p), p !== null) {
                    if (l === null) {
                        if (n === null) {
                            throw new Error('Missing the native OfflineAudioContext constructor.');
                        }
                        const g = new n(f.context.destination.channelCount, f.context.length, d.sampleRate);
                        l = ((async () => {
                            await r(f, g, g.destination);
                            const b = await s(g);
                            return bve(b, d, i, o);
                        })());
                    }
                    const y = await l;
                    return p.buffer = y, p.start(0), p;
                }
                return await r(f, d, _), _;
            };
            return {
                render(f, d) {
                    const p = a.get(d);
                    return p !== void 0 ? Promise.resolve(p) : u(f, d);
                }
            };
        }, Tve = (t, e, n, r, s, i) => o => (a, l) => {
            const u = t.get(a);
            if (u === void 0) {
                if (!o && i(a)) {
                    const f = r(a), {outputs: d} = n(a);
                    for (const p of d)
                        if (Zf(p)) {
                            const _ = r(p[0]);
                            e(f, _, p[1], p[2]);
                        } else {
                            const _ = s(p[0]);
                            f.disconnect(_, p[1]);
                        }
                }
                t.set(a, l);
            } else {
                t.set(a, u + l);
            }
        }, Sve = (t, e) => n => {
            const r = t.get(n);
            return e(r) || e(n);
        }, wve = (t, e) => n => t.has(n) || e(n), Ove = (t, e) => n => t.has(n) || e(n), Ave = (t, e) => n => {
            const r = t.get(n);
            return e(r) || e(n);
        }, Cve = t => e => t !== null && e instanceof t, Ive = t => e => t !== null && typeof t.AudioNode == 'function' && e instanceof t.AudioNode, kve = t => e => t !== null && typeof t.AudioParam == 'function' && e instanceof t.AudioParam, Nve = (t, e) => n => t(n) || e(n), xve = t => e => t !== null && e instanceof t, Pve = t => t !== null && t.isSecureContext, Rve = (t, e, n, r) => class extends t {
            constructor(i, o) {
                const a = n(i), l = e(a, o);
                if (r(a)) {
                    throw TypeError();
                }
                super(i, true, l, null);
                this._nativeMediaElementAudioSourceNode = l;
                ;
            }
            get mediaElement() {
                return this._nativeMediaElementAudioSourceNode.mediaElement;
            }
        }, Dve = (t, e, n, r) => class extends t {
            constructor(i, o) {
                const a = n(i);
                if (r(a)) {
                    throw new TypeError();
                }
                const l = {
                        ...Mve,
                        ...o
                    }, u = e(a, l);
                super(i, false, u, null);
                this._nativeMediaStreamAudioDestinationNode = u;
                ;
            }
            get stream() {
                return this._nativeMediaStreamAudioDestinationNode.stream;
            }
        }, $ve = (t, e, n, r) => class extends t {
            constructor(i, o) {
                const a = n(i), l = e(a, o);
                if (r(a)) {
                    throw new TypeError();
                }
                super(i, true, l, null);
                this._nativeMediaStreamAudioSourceNode = l;
                ;
            }
            get mediaStream() {
                return this._nativeMediaStreamAudioSourceNode.mediaStream;
            }
        }, Lve = (t, e, n) => class extends t {
            constructor(s, i) {
                const o = n(s), a = e(o, i);
                super(s, true, a, null);
            }
        }, Fve = (t, e, n, r, s, i) => class extends n {
            constructor(a, l) {
                super(a);
                this._nativeContext = a;
                pg.set(this, a);
                r(a) && s.set(a, new Set());
                this._destination = new t(this, l);
                this._listener = e(this, a);
                this._onstatechange = null;
                ;
            }
            get currentTime() {
                return this._nativeContext.currentTime;
            }
            get destination() {
                return this._destination;
            }
            get listener() {
                return this._listener;
            }
            get onstatechange() {
                return this._onstatechange;
            }
            set onstatechange(a) {
                const l = typeof a == 'function' ? i(this, a) : null;
                this._nativeContext.onstatechange = l;
                const u = this._nativeContext.onstatechange;
                this._onstatechange = u !== null && u === l ? a : u;
            }
            get sampleRate() {
                return this._nativeContext.sampleRate;
            }
            get state() {
                return this._nativeContext.state;
            }
        }, tf = t => {
            const e = new Uint32Array([
                1179011410,
                40,
                1163280727,
                544501094,
                16,
                131073,
                44100,
                176400,
                1048580,
                1635017060,
                4,
                0
            ]);
            try {
                const n = t.decodeAudioData(e.buffer, () => {
                });
                return n === void 0 ? false : (n.catch(() => {
                }), true);
            } catch {
            }
            return false;
        }, Uve = (t, e) => (n, r, s) => {
            const i = new Set();
            return n.connect = (o => (a, l = 0, u = 0) => {
                const f = i.size === 0;
                if (e(a)) {
                    return o.call(n, a, l, u), t(i, [
                        a,
                        l,
                        u
                    ], d => d[0] === a && d[1] === l && d[2] === u, true), f && r(), a;
                }
                o.call(n, a, l);
                t(i, [
                    a,
                    l
                ], d => d[0] === a && d[1] === l, true);
                f && r();
                ;
            })(n.connect), n.disconnect = (o => (a, l, u) => {
                const f = i.size > 0;
                if (a === void 0) {
                    o.apply(n);
                    i.clear();
                    ;
                } else {
                    if (typeof a == 'number') {
                        o.call(n, a);
                        for (const p of i)
                            p[1] === a && i.delete(p);
                    } else {
                        e(a) ? o.call(n, a, l, u) : o.call(n, a, l);
                        for (const p of i)
                            p[0] === a && (l === void 0 || p[1] === l) && (u === void 0 || p[2] === u) && i.delete(p);
                    }
                }
                const d = i.size === 0;
                f && d && s();
            })(n.disconnect), n;
        }, cn = (t, e, n) => {
            const r = e[n];
            r !== void 0 && r !== t[n] && (t[n] = r);
        }, Fn = (t, e) => {
            cn(t, e, 'channelCount');
            cn(t, e, 'channelCountMode');
            cn(t, e, 'channelInterpretation');
            ;
        }, Cw = t => typeof t.getFloatTimeDomainData == 'function', Bve = t => {
            ;
        }, qve = (t, e) => (n, r) => {
            const s = n.createAnalyser();
            if (Fn(s, r), !(r.maxDecibels > r.minDecibels)) {
                throw e();
            }
            return cn(s, r, 'fftSize'), cn(s, r, 'maxDecibels'), cn(s, r, 'minDecibels'), cn(s, r, 'smoothingTimeConstant'), t(Cw, () => Cw(s)) || Bve(s), s;
        }, Vve = t => t === null ? null : t.hasOwnProperty('AudioBuffer') ? t.AudioBuffer : null, _n = (t, e, n) => {
            const r = e[n];
            r !== void 0 && r !== t[n].value && (t[n].value = r);
        }, Gve = t => {
            ;
        }, H3 = t => {
            ;
        }, z3 = t => {
            ;
        }, jve = (t, e, n, r, s, i, o, a, l, u, f) => (d, p) => {
            const _ = d.createBufferSource();
            return Fn(_, p), _n(_, p, 'playbackRate'), cn(_, p, 'buffer'), cn(_, p, 'loop'), cn(_, p, 'loopEnd'), cn(_, p, 'loopStart'), e(n, () => n(d)) || Gve(_), e(r, () => r(d)) || l(_), e(s, () => s(d)) || u(_, d), e(i, () => i(d)) || H3(_), e(o, () => o(d)) || f(_, d), e(a, () => a(d)) || z3(_), t(d, _), _;
        }, Wve = t => t === null ? null : t.hasOwnProperty('AudioContext') ? t.AudioContext : t.hasOwnProperty('webkitAudioContext') ? t.webkitAudioContext : null, Hve = (t, e) => (n, r, s) => {
            const i = n.destination;
            if (i.channelCount !== r) {
                try {
                    ;
                } catch {
                }
            }
            s && i.channelCountMode !== 'explicit' && (i.channelCountMode = 'explicit');
            i.maxChannelCount === 0 && Object.defineProperty(i, 'maxChannelCount', { value: r });
            ;
            const o = t(n, {
                channelCount: r,
                channelCountMode: i.channelCountMode,
                channelInterpretation: i.channelInterpretation,
                gain: 1
            });
            return e(o, 'channelCount', a => () => a.call(o), a => l => {
                a.call(o, l);
                try {
                    ;
                } catch (u) {
                    if (l > i.maxChannelCount) {
                        throw u;
                    }
                }
            }), e(o, 'channelCountMode', a => () => a.call(o), a => l => {
                a.call(o, l);
                ;
                ;
            }), e(o, 'channelInterpretation', a => () => a.call(o), a => l => {
                a.call(o, l);
                ;
                ;
            }), Object.defineProperty(o, 'maxChannelCount', { get: () => i.maxChannelCount }), o.connect(i), o;
        }, zve = t => t === null ? null : t.hasOwnProperty('AudioWorkletNode') ? t.AudioWorkletNode : null, Yve = t => {
            const {port1: e} = new MessageChannel();
            try {
                e.postMessage(t);
            } finally {
                e.close();
            }
        }, Kve = (t, e, n, r, s) => (i, o, a, l, u, f) => {
            if (a !== null) {
                try {
                    const d = new a(i, l, f), p = new Map();
                    let _ = null;
                    if (Object.defineProperties(d, {
                            channelCount: {
                                get: () => f.channelCount,
                                set: () => {
                                    throw t();
                                }
                            },
                            channelCountMode: {
                                get: () => 'explicit',
                                set: () => {
                                    throw t();
                                }
                            },
                            onprocessorerror: {
                                get: () => _,
                                set: v => {
                                    typeof _ == 'function' && d.removeEventListener('processorerror', _);
                                    _ = typeof v == 'function' ? v : null;
                                    typeof _ == 'function' && d.addEventListener('processorerror', _);
                                    ;
                                }
                            }
                        }), d.addEventListener = (v => (...y) => {
                            if (y[0] === 'processorerror') {
                                const g = typeof y[1] == 'function' ? y[1] : typeof y[1] == 'object' && y[1] !== null && typeof y[1].handleEvent == 'function' ? y[1].handleEvent : null;
                                if (g !== null) {
                                    const b = p.get(y[1]);
                                    b !== void 0 ? y[1] = b : (y[1] = A => {
                                        A.type === 'error' ? (Object.defineProperties(A, { type: { value: 'processorerror' } }), g(A)) : g(new ErrorEvent(y[0], { ...A }));
                                    }, p.set(g, y[1]));
                                }
                            }
                            return v.call(d, 'error', y[1], y[2]), v.call(d, ...y);
                        })(d.addEventListener), d.removeEventListener = (v => (...y) => {
                            if (y[0] === 'processorerror') {
                                const g = p.get(y[1]);
                                if (g !== void 0) {
                                    p.delete(y[1]);
                                    y[1] = g;
                                }
                            }
                            return v.call(d, 'error', y[1], y[2]), v.call(d, y[0], y[1], y[2]);
                        })(d.removeEventListener), f.numberOfOutputs !== 0) {
                        const v = n(i, {
                            channelCount: 1,
                            channelCountMode: 'explicit',
                            channelInterpretation: 'discrete',
                            gain: 0
                        });
                        return d.connect(v).connect(i.destination), s(d, () => v.disconnect(), () => v.connect(i.destination));
                    }
                    return d;
                } catch (d) {
                    throw d.code === 11 ? r() : d;
                }
            }
            if (u === void 0) {
                throw r();
            }
            return Yve(f), e(i, o, u, f);
        }, AC = (t, e) => t === null ? 512 : Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(t * e))))), Zve = t => new Promise((e, n) => {
            const {
                port1: r,
                port2: s
            } = new MessageChannel();
            ;
            ;
            s.postMessage(t);
            ;
        }), Xve = async (t, e) => {
            const n = await Zve(e);
            return new t(n);
        }, Qve = (t, e, n, r) => {
            let s = y2.get(t);
            if (s === void 0) {
                s = new WeakMap();
                y2.set(t, s);
            }
            const i = Xve(n, r);
            return s.set(e, i), i;
        }, Jve = (t, e, n, r, s, i, o, a, l, u, f, d, p) => (_, v, y, g) => {
            if (g.numberOfInputs === 0 && g.numberOfOutputs === 0) {
                throw l();
            }
            const b = Array.isArray(g.outputChannelCount) ? g.outputChannelCount : Array.from(g.outputChannelCount);
            if (b.some(P => P < 1)) {
                throw l();
            }
            if (b.length !== g.numberOfOutputs) {
                throw e();
            }
            if (g.channelCountMode !== 'explicit') {
                throw l();
            }
            const A = g.channelCount * g.numberOfInputs, N = b.reduce((P, B) => P + B, 0), I = y.parameterDescriptors === void 0 ? 0 : y.parameterDescriptors.length;
            if (A + I > 6 || N > 6) {
                throw l();
            }
            const O = new MessageChannel(), x = [], M = [];
            for (let P = 0; P < g.numberOfInputs; P += 1) {
                x.push(o(_, {
                    channelCount: g.channelCount,
                    channelCountMode: g.channelCountMode,
                    channelInterpretation: g.channelInterpretation,
                    gain: 1
                }));
                M.push(s(_, {
                    channelCount: g.channelCount,
                    channelCountMode: 'explicit',
                    channelInterpretation: 'discrete',
                    numberOfOutputs: g.channelCount
                }));
                ;
            }
            const L = [];
            if (y.parameterDescriptors !== void 0) {
                for (const {
                            defaultValue: P,
                            maxValue: B,
                            minValue: te,
                            name: le
                        } of y.parameterDescriptors) {
                    const me = i(_, {
                        channelCount: 1,
                        channelCountMode: 'explicit',
                        channelInterpretation: 'discrete',
                        offset: g.parameterData[le] !== void 0 ? g.parameterData[le] : P === void 0 ? 0 : P
                    });
                    Object.defineProperties(me.offset, {
                        defaultValue: { get: () => P === void 0 ? 0 : P },
                        maxValue: { get: () => B === void 0 ? Er : B },
                        minValue: { get: () => te === void 0 ? Rr : te }
                    });
                    L.push(me);
                    ;
                }
            }
            const U = r(_, {
                    channelCount: 1,
                    channelCountMode: 'explicit',
                    channelInterpretation: 'speakers',
                    numberOfInputs: Math.max(1, A + I)
                }), ee = AC(v, _.sampleRate), ae = a(_, ee, A + I, Math.max(1, N)), Z = s(_, {
                    channelCount: Math.max(1, N),
                    channelCountMode: 'explicit',
                    channelInterpretation: 'discrete',
                    numberOfOutputs: Math.max(1, N)
                }), fe = [];
            for (let P = 0; P < g.numberOfOutputs; P += 1) {
                fe.push(r(_, {
                    channelCount: 1,
                    channelCountMode: 'explicit',
                    channelInterpretation: 'speakers',
                    numberOfInputs: b[P]
                }));
            }
            for (let P = 0; P < g.numberOfInputs; P += 1) {
                x[P].connect(M[P]);
                for (let B = 0; B < g.channelCount; B += 1) {
                    M[P].connect(U, B, P * g.channelCount + B);
                }
            }
            const ge = new SC(y.parameterDescriptors === void 0 ? [] : y.parameterDescriptors.map(({name: P}, B) => {
                const te = L[B];
                return te.connect(U, 0, A + B), te.start(0), [
                    P,
                    te.offset
                ];
            }));
            U.connect(ae);
            let Y = g.channelInterpretation, Q = null;
            const ue = g.numberOfOutputs === 0 ? [ae] : fe, _e = {
                    get bufferSize() {
                        return ee;
                    },
                    get channelCount() {
                        return g.channelCount;
                    },
                    set channelCount(P) {
                        throw n();
                    },
                    get channelCountMode() {
                        return g.channelCountMode;
                    },
                    set channelCountMode(P) {
                        throw n();
                    },
                    get channelInterpretation() {
                        return Y;
                    },
                    set channelInterpretation(P) {
                        for (const B of x)
                            B.channelInterpretation = P;
                        Y = P;
                    },
                    get context() {
                        return ae.context;
                    },
                    get inputs() {
                        return x;
                    },
                    get numberOfInputs() {
                        return g.numberOfInputs;
                    },
                    get numberOfOutputs() {
                        return g.numberOfOutputs;
                    },
                    get onprocessorerror() {
                        return Q;
                    },
                    set onprocessorerror(P) {
                        typeof Q == 'function' && _e.removeEventListener('processorerror', Q);
                        Q = typeof P == 'function' ? P : null;
                        typeof Q == 'function' && _e.addEventListener('processorerror', Q);
                        ;
                    },
                    get parameters() {
                        return ge;
                    },
                    get port() {
                        return O.port2;
                    },
                    addEventListener(...P) {
                        return ae.addEventListener(P[0], P[1], P[2]);
                    },
                    connect: t.bind(null, ue),
                    disconnect: u.bind(null, ue),
                    dispatchEvent(...P) {
                        return ae.dispatchEvent(P[0]);
                    },
                    removeEventListener(...P) {
                        return ae.removeEventListener(P[0], P[1], P[2]);
                    }
                }, Oe = new Map();
            O.port1.addEventListener = (P => (...B) => {
                if (B[0] === 'message') {
                    const te = typeof B[1] == 'function' ? B[1] : typeof B[1] == 'object' && B[1] !== null && typeof B[1].handleEvent == 'function' ? B[1].handleEvent : null;
                    if (te !== null) {
                        const le = Oe.get(B[1]);
                        le !== void 0 ? B[1] = le : (B[1] = me => {
                            f(_.currentTime, _.sampleRate, () => te(me));
                        }, Oe.set(te, B[1]));
                    }
                }
                return P.call(O.port1, B[0], B[1], B[2]);
            })(O.port1.addEventListener);
            O.port1.removeEventListener = (P => (...B) => {
                if (B[0] === 'message') {
                    const te = Oe.get(B[1]);
                    if (te !== void 0) {
                        Oe.delete(B[1]);
                        B[1] = te;
                    }
                }
                return P.call(O.port1, B[0], B[1], B[2]);
            })(O.port1.removeEventListener);
            ;
            let be = null;
            Object.defineProperty(O.port1, 'onmessage', {
                get: () => be,
                set: P => {
                    typeof be == 'function' && O.port1.removeEventListener('message', be);
                    be = typeof P == 'function' ? P : null;
                    if (typeof be == 'function') {
                        O.port1.addEventListener('message', be);
                        O.port1.start();
                    }
                    ;
                }
            });
            y.prototype.port = O.port1;
            ;
            let Ce = null;
            Qve(_, _e, y, g).then(P => Ce = P);
            const Fe = C1(g.numberOfInputs, g.channelCount), st = C1(g.numberOfOutputs, b), Ve = y.parameterDescriptors === void 0 ? [] : y.parameterDescriptors.reduce((P, {name: B}) => ({
                    ...P,
                    [B]: new Float32Array(128)
                }), {});
            let Ke = true;
            const rt = () => {
                    g.numberOfOutputs > 0 && ae.disconnect(Z);
                    for (let P = 0, B = 0; P < g.numberOfOutputs; P += 1) {
                        const te = fe[P];
                        for (let le = 0; le < b[P]; le += 1) {
                            Z.disconnect(te, B + le, le);
                        }
                        B += b[P];
                    }
                }, w = new Map();
            ae.onaudioprocess = ({
                inputBuffer: P,
                outputBuffer: B
            }) => {
                if (Ce !== null) {
                    const te = d(_e);
                    for (let le = 0; le < ee; le += 128) {
                        for (let me = 0; me < g.numberOfInputs; me += 1) {
                            for (let ye = 0; ye < g.channelCount; ye += 1) {
                                A1(P, Fe[me], ye, ye, le);
                            }
                        }
                        y.parameterDescriptors !== void 0 && y.parameterDescriptors.forEach(({name: me}, ye) => {
                            A1(P, Ve, me, A + ye, le);
                        });
                        for (let me = 0; me < g.numberOfInputs; me += 1) {
                            for (let ye = 0; ye < b[me]; ye += 1) {
                                st[me][ye].byteLength === 0 && (st[me][ye] = new Float32Array(128));
                            }
                        }
                        try {
                            const me = Fe.map((de, oe) => {
                                if (te[oe].size > 0) {
                                    return w.set(oe, ee / 128), de;
                                }
                                const Re = w.get(oe);
                                return Re === void 0 ? [] : (de.every(Le => Le.every(it => it === 0)) && (Re === 1 ? w.delete(oe) : w.set(oe, Re - 1)), de);
                            });
                            Ke = f(_.currentTime + le / _.sampleRate, _.sampleRate, () => Ce.process(me, st, Ve));
                            for (let de = 0, oe = 0; de < g.numberOfOutputs; de += 1) {
                                for (let he = 0; he < b[de]; he += 1) {
                                    wC(B, st[de], he, oe + he, le);
                                }
                                oe += b[de];
                            }
                        } catch (me) {
                            Ke = false;
                            _e.dispatchEvent(new ErrorEvent('processorerror', {
                                colno: me.colno,
                                filename: me.filename,
                                lineno: me.lineno,
                                message: me.message
                            }));
                            ;
                        }
                        if (!Ke) {
                            for (let me = 0; me < g.numberOfInputs; me += 1) {
                                x[me].disconnect(M[me]);
                                for (let ye = 0; ye < g.channelCount; ye += 1) {
                                    M[le].disconnect(U, ye, me * g.channelCount + ye);
                                }
                            }
                            if (y.parameterDescriptors !== void 0) {
                                const me = y.parameterDescriptors.length;
                                for (let ye = 0; ye < me; ye += 1) {
                                    const de = L[ye];
                                    de.disconnect(U, 0, A + ye);
                                    de.stop();
                                    ;
                                }
                            }
                            U.disconnect(ae);
                            ae.onaudioprocess = null;
                            R ? rt() : k();
                            ;
                            break;
                        }
                    }
                }
            };
            let R = false;
            const H = o(_, {
                    channelCount: 1,
                    channelCountMode: 'explicit',
                    channelInterpretation: 'discrete',
                    gain: 0
                }), X = () => ae.connect(H).connect(_.destination), k = () => {
                    ae.disconnect(H);
                    H.disconnect();
                    ;
                }, T = () => {
                    if (Ke) {
                        k();
                        g.numberOfOutputs > 0 && ae.connect(Z);
                        ;
                        for (let P = 0, B = 0; P < g.numberOfOutputs; P += 1) {
                            const te = fe[P];
                            for (let le = 0; le < b[P]; le += 1) {
                                Z.connect(te, B + le, le);
                            }
                            B += b[P];
                        }
                    }
                    R = true;
                }, S = () => {
                    Ke && (X(), rt());
                    R = false;
                    ;
                };
            return X(), p(_e, T, S);
        }, CC = (t, e) => {
            const n = t.createBiquadFilter();
            return Fn(n, e), _n(n, e, 'Q'), _n(n, e, 'detune'), _n(n, e, 'frequency'), _n(n, e, 'gain'), cn(n, e, 'type'), n;
        }, e3e = (t, e) => (n, r) => {
            const s = n.createChannelMerger(r.numberOfInputs);
            return t !== null && t.name === 'webkitAudioContext' && e(n, s), Fn(s, r), s;
        }, t3e = t => {
            const e = t.numberOfOutputs;
            Object.defineProperty(t, 'channelCount', {
                get: () => e,
                set: n => {
                    if (n !== e) {
                        throw Wn();
                    }
                }
            });
            Object.defineProperty(t, 'channelCountMode', {
                get: () => 'explicit',
                set: n => {
                    if (n !== 'explicit') {
                        throw Wn();
                    }
                }
            });
            Object.defineProperty(t, 'channelInterpretation', {
                get: () => 'discrete',
                set: n => {
                    if (n !== 'discrete') {
                        throw Wn();
                    }
                }
            });
            ;
        }, Xf = (t, e) => {
            const n = t.createChannelSplitter(e.numberOfOutputs);
            return Fn(n, e), t3e(n), n;
        }, n3e = (t, e, n, r, s) => (i, o) => {
            if (i.createConstantSource === void 0) {
                return n(i, o);
            }
            const a = i.createConstantSource();
            return Fn(a, o), _n(a, o, 'offset'), e(r, () => r(i)) || H3(a), e(s, () => s(i)) || z3(a), t(i, a), a;
        }, Ru = (t, e) => (t.connect = e.connect.bind(e), t.disconnect = e.disconnect.bind(e), t), r3e = (t, e, n, r) => (s, {
            offset: i,
            ...o
        }) => {
            const a = s.createBuffer(1, 2, 44100), l = e(s, {
                    buffer: null,
                    channelCount: 2,
                    channelCountMode: 'max',
                    channelInterpretation: 'speakers',
                    loop: false,
                    loopEnd: 0,
                    loopStart: 0,
                    playbackRate: 1
                }), u = n(s, {
                    ...o,
                    gain: i
                }), f = a.getChannelData(0);
            f[0] = 1;
            f[1] = 1;
            ;
            ;
            ;
            const d = {
                    get bufferSize() {
                    },
                    get channelCount() {
                        return u.channelCount;
                    },
                    set channelCount(v) {
                        ;
                    },
                    get channelCountMode() {
                        return u.channelCountMode;
                    },
                    set channelCountMode(v) {
                        ;
                    },
                    get channelInterpretation() {
                        return u.channelInterpretation;
                    },
                    set channelInterpretation(v) {
                        ;
                    },
                    get context() {
                        return u.context;
                    },
                    get inputs() {
                        return [];
                    },
                    get numberOfInputs() {
                        return l.numberOfInputs;
                    },
                    get numberOfOutputs() {
                        return u.numberOfOutputs;
                    },
                    get offset() {
                        return u.gain;
                    },
                    get onended() {
                        return l.onended;
                    },
                    set onended(v) {
                        ;
                    },
                    addEventListener(...v) {
                        return l.addEventListener(v[0], v[1], v[2]);
                    },
                    dispatchEvent(...v) {
                        return l.dispatchEvent(v[0]);
                    },
                    removeEventListener(...v) {
                        return l.removeEventListener(v[0], v[1], v[2]);
                    },
                    start(v = 0) {
                        l.start.call(l, v);
                    },
                    stop(v = 0) {
                        l.stop.call(l, v);
                    }
                }, p = () => l.connect(u), _ = () => l.disconnect(u);
            return t(s, l), r(Ru(d, u), p, _);
        }, s3e = (t, e) => (n, r) => {
            const s = n.createConvolver();
            if (Fn(s, r), r.disableNormalization === s.normalize && (s.normalize = !r.disableNormalization), cn(s, r, 'buffer'), r.channelCount > 2 || (e(s, 'channelCount', i => () => i.call(s), i => o => {
                    if (o > 2) {
                        throw t();
                    }
                    return i.call(s, o);
                }), r.channelCountMode === 'max')) {
                throw t();
            }
            return e(s, 'channelCountMode', i => () => i.call(s), i => o => {
                if (o === 'max') {
                    throw t();
                }
                return i.call(s, o);
            }), s;
        }, IC = (t, e) => {
            const n = t.createDelay(e.maxDelayTime);
            return Fn(n, e), _n(n, e, 'delayTime'), n;
        }, i3e = t => (e, n) => {
            const r = e.createDynamicsCompressor();
            if (Fn(r, n), n.channelCount > 2 || n.channelCountMode === 'max') {
                throw t();
            }
            return _n(r, n, 'attack'), _n(r, n, 'knee'), _n(r, n, 'ratio'), _n(r, n, 'release'), _n(r, n, 'threshold'), r;
        }, qr = (t, e) => {
            const n = t.createGain();
            return Fn(n, e), _n(n, e, 'gain'), n;
        }, o3e = t => (e, n, r) => {
            if (e.createIIRFilter === void 0) {
                return t(e, n, r);
            }
            const s = e.createIIRFilter(r.feedforward, r.feedback);
            return Fn(s, r), s;
        };
    function a3e(t, e) {
        const n = e[0] * e[0] + e[1] * e[1];
        return [
            (t[0] * e[0] + t[1] * e[1]) / n,
            (t[1] * e[0] - t[0] * e[1]) / n
        ];
    }
    function c3e(t, e) {
        return [
            t[0] * e[0] - t[1] * e[1],
            t[0] * e[1] + t[1] * e[0]
        ];
    }
    function Iw(t, e) {
        let n = [
            0,
            0
        ];
        for (let r = t.length - 1; r >= 0; r -= 1) {
            n = c3e(n, e);
            n[0] += t[r];
            ;
        }
        return n;
    }
    const l3e = (t, e, n, r) => (s, i, {
            channelCount: o,
            channelCountMode: a,
            channelInterpretation: l,
            feedback: u,
            feedforward: f
        }) => {
            const d = AC(i, s.sampleRate), p = u instanceof Float64Array ? u : new Float64Array(u), _ = f instanceof Float64Array ? f : new Float64Array(f), v = p.length, y = _.length, g = Math.min(v, y);
            if (v === 0 || v > 20) {
                throw r();
            }
            if (p[0] === 0) {
                throw e();
            }
            if (y === 0 || y > 20) {
                throw r();
            }
            if (_[0] === 0) {
                throw e();
            }
            if (p[0] !== 1) {
                for (let L = 0; L < y; L += 1) {
                    _[L] /= p[0];
                }
                for (let L = 1; L < v; L += 1) {
                    p[L] /= p[0];
                }
            }
            const b = n(s, d, o, o);
            b.channelCount = o;
            b.channelCountMode = a;
            b.channelInterpretation = l;
            ;
            const N = [], I = [], O = [];
            for (let L = 0; L < o; L += 1) {
                N.push(0);
                const U = new Float32Array(32), ee = new Float32Array(32);
                U.fill(0);
                ee.fill(0);
                I.push(U);
                O.push(ee);
                ;
            }
            b.onaudioprocess = L => {
                const U = L.inputBuffer, ee = L.outputBuffer, ae = U.numberOfChannels;
                for (let Z = 0; Z < ae; Z += 1) {
                    const fe = U.getChannelData(Z), ge = ee.getChannelData(Z);
                    N[Z] = OC(p, v, _, y, g, I[Z], O[Z], N[Z], 32, fe, ge);
                }
            };
            const x = s.sampleRate / 2;
            return Ru({
                get bufferSize() {
                    return d;
                },
                get channelCount() {
                    return b.channelCount;
                },
                set channelCount(L) {
                    b.channelCount = L;
                },
                get channelCountMode() {
                    return b.channelCountMode;
                },
                set channelCountMode(L) {
                    b.channelCountMode = L;
                },
                get channelInterpretation() {
                    return b.channelInterpretation;
                },
                set channelInterpretation(L) {
                    b.channelInterpretation = L;
                },
                get context() {
                    return b.context;
                },
                get inputs() {
                    return [b];
                },
                get numberOfInputs() {
                    return b.numberOfInputs;
                },
                get numberOfOutputs() {
                    return b.numberOfOutputs;
                },
                addEventListener(...L) {
                    return b.addEventListener(L[0], L[1], L[2]);
                },
                dispatchEvent(...L) {
                    return b.dispatchEvent(L[0]);
                },
                getFrequencyResponse(L, U, ee) {
                    if (L.length !== U.length || U.length !== ee.length) {
                        throw t();
                    }
                    const ae = L.length;
                    for (let Z = 0; Z < ae; Z += 1) {
                        const fe = -Math.PI * (L[Z] / x), ge = [
                                Math.cos(fe),
                                Math.sin(fe)
                            ], Y = Iw(_, ge), Q = Iw(p, ge), ue = a3e(Y, Q);
                        U[Z] = Math.sqrt(ue[0] * ue[0] + ue[1] * ue[1]);
                        ee[Z] = Math.atan2(ue[1], ue[0]);
                        ;
                    }
                },
                removeEventListener(...L) {
                    return b.removeEventListener(L[0], L[1], L[2]);
                }
            }, b);
        }, u3e = (t, e) => t.createMediaElementSource(e.mediaElement), h3e = (t, e) => {
            const n = t.createMediaStreamDestination();
            return Fn(n, e), n.numberOfOutputs === 1 && Object.defineProperty(n, 'numberOfOutputs', { get: () => 0 }), n;
        }, f3e = (t, {mediaStream: e}) => {
            const n = e.getAudioTracks();
            n.sort((i, o) => i.id < o.id ? -1 : i.id > o.id ? 1 : 0);
            const r = n.slice(0, 1), s = t.createMediaStreamSource(new MediaStream(r));
            return Object.defineProperty(s, 'mediaStream', { value: e }), s;
        }, d3e = (t, e) => (n, {mediaStreamTrack: r}) => {
            if (typeof n.createMediaStreamTrackSource == 'function') {
                return n.createMediaStreamTrackSource(r);
            }
            const s = new MediaStream([r]), i = n.createMediaStreamSource(s);
            if (r.kind !== 'audio') {
                throw t();
            }
            if (e(n)) {
                throw new TypeError();
            }
            return i;
        }, p3e = t => t === null ? null : t.hasOwnProperty('OfflineAudioContext') ? t.OfflineAudioContext : t.hasOwnProperty('webkitOfflineAudioContext') ? t.webkitOfflineAudioContext : null, m3e = (t, e, n, r, s, i) => (o, a) => {
            const l = o.createOscillator();
            return Fn(l, a), _n(l, a, 'detune'), _n(l, a, 'frequency'), a.periodicWave !== void 0 ? l.setPeriodicWave(a.periodicWave) : cn(l, a, 'type'), e(n, () => n(o)) || H3(l), e(r, () => r(o)) || i(l, o), e(s, () => s(o)) || z3(l), t(o, l), l;
        }, g3e = t => (e, n) => {
            const r = e.createPanner();
            return r.orientationX === void 0 ? t(e, n) : (Fn(r, n), _n(r, n, 'orientationX'), _n(r, n, 'orientationY'), _n(r, n, 'orientationZ'), _n(r, n, 'positionX'), _n(r, n, 'positionY'), _n(r, n, 'positionZ'), cn(r, n, 'coneInnerAngle'), cn(r, n, 'coneOuterAngle'), cn(r, n, 'coneOuterGain'), cn(r, n, 'distanceModel'), cn(r, n, 'maxDistance'), cn(r, n, 'panningModel'), cn(r, n, 'refDistance'), cn(r, n, 'rolloffFactor'), r);
        }, _3e = (t, e, n, r, s, i, o, a, l, u) => (f, {
            coneInnerAngle: d,
            coneOuterAngle: p,
            coneOuterGain: _,
            distanceModel: v,
            maxDistance: y,
            orientationX: g,
            orientationY: b,
            orientationZ: A,
            panningModel: N,
            positionX: I,
            positionY: O,
            positionZ: x,
            refDistance: M,
            rolloffFactor: L,
            ...U
        }) => {
            const ee = f.createPanner();
            if (U.channelCount > 2 || U.channelCountMode === 'max') {
                throw o();
            }
            Fn(ee, U);
            const Z = n(f, {
                    ...ae,
                    channelInterpretation: 'speakers',
                    numberOfInputs: 6
                }), fe = r(f, {
                    ...U,
                    gain: 1
                }), ge = r(f, {
                    ...ae,
                    gain: 1
                }), Y = r(f, {
                    ...ae,
                    gain: 0
                }), Q = r(f, {
                    ...ae,
                    gain: 0
                }), ue = r(f, {
                    ...ae,
                    gain: 0
                }), _e = r(f, {
                    ...ae,
                    gain: 0
                }), Oe = r(f, {
                    ...ae,
                    gain: 0
                }), be = s(f, 256, 6, 1), Ce = i(f, {
                    ...ae,
                    curve: new Float32Array([
                        1,
                        1
                    ]),
                    oversample: 'none'
                });
            let Me = [
                    g,
                    b,
                    A
                ], Fe = [
                    I,
                    O,
                    x
                ];
            const st = new Float32Array(1);
            be.onaudioprocess = ({inputBuffer: w}) => {
                const R = [
                    l(w, st, 0),
                    l(w, st, 1),
                    l(w, st, 2)
                ];
                R.some((X, k) => X !== Me[k]) && (ee.setOrientation(...R), Me = R);
                const H = [
                    l(w, st, 3),
                    l(w, st, 4),
                    l(w, st, 5)
                ];
                H.some((X, k) => X !== Fe[k]) && (ee.setPosition(...H), Fe = H);
            };
            Object.defineProperty(Y.gain, 'defaultValue', { get: () => 0 });
            Object.defineProperty(Q.gain, 'defaultValue', { get: () => 0 });
            Object.defineProperty(ue.gain, 'defaultValue', { get: () => 0 });
            Object.defineProperty(_e.gain, 'defaultValue', { get: () => 0 });
            Object.defineProperty(Oe.gain, 'defaultValue', { get: () => 0 });
            ;
            const Ve = {
                get bufferSize() {
                },
                get channelCount() {
                    return ee.channelCount;
                },
                set channelCount(w) {
                    if (w > 2) {
                        throw o();
                    }
                    fe.channelCount = w;
                    ee.channelCount = w;
                    ;
                },
                get channelCountMode() {
                    return ee.channelCountMode;
                },
                set channelCountMode(w) {
                    if (w === 'max') {
                        throw o();
                    }
                    fe.channelCountMode = w;
                    ee.channelCountMode = w;
                    ;
                },
                get channelInterpretation() {
                    return ee.channelInterpretation;
                },
                set channelInterpretation(w) {
                    fe.channelInterpretation = w;
                    ee.channelInterpretation = w;
                    ;
                },
                get coneInnerAngle() {
                    return ee.coneInnerAngle;
                },
                set coneInnerAngle(w) {
                    ee.coneInnerAngle = w;
                },
                get coneOuterAngle() {
                    return ee.coneOuterAngle;
                },
                set coneOuterAngle(w) {
                    ee.coneOuterAngle = w;
                },
                get coneOuterGain() {
                    return ee.coneOuterGain;
                },
                set coneOuterGain(w) {
                    if (w < 0 || w > 1) {
                        throw e();
                    }
                    ee.coneOuterGain = w;
                },
                get context() {
                    return ee.context;
                },
                get distanceModel() {
                    return ee.distanceModel;
                },
                set distanceModel(w) {
                    ee.distanceModel = w;
                },
                get inputs() {
                    return [fe];
                },
                get maxDistance() {
                    return ee.maxDistance;
                },
                set maxDistance(w) {
                    if (w < 0) {
                        throw new RangeError();
                    }
                    ee.maxDistance = w;
                },
                get numberOfInputs() {
                    return ee.numberOfInputs;
                },
                get numberOfOutputs() {
                    return ee.numberOfOutputs;
                },
                get orientationX() {
                    return ge.gain;
                },
                get orientationY() {
                    return Y.gain;
                },
                get orientationZ() {
                    return Q.gain;
                },
                get panningModel() {
                    return ee.panningModel;
                },
                set panningModel(w) {
                    ee.panningModel = w;
                },
                get positionX() {
                    return ue.gain;
                },
                get positionY() {
                    return _e.gain;
                },
                get positionZ() {
                    return Oe.gain;
                },
                get refDistance() {
                    return ee.refDistance;
                },
                set refDistance(w) {
                    if (w < 0) {
                        throw new RangeError();
                    }
                    ee.refDistance = w;
                },
                get rolloffFactor() {
                    return ee.rolloffFactor;
                },
                set rolloffFactor(w) {
                    if (w < 0) {
                        throw new RangeError();
                    }
                    ee.rolloffFactor = w;
                },
                addEventListener(...w) {
                    return fe.addEventListener(w[0], w[1], w[2]);
                },
                dispatchEvent(...w) {
                    return fe.dispatchEvent(w[0]);
                },
                removeEventListener(...w) {
                    return fe.removeEventListener(w[0], w[1], w[2]);
                }
            };
            d !== Ve.coneInnerAngle && (Ve.coneInnerAngle = d);
            p !== Ve.coneOuterAngle && (Ve.coneOuterAngle = p);
            _ !== Ve.coneOuterGain && (Ve.coneOuterGain = _);
            v !== Ve.distanceModel && (Ve.distanceModel = v);
            y !== Ve.maxDistance && (Ve.maxDistance = y);
            g !== Ve.orientationX.value && (Ve.orientationX.value = g);
            b !== Ve.orientationY.value && (Ve.orientationY.value = b);
            A !== Ve.orientationZ.value && (Ve.orientationZ.value = A);
            N !== Ve.panningModel && (Ve.panningModel = N);
            I !== Ve.positionX.value && (Ve.positionX.value = I);
            O !== Ve.positionY.value && (Ve.positionY.value = O);
            x !== Ve.positionZ.value && (Ve.positionZ.value = x);
            M !== Ve.refDistance && (Ve.refDistance = M);
            L !== Ve.rolloffFactor && (Ve.rolloffFactor = L);
            (Me[0] !== 1 || Me[1] !== 0 || Me[2] !== 0) && ee.setOrientation(...Me);
            (Fe[0] !== 0 || Fe[1] !== 0 || Fe[2] !== 0) && ee.setPosition(...Fe);
            ;
            const Ke = () => {
                    fe.connect(ee);
                    t(fe, Ce, 0, 0);
                    Ce.connect(ge).connect(Z, 0, 0);
                    Ce.connect(Y).connect(Z, 0, 1);
                    Ce.connect(Q).connect(Z, 0, 2);
                    Ce.connect(ue).connect(Z, 0, 3);
                    Ce.connect(_e).connect(Z, 0, 4);
                    Ce.connect(Oe).connect(Z, 0, 5);
                    Z.connect(be).connect(f.destination);
                    ;
                }, rt = () => {
                    fe.disconnect(ee);
                    a(fe, Ce, 0, 0);
                    Ce.disconnect(ge);
                    ge.disconnect(Z);
                    Ce.disconnect(Y);
                    Y.disconnect(Z);
                    Ce.disconnect(Q);
                    Q.disconnect(Z);
                    Ce.disconnect(ue);
                    ue.disconnect(Z);
                    Ce.disconnect(_e);
                    _e.disconnect(Z);
                    Ce.disconnect(Oe);
                    Oe.disconnect(Z);
                    Z.disconnect(be);
                    be.disconnect(f.destination);
                    ;
                };
            return u(Ru(Ve, ee), Ke, rt);
        }, y3e = t => (e, {
            disableNormalization: n,
            imag: r,
            real: s
        }) => {
            const i = r instanceof Float32Array ? r : new Float32Array(r), o = s instanceof Float32Array ? s : new Float32Array(s), a = e.createPeriodicWave(o, i, { disableNormalization: n });
            if (Array.from(r).length < 2) {
                throw t();
            }
            return a;
        }, Qf = (t, e, n, r) => t.createScriptProcessor(e, n, r), v3e = (t, e) => (n, r) => {
            const s = r.channelCountMode;
            if (s === 'clamped-max') {
                throw e();
            }
            if (n.createStereoPanner === void 0) {
                return t(n, r);
            }
            const i = n.createStereoPanner();
            return Fn(i, r), _n(i, r, 'pan'), Object.defineProperty(i, 'channelCountMode', {
                get: () => s,
                set: o => {
                    if (o !== s) {
                        throw e();
                    }
                }
            }), i;
        }, b3e = (t, e, n, r, s, i) => {
            const a = new Float32Array([
                    1,
                    1
                ]), l = Math.PI / 2, f = {
                    ...u,
                    oversample: 'none'
                }, d = (v, y, g, b) => {
                    const A = new Float32Array(16385), N = new Float32Array(16385);
                    for (let U = 0; U < 16385; U += 1) {
                        const ee = U / 16384 * l;
                        A[U] = Math.cos(ee);
                        N[U] = Math.sin(ee);
                        ;
                    }
                    const I = n(v, {
                            ...u,
                            gain: 0
                        }), O = r(v, {
                            ...f,
                            curve: A
                        }), x = r(v, {
                            ...f,
                            curve: a
                        }), M = n(v, {
                            ...u,
                            gain: 0
                        }), L = r(v, {
                            ...f,
                            curve: N
                        });
                    return {
                        connectGraph() {
                            y.connect(I);
                            y.connect(x.inputs === void 0 ? x : x.inputs[0]);
                            y.connect(M);
                            x.connect(g);
                            g.connect(O.inputs === void 0 ? O : O.inputs[0]);
                            g.connect(L.inputs === void 0 ? L : L.inputs[0]);
                            O.connect(I.gain);
                            L.connect(M.gain);
                            I.connect(b, 0, 0);
                            M.connect(b, 0, 1);
                            ;
                        },
                        disconnectGraph() {
                            y.disconnect(I);
                            y.disconnect(x.inputs === void 0 ? x : x.inputs[0]);
                            y.disconnect(M);
                            x.disconnect(g);
                            g.disconnect(O.inputs === void 0 ? O : O.inputs[0]);
                            g.disconnect(L.inputs === void 0 ? L : L.inputs[0]);
                            O.disconnect(I.gain);
                            L.disconnect(M.gain);
                            I.disconnect(b, 0, 0);
                            M.disconnect(b, 0, 1);
                            ;
                        }
                    };
                }, p = (v, y, g, b) => {
                    const A = new Float32Array(16385), N = new Float32Array(16385), I = new Float32Array(16385), O = new Float32Array(16385), x = Math.floor(8192.5);
                    for (let ue = 0; ue < 16385; ue += 1) {
                        if (ue > x) {
                            const _e = (ue - x) / (16384 - x) * l;
                            A[ue] = Math.cos(_e);
                            N[ue] = Math.sin(_e);
                            I[ue] = 0;
                            O[ue] = 1;
                            ;
                        } else {
                            const _e = ue / (16384 - x) * l;
                            A[ue] = 1;
                            N[ue] = 0;
                            I[ue] = Math.cos(_e);
                            O[ue] = Math.sin(_e);
                            ;
                        }
                    }
                    const M = e(v, {
                            channelCount: 2,
                            channelCountMode: 'explicit',
                            channelInterpretation: 'discrete',
                            numberOfOutputs: 2
                        }), L = n(v, {
                            ...u,
                            gain: 0
                        }), U = r(v, {
                            ...f,
                            curve: A
                        }), ee = n(v, {
                            ...u,
                            gain: 0
                        }), ae = r(v, {
                            ...f,
                            curve: N
                        }), Z = r(v, {
                            ...f,
                            curve: a
                        }), fe = n(v, {
                            ...u,
                            gain: 0
                        }), ge = r(v, {
                            ...f,
                            curve: I
                        }), Y = n(v, {
                            ...u,
                            gain: 0
                        }), Q = r(v, {
                            ...f,
                            curve: O
                        });
                    return {
                        connectGraph() {
                            y.connect(M);
                            y.connect(Z.inputs === void 0 ? Z : Z.inputs[0]);
                            M.connect(L, 0);
                            M.connect(ee, 0);
                            M.connect(fe, 1);
                            M.connect(Y, 1);
                            Z.connect(g);
                            g.connect(U.inputs === void 0 ? U : U.inputs[0]);
                            g.connect(ae.inputs === void 0 ? ae : ae.inputs[0]);
                            g.connect(ge.inputs === void 0 ? ge : ge.inputs[0]);
                            g.connect(Q.inputs === void 0 ? Q : Q.inputs[0]);
                            U.connect(L.gain);
                            ae.connect(ee.gain);
                            ge.connect(fe.gain);
                            Q.connect(Y.gain);
                            L.connect(b, 0, 0);
                            fe.connect(b, 0, 0);
                            ee.connect(b, 0, 1);
                            Y.connect(b, 0, 1);
                            ;
                        },
                        disconnectGraph() {
                            y.disconnect(M);
                            y.disconnect(Z.inputs === void 0 ? Z : Z.inputs[0]);
                            M.disconnect(L, 0);
                            M.disconnect(ee, 0);
                            M.disconnect(fe, 1);
                            M.disconnect(Y, 1);
                            Z.disconnect(g);
                            g.disconnect(U.inputs === void 0 ? U : U.inputs[0]);
                            g.disconnect(ae.inputs === void 0 ? ae : ae.inputs[0]);
                            g.disconnect(ge.inputs === void 0 ? ge : ge.inputs[0]);
                            g.disconnect(Q.inputs === void 0 ? Q : Q.inputs[0]);
                            U.disconnect(L.gain);
                            ae.disconnect(ee.gain);
                            ge.disconnect(fe.gain);
                            Q.disconnect(Y.gain);
                            L.disconnect(b, 0, 0);
                            fe.disconnect(b, 0, 0);
                            ee.disconnect(b, 0, 1);
                            Y.disconnect(b, 0, 1);
                            ;
                        }
                    };
                }, _ = (v, y, g, b, A) => {
                    if (y === 1) {
                        return d(v, g, b, A);
                    }
                    if (y === 2) {
                        return p(v, g, b, A);
                    }
                    throw s();
                };
            return (v, {
                channelCount: y,
                channelCountMode: g,
                pan: b,
                ...A
            }) => {
                if (g === 'max') {
                    throw s();
                }
                const N = t(v, {
                        ...A,
                        channelCount: 1,
                        channelCountMode: g,
                        numberOfInputs: 2
                    }), I = n(v, {
                        ...A,
                        channelCount: y,
                        channelCountMode: g,
                        gain: 1
                    }), O = n(v, {
                        channelCount: 1,
                        channelCountMode: 'explicit',
                        channelInterpretation: 'discrete',
                        gain: b
                    });
                let {
                    connectGraph: x,
                    disconnectGraph: M
                } = _(v, y, I, O, N);
                Object.defineProperty(O.gain, 'defaultValue', { get: () => 0 });
                Object.defineProperty(O.gain, 'maxValue', { get: () => 1 });
                Object.defineProperty(O.gain, 'minValue', { get: () => -1 });
                ;
                const L = {
                    get bufferSize() {
                    },
                    get channelCount() {
                        return I.channelCount;
                    },
                    set channelCount(Z) {
                        if (I.channelCount !== Z) {
                            U && M();
                            ({
                                connectGraph: x,
                                disconnectGraph: M
                            } = _(v, Z, I, O, N));
                            U && x();
                        }
                        I.channelCount = Z;
                        ;
                    },
                    get channelCountMode() {
                        return I.channelCountMode;
                    },
                    set channelCountMode(Z) {
                        if (Z === 'clamped-max' || Z === 'max') {
                            throw s();
                        }
                        I.channelCountMode = Z;
                    },
                    get channelInterpretation() {
                        return I.channelInterpretation;
                    },
                    set channelInterpretation(Z) {
                        I.channelInterpretation = Z;
                    },
                    get context() {
                        return I.context;
                    },
                    get inputs() {
                        return [I];
                    },
                    get numberOfInputs() {
                        return I.numberOfInputs;
                    },
                    get numberOfOutputs() {
                        return I.numberOfOutputs;
                    },
                    get pan() {
                        return O.gain;
                    },
                    addEventListener(...Z) {
                        return I.addEventListener(Z[0], Z[1], Z[2]);
                    },
                    dispatchEvent(...Z) {
                        return I.dispatchEvent(Z[0]);
                    },
                    removeEventListener(...Z) {
                        return I.removeEventListener(Z[0], Z[1], Z[2]);
                    }
                };
                let U = false;
                const ee = () => {
                        x();
                        U = true;
                        ;
                    }, ae = () => {
                        M();
                        U = false;
                        ;
                    };
                return i(Ru(L, N), ee, ae);
            };
        }, E3e = (t, e, n, r, s, i, o) => (a, l) => {
            const u = a.createWaveShaper();
            if (i !== null && i.name === 'webkitAudioContext' && a.createGain().gain.automationRate === void 0) {
                return n(a, l);
            }
            Fn(u, l);
            const f = l.curve === null || l.curve instanceof Float32Array ? l.curve : new Float32Array(l.curve);
            if (f !== null && f.length < 2) {
                throw e();
            }
            cn(u, { curve: f }, 'curve');
            cn(u, l, 'oversample');
            ;
            let d = null, p = false;
            return o(u, 'curve', y => () => y.call(u), y => g => (y.call(u, g), p && (r(g) && d === null ? d = t(a, u) : !r(g) && d !== null && (d(), d = null)), g)), s(u, () => {
                p = true;
                r(u.curve) && (d = t(a, u));
                ;
            }, () => {
                p = false;
                if (d !== null) {
                    d();
                    d = null;
                }
                ;
            });
        }, T3e = (t, e, n, r, s) => (i, {
            curve: o,
            oversample: a,
            ...l
        }) => {
            const u = i.createWaveShaper(), f = i.createWaveShaper();
            Fn(u, l);
            Fn(f, l);
            ;
            const d = n(i, {
                    ...l,
                    gain: 1
                }), p = n(i, {
                    ...l,
                    gain: -1
                }), _ = n(i, {
                    ...l,
                    gain: 1
                }), v = n(i, {
                    ...l,
                    gain: -1
                });
            let y = null, g = false, b = null;
            const A = {
                get bufferSize() {
                },
                get channelCount() {
                    return u.channelCount;
                },
                set channelCount(O) {
                    ;
                    p.channelCount = O;
                    ;
                    _.channelCount = O;
                    f.channelCount = O;
                    ;
                    ;
                },
                get channelCountMode() {
                    return u.channelCountMode;
                },
                set channelCountMode(O) {
                    ;
                    p.channelCountMode = O;
                    ;
                    _.channelCountMode = O;
                    f.channelCountMode = O;
                    ;
                    ;
                },
                get channelInterpretation() {
                    return u.channelInterpretation;
                },
                set channelInterpretation(O) {
                    ;
                    p.channelInterpretation = O;
                    ;
                    _.channelInterpretation = O;
                    f.channelInterpretation = O;
                    ;
                    ;
                },
                get context() {
                    return u.context;
                },
                get curve() {
                    return b;
                },
                set curve(O) {
                    if (O !== null && O.length < 2) {
                        throw e();
                    }
                    if (O === null) {
                        ;
                        f.curve = O;
                        ;
                    } else {
                        const x = O.length, M = new Float32Array(x + 2 - x % 2), L = new Float32Array(x + 2 - x % 2);
                        M[0] = O[0];
                        L[0] = -O[x - 1];
                        ;
                        const U = Math.ceil((x + 1) / 2), ee = (x + 1) / 2 - 1;
                        for (let ae = 1; ae < U; ae += 1) {
                            const Z = ae / U * ee, fe = Math.floor(Z), ge = Math.ceil(Z);
                            M[ae] = fe === ge ? O[fe] : (1 - (Z - fe)) * O[fe] + (1 - (ge - Z)) * O[ge];
                            L[ae] = fe === ge ? -O[x - 1 - fe] : -((1 - (Z - fe)) * O[x - 1 - fe]) - (1 - (ge - Z)) * O[x - 1 - ge];
                            ;
                        }
                        M[U] = x % 2 === 1 ? O[U - 1] : (O[U - 2] + O[U - 1]) / 2;
                        ;
                        f.curve = L;
                        ;
                    }
                    b = O;
                    g && (r(b) && y === null ? y = t(i, d) : y !== null && (y(), y = null));
                    ;
                },
                get inputs() {
                    return [d];
                },
                get numberOfInputs() {
                    return u.numberOfInputs;
                },
                get numberOfOutputs() {
                    return u.numberOfOutputs;
                },
                get oversample() {
                    return u.oversample;
                },
                set oversample(O) {
                    ;
                    f.oversample = O;
                    ;
                },
                addEventListener(...O) {
                    return d.addEventListener(O[0], O[1], O[2]);
                },
                dispatchEvent(...O) {
                    return d.dispatchEvent(O[0]);
                },
                removeEventListener(...O) {
                    return d.removeEventListener(O[0], O[1], O[2]);
                }
            };
            o !== null && (A.curve = o instanceof Float32Array ? o : new Float32Array(o));
            a !== A.oversample && (A.oversample = a);
            ;
            const N = () => {
                    d.connect(u).connect(_);
                    d.connect(p).connect(f).connect(v).connect(_);
                    g = true;
                    r(b) && (y = t(i, d));
                    ;
                }, I = () => {
                    d.disconnect(u);
                    u.disconnect(_);
                    d.disconnect(p);
                    p.disconnect(f);
                    f.disconnect(v);
                    v.disconnect(_);
                    g = false;
                    if (y !== null) {
                        y();
                        y = null;
                    }
                    ;
                };
            return s(Ru(A, _), N, I);
        }, Or = () => new DOMException('', 'NotSupportedError'), w3e = (t, e, n, r, s) => class extends t {
            constructor(o, a, l) {
                let u;
                if (typeof o == 'number' && a !== void 0 && l !== void 0) {
                    u = {
                        length: a,
                        numberOfChannels: o,
                        sampleRate: l
                    };
                } else {
                    if (typeof o == 'object') {
                        u = o;
                    } else {
                        throw new Error('The given parameters are not valid.');
                    }
                }
                const {
                        length: f,
                        numberOfChannels: d,
                        sampleRate: p
                    } = {
                        ...S3e,
                        ...u
                    }, _ = r(d, f, p);
                e(tf, () => tf(_)) || _.addEventListener('statechange', ((() => {
                    let v = 0;
                    const y = g => {
                        this._state === 'running' && (v > 0 ? (_.removeEventListener('statechange', y), g.stopImmediatePropagation(), this._waitForThePromiseToSettle(g)) : v += 1);
                    };
                    return y;
                })()));
                super(_, d);
                this._length = f;
                this._nativeOfflineAudioContext = _;
                this._state = null;
                ;
            }
            get length() {
                return this._nativeOfflineAudioContext.length === void 0 ? this._length : this._nativeOfflineAudioContext.length;
            }
            get state() {
                return this._state === null ? this._nativeOfflineAudioContext.state : this._state;
            }
            startRendering() {
                return this._state === 'running' ? Promise.reject(n()) : (this._state = 'running', s(this.destination, this._nativeOfflineAudioContext).finally(() => {
                    this._state = null;
                    vC(this);
                    ;
                }));
            }
            _waitForThePromiseToSettle(o) {
                this._state === null ? this._nativeOfflineAudioContext.dispatchEvent(o) : setTimeout(() => this._waitForThePromiseToSettle(o));
            }
        }, O3e = {
            channelCount: 2,
            channelCountMode: 'max',
            channelInterpretation: 'speakers',
            detune: 0,
            frequency: 440,
            periodicWave: void 0,
            type: 'sine'
        }, A3e = (t, e, n, r, s, i, o) => class extends t {
            constructor(l, u) {
                const f = s(l), d = {
                        ...O3e,
                        ...u
                    }, p = n(f, d), _ = i(f), v = _ ? r() : null, y = l.sampleRate / 2;
                super(l, false, p, v);
                this._detune = e(this, _, p.detune, 153600, -153600);
                this._frequency = e(this, _, p.frequency, y, -y);
                this._nativeOscillatorNode = p;
                this._onended = null;
                this._oscillatorNodeRenderer = v;
                this._oscillatorNodeRenderer !== null && d.periodicWave !== void 0 && (this._oscillatorNodeRenderer.periodicWave = d.periodicWave);
                ;
            }
            get detune() {
                return this._detune;
            }
            get frequency() {
                return this._frequency;
            }
            get onended() {
                return this._onended;
            }
            set onended(l) {
                const u = typeof l == 'function' ? o(this, l) : null;
                this._nativeOscillatorNode.onended = u;
                const f = this._nativeOscillatorNode.onended;
                this._onended = f !== null && f === u ? l : f;
            }
            get type() {
                return this._nativeOscillatorNode.type;
            }
            set type(l) {
                this._nativeOscillatorNode.type = l;
                this._oscillatorNodeRenderer !== null && (this._oscillatorNodeRenderer.periodicWave = null);
                ;
            }
            setPeriodicWave(l) {
                this._nativeOscillatorNode.setPeriodicWave(l);
                this._oscillatorNodeRenderer !== null && (this._oscillatorNodeRenderer.periodicWave = l);
                ;
            }
            start(l = 0) {
                if (this._nativeOscillatorNode.start(l), this._oscillatorNodeRenderer !== null && (this._oscillatorNodeRenderer.start = l), this.context.state !== 'closed') {
                    Jl(this);
                    const u = () => {
                        this._nativeOscillatorNode.removeEventListener('ended', u);
                        ao(this) && Yf(this);
                        ;
                    };
                    this._nativeOscillatorNode.addEventListener('ended', u);
                }
            }
            stop(l = 0) {
                this._nativeOscillatorNode.stop(l);
                this._oscillatorNodeRenderer !== null && (this._oscillatorNodeRenderer.stop = l);
                ;
            }
        }, C3e = (t, e, n, r, s) => () => {
            const i = new WeakMap();
            let o = null, a = null, l = null;
            const u = async (f, d) => {
                let p = n(f);
                const _ = mr(p, d);
                if (!_) {
                    const v = {
                        channelCount: p.channelCount,
                        channelCountMode: p.channelCountMode,
                        channelInterpretation: p.channelInterpretation,
                        detune: p.detune.value,
                        frequency: p.frequency.value,
                        periodicWave: o === null ? void 0 : o,
                        type: p.type
                    };
                    p = e(d, v);
                    a !== null && p.start(a);
                    l !== null && p.stop(l);
                    ;
                }
                return i.set(d, p), _ ? (await t(d, f.detune, p.detune), await t(d, f.frequency, p.frequency)) : (await r(d, f.detune, p.detune), await r(d, f.frequency, p.frequency)), await s(f, d, p), p;
            };
            return {
                set periodicWave(f) {
                    o = f;
                },
                set start(f) {
                    a = f;
                },
                set stop(f) {
                    l = f;
                },
                render(f, d) {
                    const p = i.get(d);
                    return p !== void 0 ? Promise.resolve(p) : u(f, d);
                }
            };
        }, k3e = (t, e, n, r, s, i, o) => class extends t {
            constructor(l, u) {
                const f = s(l), d = {
                        ...I3e,
                        ...u
                    }, p = n(f, d), _ = i(f), v = _ ? r() : null;
                super(l, false, p, v);
                this._nativePannerNode = p;
                this._orientationX = e(this, _, p.orientationX, Er, Rr);
                this._orientationY = e(this, _, p.orientationY, Er, Rr);
                this._orientationZ = e(this, _, p.orientationZ, Er, Rr);
                this._positionX = e(this, _, p.positionX, Er, Rr);
                this._positionY = e(this, _, p.positionY, Er, Rr);
                this._positionZ = e(this, _, p.positionZ, Er, Rr);
                o(this, 1);
                ;
            }
            get coneInnerAngle() {
                return this._nativePannerNode.coneInnerAngle;
            }
            set coneInnerAngle(l) {
                this._nativePannerNode.coneInnerAngle = l;
            }
            get coneOuterAngle() {
                return this._nativePannerNode.coneOuterAngle;
            }
            set coneOuterAngle(l) {
                this._nativePannerNode.coneOuterAngle = l;
            }
            get coneOuterGain() {
                return this._nativePannerNode.coneOuterGain;
            }
            set coneOuterGain(l) {
                this._nativePannerNode.coneOuterGain = l;
            }
            get distanceModel() {
                return this._nativePannerNode.distanceModel;
            }
            set distanceModel(l) {
                this._nativePannerNode.distanceModel = l;
            }
            get maxDistance() {
                return this._nativePannerNode.maxDistance;
            }
            set maxDistance(l) {
                this._nativePannerNode.maxDistance = l;
            }
            get orientationX() {
                return this._orientationX;
            }
            get orientationY() {
                return this._orientationY;
            }
            get orientationZ() {
                return this._orientationZ;
            }
            get panningModel() {
                return this._nativePannerNode.panningModel;
            }
            set panningModel(l) {
                this._nativePannerNode.panningModel = l;
            }
            get positionX() {
                return this._positionX;
            }
            get positionY() {
                return this._positionY;
            }
            get positionZ() {
                return this._positionZ;
            }
            get refDistance() {
                return this._nativePannerNode.refDistance;
            }
            set refDistance(l) {
                this._nativePannerNode.refDistance = l;
            }
            get rolloffFactor() {
                return this._nativePannerNode.rolloffFactor;
            }
            set rolloffFactor(l) {
                this._nativePannerNode.rolloffFactor = l;
            }
        }, N3e = (t, e, n, r, s, i, o, a, l, u) => () => {
            const f = new WeakMap();
            let d = null;
            const p = async (_, v) => {
                let y = null, g = i(_);
                const b = {
                        channelCount: g.channelCount,
                        channelCountMode: g.channelCountMode,
                        channelInterpretation: g.channelInterpretation
                    }, A = {
                        ...b,
                        coneInnerAngle: g.coneInnerAngle,
                        coneOuterAngle: g.coneOuterAngle,
                        coneOuterGain: g.coneOuterGain,
                        distanceModel: g.distanceModel,
                        maxDistance: g.maxDistance,
                        panningModel: g.panningModel,
                        refDistance: g.refDistance,
                        rolloffFactor: g.rolloffFactor
                    }, N = mr(g, v);
                if ('bufferSize' in g) {
                    y = r(v, {
                        ...b,
                        gain: 1
                    });
                } else {
                    if (!N) {
                        const I = {
                            ...A,
                            orientationX: g.orientationX.value,
                            orientationY: g.orientationY.value,
                            orientationZ: g.orientationZ.value,
                            positionX: g.positionX.value,
                            positionY: g.positionY.value,
                            positionZ: g.positionZ.value
                        };
                        g = s(v, I);
                    }
                }
                if (f.set(v, y === null ? g : y), y !== null) {
                    if (d === null) {
                        if (o === null) {
                            throw new Error('Missing the native OfflineAudioContext constructor.');
                        }
                        const ae = new o(6, _.context.length, v.sampleRate), Z = e(ae, {
                                channelCount: 1,
                                channelCountMode: 'explicit',
                                channelInterpretation: 'speakers',
                                numberOfInputs: 6
                            });
                        Z.connect(ae.destination);
                        d = ((async () => {
                            const fe = await Promise.all([
                                _.orientationX,
                                _.orientationY,
                                _.orientationZ,
                                _.positionX,
                                _.positionY,
                                _.positionZ
                            ].map(async (ge, Y) => {
                                const Q = n(ae, {
                                    channelCount: 1,
                                    channelCountMode: 'explicit',
                                    channelInterpretation: 'discrete',
                                    offset: Y === 0 ? 1 : 0
                                });
                                return await a(ae, ge, Q.offset), Q;
                            }));
                            for (let ge = 0; ge < 6; ge += 1) {
                                fe[ge].connect(Z, 0, ge);
                                fe[ge].start(0);
                                ;
                            }
                            return u(ae);
                        })());
                        ;
                    }
                    const I = await d, O = r(v, {
                            ...b,
                            gain: 1
                        });
                    await l(_, v, O);
                    const x = [];
                    for (let ae = 0; ae < I.numberOfChannels; ae += 1) {
                        x.push(I.getChannelData(ae));
                    }
                    let M = [
                            x[0][0],
                            x[1][0],
                            x[2][0]
                        ], L = [
                            x[3][0],
                            x[4][0],
                            x[5][0]
                        ], U = r(v, {
                            ...b,
                            gain: 1
                        }), ee = s(v, {
                            ...A,
                            orientationX: M[0],
                            orientationY: M[1],
                            orientationZ: M[2],
                            positionX: L[0],
                            positionY: L[1],
                            positionZ: L[2]
                        });
                    O.connect(U).connect(ee.inputs[0]);
                    ee.connect(y);
                    ;
                    for (let ae = 128; ae < I.length; ae += 128) {
                        const Z = [
                                x[0][ae],
                                x[1][ae],
                                x[2][ae]
                            ], fe = [
                                x[3][ae],
                                x[4][ae],
                                x[5][ae]
                            ];
                        if (Z.some((ge, Y) => ge !== M[Y]) || fe.some((ge, Y) => ge !== L[Y])) {
                            M = Z;
                            L = fe;
                            ;
                            const ge = ae / v.sampleRate;
                            U.gain.setValueAtTime(0, ge);
                            U = r(v, {
                                ...b,
                                gain: 0
                            });
                            ee = s(v, {
                                ...A,
                                orientationX: M[0],
                                orientationY: M[1],
                                orientationZ: M[2],
                                positionX: L[0],
                                positionY: L[1],
                                positionZ: L[2]
                            });
                            U.gain.setValueAtTime(1, ge);
                            O.connect(U).connect(ee.inputs[0]);
                            ee.connect(y);
                            ;
                        }
                    }
                    return y;
                }
                return N ? (await t(v, _.orientationX, g.orientationX), await t(v, _.orientationY, g.orientationY), await t(v, _.orientationZ, g.orientationZ), await t(v, _.positionX, g.positionX), await t(v, _.positionY, g.positionY), await t(v, _.positionZ, g.positionZ)) : (await a(v, _.orientationX, g.orientationX), await a(v, _.orientationY, g.orientationY), await a(v, _.orientationZ, g.orientationZ), await a(v, _.positionX, g.positionX), await a(v, _.positionY, g.positionY), await a(v, _.positionZ, g.positionZ)), Pu(g) ? await l(_, v, g.inputs[0]) : await l(_, v, g), g;
            };
            return {
                render(_, v) {
                    const y = f.get(v);
                    return y !== void 0 ? Promise.resolve(y) : p(_, v);
                }
            };
        }, P3e = (t, e, n, r) => class kC {
            constructor(i, o) {
                const a = e(i), l = r({
                        ...x3e,
                        ...o
                    }), u = t(a, l);
                return n.add(u), u;
            }
            static [Symbol.hasInstance](i) {
                return i !== null && typeof i == 'object' && Object.getPrototypeOf(i) === kC.prototype || n.has(i);
            }
        }, R3e = (t, e) => (n, r, s) => (t(r).replay(s), e(r, n, s)), M3e = (t, e, n) => async (r, s, i) => {
            const o = t(r);
            await Promise.all(o.activeInputs.map((a, l) => Array.from(a).map(async ([u, f]) => {
                const p = await e(u).render(u, s), _ = r.context.destination;
                !n(u) && (r !== _ || !n(r)) && p.connect(i, f, l);
            })).reduce((a, l) => [
                ...a,
                ...l
            ], []));
        }, D3e = (t, e, n) => async (r, s, i) => {
            const o = e(r);
            await Promise.all(Array.from(o.activeInputs).map(async ([a, l]) => {
                const f = await t(a).render(a, s);
                n(a) || f.connect(i, l);
            }));
        }, $3e = (t, e, n, r) => s => t(tf, () => tf(s)) ? Promise.resolve(t(r, r)).then(i => {
            if (!i) {
                const o = n(s, 512, 0, 1);
                ;
                ;
                o.connect(s.destination);
                ;
            }
            return s.startRendering();
        }) : new Promise(i => {
            const o = e(s, {
                channelCount: 1,
                channelCountMode: 'explicit',
                channelInterpretation: 'discrete',
                gain: 0
            });
            ;
            o.connect(s.destination);
            s.startRendering();
            ;
        }), L3e = t => (e, n) => {
            t.set(e, n);
        }, F3e = t => (e, n) => t.set(e, n), U3e = (t, e, n, r, s, i, o, a) => (l, u) => n(l).render(l, u).then(() => Promise.all(Array.from(r(u)).map(f => n(f).render(f, u)))).then(() => s(u)).then(f => (typeof f.copyFromChannel != 'function' ? (o(f), G3(f)) : e(i, () => i(f)) || a(f), t.add(f), f)), q3e = (t, e, n, r, s, i) => class extends t {
            constructor(a, l) {
                const u = s(a), f = {
                        ...B3e,
                        ...l
                    }, d = n(u, f), p = i(u), _ = p ? r() : null;
                super(a, false, d, _);
                this._pan = e(this, p, d.pan);
                ;
            }
            get pan() {
                return this._pan;
            }
        }, V3e = (t, e, n, r, s) => () => {
            const i = new WeakMap(), o = async (a, l) => {
                    let u = n(a);
                    const f = mr(u, l);
                    if (!f) {
                        const d = {
                            channelCount: u.channelCount,
                            channelCountMode: u.channelCountMode,
                            channelInterpretation: u.channelInterpretation,
                            pan: u.pan.value
                        };
                        u = e(l, d);
                    }
                    return i.set(l, u), f ? await t(l, a.pan, u.pan) : await r(l, a.pan, u.pan), Pu(u) ? await s(a, l, u.inputs[0]) : await s(a, l, u), u;
                };
            return {
                render(a, l) {
                    const u = i.get(l);
                    return u !== void 0 ? Promise.resolve(u) : o(a, l);
                }
            };
        }, G3e = t => () => {
            if (t === null) {
                return false;
            }
            try {
                new t({
                    length: 1,
                    sampleRate: 44100
                });
            } catch {
                return false;
            }
            return true;
        }, j3e = (t, e) => async () => {
            if (t === null) {
                return true;
            }
            if (e === null) {
                return false;
            }
            const n = new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'], { type: 'application/javascript; charset=utf-8' }), r = new e(1, 128, 44100), s = URL.createObjectURL(n);
            let i = false, o = false;
            try {
                await r.audioWorklet.addModule(s);
                const a = new t(r, 'a', { numberOfOutputs: 0 }), l = r.createOscillator();
                a.port.onmessage = () => i = true;
                ;
                l.connect(a);
                l.start(0);
                await r.startRendering();
                ;
            } catch {
            } finally {
                URL.revokeObjectURL(s);
            }
            return i && !o;
        }, W3e = (t, e) => () => {
            if (e === null) {
                return Promise.resolve(false);
            }
            const n = new e(1, 1, 44100), r = t(n, {
                    channelCount: 1,
                    channelCountMode: 'explicit',
                    channelInterpretation: 'discrete',
                    gain: 0
                });
            return new Promise(s => {
                ;
                n.startRendering();
                ;
            });
        }, H3e = () => new DOMException('', 'UnknownError'), Y3e = (t, e, n, r, s, i, o) => class extends t {
            constructor(l, u) {
                const f = s(l), d = {
                        ...z3e,
                        ...u
                    }, p = n(f, d), v = i(f) ? r() : null;
                super(l, true, p, v);
                this._isCurveNullified = false;
                this._nativeWaveShaperNode = p;
                o(this, 1);
                ;
            }
            get curve() {
                return this._isCurveNullified ? null : this._nativeWaveShaperNode.curve;
            }
            set curve(l) {
                if (l === null) {
                    this._isCurveNullified = true;
                    this._nativeWaveShaperNode.curve = new Float32Array([
                        0,
                        0
                    ]);
                    ;
                } else {
                    if (l.length < 2) {
                        throw e();
                    }
                    this._isCurveNullified = false;
                    this._nativeWaveShaperNode.curve = l;
                    ;
                }
            }
            get oversample() {
                return this._nativeWaveShaperNode.oversample;
            }
            set oversample(l) {
                this._nativeWaveShaperNode.oversample = l;
            }
        }, K3e = (t, e, n) => () => {
            const r = new WeakMap(), s = async (i, o) => {
                    let a = e(i);
                    if (!mr(a, o)) {
                        const u = {
                            channelCount: a.channelCount,
                            channelCountMode: a.channelCountMode,
                            channelInterpretation: a.channelInterpretation,
                            curve: a.curve,
                            oversample: a.oversample
                        };
                        a = t(o, u);
                    }
                    return r.set(o, a), Pu(a) ? await n(i, o, a.inputs[0]) : await n(i, o, a), a;
                };
            return {
                render(i, o) {
                    const a = r.get(o);
                    return a !== void 0 ? Promise.resolve(a) : s(i, o);
                }
            };
        }, Z3e = () => typeof window > 'u' ? null : window, X3e = (t, e) => n => {
            ;
            ;
            ;
        }, Q3e = t => e => {
            ;
            ;
            ;
        }, J3e = t => (e, n) => {
            const r = n.createBuffer(1, 1, 44100);
            e.buffer === null && (e.buffer = r);
            t(e, 'buffer', s => () => {
                const i = s.call(e);
                return i === r ? null : i;
            }, s => i => s.call(e, i === null ? r : i));
            ;
        }, e5e = (t, e) => (n, r) => {
            ;
            ;
            Object.defineProperty(r, 'channelCount', {
                get: () => 1,
                set: () => {
                    throw t();
                }
            });
            Object.defineProperty(r, 'channelCountMode', {
                get: () => 'explicit',
                set: () => {
                    throw t();
                }
            });
            ;
            const s = n.createBufferSource();
            e(r, () => {
                const a = r.numberOfInputs;
                for (let l = 0; l < a; l += 1) {
                    s.connect(r, 0, l);
                }
            }, () => s.disconnect(r));
        }, NC = (t, e, n) => t.copyFromChannel === void 0 ? t.getChannelData(n)[0] : (t.copyFromChannel(e, n), e[0]), xC = t => {
            if (t === null) {
                return false;
            }
            const e = t.length;
            return e % 2 !== 0 ? t[Math.floor(e / 2)] !== 0 : t[e / 2 - 1] + t[e / 2] !== 0;
        }, Jf = (t, e, n, r) => {
            let s = t;
            for (; !s.hasOwnProperty(e);) {
                s = Object.getPrototypeOf(s);
            }
            const {
                get: i,
                set: o
            } = Object.getOwnPropertyDescriptor(s, e);
            Object.defineProperty(t, e, {
                get: n(i),
                set: r(o)
            });
        }, t5e = t => ({
            ...t,
            outputChannelCount: t.outputChannelCount !== void 0 ? t.outputChannelCount : t.numberOfInputs === 1 && t.numberOfOutputs === 1 ? [t.channelCount] : Array.from({ length: t.numberOfOutputs }, () => 1)
        }), n5e = t => ({
            ...t,
            channelCount: t.numberOfOutputs
        }), r5e = t => {
            const {
                imag: e,
                real: n
            } = t;
            return e === void 0 ? n === void 0 ? {
                ...t,
                imag: [
                    0,
                    0
                ],
                real: [
                    0,
                    0
                ]
            } : {
                ...t,
                imag: Array.from(n, () => 0),
                real: n
            } : n === void 0 ? {
                ...t,
                imag: e,
                real: Array.from(e, () => 0)
            } : {
                ...t,
                imag: e,
                real: n
            };
        }, PC = (t, e, n) => {
            try {
                t.setValueAtTime(e, n);
            } catch (r) {
                if (r.code !== 9) {
                    throw r;
                }
                PC(t, e, n + 1e-7);
            }
        }, s5e = t => {
            const e = t.createBufferSource();
            e.start();
            try {
                e.start();
            } catch {
                return true;
            }
            return false;
        }, i5e = t => {
            const e = t.createBufferSource(), n = t.createBuffer(1, 1, 44100);
            ;
            try {
                e.start(0, 1);
            } catch {
                return false;
            }
            return true;
        }, o5e = t => {
            const e = t.createBufferSource();
            e.start();
            try {
                e.stop();
            } catch {
                return false;
            }
            return true;
        }, Y3 = t => {
            const e = t.createOscillator();
            try {
                e.start(-1);
            } catch (n) {
                return n instanceof RangeError;
            }
            return false;
        }, RC = t => {
            const e = t.createBuffer(1, 1, 44100), n = t.createBufferSource();
            ;
            n.start();
            n.stop();
            ;
            try {
                return n.stop(), true;
            } catch {
                return false;
            }
        }, K3 = t => {
            const e = t.createOscillator();
            try {
                e.stop(-1);
            } catch (n) {
                return n instanceof RangeError;
            }
            return false;
        }, a5e = t => {
            const {
                port1: e,
                port2: n
            } = new MessageChannel();
            try {
                e.postMessage(t);
            } finally {
                e.close();
                n.close();
                ;
            }
        }, c5e = t => {
            ;
        }, MC = (t, e) => {
            const n = e.createGain();
            t.connect(n);
            const r = (s => () => {
                s.call(t, n);
                t.removeEventListener('ended', r);
                ;
            })(t.disconnect);
            t.addEventListener('ended', r);
            Ru(t, n);
            ;
            ;
        }, Mu = (t, e) => n => {
            const r = { value: t };
            return Object.defineProperties(n, {
                currentTarget: r,
                target: r
            }), typeof e == 'function' ? e.call(t, n) : e.handleEvent.call(t, n);
        }, l5e = k0e($c), u5e = D0e($c), h5e = z2e(mg), DC = new WeakMap(), f5e = hve(DC), ri = S2e(new Map(), new WeakMap()), wi = Z3e(), $C = qve(ri, $i), Z3 = uve(Tr), rr = M3e(Tr, Z3, Ac), d5e = B0e($C, rn, rr), Jt = pve(pg), bo = p3e(wi), Gt = xve(bo), LC = new WeakMap(), FC = rve(Mu), ed = Wve(wi), X3 = Cve(ed), Q3 = Ive(wi), UC = kve(wi), nf = zve(wi), In = h2e(N0e(fC), M0e(l5e, u5e, S1, h5e, w1, Tr, f5e, zf, rn, $c, ao, Ac, Up), ri, Tve(g2, w1, Tr, rn, ef, ao), $i, gg, Or, G2e(S1, g2, Tr, rn, ef, Jt, ao, Gt), Z2e(LC, Tr, Zs), FC, Jt, X3, Q3, UC, Gt, nf), p5e = U0e(In, d5e, $i, $C, Jt, Gt), J3 = new WeakSet(), kw = Vve(wi), BC = $2e(new Uint32Array(1)), e5 = X3e(BC, $i), t5 = Q3e(BC), m5e = V0e(J3, ri, Or, kw, bo, G3e(kw), e5, t5), _g = $0e(qr), qC = D3e(Z3, Kf, Ac), Li = N2e(qC), Du = jve(_g, ri, s5e, i5e, o5e, Y3, RC, K3, c5e, J3e(Jf), MC), Fi = R3e(fve(Kf), qC), g5e = W0e(Li, Du, rn, Fi, rr), si = f2e(x0e(dC), LC, V3, d2e, S0e, w0e, O0e, A0e, C0e, d2, uC, ed, PC), _5e = j0e(In, g5e, si, Wn, Du, Jt, Gt, Mu), y5e = e2e(In, t2e, $i, Wn, Hve(qr, Jf), Jt, Gt, rr), v5e = T2e(Li, CC, rn, Fi, rr), Lc = F3e(DC), b5e = E2e(In, si, v5e, gg, CC, Jt, Gt, Lc), Ra = Uve($c, Q3), E5e = e5e(Wn, Ra), Ma = e3e(ed, E5e), T5e = A2e(Ma, rn, rr), S5e = O2e(In, T5e, Ma, Jt, Gt), w5e = k2e(Xf, rn, rr), O5e = I2e(In, w5e, Xf, Jt, Gt, n5e), A5e = r3e(_g, Du, qr, Ra), $u = n3e(_g, ri, A5e, Y3, K3), C5e = D2e(Li, $u, rn, Fi, rr), I5e = M2e(In, si, C5e, $u, Jt, Gt, Mu), VC = s3e(Or, Jf), k5e = U2e(VC, rn, rr), N5e = F2e(In, k5e, VC, Jt, Gt, Lc), x5e = H2e(Li, IC, rn, Fi, rr), P5e = W2e(In, si, x5e, IC, Jt, Gt, Lc), GC = i3e(Or), R5e = eve(Li, GC, rn, Fi, rr), M5e = J2e(In, si, R5e, GC, Or, Jt, Gt, Lc), D5e = cve(Li, qr, rn, Fi, rr), $5e = ave(In, si, D5e, qr, Jt, Gt), L5e = l3e(gg, Wn, Qf, Or), yg = $3e(ri, qr, Qf, W3e(qr, bo)), F5e = Eve(Du, rn, bo, rr, yg), U5e = o3e(L5e), B5e = vve(In, U5e, F5e, Jt, Gt, Lc), q5e = n2e(si, Ma, $u, Qf, Or, NC, Gt, Jf), jC = new WeakMap(), V5e = Fve(y5e, q5e, FC, Gt, jC, Mu), WC = m3e(_g, ri, Y3, RC, K3, MC), G5e = C3e(Li, WC, rn, Fi, rr), j5e = A3e(In, si, WC, G5e, Jt, Gt, Mu), HC = P2e(Du), W5e = T3e(HC, Wn, qr, xC, Ra), vg = E3e(HC, Wn, W5e, xC, Ra, ed, Jf), H5e = _3e(S1, Wn, Ma, qr, Qf, vg, Or, w1, NC, Ra), zC = g3e(H5e), z5e = N3e(Li, Ma, $u, qr, zC, rn, bo, Fi, rr, yg), Y5e = k3e(In, si, zC, z5e, Jt, Gt, Lc), K5e = y3e($i), Z5e = P3e(K5e, Jt, new WeakSet(), r5e), X5e = b3e(Ma, Xf, qr, vg, Or, Ra), YC = v3e(X5e, Or), Q5e = V3e(Li, YC, rn, Fi, rr), J5e = q3e(In, si, YC, Q5e, Jt, Gt), ebe = K3e(vg, rn, rr), tbe = Y3e(In, Wn, vg, ebe, Jt, Gt, Lc), KC = Pve(wi), n5 = sve(wi), ZC = new WeakMap(), nbe = mve(ZC, bo), rbe = KC ? R0e(ri, Or, nve(wi), n5, ive(I0e), Jt, nbe, Gt, nf, new WeakMap(), new WeakMap(), j3e(nf, bo), wi) : void 0, sbe = Nve(X3, Gt), ibe = V2e(J3, ri, q2e, tve, new WeakSet(), Jt, sbe, E1, tf, e5, t5), XC = v2e(rbe, p5e, m5e, _5e, b5e, S5e, O5e, I5e, N5e, ibe, P5e, M5e, $5e, B5e, V5e, j5e, Y5e, Z5e, J5e, tbe), obe = Rve(In, u3e, Jt, Gt), abe = Dve(In, h3e, Jt, Gt), cbe = $ve(In, f3e, Jt, Gt), lbe = d3e(Wn, Gt), ube = Lve(In, lbe, Jt), hbe = J0e(XC, Wn, Or, H3e, obe, abe, cbe, ube, ed), r5 = gve(jC), fbe = L0e(r5), QC = x2e($i), dbe = Y2e(r5), JC = X2e($i), eI = new WeakMap(), pbe = lve(eI, Zs), mbe = Jve(QC, $i, Wn, Ma, Xf, $u, qr, Qf, Or, JC, n5, pbe, Ra), gbe = Kve(Wn, mbe, qr, Or, Ra), _be = y2e(Li, QC, Du, Ma, Xf, $u, qr, dbe, JC, n5, rn, nf, bo, Fi, rr, yg), ybe = dve(ZC), vbe = L3e(eI), Nw = KC ? m2e(fbe, In, si, _be, gbe, Tr, ybe, Jt, Gt, nf, t5e, vbe, a5e, Mu) : void 0, bbe = B2e(Or, bo), Ebe = U3e(J3, ri, Z3, r5, yg, E1, e5, t5), Tbe = w3e(XC, ri, Wn, bbe, Ebe), Sbe = Sve(pg, X3), wbe = wve(q3, Q3), Obe = Ove(V3, UC), Abe = Ave(pg, Gt);
    function Xe(t, e) {
        if (!t) {
            throw new Error(e);
        }
    }
    function Xs(t, e, n = 1e+400) {
        if (!(e <= t && t <= n)) {
            throw new RangeError(`Value must be within [${ e }, ${ n }], got: ${ t }`);
        }
    }
    function tI(t) {
        !t.isOffline && t.state !== 'running' && s5('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.');
    }
    let nI = console;
    function Cbe(...t) {
        nI.log(...t);
    }
    function s5(...t) {
        nI.warn(...t);
    }
    function As(t) {
        return typeof t > 'u';
    }
    function St(t) {
        return !As(t);
    }
    function Ibe(t) {
        return typeof t == 'function';
    }
    function ho(t) {
        return typeof t == 'number';
    }
    function yc(t) {
        return Object.prototype.toString.call(t) === '[object Object]' && t.constructor === Object;
    }
    function kbe(t) {
        return typeof t == 'boolean';
    }
    function ns(t) {
        return Array.isArray(t);
    }
    function Oi(t) {
        return typeof t == 'string';
    }
    function Op(t) {
        return Oi(t) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(t);
    }
    function Nbe(t) {
        return new hbe(t);
    }
    function xbe(t, e, n) {
        return new Tbe(t, e, n);
    }
    const vc = typeof self == 'object' ? self : null, Pbe = vc && (vc.hasOwnProperty('AudioContext') || vc.hasOwnProperty('webkitAudioContext'));
    function Rbe(t, e, n) {
        return Xe(St(Nw), 'This node only works in a secure context (https or localhost)'), new Nw(t, e, n);
    }
    function ii(t, e, n, r) {
        var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, o;
        if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function') {
            i = Reflect.decorate(t, e, n, r);
        } else {
            for (var a = t.length - 1; a >= 0; a--) {
                (o = t[a]) && (i = (s < 3 ? o(i) : s > 3 ? o(e, n, i) : o(e, n)) || i);
            }
        }
        return s > 3 && i && Object.defineProperty(e, n, i), i;
    }
    function An(t, e, n, r) {
        function s(i) {
            return i instanceof n ? i : new n(function (o) {
                o(i);
            });
        }
        return new (n || (n = Promise))(function (i, o) {
            function a(f) {
                try {
                    u(r.next(f));
                } catch (d) {
                    o(d);
                }
            }
            function l(f) {
                try {
                    u(r.throw(f));
                } catch (d) {
                    o(d);
                }
            }
            function u(f) {
                f.done ? i(f.value) : s(f.value).then(a, l);
            }
            u((r = r.apply(t, e || [])).next());
        });
    }
    class Mbe {
        constructor(e, n, r) {
            this._callback = e;
            this._type = n;
            this._updateInterval = r;
            this._createClock();
            ;
        }
        _createWorker() {
            const e = new Blob([`
			// the initial timeout time
			let timeoutTime =  ${ (this._updateInterval * 1000).toFixed(1) };
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`], { type: 'text/javascript' }), n = URL.createObjectURL(e), r = new Worker(n);
            ;
            this._worker = r;
            ;
        }
        _createTimeout() {
            this._timeout = setTimeout(() => {
                this._createTimeout();
                this._callback();
                ;
            }, this._updateInterval * 1000);
        }
        _createClock() {
            if (this._type === 'worker') {
                try {
                    this._createWorker();
                } catch {
                    this._type = 'timeout';
                    this._createClock();
                    ;
                }
            } else {
                this._type === 'timeout' && this._createTimeout();
            }
        }
        _disposeClock() {
            this._timeout && (clearTimeout(this._timeout), this._timeout = 0);
            this._worker && (this._worker.terminate(), this._worker.onmessage = null);
            ;
        }
        get updateInterval() {
            return this._updateInterval;
        }
        set updateInterval(e) {
            this._updateInterval = Math.max(e, 0.0029024943310657597);
            this._type === 'worker' && this._worker.postMessage(Math.max(e * 1000, 1));
            ;
        }
        get type() {
            return this._type;
        }
        set type(e) {
            this._disposeClock();
            this._type = e;
            this._createClock();
            ;
        }
        dispose() {
            this._disposeClock();
        }
    }
    function Cc(t) {
        return Obe(t);
    }
    function na(t) {
        return wbe(t);
    }
    function Bp(t) {
        return Abe(t);
    }
    function ul(t) {
        return Sbe(t);
    }
    function rI(t) {
        return t instanceof AudioBuffer;
    }
    function Dbe(t, e) {
        return t === 'value' || Cc(e) || na(e) || rI(e);
    }
    function Cs(t, ...e) {
        if (!e.length) {
            return t;
        }
        const n = e.shift();
        if (yc(t) && yc(n)) {
            for (const r in n)
                Dbe(r, n[r]) ? t[r] = n[r] : yc(n[r]) ? (t[r] || Object.assign(t, { [r]: {} }), Cs(t[r], n[r])) : Object.assign(t, { [r]: n[r] });
        }
        return Cs(t, ...e);
    }
    function $be(t, e) {
        return t.length === e.length && t.every((n, r) => e[r] === n);
    }
    function re(t, e, n = [], r) {
        const s = {}, i = Array.from(e);
        if (yc(i[0]) && r && !Reflect.has(i[0], r) && (Object.keys(i[0]).some(a => Reflect.has(t, a)) || (Cs(s, { [r]: i[0] }), n.splice(n.indexOf(r), 1), i.shift())), i.length === 1 && yc(i[0])) {
            Cs(s, i[0]);
        } else {
            for (let o = 0; o < n.length; o++) {
                St(i[o]) && (s[n[o]] = i[o]);
            }
        }
        return Cs(t, s);
    }
    function Lbe(t) {
        return t.constructor.getDefaults();
    }
    function $l(t, e) {
        return As(t) ? e : t;
    }
    function ur(t, e) {
        return e.forEach(n => {
            Reflect.has(t, n) && delete t[n];
        }), t;
    }
    class Eo {
        constructor() {
            this.debug = false;
            this._wasDisposed = false;
            ;
        }
        static getDefaults() {
            return {};
        }
        log(...e) {
            (this.debug || vc && this.toString() === vc.TONE_DEBUG_CLASS) && Cbe(this, ...e);
        }
        dispose() {
            return this._wasDisposed = true, this;
        }
        get disposed() {
            return this._wasDisposed;
        }
        toString() {
            return this.name;
        }
    }
    Eo.version = '14.7.77';
    ;
    function I1(t, e) {
        return t > e + 0.000001;
    }
    function E2(t, e) {
        return I1(t, e) || qs(t, e);
    }
    function sI(t, e) {
        return t + 0.000001 < e;
    }
    function qs(t, e) {
        return Math.abs(t - e) < 0.000001;
    }
    function Fbe(t, e, n) {
        return Math.max(Math.min(t, n), e);
    }
    let Da = class iI extends Eo {
        constructor() {
            super();
            this.name = 'Timeline';
            this._timeline = [];
            ;
            const e = re(iI.getDefaults(), arguments, ['memory']);
            this.memory = e.memory;
            this.increasing = e.increasing;
            ;
        }
        static getDefaults() {
            return {
                memory: 1e+400,
                increasing: false
            };
        }
        get length() {
            return this._timeline.length;
        }
        add(e) {
            if (Xe(Reflect.has(e, 'time'), 'Timeline: events must have a time attribute'), e.time = e.time.valueOf(), this.increasing && this.length) {
                const n = this._timeline[this.length - 1];
                Xe(E2(e.time, n.time), 'The time must be greater than or equal to the last scheduled time');
                this._timeline.push(e);
                ;
            } else {
                const n = this._search(e.time);
                this._timeline.splice(n + 1, 0, e);
            }
            if (this.length > this.memory) {
                const n = this.length - this.memory;
                this._timeline.splice(0, n);
            }
            return this;
        }
        remove(e) {
            const n = this._timeline.indexOf(e);
            return n !== -1 && this._timeline.splice(n, 1), this;
        }
        get(e, n = 'time') {
            const r = this._search(e, n);
            return r !== -1 ? this._timeline[r] : null;
        }
        peek() {
            return this._timeline[0];
        }
        shift() {
            return this._timeline.shift();
        }
        getAfter(e, n = 'time') {
            const r = this._search(e, n);
            return r + 1 < this._timeline.length ? this._timeline[r + 1] : null;
        }
        getBefore(e) {
            const n = this._timeline.length;
            if (n > 0 && this._timeline[n - 1].time < e) {
                return this._timeline[n - 1];
            }
            const r = this._search(e);
            return r - 1 >= 0 ? this._timeline[r - 1] : null;
        }
        cancel(e) {
            if (this._timeline.length > 1) {
                let n = this._search(e);
                if (n >= 0) {
                    if (qs(this._timeline[n].time, e)) {
                        for (let r = n; r >= 0 && qs(this._timeline[r].time, e); r--) {
                            n = r;
                        }
                        this._timeline = this._timeline.slice(0, n);
                    } else {
                        this._timeline = this._timeline.slice(0, n + 1);
                    }
                } else {
                    this._timeline = [];
                }
            } else {
                this._timeline.length === 1 && E2(this._timeline[0].time, e) && (this._timeline = []);
            }
            return this;
        }
        cancelBefore(e) {
            const n = this._search(e);
            return n >= 0 && (this._timeline = this._timeline.slice(n + 1)), this;
        }
        previousEvent(e) {
            const n = this._timeline.indexOf(e);
            return n > 0 ? this._timeline[n - 1] : null;
        }
        _search(e, n = 'time') {
            if (this._timeline.length === 0) {
                return -1;
            }
            let r = 0;
            const s = this._timeline.length;
            let i = s;
            if (s > 0 && this._timeline[s - 1][n] <= e) {
                return s - 1;
            }
            for (; r < i;) {
                let o = Math.floor(r + (i - r) / 2);
                const a = this._timeline[o], l = this._timeline[o + 1];
                if (qs(a[n], e)) {
                    for (let u = o; u < this._timeline.length; u++) {
                        const f = this._timeline[u];
                        if (qs(f[n], e)) {
                            o = u;
                        } else {
                            break;
                        }
                    }
                    return o;
                } else {
                    if (sI(a[n], e) && I1(l[n], e)) {
                        return o;
                    }
                    I1(a[n], e) ? i = o : r = o + 1;
                }
            }
            return -1;
        }
        _iterate(e, n = 0, r = this._timeline.length - 1) {
            this._timeline.slice(n, r + 1).forEach(e);
        }
        forEach(e) {
            return this._iterate(e), this;
        }
        forEachBefore(e, n) {
            const r = this._search(e);
            return r !== -1 && this._iterate(n, 0, r), this;
        }
        forEachAfter(e, n) {
            const r = this._search(e);
            return this._iterate(n, r + 1), this;
        }
        forEachBetween(e, n, r) {
            let s = this._search(e), i = this._search(n);
            return s !== -1 && i !== -1 ? (this._timeline[s].time !== e && (s += 1), this._timeline[i].time === n && (i -= 1), this._iterate(r, s, i)) : s === -1 && this._iterate(r, 0, i), this;
        }
        forEachFrom(e, n) {
            let r = this._search(e);
            for (; r >= 0 && this._timeline[r].time >= e;) {
                r--;
            }
            return this._iterate(n, r + 1), this;
        }
        forEachAtTime(e, n) {
            const r = this._search(e);
            if (r !== -1 && qs(this._timeline[r].time, e)) {
                let s = r;
                for (let i = r; i >= 0 && qs(this._timeline[i].time, e); i--) {
                    s = i;
                }
                this._iterate(i => {
                    n(i);
                }, s, r);
            }
            return this;
        }
        dispose() {
            return super.dispose(), this._timeline = [], this;
        }
    };
    const oI = [];
    function bg(t) {
        oI.push(t);
    }
    function Ube(t) {
        oI.forEach(e => e(t));
    }
    const aI = [];
    function Eg(t) {
        aI.push(t);
    }
    function Bbe(t) {
        aI.forEach(e => e(t));
    }
    class td extends Eo {
        constructor() {
            super(...arguments);
            this.name = 'Emitter';
            ;
        }
        on(e, n) {
            return e.split(/\W+/).forEach(s => {
                As(this._events) && (this._events = {});
                this._events.hasOwnProperty(s) || (this._events[s] = []);
                this._events[s].push(n);
                ;
            }), this;
        }
        once(e, n) {
            const r = (...s) => {
                n(...s);
                this.off(e, r);
                ;
            };
            return this.on(e, r), this;
        }
        off(e, n) {
            return e.split(/\W+/).forEach(s => {
                if (As(this._events) && (this._events = {}), this._events.hasOwnProperty(e)) {
                    if (As(n)) {
                        this._events[e] = [];
                    } else {
                        const i = this._events[e];
                        for (let o = i.length - 1; o >= 0; o--) {
                            i[o] === n && i.splice(o, 1);
                        }
                    }
                }
            }), this;
        }
        emit(e, ...n) {
            if (this._events && this._events.hasOwnProperty(e)) {
                const r = this._events[e].slice(0);
                for (let s = 0, i = r.length; s < i; s++) {
                    r[s].apply(this, n);
                }
            }
            return this;
        }
        static mixin(e) {
            [
                'on',
                'once',
                'off',
                'emit'
            ].forEach(n => {
                const r = Object.getOwnPropertyDescriptor(td.prototype, n);
                Object.defineProperty(e.prototype, n, r);
            });
        }
        dispose() {
            return super.dispose(), this._events = void 0, this;
        }
    }
    class cI extends td {
        constructor() {
            super(...arguments);
            this.isOffline = false;
            ;
        }
        toJSON() {
            return {};
        }
    }
    class nd extends cI {
        constructor() {
            super();
            this.name = 'Context';
            this._constants = new Map();
            this._timeouts = new Da();
            this._timeoutIds = 0;
            this._initialized = false;
            this.isOffline = false;
            this._workletModules = new Map();
            ;
            const e = re(nd.getDefaults(), arguments, ['context']);
            e.context ? this._context = e.context : this._context = Nbe({ latencyHint: e.latencyHint });
            this._ticker = new Mbe(this.emit.bind(this, 'tick'), e.clockSource, e.updateInterval);
            this.on('tick', this._timeoutLoop.bind(this));
            this._context.onstatechange = () => {
                this.emit('statechange', this.state);
            };
            this._setLatencyHint(e.latencyHint);
            this.lookAhead = e.lookAhead;
            ;
        }
        static getDefaults() {
            return {
                clockSource: 'worker',
                latencyHint: 'interactive',
                lookAhead: 0.1,
                updateInterval: 0.05
            };
        }
        initialize() {
            return this._initialized || (Ube(this), this._initialized = true), this;
        }
        createAnalyser() {
            return this._context.createAnalyser();
        }
        createOscillator() {
            return this._context.createOscillator();
        }
        createBufferSource() {
            return this._context.createBufferSource();
        }
        createBiquadFilter() {
            return this._context.createBiquadFilter();
        }
        createBuffer(e, n, r) {
            return this._context.createBuffer(e, n, r);
        }
        createChannelMerger(e) {
            return this._context.createChannelMerger(e);
        }
        createChannelSplitter(e) {
            return this._context.createChannelSplitter(e);
        }
        createConstantSource() {
            return this._context.createConstantSource();
        }
        createConvolver() {
            return this._context.createConvolver();
        }
        createDelay(e) {
            return this._context.createDelay(e);
        }
        createDynamicsCompressor() {
            return this._context.createDynamicsCompressor();
        }
        createGain() {
            return this._context.createGain();
        }
        createIIRFilter(e, n) {
            return this._context.createIIRFilter(e, n);
        }
        createPanner() {
            return this._context.createPanner();
        }
        createPeriodicWave(e, n, r) {
            return this._context.createPeriodicWave(e, n, r);
        }
        createStereoPanner() {
            return this._context.createStereoPanner();
        }
        createWaveShaper() {
            return this._context.createWaveShaper();
        }
        createMediaStreamSource(e) {
            return Xe(ul(this._context), 'Not available if OfflineAudioContext'), this._context.createMediaStreamSource(e);
        }
        createMediaElementSource(e) {
            return Xe(ul(this._context), 'Not available if OfflineAudioContext'), this._context.createMediaElementSource(e);
        }
        createMediaStreamDestination() {
            return Xe(ul(this._context), 'Not available if OfflineAudioContext'), this._context.createMediaStreamDestination();
        }
        decodeAudioData(e) {
            return this._context.decodeAudioData(e);
        }
        get currentTime() {
            return this._context.currentTime;
        }
        get state() {
            return this._context.state;
        }
        get sampleRate() {
            return this._context.sampleRate;
        }
        get listener() {
            return this.initialize(), this._listener;
        }
        set listener(e) {
            Xe(!this._initialized, 'The listener cannot be set after initialization.');
            this._listener = e;
            ;
        }
        get transport() {
            return this.initialize(), this._transport;
        }
        set transport(e) {
            Xe(!this._initialized, 'The transport cannot be set after initialization.');
            this._transport = e;
            ;
        }
        get draw() {
            return this.initialize(), this._draw;
        }
        set draw(e) {
            Xe(!this._initialized, 'Draw cannot be set after initialization.');
            this._draw = e;
            ;
        }
        get destination() {
            return this.initialize(), this._destination;
        }
        set destination(e) {
            Xe(!this._initialized, 'The destination cannot be set after initialization.');
            this._destination = e;
            ;
        }
        createAudioWorkletNode(e, n) {
            return Rbe(this.rawContext, e, n);
        }
        addAudioWorkletModule(e, n) {
            return An(this, void 0, void 0, function* () {
                Xe(St(this.rawContext.audioWorklet), 'AudioWorkletNode is only available in a secure context (https or localhost)');
                this._workletModules.has(n) || this._workletModules.set(n, this.rawContext.audioWorklet.addModule(e));
                yield this._workletModules.get(n);
                ;
            });
        }
        workletsAreReady() {
            return An(this, void 0, void 0, function* () {
                const e = [];
                this._workletModules.forEach(n => e.push(n));
                yield Promise.all(e);
                ;
            });
        }
        get updateInterval() {
            return this._ticker.updateInterval;
        }
        set updateInterval(e) {
            this._ticker.updateInterval = e;
        }
        get clockSource() {
            return this._ticker.type;
        }
        set clockSource(e) {
            this._ticker.type = e;
        }
        get latencyHint() {
            return this._latencyHint;
        }
        _setLatencyHint(e) {
            let n = 0;
            if (this._latencyHint = e, Oi(e)) {
                switch (e) {
                case 'interactive':
                    n = 0.1;
                    break;
                case 'playback':
                    n = 0.5;
                    break;
                case 'balanced':
                    n = 0.25;
                    break;
                }
            }
            this.lookAhead = n;
            this.updateInterval = n / 2;
            ;
        }
        get rawContext() {
            return this._context;
        }
        now() {
            return this._context.currentTime + this.lookAhead;
        }
        immediate() {
            return this._context.currentTime;
        }
        resume() {
            return ul(this._context) ? this._context.resume() : Promise.resolve();
        }
        close() {
            return An(this, void 0, void 0, function* () {
                ul(this._context) && (yield this._context.close());
                this._initialized && Bbe(this);
                ;
            });
        }
        getConstant(e) {
            if (this._constants.has(e)) {
                return this._constants.get(e);
            }
            {
                const n = this._context.createBuffer(1, 128, this._context.sampleRate), r = n.getChannelData(0);
                for (let i = 0; i < r.length; i++) {
                    ;
                }
                const s = this._context.createBufferSource();
                return s.channelCount = 1, s.channelCountMode = 'explicit', s.buffer = n, s.loop = true, s.start(0), this._constants.set(e, s), s;
            }
        }
        dispose() {
            return super.dispose(), this._ticker.dispose(), this._timeouts.dispose(), Object.keys(this._constants).map(e => this._constants[e].disconnect()), this;
        }
        _timeoutLoop() {
            const e = this.now();
            let n = this._timeouts.peek();
            for (; this._timeouts.length && n && n.time <= e;) {
                n.callback();
                this._timeouts.shift();
                n = this._timeouts.peek();
                ;
            }
        }
        setTimeout(e, n) {
            this._timeoutIds++;
            const r = this.now();
            return this._timeouts.add({
                callback: e,
                id: this._timeoutIds,
                time: r + n
            }), this._timeoutIds;
        }
        clearTimeout(e) {
            return this._timeouts.forEach(n => {
                n.id === e && this._timeouts.remove(n);
            }), this;
        }
        clearInterval(e) {
            return this.clearTimeout(e);
        }
        setInterval(e, n) {
            const r = ++this._timeoutIds, s = () => {
                    const i = this.now();
                    this._timeouts.add({
                        callback: () => {
                            e();
                            s();
                            ;
                        },
                        id: r,
                        time: i + n
                    });
                };
            return s(), r;
        }
    }
    class qbe extends cI {
        constructor() {
            super(...arguments);
            this.lookAhead = 0;
            this.latencyHint = 0;
            this.isOffline = false;
            ;
        }
        createAnalyser() {
            return {};
        }
        createOscillator() {
            return {};
        }
        createBufferSource() {
            return {};
        }
        createBiquadFilter() {
            return {};
        }
        createBuffer(e, n, r) {
            return {};
        }
        createChannelMerger(e) {
            return {};
        }
        createChannelSplitter(e) {
            return {};
        }
        createConstantSource() {
            return {};
        }
        createConvolver() {
            return {};
        }
        createDelay(e) {
            return {};
        }
        createDynamicsCompressor() {
            return {};
        }
        createGain() {
            return {};
        }
        createIIRFilter(e, n) {
            return {};
        }
        createPanner() {
            return {};
        }
        createPeriodicWave(e, n, r) {
            return {};
        }
        createStereoPanner() {
            return {};
        }
        createWaveShaper() {
            return {};
        }
        createMediaStreamSource(e) {
            return {};
        }
        createMediaElementSource(e) {
            return {};
        }
        createMediaStreamDestination() {
            return {};
        }
        decodeAudioData(e) {
            return Promise.resolve({});
        }
        createAudioWorkletNode(e, n) {
            return {};
        }
        get rawContext() {
            return {};
        }
        addAudioWorkletModule(e, n) {
            return An(this, void 0, void 0, function* () {
                return Promise.resolve();
            });
        }
        resume() {
            return Promise.resolve();
        }
        setTimeout(e, n) {
            return 0;
        }
        clearTimeout(e) {
            return this;
        }
        setInterval(e, n) {
            return 0;
        }
        clearInterval(e) {
            return this;
        }
        getConstant(e) {
            return {};
        }
        get currentTime() {
            return 0;
        }
        get state() {
            return {};
        }
        get sampleRate() {
            return 0;
        }
        get listener() {
            return {};
        }
        get transport() {
            return {};
        }
        get draw() {
            return {};
        }
        set draw(e) {
        }
        get destination() {
            return {};
        }
        set destination(e) {
        }
        now() {
            return 0;
        }
        immediate() {
            return 0;
        }
    }
    function He(t, e) {
        ns(e) ? e.forEach(n => He(t, n)) : Object.defineProperty(t, e, {
            enumerable: true,
            writable: false
        });
    }
    function rd(t, e) {
        ns(e) ? e.forEach(n => rd(t, n)) : Object.defineProperty(t, e, { writable: true });
    }
    const _t = () => {
    };
    class Pt extends Eo {
        constructor() {
            super();
            this.name = 'ToneAudioBuffer';
            this.onload = _t;
            ;
            const e = re(Pt.getDefaults(), arguments, [
                'url',
                'onload',
                'onerror'
            ]);
            this.reverse = e.reverse;
            this.onload = e.onload;
            e.url && rI(e.url) || e.url instanceof Pt ? this.set(e.url) : Oi(e.url) && this.load(e.url).catch(e.onerror);
            ;
        }
        static getDefaults() {
            return {
                onerror: _t,
                onload: _t,
                reverse: false
            };
        }
        get sampleRate() {
            return this._buffer ? this._buffer.sampleRate : Ts().sampleRate;
        }
        set(e) {
            return e instanceof Pt ? e.loaded ? this._buffer = e.get() : e.onload = () => {
                this.set(e);
                this.onload(this);
                ;
            } : this._buffer = e, this._reversed && this._reverse(), this;
        }
        get() {
            return this._buffer;
        }
        load(e) {
            return An(this, void 0, void 0, function* () {
                const n = Pt.load(e).then(r => {
                    this.set(r);
                    this.onload(this);
                    ;
                });
                Pt.downloads.push(n);
                try {
                    yield n;
                } finally {
                    const r = Pt.downloads.indexOf(n);
                    Pt.downloads.splice(r, 1);
                }
                return this;
            });
        }
        dispose() {
            return super.dispose(), this._buffer = void 0, this;
        }
        fromArray(e) {
            const n = ns(e) && e[0].length > 0, r = n ? e.length : 1, s = n ? e[0].length : e.length, i = Ts(), o = i.createBuffer(r, s, i.sampleRate), a = !n && r === 1 ? [e] : e;
            for (let l = 0; l < r; l++) {
                o.copyToChannel(a[l], l);
            }
            return this._buffer = o, this;
        }
        toMono(e) {
            if (ho(e)) {
                this.fromArray(this.toArray(e));
            } else {
                let n = new Float32Array(this.length);
                const r = this.numberOfChannels;
                for (let s = 0; s < r; s++) {
                    const i = this.toArray(s);
                    for (let o = 0; o < i.length; o++) {
                        ;
                    }
                }
                n = n.map(s => s / r);
                this.fromArray(n);
                ;
            }
            return this;
        }
        toArray(e) {
            if (ho(e)) {
                return this.getChannelData(e);
            }
            if (this.numberOfChannels === 1) {
                return this.toArray(0);
            }
            {
                const n = [];
                for (let r = 0; r < this.numberOfChannels; r++) {
                    ;
                }
                return n;
            }
        }
        getChannelData(e) {
            return this._buffer ? this._buffer.getChannelData(e) : new Float32Array(0);
        }
        slice(e, n = this.duration) {
            const r = Math.floor(e * this.sampleRate), s = Math.floor(n * this.sampleRate);
            Xe(r < s, 'The start time must be less than the end time');
            const i = s - r, o = Ts().createBuffer(this.numberOfChannels, i, this.sampleRate);
            for (let a = 0; a < this.numberOfChannels; a++) {
                o.copyToChannel(this.getChannelData(a).subarray(r, s), a);
            }
            return new Pt(o);
        }
        _reverse() {
            if (this.loaded) {
                for (let e = 0; e < this.numberOfChannels; e++) {
                    this.getChannelData(e).reverse();
                }
            }
            return this;
        }
        get loaded() {
            return this.length > 0;
        }
        get duration() {
            return this._buffer ? this._buffer.duration : 0;
        }
        get length() {
            return this._buffer ? this._buffer.length : 0;
        }
        get numberOfChannels() {
            return this._buffer ? this._buffer.numberOfChannels : 0;
        }
        get reverse() {
            return this._reversed;
        }
        set reverse(e) {
            if (this._reversed !== e) {
                this._reversed = e;
                this._reverse();
            }
        }
        static fromArray(e) {
            return new Pt().fromArray(e);
        }
        static fromUrl(e) {
            return An(this, void 0, void 0, function* () {
                return yield new Pt().load(e);
            });
        }
        static load(e) {
            return An(this, void 0, void 0, function* () {
                const n = e.match(/\[([^\]\[]+\|.+)\]$/);
                if (n) {
                    const a = n[1].split('|');
                    let l = a[0];
                    for (const u of a)
                        if (Pt.supportsType(u)) {
                            l = u;
                            break;
                        }
                    e = e.replace(n[0], l);
                }
                const r = Pt.baseUrl === '' || Pt.baseUrl.endsWith('/') ? Pt.baseUrl : Pt.baseUrl + '/', s = yield fetch(r + e);
                if (!s.ok) {
                    throw new Error(`could not load url: ${ e }`);
                }
                const i = yield s.arrayBuffer();
                return yield Ts().decodeAudioData(i);
            });
        }
        static supportsType(e) {
            const n = e.split('.'), r = n[n.length - 1];
            return document.createElement('audio').canPlayType('audio/' + r) !== '';
        }
        static loaded() {
            return An(this, void 0, void 0, function* () {
                for (yield Promise.resolve(); Pt.downloads.length;) {
                    yield Pt.downloads[0];
                }
            });
        }
    }
    Pt.baseUrl = '';
    Pt.downloads = [];
    class Tg extends nd {
        constructor() {
            super({
                clockSource: 'offline',
                context: Bp(arguments[0]) ? arguments[0] : xbe(arguments[0], arguments[1] * arguments[2], arguments[2]),
                lookAhead: 0,
                updateInterval: Bp(arguments[0]) ? 128 / arguments[0].sampleRate : 128 / arguments[2]
            });
            this.name = 'OfflineContext';
            this._currentTime = 0;
            this.isOffline = true;
            this._duration = Bp(arguments[0]) ? arguments[0].length / arguments[0].sampleRate : arguments[1];
            ;
        }
        now() {
            return this._currentTime;
        }
        get currentTime() {
            return this._currentTime;
        }
        _renderClock(e) {
            return An(this, void 0, void 0, function* () {
                let n = 0;
                for (; this._duration - this._currentTime >= 0;) {
                    this.emit('tick');
                    this._currentTime += 128 / this.sampleRate;
                    n++;
                    ;
                    const r = Math.floor(this.sampleRate / 128);
                    e && n % r === 0 && (yield new Promise(s => setTimeout(s, 1)));
                }
            });
        }
        render(e = true) {
            return An(this, void 0, void 0, function* () {
                yield this.workletsAreReady();
                yield this._renderClock(e);
                ;
                const n = yield this._context.startRendering();
                return new Pt(n);
            });
        }
        close() {
            return Promise.resolve();
        }
    }
    const lI = new qbe();
    let Ll = lI;
    function Ts() {
        return Ll === lI && Pbe && Vbe(new nd()), Ll;
    }
    function Vbe(t) {
        ul(t) ? Ll = new nd(t) : Bp(t) ? Ll = new Tg(t) : Ll = t;
    }
    function uI() {
        return Ll.resume();
    }
    if (vc && !vc.TONE_SILENCE_LOGGING) {
        const e = ` * Tone.js v${ '14.7.77' } * `;
        console.log(`%c${ e }`, 'background: #000; color: #fff');
    }
    function k1(t) {
        return Math.pow(10, t / 20);
    }
    function o5(t) {
        return 20 * (Math.log(t) / Math.LN10);
    }
    function Ic(t) {
        return Math.pow(2, t / 12);
    }
    let Sg = 440;
    function Gbe() {
        return Sg;
    }
    function jbe(t) {
        Sg = t;
    }
    function lc(t) {
        return Math.round(wg(t));
    }
    function wg(t) {
        return 69 + 12 * Math.log2(t / Sg);
    }
    function hI(t) {
        return Sg * Math.pow(2, (t - 69) / 12);
    }
    class a5 extends Eo {
        constructor(e, n, r) {
            super();
            this.defaultUnits = 's';
            this._val = n;
            this._units = r;
            this.context = e;
            this._expressions = this._getExpressions();
            ;
        }
        _getExpressions() {
            return {
                hz: {
                    method: e => this._frequencyToUnits(parseFloat(e)),
                    regexp: /^(\d+(?:\.\d+)?)hz$/i
                },
                i: {
                    method: e => this._ticksToUnits(parseInt(e, 10)),
                    regexp: /^(\d+)i$/i
                },
                m: {
                    method: e => this._beatsToUnits(parseInt(e, 10) * this._getTimeSignature()),
                    regexp: /^(\d+)m$/i
                },
                n: {
                    method: (e, n) => {
                        const r = parseInt(e, 10), s = n === '.' ? 1.5 : 1;
                        return r === 1 ? this._beatsToUnits(this._getTimeSignature()) * s : this._beatsToUnits(4 / r) * s;
                    },
                    regexp: /^(\d+)n(\.?)$/i
                },
                number: {
                    method: e => this._expressions[this.defaultUnits].method.call(this, e),
                    regexp: /^(\d+(?:\.\d+)?)$/
                },
                s: {
                    method: e => this._secondsToUnits(parseFloat(e)),
                    regexp: /^(\d+(?:\.\d+)?)s$/
                },
                samples: {
                    method: e => parseInt(e, 10) / this.context.sampleRate,
                    regexp: /^(\d+)samples$/
                },
                t: {
                    method: e => {
                        const n = parseInt(e, 10);
                        return this._beatsToUnits(8 / (Math.floor(n) * 3));
                    },
                    regexp: /^(\d+)t$/i
                },
                tr: {
                    method: (e, n, r) => {
                        let s = 0;
                        return e && e !== '0' && (s += this._beatsToUnits(this._getTimeSignature() * parseFloat(e))), n && n !== '0' && (s += this._beatsToUnits(parseFloat(n))), r && r !== '0' && (s += this._beatsToUnits(parseFloat(r) / 4)), s;
                    },
                    regexp: /^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/
                }
            };
        }
        valueOf() {
            if (this._val instanceof a5 && this.fromType(this._val), As(this._val)) {
                return this._noArg();
            }
            if (Oi(this._val) && As(this._units)) {
                for (const e in this._expressions)
                    if (this._expressions[e].regexp.test(this._val.trim())) {
                        this._units = e;
                        break;
                    }
            } else {
                if (yc(this._val)) {
                    let e = 0;
                    for (const n in this._val)
                        if (St(this._val[n])) {
                            const r = this._val[n], s = new this.constructor(this.context, n).valueOf() * r;
                            e += s;
                        }
                    return e;
                }
            }
            if (St(this._units)) {
                const e = this._expressions[this._units], n = this._val.toString().trim().match(e.regexp);
                return n ? e.method.apply(this, n.slice(1)) : e.method.call(this, this._val);
            } else {
                return Oi(this._val) ? parseFloat(this._val) : this._val;
            }
        }
        _frequencyToUnits(e) {
            return 1 / e;
        }
        _beatsToUnits(e) {
            return 60 / this._getBpm() * e;
        }
        _secondsToUnits(e) {
            return e;
        }
        _ticksToUnits(e) {
            return e * this._beatsToUnits(1) / this._getPPQ();
        }
        _noArg() {
            return this._now();
        }
        _getBpm() {
            return this.context.transport.bpm.value;
        }
        _getTimeSignature() {
            return this.context.transport.timeSignature;
        }
        _getPPQ() {
            return this.context.transport.PPQ;
        }
        fromType(e) {
            switch (this._units = void 0, this.defaultUnits) {
            case 's':
                this._val = e.toSeconds();
                break;
            case 'i':
                this._val = e.toTicks();
                break;
            case 'hz':
                this._val = e.toFrequency();
                break;
            case 'midi':
                this._val = e.toMidi();
                break;
            }
            return this;
        }
        toFrequency() {
            return 1 / this.toSeconds();
        }
        toSamples() {
            return this.toSeconds() * this.context.sampleRate;
        }
        toMilliseconds() {
            return this.toSeconds() * 1000;
        }
    }
    class Hs extends a5 {
        constructor() {
            super(...arguments);
            this.name = 'TimeClass';
            ;
        }
        _getExpressions() {
            return Object.assign(super._getExpressions(), {
                now: {
                    method: e => this._now() + new this.constructor(this.context, e).valueOf(),
                    regexp: /^\+(.+)/
                },
                quantize: {
                    method: e => {
                        const n = new Hs(this.context, e).valueOf();
                        return this._secondsToUnits(this.context.transport.nextSubdivision(n));
                    },
                    regexp: /^@(.+)/
                }
            });
        }
        quantize(e, n = 1) {
            const r = new this.constructor(this.context, e).valueOf(), s = this.valueOf(), a = Math.round(s / r) * r - s;
            return s + a * n;
        }
        toNotation() {
            const e = this.toSeconds(), n = ['1m'];
            for (let i = 1; i < 9; i++) {
                const o = Math.pow(2, i);
                n.push(o + 'n.');
                n.push(o + 'n');
                n.push(o + 't');
                ;
            }
            n.push('0');
            let r = n[0], s = new Hs(this.context, n[0]).toSeconds();
            return n.forEach(i => {
                const o = new Hs(this.context, i).toSeconds();
                if (Math.abs(o - e) < Math.abs(s - e)) {
                    r = i;
                    s = o;
                }
            }), r;
        }
        toBarsBeatsSixteenths() {
            const e = this._beatsToUnits(1);
            let n = this.valueOf() / e;
            n = parseFloat(n.toFixed(4));
            const r = Math.floor(n / this._getTimeSignature());
            let s = n % 1 * 4;
            n = Math.floor(n) % this._getTimeSignature();
            const i = s.toString();
            return i.length > 3 && (s = parseFloat(parseFloat(i).toFixed(3))), [
                r,
                n,
                s
            ].join(':');
        }
        toTicks() {
            const e = this._beatsToUnits(1), n = this.valueOf() / e;
            return Math.round(n * this._getPPQ());
        }
        toSeconds() {
            return this.valueOf();
        }
        toMidi() {
            return lc(this.toFrequency());
        }
        _now() {
            return this.context.now();
        }
    }
    class Jn extends Hs {
        constructor() {
            super(...arguments);
            this.name = 'Frequency';
            this.defaultUnits = 'hz';
            ;
        }
        static get A4() {
            return Gbe();
        }
        static set A4(e) {
            jbe(e);
        }
        _getExpressions() {
            return Object.assign({}, super._getExpressions(), {
                midi: {
                    regexp: /^(\d+(?:\.\d+)?midi)/,
                    method(e) {
                        return this.defaultUnits === 'midi' ? e : Jn.mtof(e);
                    }
                },
                note: {
                    regexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,
                    method(e, n) {
                        const s = Wbe[e.toLowerCase()] + (parseInt(n, 10) + 1) * 12;
                        return this.defaultUnits === 'midi' ? s : Jn.mtof(s);
                    }
                },
                tr: {
                    regexp: /^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,
                    method(e, n, r) {
                        let s = 1;
                        return e && e !== '0' && (s *= this._beatsToUnits(this._getTimeSignature() * parseFloat(e))), n && n !== '0' && (s *= this._beatsToUnits(parseFloat(n))), r && r !== '0' && (s *= this._beatsToUnits(parseFloat(r) / 4)), s;
                    }
                }
            });
        }
        transpose(e) {
            return new Jn(this.context, this.valueOf() * Ic(e));
        }
        harmonize(e) {
            return e.map(n => this.transpose(n));
        }
        toMidi() {
            return lc(this.valueOf());
        }
        toNote() {
            const e = this.toFrequency(), n = Math.log2(e / Jn.A4);
            let r = Math.round(12 * n) + 57;
            const s = Math.floor(r / 12);
            return s < 0 && (r += -12 * s), Hbe[r % 12] + s.toString();
        }
        toSeconds() {
            return 1 / super.toSeconds();
        }
        toTicks() {
            const e = this._beatsToUnits(1), n = this.valueOf() / e;
            return Math.floor(n * this._getPPQ());
        }
        _noArg() {
            return 0;
        }
        _frequencyToUnits(e) {
            return e;
        }
        _ticksToUnits(e) {
            return 1 / (e * 60 / (this._getBpm() * this._getPPQ()));
        }
        _beatsToUnits(e) {
            return 1 / super._beatsToUnits(e);
        }
        _secondsToUnits(e) {
            return 1 / e;
        }
        static mtof(e) {
            return hI(e);
        }
        static ftom(e) {
            return lc(e);
        }
    }
    const Wbe = {
            cbb: -2,
            cb: -1,
            c: 0,
            'c#': 1,
            cx: 2,
            dbb: 0,
            db: 1,
            d: 2,
            'd#': 3,
            dx: 4,
            ebb: 2,
            eb: 3,
            e: 4,
            'e#': 5,
            ex: 6,
            fbb: 3,
            fb: 4,
            f: 5,
            'f#': 6,
            fx: 7,
            gbb: 5,
            gb: 6,
            g: 7,
            'g#': 8,
            gx: 9,
            abb: 7,
            ab: 8,
            a: 9,
            'a#': 10,
            ax: 11,
            bbb: 9,
            bb: 10,
            b: 11,
            'b#': 12,
            bx: 13
        }, Hbe = [
            'C',
            'C#',
            'D',
            'D#',
            'E',
            'F',
            'F#',
            'G',
            'G#',
            'A',
            'A#',
            'B'
        ];
    function Ph(t, e) {
        return new Jn(Ts(), t, e);
    }
    class Rh extends Hs {
        constructor() {
            super(...arguments);
            this.name = 'TransportTime';
            ;
        }
        _now() {
            return this.context.transport.seconds;
        }
    }
    class Lr extends Eo {
        constructor() {
            super();
            const e = re(Lr.getDefaults(), arguments, ['context']);
            this.defaultContext ? this.context = this.defaultContext : this.context = e.context;
        }
        static getDefaults() {
            return { context: Ts() };
        }
        now() {
            return this.context.currentTime + this.context.lookAhead;
        }
        immediate() {
            return this.context.currentTime;
        }
        get sampleTime() {
            return 1 / this.context.sampleRate;
        }
        get blockTime() {
            return 128 / this.context.sampleRate;
        }
        toSeconds(e) {
            return new Hs(this.context, e).toSeconds();
        }
        toFrequency(e) {
            return new Jn(this.context, e).toFrequency();
        }
        toTicks(e) {
            return new Rh(this.context, e).toTicks();
        }
        _getPartialProperties(e) {
            const n = this.get();
            return Object.keys(n).forEach(r => {
                As(e[r]) && delete n[r];
            }), n;
        }
        get() {
            const e = Lbe(this);
            return Object.keys(e).forEach(n => {
                if (Reflect.has(this, n)) {
                    const r = this[n];
                    St(r) && St(r.value) && St(r.setValueAtTime) ? e[n] = r.value : r instanceof Lr ? e[n] = r._getPartialProperties(e[n]) : ns(r) || ho(r) || Oi(r) || kbe(r) ? e[n] = r : delete e[n];
                }
            }), e;
        }
        set(e) {
            return Object.keys(e).forEach(n => {
                Reflect.has(this, n) && St(this[n]) && (this[n] && St(this[n].value) && St(this[n].setValueAtTime) ? this[n].value !== e[n] && (this[n].value = e[n]) : this[n] instanceof Lr ? this[n].set(e[n]) : this[n] = e[n]);
            }), this;
        }
    }
    class c5 extends Da {
        constructor(e = 'stopped') {
            super();
            this.name = 'StateTimeline';
            this._initial = e;
            this.setStateAtTime(this._initial, 0);
            ;
        }
        getValueAtTime(e) {
            const n = this.get(e);
            return n !== null ? n.state : this._initial;
        }
        setStateAtTime(e, n, r) {
            return Xs(n, 0), this.add(Object.assign({}, r, {
                state: e,
                time: n
            })), this;
        }
        getLastState(e, n) {
            const r = this._search(n);
            for (let s = r; s >= 0; s--) {
                const i = this._timeline[s];
                if (i.state === e) {
                    return i;
                }
            }
        }
        getNextState(e, n) {
            const r = this._search(n);
            if (r !== -1) {
                for (let s = r; s < this._timeline.length; s++) {
                    const i = this._timeline[s];
                    if (i.state === e) {
                        return i;
                    }
                }
            }
        }
    }
    class ft extends Lr {
        constructor() {
            super(re(ft.getDefaults(), arguments, [
                'param',
                'units',
                'convert'
            ]));
            this.name = 'Param';
            this.overridden = false;
            this._minOutput = 1e-7;
            ;
            const e = re(ft.getDefaults(), arguments, [
                'param',
                'units',
                'convert'
            ]);
            for (Xe(St(e.param) && (Cc(e.param) || e.param instanceof ft), 'param must be an AudioParam'); !Cc(e.param);) {
                ;
            }
            this._swappable = St(e.swappable) ? e.swappable : false;
            this._swappable ? (this.input = this.context.createGain(), this._param = e.param, this.input.connect(this._param)) : this._param = this.input = e.param;
            this._events = new Da(1000);
            this._initialValue = this._param.defaultValue;
            this.units = e.units;
            this.convert = e.convert;
            this._minValue = e.minValue;
            this._maxValue = e.maxValue;
            St(e.value) && e.value !== this._toType(this._initialValue) && this.setValueAtTime(e.value, 0);
            ;
        }
        static getDefaults() {
            return Object.assign(Lr.getDefaults(), {
                convert: true,
                units: 'number'
            });
        }
        get value() {
            const e = this.now();
            return this.getValueAtTime(e);
        }
        set value(e) {
            this.cancelScheduledValues(this.now());
            this.setValueAtTime(e, this.now());
            ;
        }
        get minValue() {
            return St(this._minValue) ? this._minValue : this.units === 'time' || this.units === 'frequency' || this.units === 'normalRange' || this.units === 'positive' || this.units === 'transportTime' || this.units === 'ticks' || this.units === 'bpm' || this.units === 'hertz' || this.units === 'samples' ? 0 : this.units === 'audioRange' ? -1 : this.units === 'decibels' ? -1e+400 : this._param.minValue;
        }
        get maxValue() {
            return St(this._maxValue) ? this._maxValue : this.units === 'normalRange' || this.units === 'audioRange' ? 1 : this._param.maxValue;
        }
        _is(e, n) {
            return this.units === n;
        }
        _assertRange(e) {
            return St(this.maxValue) && St(this.minValue) && Xs(e, this._fromType(this.minValue), this._fromType(this.maxValue)), e;
        }
        _fromType(e) {
            return this.convert && !this.overridden ? this._is(e, 'time') ? this.toSeconds(e) : this._is(e, 'decibels') ? k1(e) : this._is(e, 'frequency') ? this.toFrequency(e) : e : this.overridden ? 0 : e;
        }
        _toType(e) {
            return this.convert && this.units === 'decibels' ? o5(e) : e;
        }
        setValueAtTime(e, n) {
            const r = this.toSeconds(n), s = this._fromType(e);
            return Xe(isFinite(s) && isFinite(r), `Invalid argument(s) to setValueAtTime: ${ JSON.stringify(e) }, ${ JSON.stringify(n) }`), this._assertRange(s), this.log(this.units, 'setValueAtTime', e, r), this._events.add({
                time: r,
                type: 'setValueAtTime',
                value: s
            }), this._param.setValueAtTime(s, r), this;
        }
        getValueAtTime(e) {
            const n = Math.max(this.toSeconds(e), 0), r = this._events.getAfter(n), s = this._events.get(n);
            let i = this._initialValue;
            if (s === null) {
                i = this._initialValue;
            } else {
                if (s.type === 'setTargetAtTime' && (r === null || r.type === 'setValueAtTime')) {
                    const o = this._events.getBefore(s.time);
                    let a;
                    o === null ? a = this._initialValue : a = o.value;
                    s.type === 'setTargetAtTime' && (i = this._exponentialApproach(s.time, a, s.value, s.constant, n));
                    ;
                } else {
                    if (r === null) {
                        i = s.value;
                    } else {
                        if (r.type === 'linearRampToValueAtTime' || r.type === 'exponentialRampToValueAtTime') {
                            let o = s.value;
                            if (s.type === 'setTargetAtTime') {
                                const a = this._events.getBefore(s.time);
                                a === null ? o = this._initialValue : o = a.value;
                            }
                            r.type === 'linearRampToValueAtTime' ? i = this._linearInterpolate(s.time, o, r.time, r.value, n) : i = this._exponentialInterpolate(s.time, o, r.time, r.value, n);
                        } else {
                            i = s.value;
                        }
                    }
                }
            }
            return this._toType(i);
        }
        setRampPoint(e) {
            e = this.toSeconds(e);
            let n = this.getValueAtTime(e);
            return this.cancelAndHoldAtTime(e), this._fromType(n) === 0 && (n = this._toType(this._minOutput)), this.setValueAtTime(n, e), this;
        }
        linearRampToValueAtTime(e, n) {
            const r = this._fromType(e), s = this.toSeconds(n);
            return Xe(isFinite(r) && isFinite(s), `Invalid argument(s) to linearRampToValueAtTime: ${ JSON.stringify(e) }, ${ JSON.stringify(n) }`), this._assertRange(r), this._events.add({
                time: s,
                type: 'linearRampToValueAtTime',
                value: r
            }), this.log(this.units, 'linearRampToValueAtTime', e, s), this._param.linearRampToValueAtTime(r, s), this;
        }
        exponentialRampToValueAtTime(e, n) {
            let r = this._fromType(e);
            r = qs(r, 0) ? this._minOutput : r;
            this._assertRange(r);
            ;
            const s = this.toSeconds(n);
            return Xe(isFinite(r) && isFinite(s), `Invalid argument(s) to exponentialRampToValueAtTime: ${ JSON.stringify(e) }, ${ JSON.stringify(n) }`), this._events.add({
                time: s,
                type: 'exponentialRampToValueAtTime',
                value: r
            }), this.log(this.units, 'exponentialRampToValueAtTime', e, s), this._param.exponentialRampToValueAtTime(r, s), this;
        }
        exponentialRampTo(e, n, r) {
            return r = this.toSeconds(r), this.setRampPoint(r), this.exponentialRampToValueAtTime(e, r + this.toSeconds(n)), this;
        }
        linearRampTo(e, n, r) {
            return r = this.toSeconds(r), this.setRampPoint(r), this.linearRampToValueAtTime(e, r + this.toSeconds(n)), this;
        }
        targetRampTo(e, n, r) {
            return r = this.toSeconds(r), this.setRampPoint(r), this.exponentialApproachValueAtTime(e, r, n), this;
        }
        exponentialApproachValueAtTime(e, n, r) {
            n = this.toSeconds(n);
            r = this.toSeconds(r);
            ;
            const s = Math.log(r + 1) / Math.log(200);
            return this.setTargetAtTime(e, n, s), this.cancelAndHoldAtTime(n + r * 0.9), this.linearRampToValueAtTime(e, n + r), this;
        }
        setTargetAtTime(e, n, r) {
            const s = this._fromType(e);
            Xe(isFinite(r) && r > 0, 'timeConstant must be a number greater than 0');
            const i = this.toSeconds(n);
            return this._assertRange(s), Xe(isFinite(s) && isFinite(i), `Invalid argument(s) to setTargetAtTime: ${ JSON.stringify(e) }, ${ JSON.stringify(n) }`), this._events.add({
                constant: r,
                time: i,
                type: 'setTargetAtTime',
                value: s
            }), this.log(this.units, 'setTargetAtTime', e, i, r), this._param.setTargetAtTime(s, i, r), this;
        }
        setValueCurveAtTime(e, n, r, s = 1) {
            r = this.toSeconds(r);
            n = this.toSeconds(n);
            ;
            const i = this._fromType(e[0]) * s;
            this.setValueAtTime(this._toType(i), n);
            const o = r / (e.length - 1);
            for (let a = 1; a < e.length; a++) {
                const l = this._fromType(e[a]) * s;
                this.linearRampToValueAtTime(this._toType(l), n + a * o);
            }
            return this;
        }
        cancelScheduledValues(e) {
            const n = this.toSeconds(e);
            return Xe(isFinite(n), `Invalid argument to cancelScheduledValues: ${ JSON.stringify(e) }`), this._events.cancel(n), this._param.cancelScheduledValues(n), this.log(this.units, 'cancelScheduledValues', n), this;
        }
        cancelAndHoldAtTime(e) {
            const n = this.toSeconds(e), r = this._fromType(this.getValueAtTime(n));
            Xe(isFinite(n), `Invalid argument to cancelAndHoldAtTime: ${ JSON.stringify(e) }`);
            this.log(this.units, 'cancelAndHoldAtTime', n, 'value=' + r);
            ;
            const s = this._events.get(n), i = this._events.getAfter(n);
            return s && qs(s.time, n) ? i ? (this._param.cancelScheduledValues(i.time), this._events.cancel(i.time)) : (this._param.cancelAndHoldAtTime(n), this._events.cancel(n + this.sampleTime)) : i && (this._param.cancelScheduledValues(i.time), this._events.cancel(i.time), i.type === 'linearRampToValueAtTime' ? this.linearRampToValueAtTime(this._toType(r), n) : i.type === 'exponentialRampToValueAtTime' && this.exponentialRampToValueAtTime(this._toType(r), n)), this._events.add({
                time: n,
                type: 'setValueAtTime',
                value: r
            }), this._param.setValueAtTime(r, n), this;
        }
        rampTo(e, n = 0.1, r) {
            return this.units === 'frequency' || this.units === 'bpm' || this.units === 'decibels' ? this.exponentialRampTo(e, n, r) : this.linearRampTo(e, n, r), this;
        }
        apply(e) {
            const n = this.context.currentTime;
            e.setValueAtTime(this.getValueAtTime(n), n);
            const r = this._events.get(n);
            if (r && r.type === 'setTargetAtTime') {
                const s = this._events.getAfter(r.time), i = s ? s.time : n + 2, o = (i - n) / 10;
                for (let a = n; a < i; a += o) {
                    e.linearRampToValueAtTime(this.getValueAtTime(a), a);
                }
            }
            return this._events.forEachAfter(this.context.currentTime, s => {
                s.type === 'cancelScheduledValues' ? e.cancelScheduledValues(s.time) : s.type === 'setTargetAtTime' ? e.setTargetAtTime(s.value, s.time, s.constant) : e[s.type](s.value, s.time);
            }), this;
        }
        setParam(e) {
            Xe(this._swappable, 'The Param must be assigned as \'swappable\' in the constructor');
            const n = this.input;
            return n.disconnect(this._param), this.apply(e), this._param = e, n.connect(this._param), this;
        }
        dispose() {
            return super.dispose(), this._events.dispose(), this;
        }
        get defaultValue() {
            return this._toType(this._param.defaultValue);
        }
        _exponentialApproach(e, n, r, s, i) {
            return r + (n - r) * Math.exp(-(i - e) / s);
        }
        _linearInterpolate(e, n, r, s, i) {
            return n + (s - n) * ((i - e) / (r - e));
        }
        _exponentialInterpolate(e, n, r, s, i) {
            return n * Math.pow(s / n, (i - e) / (r - e));
        }
    }
    class Ne extends Lr {
        constructor() {
            super(...arguments);
            this.name = 'ToneAudioNode';
            this._internalChannels = [];
            ;
        }
        get numberOfInputs() {
            return St(this.input) ? Cc(this.input) || this.input instanceof ft ? 1 : this.input.numberOfInputs : 0;
        }
        get numberOfOutputs() {
            return St(this.output) ? this.output.numberOfOutputs : 0;
        }
        _isAudioNode(e) {
            return St(e) && (e instanceof Ne || na(e));
        }
        _getInternalNodes() {
            const e = this._internalChannels.slice(0);
            return this._isAudioNode(this.input) && e.push(this.input), this._isAudioNode(this.output) && this.input !== this.output && e.push(this.output), e;
        }
        _setChannelProperties(e) {
            this._getInternalNodes().forEach(r => {
                ;
                ;
                ;
                ;
            });
        }
        _getChannelProperties() {
            const e = this._getInternalNodes();
            Xe(e.length > 0, 'ToneAudioNode does not have any internal nodes');
            const n = e[0];
            return {
                channelCount: n.channelCount,
                channelCountMode: n.channelCountMode,
                channelInterpretation: n.channelInterpretation
            };
        }
        get channelCount() {
            return this._getChannelProperties().channelCount;
        }
        set channelCount(e) {
            const n = this._getChannelProperties();
            this._setChannelProperties(Object.assign(n, { channelCount: e }));
        }
        get channelCountMode() {
            return this._getChannelProperties().channelCountMode;
        }
        set channelCountMode(e) {
            const n = this._getChannelProperties();
            this._setChannelProperties(Object.assign(n, { channelCountMode: e }));
        }
        get channelInterpretation() {
            return this._getChannelProperties().channelInterpretation;
        }
        set channelInterpretation(e) {
            const n = this._getChannelProperties();
            this._setChannelProperties(Object.assign(n, { channelInterpretation: e }));
        }
        connect(e, n = 0, r = 0) {
            return ks(this, e, n, r), this;
        }
        toDestination() {
            return this.connect(this.context.destination), this;
        }
        toMaster() {
            return s5('toMaster() has been renamed toDestination()'), this.toDestination();
        }
        disconnect(e, n = 0, r = 0) {
            return fI(this, e, n, r), this;
        }
        chain(...e) {
            return Is(this, ...e), this;
        }
        fan(...e) {
            return e.forEach(n => this.connect(n)), this;
        }
        dispose() {
            return super.dispose(), St(this.input) && (this.input instanceof Ne ? this.input.dispose() : na(this.input) && this.input.disconnect()), St(this.output) && (this.output instanceof Ne ? this.output.dispose() : na(this.output) && this.output.disconnect()), this._internalChannels = [], this;
        }
    }
    function Is(...t) {
        const e = t.shift();
        t.reduce((n, r) => (n instanceof Ne ? n.connect(r) : na(n) && ks(n, r), r), e);
    }
    function ks(t, e, n = 0, r = 0) {
        for (Xe(St(t), 'Cannot connect from undefined node'), Xe(St(e), 'Cannot connect to undefined node'), (e instanceof Ne || na(e)) && Xe(e.numberOfInputs > 0, 'Cannot connect to node with no inputs'), Xe(t.numberOfOutputs > 0, 'Cannot connect from node with no outputs'); e instanceof Ne || e instanceof ft;) {
            St(e.input) && (e = e.input);
        }
        for (; t instanceof Ne;) {
            St(t.output) && (t = t.output);
        }
        Cc(e) ? t.connect(e, n) : t.connect(e, n, r);
    }
    function fI(t, e, n = 0, r = 0) {
        if (St(e)) {
            for (; e instanceof Ne;) {
                e = e.input;
            }
        }
        for (; !na(t);) {
            St(t.output) && (t = t.output);
        }
        Cc(e) ? t.disconnect(e, n) : na(e) ? t.disconnect(e, n, r) : t.disconnect();
    }
    class je extends Ne {
        constructor() {
            super(re(je.getDefaults(), arguments, [
                'gain',
                'units'
            ]));
            this.name = 'Gain';
            this._gainNode = this.context.createGain();
            this.input = this._gainNode;
            this.output = this._gainNode;
            ;
            const e = re(je.getDefaults(), arguments, [
                'gain',
                'units'
            ]);
            this.gain = new ft({
                context: this.context,
                convert: e.convert,
                param: this._gainNode.gain,
                units: e.units,
                value: e.gain,
                minValue: e.minValue,
                maxValue: e.maxValue
            });
            He(this, 'gain');
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), {
                convert: true,
                gain: 1,
                units: 'gain'
            });
        }
        dispose() {
            return super.dispose(), this._gainNode.disconnect(), this.gain.dispose(), this;
        }
    }
    class eu extends Ne {
        constructor(e) {
            super(e);
            this.onended = _t;
            this._startTime = -1;
            this._stopTime = -1;
            this._timeout = -1;
            this.output = new je({
                context: this.context,
                gain: 0
            });
            this._gainNode = this.output;
            this.getStateAtTime = function (n) {
                const r = this.toSeconds(n);
                return this._startTime !== -1 && r >= this._startTime && (this._stopTime === -1 || r <= this._stopTime) ? 'started' : 'stopped';
            };
            this._fadeIn = e.fadeIn;
            this._fadeOut = e.fadeOut;
            this._curve = e.curve;
            this.onended = e.onended;
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), {
                curve: 'linear',
                fadeIn: 0,
                fadeOut: 0,
                onended: _t
            });
        }
        _startGain(e, n = 1) {
            Xe(this._startTime === -1, 'Source cannot be started more than once');
            const r = this.toSeconds(this._fadeIn);
            return this._startTime = e + r, this._startTime = Math.max(this._startTime, this.context.currentTime), r > 0 ? (this._gainNode.gain.setValueAtTime(0, e), this._curve === 'linear' ? this._gainNode.gain.linearRampToValueAtTime(n, e + r) : this._gainNode.gain.exponentialApproachValueAtTime(n, e, r)) : this._gainNode.gain.setValueAtTime(n, e), this;
        }
        stop(e) {
            return this.log('stop', e), this._stopGain(this.toSeconds(e)), this;
        }
        _stopGain(e) {
            Xe(this._startTime !== -1, '\'start\' must be called before \'stop\'');
            this.cancelStop();
            ;
            const n = this.toSeconds(this._fadeOut);
            return this._stopTime = this.toSeconds(e) + n, this._stopTime = Math.max(this._stopTime, this.context.currentTime), n > 0 ? this._curve === 'linear' ? this._gainNode.gain.linearRampTo(0, n, e) : this._gainNode.gain.targetRampTo(0, n, e) : (this._gainNode.gain.cancelAndHoldAtTime(e), this._gainNode.gain.setValueAtTime(0, e)), this.context.clearTimeout(this._timeout), this._timeout = this.context.setTimeout(() => {
                const r = this._curve === 'exponential' ? n * 2 : 0;
                this._stopSource(this.now() + r);
                this._onended();
                ;
            }, this._stopTime - this.context.currentTime), this;
        }
        _onended() {
            if (this.onended !== _t && (this.onended(this), this.onended = _t, !this.context.isOffline)) {
                const e = () => this.dispose();
                typeof window.requestIdleCallback < 'u' ? window.requestIdleCallback(e) : setTimeout(e, 1000);
            }
        }
        get state() {
            return this.getStateAtTime(this.now());
        }
        cancelStop() {
            return this.log('cancelStop'), Xe(this._startTime !== -1, 'Source is not started'), this._gainNode.gain.cancelScheduledValues(this._startTime + this.sampleTime), this.context.clearTimeout(this._timeout), this._stopTime = -1, this;
        }
        dispose() {
            return super.dispose(), this._gainNode.disconnect(), this;
        }
    }
    class N1 extends eu {
        constructor() {
            super(re(N1.getDefaults(), arguments, ['offset']));
            this.name = 'ToneConstantSource';
            this._source = this.context.createConstantSource();
            ;
            const e = re(N1.getDefaults(), arguments, ['offset']);
            ks(this._source, this._gainNode);
            this.offset = new ft({
                context: this.context,
                convert: e.convert,
                param: this._source.offset,
                units: e.units,
                value: e.offset,
                minValue: e.minValue,
                maxValue: e.maxValue
            });
            ;
        }
        static getDefaults() {
            return Object.assign(eu.getDefaults(), {
                convert: true,
                offset: 1,
                units: 'number'
            });
        }
        start(e) {
            const n = this.toSeconds(e);
            return this.log('start', n), this._startGain(n), this._source.start(n), this;
        }
        _stopSource(e) {
            this._source.stop(e);
        }
        dispose() {
            return super.dispose(), this.state === 'started' && this.stop(), this._source.disconnect(), this.offset.dispose(), this;
        }
    }
    class Qe extends Ne {
        constructor() {
            super(re(Qe.getDefaults(), arguments, [
                'value',
                'units'
            ]));
            this.name = 'Signal';
            this.override = true;
            ;
            const e = re(Qe.getDefaults(), arguments, [
                'value',
                'units'
            ]);
            this.output = this._constantSource = new N1({
                context: this.context,
                convert: e.convert,
                offset: e.value,
                units: e.units,
                minValue: e.minValue,
                maxValue: e.maxValue
            });
            this._constantSource.start(0);
            this.input = this._param = this._constantSource.offset;
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), {
                convert: true,
                units: 'number',
                value: 0
            });
        }
        connect(e, n = 0, r = 0) {
            return Og(this, e, n, r), this;
        }
        dispose() {
            return super.dispose(), this._param.dispose(), this._constantSource.dispose(), this;
        }
        setValueAtTime(e, n) {
            return this._param.setValueAtTime(e, n), this;
        }
        getValueAtTime(e) {
            return this._param.getValueAtTime(e);
        }
        setRampPoint(e) {
            return this._param.setRampPoint(e), this;
        }
        linearRampToValueAtTime(e, n) {
            return this._param.linearRampToValueAtTime(e, n), this;
        }
        exponentialRampToValueAtTime(e, n) {
            return this._param.exponentialRampToValueAtTime(e, n), this;
        }
        exponentialRampTo(e, n, r) {
            return this._param.exponentialRampTo(e, n, r), this;
        }
        linearRampTo(e, n, r) {
            return this._param.linearRampTo(e, n, r), this;
        }
        targetRampTo(e, n, r) {
            return this._param.targetRampTo(e, n, r), this;
        }
        exponentialApproachValueAtTime(e, n, r) {
            return this._param.exponentialApproachValueAtTime(e, n, r), this;
        }
        setTargetAtTime(e, n, r) {
            return this._param.setTargetAtTime(e, n, r), this;
        }
        setValueCurveAtTime(e, n, r, s) {
            return this._param.setValueCurveAtTime(e, n, r, s), this;
        }
        cancelScheduledValues(e) {
            return this._param.cancelScheduledValues(e), this;
        }
        cancelAndHoldAtTime(e) {
            return this._param.cancelAndHoldAtTime(e), this;
        }
        rampTo(e, n, r) {
            return this._param.rampTo(e, n, r), this;
        }
        get value() {
            return this._param.value;
        }
        set value(e) {
            this._param.value = e;
        }
        get convert() {
            return this._param.convert;
        }
        set convert(e) {
            this._param.convert = e;
        }
        get units() {
            return this._param.units;
        }
        get overridden() {
            return this._param.overridden;
        }
        set overridden(e) {
            this._param.overridden = e;
        }
        get maxValue() {
            return this._param.maxValue;
        }
        get minValue() {
            return this._param.minValue;
        }
        apply(e) {
            return this._param.apply(e), this;
        }
    }
    function Og(t, e, n, r) {
        (e instanceof ft || Cc(e) || e instanceof Qe && e.override) && (e.cancelScheduledValues(0), e.setValueAtTime(0, 0), e instanceof Qe && (e.overridden = true));
        ks(t, e, n, r);
        ;
    }
    class x1 extends ft {
        constructor() {
            super(re(x1.getDefaults(), arguments, ['value']));
            this.name = 'TickParam';
            this._events = new Da(1e+400);
            this._multiplier = 1;
            ;
            const e = re(x1.getDefaults(), arguments, ['value']);
            this._multiplier = e.multiplier;
            this._events.cancel(0);
            this._events.add({
                ticks: 0,
                time: 0,
                type: 'setValueAtTime',
                value: this._fromType(e.value)
            });
            this.setValueAtTime(e.value, 0);
            ;
        }
        static getDefaults() {
            return Object.assign(ft.getDefaults(), {
                multiplier: 1,
                units: 'hertz',
                value: 1
            });
        }
        setTargetAtTime(e, n, r) {
            n = this.toSeconds(n);
            this.setRampPoint(n);
            ;
            const s = this._fromType(e), i = this._events.get(n), o = Math.round(Math.max(1 / r, 1));
            for (let a = 0; a <= o; a++) {
                const l = r * a + n, u = this._exponentialApproach(i.time, i.value, s, r, l);
                this.linearRampToValueAtTime(this._toType(u), l);
            }
            return this;
        }
        setValueAtTime(e, n) {
            const r = this.toSeconds(n);
            super.setValueAtTime(e, n);
            const s = this._events.get(r), i = this._events.previousEvent(s), o = this._getTicksUntilEvent(i, r);
            return s.ticks = Math.max(o, 0), this;
        }
        linearRampToValueAtTime(e, n) {
            const r = this.toSeconds(n);
            super.linearRampToValueAtTime(e, n);
            const s = this._events.get(r), i = this._events.previousEvent(s), o = this._getTicksUntilEvent(i, r);
            return s.ticks = Math.max(o, 0), this;
        }
        exponentialRampToValueAtTime(e, n) {
            n = this.toSeconds(n);
            const r = this._fromType(e), s = this._events.get(n), i = Math.round(Math.max((n - s.time) * 10, 1)), o = (n - s.time) / i;
            for (let a = 0; a <= i; a++) {
                const l = o * a + s.time, u = this._exponentialInterpolate(s.time, s.value, n, r, l);
                this.linearRampToValueAtTime(this._toType(u), l);
            }
            return this;
        }
        _getTicksUntilEvent(e, n) {
            if (e === null) {
                e = {
                    ticks: 0,
                    time: 0,
                    type: 'setValueAtTime',
                    value: 0
                };
            } else {
                if (As(e.ticks)) {
                    const o = this._events.previousEvent(e);
                    ;
                }
            }
            const r = this._fromType(this.getValueAtTime(e.time));
            let s = this._fromType(this.getValueAtTime(n));
            const i = this._events.get(n);
            return i && i.time === n && i.type === 'setValueAtTime' && (s = this._fromType(this.getValueAtTime(n - this.sampleTime))), 0.5 * (n - e.time) * (r + s) + e.ticks;
        }
        getTicksAtTime(e) {
            const n = this.toSeconds(e), r = this._events.get(n);
            return Math.max(this._getTicksUntilEvent(r, n), 0);
        }
        getDurationOfTicks(e, n) {
            const r = this.toSeconds(n), s = this.getTicksAtTime(n);
            return this.getTimeOfTick(s + e) - r;
        }
        getTimeOfTick(e) {
            const n = this._events.get(e, 'ticks'), r = this._events.getAfter(e, 'ticks');
            if (n && n.ticks === e) {
                return n.time;
            }
            if (n && r && r.type === 'linearRampToValueAtTime' && n.value !== r.value) {
                const s = this._fromType(this.getValueAtTime(n.time)), o = (this._fromType(this.getValueAtTime(r.time)) - s) / (r.time - n.time), a = Math.sqrt(Math.pow(s, 2) - 2 * o * (n.ticks - e)), l = (-s + a) / o, u = (-s - a) / o;
                return (l > 0 ? l : u) + n.time;
            } else {
                return n ? n.value === 0 ? null : n.time + (e - n.ticks) / n.value : e / this._initialValue;
            }
        }
        ticksToTime(e, n) {
            return this.getDurationOfTicks(e, n);
        }
        timeToTicks(e, n) {
            const r = this.toSeconds(n), s = this.toSeconds(e), i = this.getTicksAtTime(r);
            return this.getTicksAtTime(r + s) - i;
        }
        _fromType(e) {
            return this.units === 'bpm' && this.multiplier ? 1 / (60 / e / this.multiplier) : super._fromType(e);
        }
        _toType(e) {
            return this.units === 'bpm' && this.multiplier ? e / this.multiplier * 60 : super._toType(e);
        }
        get multiplier() {
            return this._multiplier;
        }
        set multiplier(e) {
            const n = this.value;
            this._multiplier = e;
            this.cancelScheduledValues(0);
            this.setValueAtTime(n, 0);
            ;
        }
    }
    class P1 extends Qe {
        constructor() {
            super(re(P1.getDefaults(), arguments, ['value']));
            this.name = 'TickSignal';
            ;
            const e = re(P1.getDefaults(), arguments, ['value']);
            this.input = this._param = new x1({
                context: this.context,
                convert: e.convert,
                multiplier: e.multiplier,
                param: this._constantSource.offset,
                units: e.units,
                value: e.value
            });
        }
        static getDefaults() {
            return Object.assign(Qe.getDefaults(), {
                multiplier: 1,
                units: 'hertz',
                value: 1
            });
        }
        ticksToTime(e, n) {
            return this._param.ticksToTime(e, n);
        }
        timeToTicks(e, n) {
            return this._param.timeToTicks(e, n);
        }
        getTimeOfTick(e) {
            return this._param.getTimeOfTick(e);
        }
        getDurationOfTicks(e, n) {
            return this._param.getDurationOfTicks(e, n);
        }
        getTicksAtTime(e) {
            return this._param.getTicksAtTime(e);
        }
        get multiplier() {
            return this._param.multiplier;
        }
        set multiplier(e) {
            this._param.multiplier = e;
        }
        dispose() {
            return super.dispose(), this._param.dispose(), this;
        }
    }
    class R1 extends Lr {
        constructor() {
            super(re(R1.getDefaults(), arguments, ['frequency']));
            this.name = 'TickSource';
            this._state = new c5();
            this._tickOffset = new Da();
            ;
            const e = re(R1.getDefaults(), arguments, ['frequency']);
            this.frequency = new P1({
                context: this.context,
                units: e.units,
                value: e.frequency
            });
            He(this, 'frequency');
            this._state.setStateAtTime('stopped', 0);
            this.setTicksAtTime(0, 0);
            ;
        }
        static getDefaults() {
            return Object.assign({
                frequency: 1,
                units: 'hertz'
            }, Lr.getDefaults());
        }
        get state() {
            return this.getStateAtTime(this.now());
        }
        start(e, n) {
            const r = this.toSeconds(e);
            return this._state.getValueAtTime(r) !== 'started' && (this._state.setStateAtTime('started', r), St(n) && this.setTicksAtTime(n, r)), this;
        }
        stop(e) {
            const n = this.toSeconds(e);
            if (this._state.getValueAtTime(n) === 'stopped') {
                const r = this._state.get(n);
                r && r.time > 0 && (this._tickOffset.cancel(r.time), this._state.cancel(r.time));
            }
            return this._state.cancel(n), this._state.setStateAtTime('stopped', n), this.setTicksAtTime(0, n), this;
        }
        pause(e) {
            const n = this.toSeconds(e);
            return this._state.getValueAtTime(n) === 'started' && this._state.setStateAtTime('paused', n), this;
        }
        cancel(e) {
            return e = this.toSeconds(e), this._state.cancel(e), this._tickOffset.cancel(e), this;
        }
        getTicksAtTime(e) {
            const n = this.toSeconds(e), r = this._state.getLastState('stopped', n), s = {
                    state: 'paused',
                    time: n
                };
            this._state.add(s);
            let i = r, o = 0;
            return this._state.forEachBetween(r.time, n + this.sampleTime, a => {
                let l = i.time;
                const u = this._tickOffset.get(a.time);
                u && u.time >= i.time && (o = u.ticks, l = u.time);
                i.state === 'started' && a.state !== 'started' && (o += this.frequency.getTicksAtTime(a.time) - this.frequency.getTicksAtTime(l));
                i = a;
                ;
            }), this._state.remove(s), o;
        }
        get ticks() {
            return this.getTicksAtTime(this.now());
        }
        set ticks(e) {
            this.setTicksAtTime(e, this.now());
        }
        get seconds() {
            return this.getSecondsAtTime(this.now());
        }
        set seconds(e) {
            const n = this.now(), r = this.frequency.timeToTicks(e, n);
            this.setTicksAtTime(r, n);
        }
        getSecondsAtTime(e) {
            e = this.toSeconds(e);
            const n = this._state.getLastState('stopped', e), r = {
                    state: 'paused',
                    time: e
                };
            this._state.add(r);
            let s = n, i = 0;
            return this._state.forEachBetween(n.time, e + this.sampleTime, o => {
                let a = s.time;
                const l = this._tickOffset.get(o.time);
                l && l.time >= s.time && (i = l.seconds, a = l.time);
                s.state === 'started' && o.state !== 'started' && (i += o.time - a);
                s = o;
                ;
            }), this._state.remove(r), i;
        }
        setTicksAtTime(e, n) {
            return n = this.toSeconds(n), this._tickOffset.cancel(n), this._tickOffset.add({
                seconds: this.frequency.getDurationOfTicks(e, n),
                ticks: e,
                time: n
            }), this;
        }
        getStateAtTime(e) {
            return e = this.toSeconds(e), this._state.getValueAtTime(e);
        }
        getTimeOfTick(e, n = this.now()) {
            const r = this._tickOffset.get(n), s = this._state.get(n), i = Math.max(r.time, s.time), o = this.frequency.getTicksAtTime(i) + e - r.ticks;
            return this.frequency.getTimeOfTick(o);
        }
        forEachTickBetween(e, n, r) {
            let s = this._state.get(e);
            this._state.forEachBetween(e, n, o => {
                s && s.state === 'started' && o.state !== 'started' && this.forEachTickBetween(Math.max(s.time, e), o.time - this.sampleTime, r);
                s = o;
                ;
            });
            let i = null;
            if (s && s.state === 'started') {
                const o = Math.max(s.time, e), a = this.frequency.getTicksAtTime(o), l = this.frequency.getTicksAtTime(s.time), u = a - l;
                let f = Math.ceil(u) - u;
                f = qs(f, 1) ? 0 : f;
                let d = this.frequency.getTimeOfTick(a + f);
                for (; d < n;) {
                    try {
                        r(d, Math.round(this.getTicksAtTime(d)));
                    } catch (p) {
                        i = p;
                        break;
                    }
                    d += this.frequency.getDurationOfTicks(1, d);
                }
            }
            if (i) {
                throw i;
            }
            return this;
        }
        dispose() {
            return super.dispose(), this._state.dispose(), this._tickOffset.dispose(), this.frequency.dispose(), this;
        }
    }
    class rf extends Lr {
        constructor() {
            super(re(rf.getDefaults(), arguments, [
                'callback',
                'frequency'
            ]));
            this.name = 'Clock';
            this.callback = _t;
            this._lastUpdate = 0;
            this._state = new c5('stopped');
            this._boundLoop = this._loop.bind(this);
            ;
            const e = re(rf.getDefaults(), arguments, [
                'callback',
                'frequency'
            ]);
            this.callback = e.callback;
            this._tickSource = new R1({
                context: this.context,
                frequency: e.frequency,
                units: e.units
            });
            this._lastUpdate = 0;
            this.frequency = this._tickSource.frequency;
            He(this, 'frequency');
            this._state.setStateAtTime('stopped', 0);
            this.context.on('tick', this._boundLoop);
            ;
        }
        static getDefaults() {
            return Object.assign(Lr.getDefaults(), {
                callback: _t,
                frequency: 1,
                units: 'hertz'
            });
        }
        get state() {
            return this._state.getValueAtTime(this.now());
        }
        start(e, n) {
            tI(this.context);
            const r = this.toSeconds(e);
            return this.log('start', r), this._state.getValueAtTime(r) !== 'started' && (this._state.setStateAtTime('started', r), this._tickSource.start(r, n), r < this._lastUpdate && this.emit('start', r, n)), this;
        }
        stop(e) {
            const n = this.toSeconds(e);
            return this.log('stop', n), this._state.cancel(n), this._state.setStateAtTime('stopped', n), this._tickSource.stop(n), n < this._lastUpdate && this.emit('stop', n), this;
        }
        pause(e) {
            const n = this.toSeconds(e);
            return this._state.getValueAtTime(n) === 'started' && (this._state.setStateAtTime('paused', n), this._tickSource.pause(n), n < this._lastUpdate && this.emit('pause', n)), this;
        }
        get ticks() {
            return Math.ceil(this.getTicksAtTime(this.now()));
        }
        set ticks(e) {
            this._tickSource.ticks = e;
        }
        get seconds() {
            return this._tickSource.seconds;
        }
        set seconds(e) {
            this._tickSource.seconds = e;
        }
        getSecondsAtTime(e) {
            return this._tickSource.getSecondsAtTime(e);
        }
        setTicksAtTime(e, n) {
            return this._tickSource.setTicksAtTime(e, n), this;
        }
        getTimeOfTick(e, n = this.now()) {
            return this._tickSource.getTimeOfTick(e, n);
        }
        getTicksAtTime(e) {
            return this._tickSource.getTicksAtTime(e);
        }
        nextTickTime(e, n) {
            const r = this.toSeconds(n), s = this.getTicksAtTime(r);
            return this._tickSource.getTimeOfTick(s + e, r);
        }
        _loop() {
            const e = this._lastUpdate, n = this.now();
            this._lastUpdate = n;
            this.log('loop', e, n);
            if (e !== n) {
                this._state.forEachBetween(e, n, r => {
                    switch (r.state) {
                    case 'started':
                        const s = this._tickSource.getTicksAtTime(r.time);
                        this.emit('start', r.time, s);
                        break;
                    case 'stopped':
                        r.time !== 0 && this.emit('stop', r.time);
                        break;
                    case 'paused':
                        this.emit('pause', r.time);
                        break;
                    }
                });
                this._tickSource.forEachTickBetween(e, n, (r, s) => {
                    this.callback(r, s);
                });
            }
            ;
        }
        getStateAtTime(e) {
            const n = this.toSeconds(e);
            return this._state.getValueAtTime(n);
        }
        dispose() {
            return super.dispose(), this.context.off('tick', this._boundLoop), this._tickSource.dispose(), this._state.dispose(), this;
        }
    }
    td.mixin(rf);
    class rs extends Ne {
        constructor() {
            super(re(rs.getDefaults(), arguments, [
                'delayTime',
                'maxDelay'
            ]));
            this.name = 'Delay';
            ;
            const e = re(rs.getDefaults(), arguments, [
                    'delayTime',
                    'maxDelay'
                ]), n = this.toSeconds(e.maxDelay);
            this._maxDelay = Math.max(n, this.toSeconds(e.delayTime));
            this._delayNode = this.input = this.output = this.context.createDelay(n);
            this.delayTime = new ft({
                context: this.context,
                param: this._delayNode.delayTime,
                units: 'time',
                value: e.delayTime,
                minValue: 0,
                maxValue: this.maxDelay
            });
            He(this, 'delayTime');
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), {
                delayTime: 0,
                maxDelay: 1
            });
        }
        get maxDelay() {
            return this._maxDelay;
        }
        dispose() {
            return super.dispose(), this._delayNode.disconnect(), this.delayTime.dispose(), this;
        }
    }
    class sd extends Eo {
        constructor() {
            super();
            this.name = 'ToneAudioBuffers';
            this._buffers = new Map();
            this._loadingCount = 0;
            ;
            const e = re(sd.getDefaults(), arguments, [
                'urls',
                'onload',
                'baseUrl'
            ], 'urls');
            this.baseUrl = e.baseUrl;
            Object.keys(e.urls).forEach(n => {
                this._loadingCount++;
                const r = e.urls[n];
                this.add(n, r, this._bufferLoaded.bind(this, e.onload), e.onerror);
            });
            ;
        }
        static getDefaults() {
            return {
                baseUrl: '',
                onerror: _t,
                onload: _t,
                urls: {}
            };
        }
        has(e) {
            return this._buffers.has(e.toString());
        }
        get(e) {
            return Xe(this.has(e), `ToneAudioBuffers has no buffer named: ${ e }`), this._buffers.get(e.toString());
        }
        _bufferLoaded(e) {
            this._loadingCount--;
            this._loadingCount === 0 && e && e();
            ;
        }
        get loaded() {
            return Array.from(this._buffers).every(([e, n]) => n.loaded);
        }
        add(e, n, r = _t, s = _t) {
            return Oi(n) ? this._buffers.set(e.toString(), new Pt(this.baseUrl + n, r, s)) : this._buffers.set(e.toString(), new Pt(n, r, s)), this;
        }
        dispose() {
            return super.dispose(), this._buffers.forEach(e => e.dispose()), this._buffers.clear(), this;
        }
    }
    class M1 extends Jn {
        constructor() {
            super(...arguments);
            this.name = 'MidiClass';
            this.defaultUnits = 'midi';
            ;
        }
        _frequencyToUnits(e) {
            return lc(super._frequencyToUnits(e));
        }
        _ticksToUnits(e) {
            return lc(super._ticksToUnits(e));
        }
        _beatsToUnits(e) {
            return lc(super._beatsToUnits(e));
        }
        _secondsToUnits(e) {
            return lc(super._secondsToUnits(e));
        }
        toMidi() {
            return this.valueOf();
        }
        toFrequency() {
            return hI(this.toMidi());
        }
        transpose(e) {
            return new M1(this.context, this.toMidi() + e);
        }
    }
    class ro extends Rh {
        constructor() {
            super(...arguments);
            this.name = 'Ticks';
            this.defaultUnits = 'i';
            ;
        }
        _now() {
            return this.context.transport.ticks;
        }
        _beatsToUnits(e) {
            return this._getPPQ() * e;
        }
        _secondsToUnits(e) {
            return Math.floor(e / (60 / this._getBpm()) * this._getPPQ());
        }
        _ticksToUnits(e) {
            return e;
        }
        toTicks() {
            return this.valueOf();
        }
        toSeconds() {
            return this.valueOf() / this._getPPQ() * (60 / this._getBpm());
        }
    }
    class zbe extends Lr {
        constructor() {
            super(...arguments);
            this.name = 'Draw';
            this.expiration = 0.25;
            this.anticipation = 0.008;
            this._events = new Da();
            this._boundDrawLoop = this._drawLoop.bind(this);
            this._animationFrame = -1;
            ;
        }
        schedule(e, n) {
            return this._events.add({
                callback: e,
                time: this.toSeconds(n)
            }), this._events.length === 1 && (this._animationFrame = requestAnimationFrame(this._boundDrawLoop)), this;
        }
        cancel(e) {
            return this._events.cancel(this.toSeconds(e)), this;
        }
        _drawLoop() {
            const e = this.context.currentTime;
            for (; this._events.length && this._events.peek().time - this.anticipation <= e;) {
                const n = this._events.shift();
                n && e - n.time <= this.expiration && n.callback();
            }
            this._events.length > 0 && (this._animationFrame = requestAnimationFrame(this._boundDrawLoop));
        }
        dispose() {
            return super.dispose(), this._events.dispose(), cancelAnimationFrame(this._animationFrame), this;
        }
    }
    bg(t => {
        ;
    });
    Eg(t => {
        t.draw.dispose();
    });
    class Ybe extends Eo {
        constructor() {
            super(...arguments);
            this.name = 'IntervalTimeline';
            this._root = null;
            this._length = 0;
            ;
        }
        add(e) {
            Xe(St(e.time), 'Events must have a time property');
            Xe(St(e.duration), 'Events must have a duration parameter');
            ;
            ;
            let n = new Kbe(e.time, e.time + e.duration, e);
            for (this._root === null ? this._root = n : this._root.insert(n), this._length++; n !== null;) {
                n.updateHeight();
                n.updateMax();
                this._rebalance(n);
                n = n.parent;
                ;
            }
            return this;
        }
        remove(e) {
            if (this._root !== null) {
                const n = [];
                this._root.search(e.time, n);
                for (const r of n)
                    if (r.event === e) {
                        this._removeNode(r);
                        this._length--;
                        ;
                        break;
                    }
            }
            return this;
        }
        get length() {
            return this._length;
        }
        cancel(e) {
            return this.forEachFrom(e, n => this.remove(n)), this;
        }
        _setRoot(e) {
            this._root = e;
            this._root !== null && (this._root.parent = null);
            ;
        }
        _replaceNodeInParent(e, n) {
            e.parent !== null ? (e.isLeftChild() ? e.parent.left = n : e.parent.right = n, this._rebalance(e.parent)) : this._setRoot(n);
        }
        _removeNode(e) {
            if (e.left === null && e.right === null) {
                this._replaceNodeInParent(e, null);
            } else {
                if (e.right === null) {
                    this._replaceNodeInParent(e, e.left);
                } else {
                    if (e.left === null) {
                        this._replaceNodeInParent(e, e.right);
                    } else {
                        const n = e.getBalance();
                        let r, s = null;
                        if (n > 0) {
                            if (e.left.right === null) {
                                r = e.left;
                                ;
                                s = r;
                                ;
                            } else {
                                for (r = e.left.right; r.right !== null;) {
                                    r = r.right;
                                }
                                r.parent && (r.parent.right = r.left, s = r.parent, r.left = e.left, r.right = e.right);
                            }
                        } else {
                            if (e.right.left === null) {
                                r = e.right;
                                ;
                                s = r;
                                ;
                            } else {
                                for (r = e.right.left; r.left !== null;) {
                                    r = r.left;
                                }
                                r.parent && (r.parent.left = r.right, s = r.parent, r.left = e.left, r.right = e.right);
                            }
                        }
                        e.parent !== null ? e.isLeftChild() ? e.parent.left = r : e.parent.right = r : this._setRoot(r);
                        s && this._rebalance(s);
                        ;
                    }
                }
            }
            e.dispose();
        }
        _rotateLeft(e) {
            const n = e.parent, r = e.isLeftChild(), s = e.right;
            s && (e.right = s.left, s.left = e);
            n !== null ? r ? n.left = s : n.right = s : this._setRoot(s);
            ;
        }
        _rotateRight(e) {
            const n = e.parent, r = e.isLeftChild(), s = e.left;
            s && (e.left = s.right, s.right = e);
            n !== null ? r ? n.left = s : n.right = s : this._setRoot(s);
            ;
        }
        _rebalance(e) {
            const n = e.getBalance();
            n > 1 && e.left ? e.left.getBalance() < 0 ? this._rotateLeft(e.left) : this._rotateRight(e) : n < -1 && e.right && (e.right.getBalance() > 0 ? this._rotateRight(e.right) : this._rotateLeft(e));
        }
        get(e) {
            if (this._root !== null) {
                const n = [];
                if (this._root.search(e, n), n.length > 0) {
                    let r = n[0];
                    for (let s = 1; s < n.length; s++) {
                        n[s].low > r.low && (r = n[s]);
                    }
                    return r.event;
                }
            }
            return null;
        }
        forEach(e) {
            if (this._root !== null) {
                const n = [];
                this._root.traverse(r => n.push(r));
                n.forEach(r => {
                    r.event && e(r.event);
                });
                ;
            }
            return this;
        }
        forEachAtTime(e, n) {
            if (this._root !== null) {
                const r = [];
                this._root.search(e, r);
                r.forEach(s => {
                    s.event && n(s.event);
                });
                ;
            }
            return this;
        }
        forEachFrom(e, n) {
            if (this._root !== null) {
                const r = [];
                this._root.searchAfter(e, r);
                r.forEach(s => {
                    s.event && n(s.event);
                });
                ;
            }
            return this;
        }
        dispose() {
            return super.dispose(), this._root !== null && this._root.traverse(e => e.dispose()), this._root = null, this;
        }
    }
    class Kbe {
        constructor(e, n, r) {
            this._left = null;
            this._right = null;
            this.parent = null;
            this.height = 0;
            this.event = r;
            this.low = e;
            this.high = n;
            this.max = this.high;
            ;
        }
        insert(e) {
            e.low <= this.low ? this.left === null ? this.left = e : this.left.insert(e) : this.right === null ? this.right = e : this.right.insert(e);
        }
        search(e, n) {
            if (e > this.max) {
                this.left !== null && this.left.search(e, n);
                this.low <= e && this.high > e && n.push(this);
                !(this.low > e) && this.right !== null && this.right.search(e, n);
            }
        }
        searchAfter(e, n) {
            if (this.low >= e) {
                n.push(this);
                this.left !== null && this.left.searchAfter(e, n);
            }
            this.right !== null && this.right.searchAfter(e, n);
            ;
        }
        traverse(e) {
            e(this);
            this.left !== null && this.left.traverse(e);
            this.right !== null && this.right.traverse(e);
            ;
        }
        updateHeight() {
            this.left !== null && this.right !== null ? this.height = Math.max(this.left.height, this.right.height) + 1 : this.right !== null ? this.height = this.right.height + 1 : this.left !== null ? this.height = this.left.height + 1 : this.height = 0;
        }
        updateMax() {
            this.max = this.high;
            this.left !== null && (this.max = Math.max(this.max, this.left.max));
            this.right !== null && (this.max = Math.max(this.max, this.right.max));
            ;
        }
        getBalance() {
            let e = 0;
            return this.left !== null && this.right !== null ? e = this.left.height - this.right.height : this.left !== null ? e = this.left.height + 1 : this.right !== null && (e = -(this.right.height + 1)), e;
        }
        isLeftChild() {
            return this.parent !== null && this.parent.left === this;
        }
        get left() {
            return this._left;
        }
        set left(e) {
            this._left = e;
            e !== null && (e.parent = this);
            this.updateHeight();
            this.updateMax();
            ;
        }
        get right() {
            return this._right;
        }
        set right(e) {
            this._right = e;
            e !== null && (e.parent = this);
            this.updateHeight();
            this.updateMax();
            ;
        }
        dispose() {
            this.parent = null;
            this._left = null;
            this._right = null;
            this.event = null;
            ;
        }
    }
    class Ai extends Ne {
        constructor() {
            super(re(Ai.getDefaults(), arguments, ['volume']));
            this.name = 'Volume';
            ;
            const e = re(Ai.getDefaults(), arguments, ['volume']);
            this.input = this.output = new je({
                context: this.context,
                gain: e.volume,
                units: 'decibels'
            });
            this.volume = this.output.gain;
            He(this, 'volume');
            this._unmutedVolume = e.volume;
            this.mute = e.mute;
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), {
                mute: false,
                volume: 0
            });
        }
        get mute() {
            return this.volume.value === -1e+400;
        }
        set mute(e) {
            !this.mute && e ? (this._unmutedVolume = this.volume.value, this.volume.value = -1e+400) : this.mute && !e && (this.volume.value = this._unmutedVolume);
        }
        dispose() {
            return super.dispose(), this.input.dispose(), this.volume.dispose(), this;
        }
    }
    class D1 extends Ne {
        constructor() {
            super(re(D1.getDefaults(), arguments));
            this.name = 'Destination';
            this.input = new Ai({ context: this.context });
            this.output = new je({ context: this.context });
            this.volume = this.input.volume;
            ;
            const e = re(D1.getDefaults(), arguments);
            Is(this.input, this.output, this.context.rawContext.destination);
            this.mute = e.mute;
            this._internalChannels = [
                this.input,
                this.context.rawContext.destination,
                this.output
            ];
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), {
                mute: false,
                volume: 0
            });
        }
        get mute() {
            return this.input.mute;
        }
        set mute(e) {
            this.input.mute = e;
        }
        chain(...e) {
            return this.input.disconnect(), e.unshift(this.input), e.push(this.output), Is(...e), this;
        }
        get maxChannelCount() {
            return this.context.rawContext.destination.maxChannelCount;
        }
        dispose() {
            return super.dispose(), this.volume.dispose(), this;
        }
    }
    bg(t => {
        ;
    });
    Eg(t => {
        t.destination.dispose();
    });
    class Zbe extends Eo {
        constructor(e) {
            super();
            this.name = 'TimelineValue';
            this._timeline = new Da({ memory: 10 });
            this._initialValue = e;
            ;
        }
        set(e, n) {
            return this._timeline.add({
                value: e,
                time: n
            }), this;
        }
        get(e) {
            const n = this._timeline.get(e);
            return n ? n.value : this._initialValue;
        }
    }
    class da {
        constructor(e, n) {
            this.id = da._eventId++;
            const r = Object.assign(da.getDefaults(), n);
            this.transport = e;
            this.callback = r.callback;
            this._once = r.once;
            this.time = r.time;
            ;
        }
        static getDefaults() {
            return {
                callback: _t,
                once: false,
                time: 0
            };
        }
        invoke(e) {
            this.callback && (this.callback(e), this._once && this.transport.clear(this.id));
        }
        dispose() {
            return this.callback = void 0, this;
        }
    }
    da._eventId = 0;
    class l5 extends da {
        constructor(e, n) {
            super(e, n);
            this._currentId = -1;
            this._nextId = -1;
            this._nextTick = this.time;
            this._boundRestart = this._restart.bind(this);
            ;
            const r = Object.assign(l5.getDefaults(), n);
            this.duration = new ro(e.context, r.duration).valueOf();
            this._interval = new ro(e.context, r.interval).valueOf();
            this._nextTick = r.time;
            this.transport.on('start', this._boundRestart);
            this.transport.on('loopStart', this._boundRestart);
            this.context = this.transport.context;
            this._restart();
            ;
        }
        static getDefaults() {
            return Object.assign({}, da.getDefaults(), {
                duration: 1e+400,
                interval: 1,
                once: false
            });
        }
        invoke(e) {
            this._createEvents(e);
            super.invoke(e);
            ;
        }
        _createEvents(e) {
            const n = this.transport.getTicksAtTime(e);
            n >= this.time && n >= this._nextTick && this._nextTick + this._interval < this.time + this.duration && (this._nextTick += this._interval, this._currentId = this._nextId, this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new ro(this.context, this._nextTick).toSeconds()));
        }
        _restart(e) {
            this.transport.clear(this._currentId);
            this.transport.clear(this._nextId);
            this._nextTick = this.time;
            ;
            const n = this.transport.getTicksAtTime(e);
            n > this.time && (this._nextTick = this.time + Math.ceil((n - this.time) / this._interval) * this._interval);
            this._currentId = this.transport.scheduleOnce(this.invoke.bind(this), new ro(this.context, this._nextTick).toSeconds());
            this._nextTick += this._interval;
            this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new ro(this.context, this._nextTick).toSeconds());
            ;
        }
        dispose() {
            return super.dispose(), this.transport.clear(this._currentId), this.transport.clear(this._nextId), this.transport.off('start', this._boundRestart), this.transport.off('loopStart', this._boundRestart), this;
        }
    }
    class sf extends Lr {
        constructor() {
            super(re(sf.getDefaults(), arguments));
            this.name = 'Transport';
            this._loop = new Zbe(false);
            this._loopStart = 0;
            this._loopEnd = 0;
            this._scheduledEvents = {};
            this._timeline = new Da();
            this._repeatedEvents = new Ybe();
            this._syncedSignals = [];
            this._swingAmount = 0;
            ;
            const e = re(sf.getDefaults(), arguments);
            this._ppq = e.ppq;
            this._clock = new rf({
                callback: this._processTick.bind(this),
                context: this.context,
                frequency: 0,
                units: 'bpm'
            });
            this._bindClockEvents();
            this.bpm = this._clock.frequency;
            this._clock.frequency.multiplier = e.ppq;
            this.bpm.setValueAtTime(e.bpm, 0);
            He(this, 'bpm');
            this._timeSignature = e.timeSignature;
            this._swingTicks = e.ppq / 2;
            ;
        }
        static getDefaults() {
            return Object.assign(Lr.getDefaults(), {
                bpm: 120,
                loopEnd: '4m',
                loopStart: 0,
                ppq: 192,
                swing: 0,
                swingSubdivision: '8n',
                timeSignature: 4
            });
        }
        _processTick(e, n) {
            if (this._loop.get(e) && n >= this._loopEnd && (this.emit('loopEnd', e), this._clock.setTicksAtTime(this._loopStart, e), n = this._loopStart, this.emit('loopStart', e, this._clock.getSecondsAtTime(e)), this.emit('loop', e)), this._swingAmount > 0 && n % this._ppq !== 0 && n % (this._swingTicks * 2) !== 0) {
                const r = n % (this._swingTicks * 2) / (this._swingTicks * 2), s = Math.sin(r * Math.PI) * this._swingAmount;
                e += new ro(this.context, this._swingTicks * 2 / 3).toSeconds() * s;
            }
            this._timeline.forEachAtTime(n, r => r.invoke(e));
        }
        schedule(e, n) {
            const r = new da(this, {
                callback: e,
                time: new Rh(this.context, n).toTicks()
            });
            return this._addEvent(r, this._timeline);
        }
        scheduleRepeat(e, n, r, s = 1e+400) {
            const i = new l5(this, {
                callback: e,
                duration: new Hs(this.context, s).toTicks(),
                interval: new Hs(this.context, n).toTicks(),
                time: new Rh(this.context, r).toTicks()
            });
            return this._addEvent(i, this._repeatedEvents);
        }
        scheduleOnce(e, n) {
            const r = new da(this, {
                callback: e,
                once: true,
                time: new Rh(this.context, n).toTicks()
            });
            return this._addEvent(r, this._timeline);
        }
        clear(e) {
            if (this._scheduledEvents.hasOwnProperty(e)) {
                const n = this._scheduledEvents[e.toString()];
                n.timeline.remove(n.event);
                n.event.dispose();
                delete this._scheduledEvents[e.toString()];
                ;
            }
            return this;
        }
        _addEvent(e, n) {
            return this._scheduledEvents[e.id.toString()] = {
                event: e,
                timeline: n
            }, n.add(e), e.id;
        }
        cancel(e = 0) {
            const n = this.toTicks(e);
            return this._timeline.forEachFrom(n, r => this.clear(r.id)), this._repeatedEvents.forEachFrom(n, r => this.clear(r.id)), this;
        }
        _bindClockEvents() {
            this._clock.on('start', (e, n) => {
                n = new ro(this.context, n).toSeconds();
                this.emit('start', e, n);
                ;
            });
            this._clock.on('stop', e => {
                this.emit('stop', e);
            });
            this._clock.on('pause', e => {
                this.emit('pause', e);
            });
            ;
        }
        get state() {
            return this._clock.getStateAtTime(this.now());
        }
        start(e, n) {
            let r;
            return St(n) && (r = this.toTicks(n)), this._clock.start(e, r), this;
        }
        stop(e) {
            return this._clock.stop(e), this;
        }
        pause(e) {
            return this._clock.pause(e), this;
        }
        toggle(e) {
            return e = this.toSeconds(e), this._clock.getStateAtTime(e) !== 'started' ? this.start(e) : this.stop(e), this;
        }
        get timeSignature() {
            return this._timeSignature;
        }
        set timeSignature(e) {
            ns(e) && (e = e[0] / e[1] * 4);
            this._timeSignature = e;
            ;
        }
        get loopStart() {
            return new Hs(this.context, this._loopStart, 'i').toSeconds();
        }
        set loopStart(e) {
            this._loopStart = this.toTicks(e);
        }
        get loopEnd() {
            return new Hs(this.context, this._loopEnd, 'i').toSeconds();
        }
        set loopEnd(e) {
            this._loopEnd = this.toTicks(e);
        }
        get loop() {
            return this._loop.get(this.now());
        }
        set loop(e) {
            this._loop.set(e, this.now());
        }
        setLoopPoints(e, n) {
            return this.loopStart = e, this.loopEnd = n, this;
        }
        get swing() {
            return this._swingAmount;
        }
        set swing(e) {
            this._swingAmount = e;
        }
        get swingSubdivision() {
            return new ro(this.context, this._swingTicks).toNotation();
        }
        set swingSubdivision(e) {
            this._swingTicks = this.toTicks(e);
        }
        get position() {
            const e = this.now(), n = this._clock.getTicksAtTime(e);
            return new ro(this.context, n).toBarsBeatsSixteenths();
        }
        set position(e) {
            const n = this.toTicks(e);
            this.ticks = n;
        }
        get seconds() {
            return this._clock.seconds;
        }
        set seconds(e) {
            const n = this.now(), r = this._clock.frequency.timeToTicks(e, n);
            this.ticks = r;
        }
        get progress() {
            if (this.loop) {
                const e = this.now();
                return (this._clock.getTicksAtTime(e) - this._loopStart) / (this._loopEnd - this._loopStart);
            } else {
                return 0;
            }
        }
        get ticks() {
            return this._clock.ticks;
        }
        set ticks(e) {
            if (this._clock.ticks !== e) {
                const n = this.now();
                if (this.state === 'started') {
                    const r = this._clock.getTicksAtTime(n), s = this._clock.frequency.getDurationOfTicks(Math.ceil(r) - r, n), i = n + s;
                    this.emit('stop', i);
                    this._clock.setTicksAtTime(e, i);
                    this.emit('start', i, this._clock.getSecondsAtTime(i));
                    ;
                } else {
                    this._clock.setTicksAtTime(e, n);
                }
            }
        }
        getTicksAtTime(e) {
            return Math.round(this._clock.getTicksAtTime(e));
        }
        getSecondsAtTime(e) {
            return this._clock.getSecondsAtTime(e);
        }
        get PPQ() {
            return this._clock.frequency.multiplier;
        }
        set PPQ(e) {
            this._clock.frequency.multiplier = e;
        }
        nextSubdivision(e) {
            if (e = this.toTicks(e), this.state !== 'started') {
                return 0;
            }
            {
                const n = this.now(), r = this.getTicksAtTime(n), s = e - r % e;
                return this._clock.nextTickTime(s, n);
            }
        }
        syncSignal(e, n) {
            if (!n) {
                const s = this.now();
                if (e.getValueAtTime(s) !== 0) {
                    const o = 1 / (60 / this.bpm.getValueAtTime(s) / this.PPQ);
                    n = e.getValueAtTime(s) / o;
                } else {
                    n = 0;
                }
            }
            const r = new je(n);
            return this.bpm.connect(r), r.connect(e._param), this._syncedSignals.push({
                initial: e.value,
                ratio: r,
                signal: e
            }), e.value = 0, this;
        }
        unsyncSignal(e) {
            for (let n = this._syncedSignals.length - 1; n >= 0; n--) {
                const r = this._syncedSignals[n];
                if (r.signal === e) {
                    r.ratio.dispose();
                    r.signal.value = r.initial;
                    this._syncedSignals.splice(n, 1);
                }
            }
            return this;
        }
        dispose() {
            return super.dispose(), this._clock.dispose(), rd(this, 'bpm'), this._timeline.dispose(), this._repeatedEvents.dispose(), this;
        }
    }
    td.mixin(sf);
    bg(t => {
        ;
    });
    Eg(t => {
        t.transport.dispose();
    });
    class Pn extends Ne {
        constructor(e) {
            super(e);
            this.input = void 0;
            this._state = new c5('stopped');
            this._synced = false;
            this._scheduled = [];
            this._syncedStart = _t;
            this._syncedStop = _t;
            this._state.memory = 100;
            this._state.increasing = true;
            this._volume = this.output = new Ai({
                context: this.context,
                mute: e.mute,
                volume: e.volume
            });
            this.volume = this._volume.volume;
            He(this, 'volume');
            this.onstop = e.onstop;
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), {
                mute: false,
                onstop: _t,
                volume: 0
            });
        }
        get state() {
            return this._synced ? this.context.transport.state === 'started' ? this._state.getValueAtTime(this.context.transport.seconds) : 'stopped' : this._state.getValueAtTime(this.now());
        }
        get mute() {
            return this._volume.mute;
        }
        set mute(e) {
            this._volume.mute = e;
        }
        _clampToCurrentTime(e) {
            return this._synced ? e : Math.max(e, this.context.currentTime);
        }
        start(e, n, r) {
            let s = As(e) && this._synced ? this.context.transport.seconds : this.toSeconds(e);
            if (s = this._clampToCurrentTime(s), !this._synced && this._state.getValueAtTime(s) === 'started') {
                Xe(I1(s, this._state.get(s).time), 'Start time must be strictly greater than previous start time');
                this._state.cancel(s);
                this._state.setStateAtTime('started', s);
                this.log('restart', s);
                this.restart(s, n, r);
                ;
            } else {
                if (this.log('start', s), this._state.setStateAtTime('started', s), this._synced) {
                    const i = this._state.get(s);
                    i && (i.offset = this.toSeconds($l(n, 0)), i.duration = r ? this.toSeconds(r) : void 0);
                    const o = this.context.transport.schedule(a => {
                        this._start(a, n, r);
                    }, s);
                    this._scheduled.push(o);
                    this.context.transport.state === 'started' && this.context.transport.getSecondsAtTime(this.immediate()) > s && this._syncedStart(this.now(), this.context.transport.seconds);
                    ;
                } else {
                    tI(this.context);
                    this._start(s, n, r);
                    ;
                }
            }
            return this;
        }
        stop(e) {
            let n = As(e) && this._synced ? this.context.transport.seconds : this.toSeconds(e);
            if (n = this._clampToCurrentTime(n), this._state.getValueAtTime(n) === 'started' || St(this._state.getNextState('started', n))) {
                if (this.log('stop', n), !this._synced) {
                    this._stop(n);
                } else {
                    const r = this.context.transport.schedule(this._stop.bind(this), n);
                    this._scheduled.push(r);
                }
                this._state.cancel(n);
                this._state.setStateAtTime('stopped', n);
                ;
            }
            return this;
        }
        restart(e, n, r) {
            return e = this.toSeconds(e), this._state.getValueAtTime(e) === 'started' && (this._state.cancel(e), this._restart(e, n, r)), this;
        }
        sync() {
            return this._synced || (this._synced = true, this._syncedStart = (e, n) => {
                if (n > 0) {
                    const r = this._state.get(n);
                    if (r && r.state === 'started' && r.time !== n) {
                        const s = n - this.toSeconds(r.time);
                        let i;
                        r.duration && (i = this.toSeconds(r.duration) - s);
                        this._start(e, this.toSeconds(r.offset) + s, i);
                        ;
                    }
                }
            }, this._syncedStop = e => {
                const n = this.context.transport.getSecondsAtTime(Math.max(e - this.sampleTime, 0));
                this._state.getValueAtTime(n) === 'started' && this._stop(e);
            }, this.context.transport.on('start', this._syncedStart), this.context.transport.on('loopStart', this._syncedStart), this.context.transport.on('stop', this._syncedStop), this.context.transport.on('pause', this._syncedStop), this.context.transport.on('loopEnd', this._syncedStop)), this;
        }
        unsync() {
            return this._synced && (this.context.transport.off('stop', this._syncedStop), this.context.transport.off('pause', this._syncedStop), this.context.transport.off('loopEnd', this._syncedStop), this.context.transport.off('start', this._syncedStart), this.context.transport.off('loopStart', this._syncedStart)), this._synced = false, this._scheduled.forEach(e => this.context.transport.clear(e)), this._scheduled = [], this._state.cancel(0), this._stop(0), this;
        }
        dispose() {
            return super.dispose(), this.onstop = _t, this.unsync(), this._volume.dispose(), this._state.dispose(), this;
        }
    }
    class Ci extends eu {
        constructor() {
            super(re(Ci.getDefaults(), arguments, [
                'url',
                'onload'
            ]));
            this.name = 'ToneBufferSource';
            this._source = this.context.createBufferSource();
            this._internalChannels = [this._source];
            this._sourceStarted = false;
            this._sourceStopped = false;
            ;
            const e = re(Ci.getDefaults(), arguments, [
                'url',
                'onload'
            ]);
            ks(this._source, this._gainNode);
            this._source.onended = () => this._stopSource();
            this.playbackRate = new ft({
                context: this.context,
                param: this._source.playbackRate,
                units: 'positive',
                value: e.playbackRate
            });
            this.loop = e.loop;
            this.loopStart = e.loopStart;
            this.loopEnd = e.loopEnd;
            this._buffer = new Pt(e.url, e.onload, e.onerror);
            this._internalChannels.push(this._source);
            ;
        }
        static getDefaults() {
            return Object.assign(eu.getDefaults(), {
                url: new Pt(),
                loop: false,
                loopEnd: 0,
                loopStart: 0,
                onload: _t,
                onerror: _t,
                playbackRate: 1
            });
        }
        get fadeIn() {
            return this._fadeIn;
        }
        set fadeIn(e) {
            this._fadeIn = e;
        }
        get fadeOut() {
            return this._fadeOut;
        }
        set fadeOut(e) {
            this._fadeOut = e;
        }
        get curve() {
            return this._curve;
        }
        set curve(e) {
            this._curve = e;
        }
        start(e, n, r, s = 1) {
            Xe(this.buffer.loaded, 'buffer is either not set or not loaded');
            const i = this.toSeconds(e);
            this._startGain(i, s);
            this.loop ? n = $l(n, this.loopStart) : n = $l(n, 0);
            ;
            let o = Math.max(this.toSeconds(n), 0);
            if (this.loop) {
                const a = this.toSeconds(this.loopEnd) || this.buffer.duration, l = this.toSeconds(this.loopStart), u = a - l;
                E2(o, a) && (o = (o - l) % u + l);
                qs(o, this.buffer.duration) && (o = 0);
                ;
            }
            if (this._source.buffer = this.buffer.get(), this._source.loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration, sI(o, this.buffer.duration) && (this._sourceStarted = true, this._source.start(i, o)), St(r)) {
                let a = this.toSeconds(r);
                a = Math.max(a, 0);
                this.stop(i + a);
                ;
            }
            return this;
        }
        _stopSource(e) {
            !this._sourceStopped && this._sourceStarted && (this._sourceStopped = true, this._source.stop(this.toSeconds(e)), this._onended());
        }
        get loopStart() {
            return this._source.loopStart;
        }
        set loopStart(e) {
            this._source.loopStart = this.toSeconds(e);
        }
        get loopEnd() {
            return this._source.loopEnd;
        }
        set loopEnd(e) {
            this._source.loopEnd = this.toSeconds(e);
        }
        get buffer() {
            return this._buffer;
        }
        set buffer(e) {
            this._buffer.set(e);
        }
        get loop() {
            return this._source.loop;
        }
        set loop(e) {
            this._source.loop = e;
            this._sourceStarted && this.cancelStop();
            ;
        }
        dispose() {
            return super.dispose(), this._source.onended = null, this._source.disconnect(), this._buffer.dispose(), this.playbackRate.dispose(), this;
        }
    }
    class pa extends Pn {
        constructor() {
            super(re(pa.getDefaults(), arguments, ['type']));
            this.name = 'Noise';
            this._source = null;
            ;
            const e = re(pa.getDefaults(), arguments, ['type']);
            this._playbackRate = e.playbackRate;
            this.type = e.type;
            this._fadeIn = e.fadeIn;
            this._fadeOut = e.fadeOut;
            ;
        }
        static getDefaults() {
            return Object.assign(Pn.getDefaults(), {
                fadeIn: 0,
                fadeOut: 0,
                playbackRate: 1,
                type: 'white'
            });
        }
        get type() {
            return this._type;
        }
        set type(e) {
            if (Xe(e in xw, 'Noise: invalid type: ' + e), this._type !== e && (this._type = e, this.state === 'started')) {
                const n = this.now();
                this._stop(n);
                this._start(n);
                ;
            }
        }
        get playbackRate() {
            return this._playbackRate;
        }
        set playbackRate(e) {
            this._playbackRate = e;
            this._source && (this._source.playbackRate.value = e);
            ;
        }
        _start(e) {
            const n = xw[this._type];
            this._source = new Ci({
                url: n,
                context: this.context,
                fadeIn: this._fadeIn,
                fadeOut: this._fadeOut,
                loop: true,
                onended: () => this.onstop(this),
                playbackRate: this._playbackRate
            }).connect(this.output);
            this._source.start(this.toSeconds(e), Math.random() * (n.duration - 0.001));
            ;
        }
        _stop(e) {
            this._source && (this._source.stop(this.toSeconds(e)), this._source = null);
        }
        get fadeIn() {
            return this._fadeIn;
        }
        set fadeIn(e) {
            this._fadeIn = e;
            this._source && (this._source.fadeIn = this._fadeIn);
            ;
        }
        get fadeOut() {
            return this._fadeOut;
        }
        set fadeOut(e) {
            this._fadeOut = e;
            this._source && (this._source.fadeOut = this._fadeOut);
            ;
        }
        _restart(e) {
            this._stop(e);
            this._start(e);
            ;
        }
        dispose() {
            return super.dispose(), this._source && this._source.disconnect(), this;
        }
    }
    const xw = {
        get brown() {
            if (!null) {
                const t = [];
                for (let e = 0; e < 2; e++) {
                    const n = new Float32Array(220500);
                    ;
                    let r = 0;
                    for (let s = 0; s < 220500; s++) {
                        const i = Math.random() * 2 - 1;
                        ;
                        r = n[s];
                        ;
                        ;
                    }
                }
                null = new Pt().fromArray(t);
            }
            return null;
        },
        get pink() {
            if (!null) {
                const t = [];
                for (let e = 0; e < 2; e++) {
                    const n = new Float32Array(220500);
                    ;
                    let r, s, i, o, a, l, u;
                    r = s = i = o = a = l = u = 0;
                    for (let f = 0; f < 220500; f++) {
                        const d = Math.random() * 2 - 1;
                        r = 0.99886 * r + d * 0.0555179;
                        s = 0.99332 * s + d * 0.0750759;
                        i = 0.969 * i + d * 0.153852;
                        o = 0.8665 * o + d * 0.3104856;
                        a = 0.55 * a + d * 0.5329522;
                        l = -0.7616 * l - d * 0.016898;
                        ;
                        ;
                        u = d * 0.115926;
                        ;
                    }
                }
                null = new Pt().fromArray(t);
            }
            return null;
        },
        get white() {
            if (!null) {
                const t = [];
                for (let e = 0; e < 2; e++) {
                    const n = new Float32Array(220500);
                    ;
                    for (let r = 0; r < 220500; r++) {
                        ;
                    }
                }
                null = new Pt().fromArray(t);
            }
            return null;
        }
    };
    function Fc(t, e) {
        return An(this, void 0, void 0, function* () {
            const n = e / t.context.sampleRate, r = new Tg(1, n, t.context.sampleRate);
            return new t.constructor(Object.assign(t.get(), {
                frequency: 2 / n,
                detune: 0,
                context: r
            })).toDestination().start(0), (yield r.render()).getChannelData(0);
        });
    }
    class of extends eu {
        constructor() {
            super(re(of.getDefaults(), arguments, [
                'frequency',
                'type'
            ]));
            this.name = 'ToneOscillatorNode';
            this._oscillator = this.context.createOscillator();
            this._internalChannels = [this._oscillator];
            ;
            const e = re(of.getDefaults(), arguments, [
                'frequency',
                'type'
            ]);
            ks(this._oscillator, this._gainNode);
            this.type = e.type;
            this.frequency = new ft({
                context: this.context,
                param: this._oscillator.frequency,
                units: 'frequency',
                value: e.frequency
            });
            this.detune = new ft({
                context: this.context,
                param: this._oscillator.detune,
                units: 'cents',
                value: e.detune
            });
            He(this, [
                'frequency',
                'detune'
            ]);
            ;
        }
        static getDefaults() {
            return Object.assign(eu.getDefaults(), {
                detune: 0,
                frequency: 440,
                type: 'sine'
            });
        }
        start(e) {
            const n = this.toSeconds(e);
            return this.log('start', n), this._startGain(n), this._oscillator.start(n), this;
        }
        _stopSource(e) {
            this._oscillator.stop(e);
        }
        setPeriodicWave(e) {
            return this._oscillator.setPeriodicWave(e), this;
        }
        get type() {
            return this._oscillator.type;
        }
        set type(e) {
            this._oscillator.type = e;
        }
        dispose() {
            return super.dispose(), this.state === 'started' && this.stop(), this._oscillator.disconnect(), this.frequency.dispose(), this.detune.dispose(), this;
        }
    }
    class ln extends Pn {
        constructor() {
            super(re(ln.getDefaults(), arguments, [
                'frequency',
                'type'
            ]));
            this.name = 'Oscillator';
            this._oscillator = null;
            ;
            const e = re(ln.getDefaults(), arguments, [
                'frequency',
                'type'
            ]);
            this.frequency = new Qe({
                context: this.context,
                units: 'frequency',
                value: e.frequency
            });
            He(this, 'frequency');
            this.detune = new Qe({
                context: this.context,
                units: 'cents',
                value: e.detune
            });
            He(this, 'detune');
            this._partials = e.partials;
            this._partialCount = e.partialCount;
            this._type = e.type;
            e.partialCount && e.type !== 'custom' && (this._type = this.baseType + e.partialCount.toString());
            this.phase = e.phase;
            ;
        }
        static getDefaults() {
            return Object.assign(Pn.getDefaults(), {
                detune: 0,
                frequency: 440,
                partialCount: 0,
                partials: [],
                phase: 0,
                type: 'sine'
            });
        }
        _start(e) {
            const n = this.toSeconds(e), r = new of({
                    context: this.context,
                    onended: () => this.onstop(this)
                });
            this._oscillator = r;
            this._wave ? this._oscillator.setPeriodicWave(this._wave) : this._oscillator.type = this._type;
            this._oscillator.connect(this.output);
            this.frequency.connect(this._oscillator.frequency);
            this.detune.connect(this._oscillator.detune);
            this._oscillator.start(n);
            ;
        }
        _stop(e) {
            const n = this.toSeconds(e);
            this._oscillator && this._oscillator.stop(n);
        }
        _restart(e) {
            const n = this.toSeconds(e);
            return this.log('restart', n), this._oscillator && this._oscillator.cancelStop(), this._state.cancel(n), this;
        }
        syncFrequency() {
            return this.context.transport.syncSignal(this.frequency), this;
        }
        unsyncFrequency() {
            return this.context.transport.unsyncSignal(this.frequency), this;
        }
        _getCachedPeriodicWave() {
            if (this._type === 'custom') {
                return ln._periodicWaveCache.find(n => n.phase === this._phase && $be(n.partials, this._partials));
            }
            {
                const e = ln._periodicWaveCache.find(n => n.type === this._type && n.phase === this._phase);
                return this._partialCount = e ? e.partialCount : this._partialCount, e;
            }
        }
        get type() {
            return this._type;
        }
        set type(e) {
            this._type = e;
            const n = [
                'sine',
                'square',
                'sawtooth',
                'triangle'
            ].indexOf(e) !== -1;
            if (this._phase === 0 && n) {
                this._wave = void 0;
                this._partialCount = 0;
                this._oscillator !== null && (this._oscillator.type = e);
                ;
            } else {
                const r = this._getCachedPeriodicWave();
                if (St(r)) {
                    const {
                        partials: s,
                        wave: i
                    } = r;
                    this._wave = i;
                    this._partials = s;
                    this._oscillator !== null && this._oscillator.setPeriodicWave(this._wave);
                    ;
                } else {
                    const [s, i] = this._getRealImaginary(e, this._phase), o = this.context.createPeriodicWave(s, i);
                    this._wave = o;
                    this._oscillator !== null && this._oscillator.setPeriodicWave(this._wave);
                    ln._periodicWaveCache.push({
                        imag: i,
                        partialCount: this._partialCount,
                        partials: this._partials,
                        phase: this._phase,
                        real: s,
                        type: this._type,
                        wave: this._wave
                    });
                    ln._periodicWaveCache.length > 100 && ln._periodicWaveCache.shift();
                    ;
                }
            }
        }
        get baseType() {
            return this._type.replace(this.partialCount.toString(), '');
        }
        set baseType(e) {
            this.partialCount && this._type !== 'custom' && e !== 'custom' ? this.type = e + this.partialCount : this.type = e;
        }
        get partialCount() {
            return this._partialCount;
        }
        set partialCount(e) {
            Xs(e, 0);
            let n = this._type;
            const r = /^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);
            if (r && (n = r[1]), this._type !== 'custom') {
                e === 0 ? this.type = n : this.type = n + e.toString();
            } else {
                const s = new Float32Array(e);
                this._partials.forEach((i, o) => s[o] = i);
                this._partials = Array.from(s);
                this.type = this._type;
                ;
            }
        }
        _getRealImaginary(e, n) {
            let s = 2048;
            const i = new Float32Array(s), o = new Float32Array(s);
            let a = 1;
            if (e === 'custom') {
                if (a = this._partials.length + 1, this._partialCount = this._partials.length, s = a, this._partials.length === 0) {
                    return [
                        i,
                        o
                    ];
                }
            } else {
                const l = /^(sine|triangle|square|sawtooth)(\d+)$/.exec(e);
                l ? (a = parseInt(l[2], 10) + 1, this._partialCount = parseInt(l[2], 10), e = l[1], a = Math.max(a, 2), s = a) : this._partialCount = 0;
                this._partials = [];
                ;
            }
            for (let l = 1; l < s; ++l) {
                const u = 2 / (l * Math.PI);
                let f;
                switch (e) {
                case 'sine':
                    f = l <= a ? 1 : 0, this._partials[l - 1] = f;
                    break;
                case 'square':
                    f = l & 1 ? 2 * u : 0, this._partials[l - 1] = f;
                    break;
                case 'sawtooth':
                    f = u * (l & 1 ? 1 : -1), this._partials[l - 1] = f;
                    break;
                case 'triangle':
                    l & 1 ? f = 2 * (u * u) * (l - 1 >> 1 & 1 ? -1 : 1) : f = 0, this._partials[l - 1] = f;
                    break;
                case 'custom':
                    f = this._partials[l - 1];
                    break;
                default:
                    throw new TypeError('Oscillator: invalid type: ' + e);
                }
                f !== 0 ? (i[l] = -f * Math.sin(n * l), o[l] = f * Math.cos(n * l)) : (i[l] = 0, o[l] = 0);
            }
            return [
                i,
                o
            ];
        }
        _inverseFFT(e, n, r) {
            let s = 0;
            const i = e.length;
            for (let o = 0; o < i; o++) {
                s += e[o] * Math.cos(o * r) + n[o] * Math.sin(o * r);
            }
            return s;
        }
        getInitialValue() {
            const [e, n] = this._getRealImaginary(this._type, 0);
            let r = 0;
            const s = Math.PI * 2;
            for (let o = 0; o < 32; o++) {
                r = Math.max(this._inverseFFT(e, n, o / 32 * s), r);
            }
            return Fbe(-this._inverseFFT(e, n, this._phase) / r, -1, 1);
        }
        get partials() {
            return this._partials.slice(0, this.partialCount);
        }
        set partials(e) {
            this._partials = e;
            this._partialCount = this._partials.length;
            e.length && (this.type = 'custom');
            ;
        }
        get phase() {
            return this._phase * (180 / Math.PI);
        }
        set phase(e) {
            this._phase = e * Math.PI / 180;
            this.type = this._type;
            ;
        }
        asArray(e = 1024) {
            return An(this, void 0, void 0, function* () {
                return Fc(this, e);
            });
        }
        dispose() {
            return super.dispose(), this._oscillator !== null && this._oscillator.dispose(), this._wave = void 0, this.frequency.dispose(), this.detune.dispose(), this;
        }
    }
    ln._periodicWaveCache = [];
    class os extends Ne {
        constructor() {
            super(Object.assign(re(os.getDefaults(), arguments, ['context'])));
        }
        connect(e, n = 0, r = 0) {
            return Og(this, e, n, r), this;
        }
    }
    class Qs extends os {
        constructor() {
            super(Object.assign(re(Qs.getDefaults(), arguments, [
                'mapping',
                'length'
            ])));
            this.name = 'WaveShaper';
            this._shaper = this.context.createWaveShaper();
            this.input = this._shaper;
            this.output = this._shaper;
            ;
            const e = re(Qs.getDefaults(), arguments, [
                'mapping',
                'length'
            ]);
            ns(e.mapping) || e.mapping instanceof Float32Array ? this.curve = Float32Array.from(e.mapping) : Ibe(e.mapping) && this.setMap(e.mapping, e.length);
        }
        static getDefaults() {
            return Object.assign(Qe.getDefaults(), { length: 1024 });
        }
        setMap(e, n = 1024) {
            const r = new Float32Array(n);
            for (let s = 0, i = n; s < i; s++) {
                const o = s / (i - 1) * 2 - 1;
                ;
            }
            return this.curve = r, this;
        }
        get curve() {
            return this._shaper.curve;
        }
        set curve(e) {
            this._shaper.curve = e;
        }
        get oversample() {
            return this._shaper.oversample;
        }
        set oversample(e) {
            const n = [
                'none',
                '2x',
                '4x'
            ].some(r => r.includes(e));
            Xe(n, 'oversampling must be either \'none\', \'2x\', or \'4x\'');
            this._shaper.oversample = e;
            ;
        }
        dispose() {
            return super.dispose(), this._shaper.disconnect(), this;
        }
    }
    class u5 extends os {
        constructor() {
            super(...arguments);
            this.name = 'AudioToGain';
            this._norm = new Qs({
                context: this.context,
                mapping: e => (e + 1) / 2
            });
            this.input = this._norm;
            this.output = this._norm;
            ;
        }
        dispose() {
            return super.dispose(), this._norm.dispose(), this;
        }
    }
    class hn extends Qe {
        constructor() {
            super(Object.assign(re(hn.getDefaults(), arguments, ['value'])));
            this.name = 'Multiply';
            this.override = false;
            ;
            const e = re(hn.getDefaults(), arguments, ['value']);
            this._mult = this.input = this.output = new je({
                context: this.context,
                minValue: e.minValue,
                maxValue: e.maxValue
            });
            this.factor = this._param = this._mult.gain;
            this.factor.setValueAtTime(e.value, 0);
            ;
        }
        static getDefaults() {
            return Object.assign(Qe.getDefaults(), { value: 0 });
        }
        dispose() {
            return super.dispose(), this._mult.dispose(), this;
        }
    }
    class af extends Pn {
        constructor() {
            super(re(af.getDefaults(), arguments, [
                'frequency',
                'type',
                'modulationType'
            ]));
            this.name = 'AMOscillator';
            this._modulationScale = new u5({ context: this.context });
            this._modulationNode = new je({ context: this.context });
            ;
            const e = re(af.getDefaults(), arguments, [
                'frequency',
                'type',
                'modulationType'
            ]);
            this._carrier = new ln({
                context: this.context,
                detune: e.detune,
                frequency: e.frequency,
                onstop: () => this.onstop(this),
                phase: e.phase,
                type: e.type
            });
            this.frequency = this._carrier.frequency;
            this.detune = this._carrier.detune;
            this._modulator = new ln({
                context: this.context,
                phase: e.phase,
                type: e.modulationType
            });
            this.harmonicity = new hn({
                context: this.context,
                units: 'positive',
                value: e.harmonicity
            });
            this.frequency.chain(this.harmonicity, this._modulator.frequency);
            this._modulator.chain(this._modulationScale, this._modulationNode.gain);
            this._carrier.chain(this._modulationNode, this.output);
            He(this, [
                'frequency',
                'detune',
                'harmonicity'
            ]);
            ;
        }
        static getDefaults() {
            return Object.assign(ln.getDefaults(), {
                harmonicity: 1,
                modulationType: 'square'
            });
        }
        _start(e) {
            this._modulator.start(e);
            this._carrier.start(e);
            ;
        }
        _stop(e) {
            this._modulator.stop(e);
            this._carrier.stop(e);
            ;
        }
        _restart(e) {
            this._modulator.restart(e);
            this._carrier.restart(e);
            ;
        }
        get type() {
            return this._carrier.type;
        }
        set type(e) {
            this._carrier.type = e;
        }
        get baseType() {
            return this._carrier.baseType;
        }
        set baseType(e) {
            this._carrier.baseType = e;
        }
        get partialCount() {
            return this._carrier.partialCount;
        }
        set partialCount(e) {
            this._carrier.partialCount = e;
        }
        get modulationType() {
            return this._modulator.type;
        }
        set modulationType(e) {
            this._modulator.type = e;
        }
        get phase() {
            return this._carrier.phase;
        }
        set phase(e) {
            this._carrier.phase = e;
            this._modulator.phase = e;
            ;
        }
        get partials() {
            return this._carrier.partials;
        }
        set partials(e) {
            this._carrier.partials = e;
        }
        asArray(e = 1024) {
            return An(this, void 0, void 0, function* () {
                return Fc(this, e);
            });
        }
        dispose() {
            return super.dispose(), this.frequency.dispose(), this.detune.dispose(), this.harmonicity.dispose(), this._carrier.dispose(), this._modulator.dispose(), this._modulationNode.dispose(), this._modulationScale.dispose(), this;
        }
    }
    class tu extends Pn {
        constructor() {
            super(re(tu.getDefaults(), arguments, [
                'frequency',
                'type',
                'modulationType'
            ]));
            this.name = 'FMOscillator';
            this._modulationNode = new je({
                context: this.context,
                gain: 0
            });
            ;
            const e = re(tu.getDefaults(), arguments, [
                'frequency',
                'type',
                'modulationType'
            ]);
            this._carrier = new ln({
                context: this.context,
                detune: e.detune,
                frequency: 0,
                onstop: () => this.onstop(this),
                phase: e.phase,
                type: e.type
            });
            this.detune = this._carrier.detune;
            this.frequency = new Qe({
                context: this.context,
                units: 'frequency',
                value: e.frequency
            });
            this._modulator = new ln({
                context: this.context,
                phase: e.phase,
                type: e.modulationType
            });
            this.harmonicity = new hn({
                context: this.context,
                units: 'positive',
                value: e.harmonicity
            });
            this.modulationIndex = new hn({
                context: this.context,
                units: 'positive',
                value: e.modulationIndex
            });
            this.frequency.connect(this._carrier.frequency);
            this.frequency.chain(this.harmonicity, this._modulator.frequency);
            this.frequency.chain(this.modulationIndex, this._modulationNode);
            this._modulator.connect(this._modulationNode.gain);
            this._modulationNode.connect(this._carrier.frequency);
            this._carrier.connect(this.output);
            this.detune.connect(this._modulator.detune);
            He(this, [
                'modulationIndex',
                'frequency',
                'detune',
                'harmonicity'
            ]);
            ;
        }
        static getDefaults() {
            return Object.assign(ln.getDefaults(), {
                harmonicity: 1,
                modulationIndex: 2,
                modulationType: 'square'
            });
        }
        _start(e) {
            this._modulator.start(e);
            this._carrier.start(e);
            ;
        }
        _stop(e) {
            this._modulator.stop(e);
            this._carrier.stop(e);
            ;
        }
        _restart(e) {
            return this._modulator.restart(e), this._carrier.restart(e), this;
        }
        get type() {
            return this._carrier.type;
        }
        set type(e) {
            this._carrier.type = e;
        }
        get baseType() {
            return this._carrier.baseType;
        }
        set baseType(e) {
            this._carrier.baseType = e;
        }
        get partialCount() {
            return this._carrier.partialCount;
        }
        set partialCount(e) {
            this._carrier.partialCount = e;
        }
        get modulationType() {
            return this._modulator.type;
        }
        set modulationType(e) {
            this._modulator.type = e;
        }
        get phase() {
            return this._carrier.phase;
        }
        set phase(e) {
            this._carrier.phase = e;
            this._modulator.phase = e;
            ;
        }
        get partials() {
            return this._carrier.partials;
        }
        set partials(e) {
            this._carrier.partials = e;
        }
        asArray(e = 1024) {
            return An(this, void 0, void 0, function* () {
                return Fc(this, e);
            });
        }
        dispose() {
            return super.dispose(), this.frequency.dispose(), this.harmonicity.dispose(), this._carrier.dispose(), this._modulator.dispose(), this._modulationNode.dispose(), this.modulationIndex.dispose(), this;
        }
    }
    class nu extends Pn {
        constructor() {
            super(re(nu.getDefaults(), arguments, [
                'frequency',
                'width'
            ]));
            this.name = 'PulseOscillator';
            this._widthGate = new je({
                context: this.context,
                gain: 0
            });
            this._thresh = new Qs({
                context: this.context,
                mapping: n => n <= 0 ? -1 : 1
            });
            ;
            const e = re(nu.getDefaults(), arguments, [
                'frequency',
                'width'
            ]);
            this.width = new Qe({
                context: this.context,
                units: 'audioRange',
                value: e.width
            });
            this._triangle = new ln({
                context: this.context,
                detune: e.detune,
                frequency: e.frequency,
                onstop: () => this.onstop(this),
                phase: e.phase,
                type: 'triangle'
            });
            this.frequency = this._triangle.frequency;
            this.detune = this._triangle.detune;
            this._triangle.chain(this._thresh, this.output);
            this.width.chain(this._widthGate, this._thresh);
            He(this, [
                'width',
                'frequency',
                'detune'
            ]);
            ;
        }
        static getDefaults() {
            return Object.assign(Pn.getDefaults(), {
                detune: 0,
                frequency: 440,
                phase: 0,
                type: 'pulse',
                width: 0.2
            });
        }
        _start(e) {
            e = this.toSeconds(e);
            this._triangle.start(e);
            this._widthGate.gain.setValueAtTime(1, e);
            ;
        }
        _stop(e) {
            e = this.toSeconds(e);
            this._triangle.stop(e);
            this._widthGate.gain.cancelScheduledValues(e);
            this._widthGate.gain.setValueAtTime(0, e);
            ;
        }
        _restart(e) {
            this._triangle.restart(e);
            this._widthGate.gain.cancelScheduledValues(e);
            this._widthGate.gain.setValueAtTime(1, e);
            ;
        }
        get phase() {
            return this._triangle.phase;
        }
        set phase(e) {
            this._triangle.phase = e;
        }
        get type() {
            return 'pulse';
        }
        get baseType() {
            return 'pulse';
        }
        get partials() {
            return [];
        }
        get partialCount() {
            return 0;
        }
        set carrierType(e) {
            this._triangle.type = e;
        }
        asArray(e = 1024) {
            return An(this, void 0, void 0, function* () {
                return Fc(this, e);
            });
        }
        dispose() {
            return super.dispose(), this._triangle.dispose(), this.width.dispose(), this._widthGate.dispose(), this._thresh.dispose(), this;
        }
    }
    class cf extends Pn {
        constructor() {
            super(re(cf.getDefaults(), arguments, [
                'frequency',
                'type',
                'spread'
            ]));
            this.name = 'FatOscillator';
            this._oscillators = [];
            ;
            const e = re(cf.getDefaults(), arguments, [
                'frequency',
                'type',
                'spread'
            ]);
            this.frequency = new Qe({
                context: this.context,
                units: 'frequency',
                value: e.frequency
            });
            this.detune = new Qe({
                context: this.context,
                units: 'cents',
                value: e.detune
            });
            this._spread = e.spread;
            this._type = e.type;
            this._phase = e.phase;
            this._partials = e.partials;
            this._partialCount = e.partialCount;
            this.count = e.count;
            He(this, [
                'frequency',
                'detune'
            ]);
            ;
        }
        static getDefaults() {
            return Object.assign(ln.getDefaults(), {
                count: 3,
                spread: 20,
                type: 'sawtooth'
            });
        }
        _start(e) {
            e = this.toSeconds(e);
            this._forEach(n => n.start(e));
            ;
        }
        _stop(e) {
            e = this.toSeconds(e);
            this._forEach(n => n.stop(e));
            ;
        }
        _restart(e) {
            this._forEach(n => n.restart(e));
        }
        _forEach(e) {
            for (let n = 0; n < this._oscillators.length; n++) {
                e(this._oscillators[n], n);
            }
        }
        get type() {
            return this._type;
        }
        set type(e) {
            this._type = e;
            this._forEach(n => n.type = e);
            ;
        }
        get spread() {
            return this._spread;
        }
        set spread(e) {
            if (this._spread = e, this._oscillators.length > 1) {
                const n = -e / 2, r = e / (this._oscillators.length - 1);
                this._forEach((s, i) => s.detune.value = n + r * i);
            }
        }
        get count() {
            return this._oscillators.length;
        }
        set count(e) {
            if (Xs(e, 1), this._oscillators.length !== e) {
                this._forEach(n => n.dispose());
                this._oscillators = [];
                ;
                for (let n = 0; n < e; n++) {
                    const r = new ln({
                        context: this.context,
                        volume: -6 - e * 1.1,
                        type: this._type,
                        phase: this._phase + n / e * 360,
                        partialCount: this._partialCount,
                        onstop: n === 0 ? () => this.onstop(this) : _t
                    });
                    this.type === 'custom' && (r.partials = this._partials);
                    this.frequency.connect(r.frequency);
                    this.detune.connect(r.detune);
                    r.detune.overridden = false;
                    r.connect(this.output);
                    this._oscillators[n] = r;
                    ;
                }
                this.spread = this._spread;
                this.state === 'started' && this._forEach(n => n.start());
                ;
            }
        }
        get phase() {
            return this._phase;
        }
        set phase(e) {
            this._phase = e;
            this._forEach((n, r) => n.phase = this._phase + r / this.count * 360);
            ;
        }
        get baseType() {
            return this._oscillators[0].baseType;
        }
        set baseType(e) {
            this._forEach(n => n.baseType = e);
            this._type = this._oscillators[0].type;
            ;
        }
        get partials() {
            return this._oscillators[0].partials;
        }
        set partials(e) {
            this._partials = e;
            this._partialCount = this._partials.length;
            e.length && (this._type = 'custom', this._forEach(n => n.partials = e));
            ;
        }
        get partialCount() {
            return this._oscillators[0].partialCount;
        }
        set partialCount(e) {
            this._partialCount = e;
            this._forEach(n => n.partialCount = e);
            this._type = this._oscillators[0].type;
            ;
        }
        asArray(e = 1024) {
            return An(this, void 0, void 0, function* () {
                return Fc(this, e);
            });
        }
        dispose() {
            return super.dispose(), this.frequency.dispose(), this.detune.dispose(), this._forEach(e => e.dispose()), this;
        }
    }
    class lf extends Pn {
        constructor() {
            super(re(lf.getDefaults(), arguments, [
                'frequency',
                'modulationFrequency'
            ]));
            this.name = 'PWMOscillator';
            this.sourceType = 'pwm';
            this._scale = new hn({
                context: this.context,
                value: 2
            });
            ;
            const e = re(lf.getDefaults(), arguments, [
                'frequency',
                'modulationFrequency'
            ]);
            this._pulse = new nu({
                context: this.context,
                frequency: e.modulationFrequency
            });
            this._pulse.carrierType = 'sine';
            this.modulationFrequency = this._pulse.frequency;
            this._modulator = new ln({
                context: this.context,
                detune: e.detune,
                frequency: e.frequency,
                onstop: () => this.onstop(this),
                phase: e.phase
            });
            this.frequency = this._modulator.frequency;
            this.detune = this._modulator.detune;
            this._modulator.chain(this._scale, this._pulse.width);
            this._pulse.connect(this.output);
            He(this, [
                'modulationFrequency',
                'frequency',
                'detune'
            ]);
            ;
        }
        static getDefaults() {
            return Object.assign(Pn.getDefaults(), {
                detune: 0,
                frequency: 440,
                modulationFrequency: 0.4,
                phase: 0,
                type: 'pwm'
            });
        }
        _start(e) {
            e = this.toSeconds(e);
            this._modulator.start(e);
            this._pulse.start(e);
            ;
        }
        _stop(e) {
            e = this.toSeconds(e);
            this._modulator.stop(e);
            this._pulse.stop(e);
            ;
        }
        _restart(e) {
            this._modulator.restart(e);
            this._pulse.restart(e);
            ;
        }
        get type() {
            return 'pwm';
        }
        get baseType() {
            return 'pwm';
        }
        get partials() {
            return [];
        }
        get partialCount() {
            return 0;
        }
        get phase() {
            return this._modulator.phase;
        }
        set phase(e) {
            this._modulator.phase = e;
        }
        asArray(e = 1024) {
            return An(this, void 0, void 0, function* () {
                return Fc(this, e);
            });
        }
        dispose() {
            return super.dispose(), this._pulse.dispose(), this._scale.dispose(), this._modulator.dispose(), this;
        }
    }
    const Pw = {
        am: af,
        fat: cf,
        fm: tu,
        oscillator: ln,
        pulse: nu,
        pwm: lf
    };
    class Ns extends Pn {
        constructor() {
            super(re(Ns.getDefaults(), arguments, [
                'frequency',
                'type'
            ]));
            this.name = 'OmniOscillator';
            ;
            const e = re(Ns.getDefaults(), arguments, [
                'frequency',
                'type'
            ]);
            this.frequency = new Qe({
                context: this.context,
                units: 'frequency',
                value: e.frequency
            });
            this.detune = new Qe({
                context: this.context,
                units: 'cents',
                value: e.detune
            });
            He(this, [
                'frequency',
                'detune'
            ]);
            this.set(e);
            ;
        }
        static getDefaults() {
            return Object.assign(ln.getDefaults(), tu.getDefaults(), af.getDefaults(), cf.getDefaults(), nu.getDefaults(), lf.getDefaults());
        }
        _start(e) {
            this._oscillator.start(e);
        }
        _stop(e) {
            this._oscillator.stop(e);
        }
        _restart(e) {
            return this._oscillator.restart(e), this;
        }
        get type() {
            let e = '';
            return [
                'am',
                'fm',
                'fat'
            ].some(n => this._sourceType === n) && (e = this._sourceType), e + this._oscillator.type;
        }
        set type(e) {
            e.substr(0, 2) === 'fm' ? (this._createNewOscillator('fm'), this._oscillator = this._oscillator, this._oscillator.type = e.substr(2)) : e.substr(0, 2) === 'am' ? (this._createNewOscillator('am'), this._oscillator = this._oscillator, this._oscillator.type = e.substr(2)) : e.substr(0, 3) === 'fat' ? (this._createNewOscillator('fat'), this._oscillator = this._oscillator, this._oscillator.type = e.substr(3)) : e === 'pwm' ? (this._createNewOscillator('pwm'), this._oscillator = this._oscillator) : e === 'pulse' ? this._createNewOscillator('pulse') : (this._createNewOscillator('oscillator'), this._oscillator = this._oscillator, this._oscillator.type = e);
        }
        get partials() {
            return this._oscillator.partials;
        }
        set partials(e) {
            !this._getOscType(this._oscillator, 'pulse') && !this._getOscType(this._oscillator, 'pwm') && (this._oscillator.partials = e);
        }
        get partialCount() {
            return this._oscillator.partialCount;
        }
        set partialCount(e) {
            !this._getOscType(this._oscillator, 'pulse') && !this._getOscType(this._oscillator, 'pwm') && (this._oscillator.partialCount = e);
        }
        set(e) {
            return Reflect.has(e, 'type') && e.type && (this.type = e.type), super.set(e), this;
        }
        _createNewOscillator(e) {
            if (e !== this._sourceType) {
                this._sourceType = e;
                const n = Pw[e], r = this.now();
                if (this._oscillator) {
                    const s = this._oscillator;
                    s.stop(r);
                    this.context.setTimeout(() => s.dispose(), this.blockTime);
                    ;
                }
                this._oscillator = new n({ context: this.context });
                this.frequency.connect(this._oscillator.frequency);
                this.detune.connect(this._oscillator.detune);
                this._oscillator.connect(this.output);
                this._oscillator.onstop = () => this.onstop(this);
                this.state === 'started' && this._oscillator.start(r);
                ;
            }
        }
        get phase() {
            return this._oscillator.phase;
        }
        set phase(e) {
            this._oscillator.phase = e;
        }
        get sourceType() {
            return this._sourceType;
        }
        set sourceType(e) {
            let n = 'sine';
            this._oscillator.type !== 'pwm' && this._oscillator.type !== 'pulse' && (n = this._oscillator.type);
            e === 'fm' ? this.type = 'fm' + n : e === 'am' ? this.type = 'am' + n : e === 'fat' ? this.type = 'fat' + n : e === 'oscillator' ? this.type = n : e === 'pulse' ? this.type = 'pulse' : e === 'pwm' && (this.type = 'pwm');
            ;
        }
        _getOscType(e, n) {
            return e instanceof Pw[n];
        }
        get baseType() {
            return this._oscillator.baseType;
        }
        set baseType(e) {
            !this._getOscType(this._oscillator, 'pulse') && !this._getOscType(this._oscillator, 'pwm') && e !== 'pulse' && e !== 'pwm' && (this._oscillator.baseType = e);
        }
        get width() {
            if (this._getOscType(this._oscillator, 'pulse')) {
                return this._oscillator.width;
            }
        }
        get count() {
            if (this._getOscType(this._oscillator, 'fat')) {
                return this._oscillator.count;
            }
        }
        set count(e) {
            this._getOscType(this._oscillator, 'fat') && ho(e) && (this._oscillator.count = e);
        }
        get spread() {
            if (this._getOscType(this._oscillator, 'fat')) {
                return this._oscillator.spread;
            }
        }
        set spread(e) {
            this._getOscType(this._oscillator, 'fat') && ho(e) && (this._oscillator.spread = e);
        }
        get modulationType() {
            if (this._getOscType(this._oscillator, 'fm') || this._getOscType(this._oscillator, 'am')) {
                return this._oscillator.modulationType;
            }
        }
        set modulationType(e) {
            (this._getOscType(this._oscillator, 'fm') || this._getOscType(this._oscillator, 'am')) && Oi(e) && (this._oscillator.modulationType = e);
        }
        get modulationIndex() {
            if (this._getOscType(this._oscillator, 'fm')) {
                return this._oscillator.modulationIndex;
            }
        }
        get harmonicity() {
            if (this._getOscType(this._oscillator, 'fm') || this._getOscType(this._oscillator, 'am')) {
                return this._oscillator.harmonicity;
            }
        }
        get modulationFrequency() {
            if (this._getOscType(this._oscillator, 'pwm')) {
                return this._oscillator.modulationFrequency;
            }
        }
        asArray(e = 1024) {
            return An(this, void 0, void 0, function* () {
                return Fc(this, e);
            });
        }
        dispose() {
            return super.dispose(), this.detune.dispose(), this.frequency.dispose(), this._oscillator.dispose(), this;
        }
    }
    class Lu extends Qe {
        constructor() {
            super(Object.assign(re(Lu.getDefaults(), arguments, ['value'])));
            this.override = false;
            this.name = 'Add';
            this._sum = new je({ context: this.context });
            this.input = this._sum;
            this.output = this._sum;
            this.addend = this._param;
            Is(this._constantSource, this._sum);
            ;
        }
        static getDefaults() {
            return Object.assign(Qe.getDefaults(), { value: 0 });
        }
        dispose() {
            return super.dispose(), this._sum.dispose(), this;
        }
    }
    class fo extends os {
        constructor() {
            super(Object.assign(re(fo.getDefaults(), arguments, [
                'min',
                'max'
            ])));
            this.name = 'Scale';
            ;
            const e = re(fo.getDefaults(), arguments, [
                'min',
                'max'
            ]);
            this._mult = this.input = new hn({
                context: this.context,
                value: e.max - e.min
            });
            this._add = this.output = new Lu({
                context: this.context,
                value: e.min
            });
            this._min = e.min;
            this._max = e.max;
            this.input.connect(this.output);
            ;
        }
        static getDefaults() {
            return Object.assign(os.getDefaults(), {
                max: 1,
                min: 0
            });
        }
        get min() {
            return this._min;
        }
        set min(e) {
            this._min = e;
            this._setRange();
            ;
        }
        get max() {
            return this._max;
        }
        set max(e) {
            this._max = e;
            this._setRange();
            ;
        }
        _setRange() {
            this._add.value = this._min;
            this._mult.value = this._max - this._min;
            ;
        }
        dispose() {
            return super.dispose(), this._add.dispose(), this._mult.dispose(), this;
        }
    }
    class h5 extends os {
        constructor() {
            super(Object.assign(re(h5.getDefaults(), arguments)));
            this.name = 'Zero';
            this._gain = new je({ context: this.context });
            this.output = this._gain;
            this.input = void 0;
            ks(this.context.getConstant(0), this._gain);
            ;
        }
        dispose() {
            return super.dispose(), fI(this.context.getConstant(0), this._gain), this;
        }
    }
    class Sr extends Ne {
        constructor() {
            super(re(Sr.getDefaults(), arguments, [
                'frequency',
                'min',
                'max'
            ]));
            this.name = 'LFO';
            this._stoppedValue = 0;
            this._units = 'number';
            this.convert = true;
            this._fromType = ft.prototype._fromType;
            this._toType = ft.prototype._toType;
            this._is = ft.prototype._is;
            this._clampValue = ft.prototype._clampValue;
            ;
            const e = re(Sr.getDefaults(), arguments, [
                'frequency',
                'min',
                'max'
            ]);
            this._oscillator = new ln(e);
            this.frequency = this._oscillator.frequency;
            this._amplitudeGain = new je({
                context: this.context,
                gain: e.amplitude,
                units: 'normalRange'
            });
            this.amplitude = this._amplitudeGain.gain;
            this._stoppedSignal = new Qe({
                context: this.context,
                units: 'audioRange',
                value: 0
            });
            this._zeros = new h5({ context: this.context });
            this._a2g = new u5({ context: this.context });
            this._scaler = this.output = new fo({
                context: this.context,
                max: e.max,
                min: e.min
            });
            this.units = e.units;
            this.min = e.min;
            this.max = e.max;
            this._oscillator.chain(this._amplitudeGain, this._a2g, this._scaler);
            this._zeros.connect(this._a2g);
            this._stoppedSignal.connect(this._a2g);
            He(this, [
                'amplitude',
                'frequency'
            ]);
            this.phase = e.phase;
            ;
        }
        static getDefaults() {
            return Object.assign(ln.getDefaults(), {
                amplitude: 1,
                frequency: '4n',
                max: 1,
                min: 0,
                type: 'sine',
                units: 'number'
            });
        }
        start(e) {
            return e = this.toSeconds(e), this._stoppedSignal.setValueAtTime(0, e), this._oscillator.start(e), this;
        }
        stop(e) {
            return e = this.toSeconds(e), this._stoppedSignal.setValueAtTime(this._stoppedValue, e), this._oscillator.stop(e), this;
        }
        sync() {
            return this._oscillator.sync(), this._oscillator.syncFrequency(), this;
        }
        unsync() {
            return this._oscillator.unsync(), this._oscillator.unsyncFrequency(), this;
        }
        _setStoppedValue() {
            this._stoppedValue = this._oscillator.getInitialValue();
            this._stoppedSignal.value = this._stoppedValue;
            ;
        }
        get min() {
            return this._toType(this._scaler.min);
        }
        set min(e) {
            e = this._fromType(e);
            this._scaler.min = e;
            ;
        }
        get max() {
            return this._toType(this._scaler.max);
        }
        set max(e) {
            e = this._fromType(e);
            this._scaler.max = e;
            ;
        }
        get type() {
            return this._oscillator.type;
        }
        set type(e) {
            this._oscillator.type = e;
            this._setStoppedValue();
            ;
        }
        get partials() {
            return this._oscillator.partials;
        }
        set partials(e) {
            this._oscillator.partials = e;
            this._setStoppedValue();
            ;
        }
        get phase() {
            return this._oscillator.phase;
        }
        set phase(e) {
            this._oscillator.phase = e;
            this._setStoppedValue();
            ;
        }
        get units() {
            return this._units;
        }
        set units(e) {
            const n = this.min, r = this.max;
            this._units = e;
            this.min = n;
            this.max = r;
            ;
        }
        get state() {
            return this._oscillator.state;
        }
        connect(e, n, r) {
            return (e instanceof ft || e instanceof Qe) && (this.convert = e.convert, this.units = e.units), Og(this, e, n, r), this;
        }
        dispose() {
            return super.dispose(), this._oscillator.dispose(), this._stoppedSignal.dispose(), this._zeros.dispose(), this._scaler.dispose(), this._a2g.dispose(), this._amplitudeGain.dispose(), this.amplitude.dispose(), this;
        }
    }
    function dI(t, e = 1e+400) {
        const n = new WeakMap();
        return function (r, s) {
            Reflect.defineProperty(r, s, {
                configurable: true,
                enumerable: true,
                get: function () {
                    return n.get(this);
                },
                set: function (i) {
                    Xs(i, t, e);
                    n.set(this, i);
                    ;
                }
            });
        };
    }
    function To(t, e = 1e+400) {
        const n = new WeakMap();
        return function (r, s) {
            Reflect.defineProperty(r, s, {
                configurable: true,
                enumerable: true,
                get: function () {
                    return n.get(this);
                },
                set: function (i) {
                    Xs(this.toSeconds(i), t, e);
                    n.set(this, i);
                    ;
                }
            });
        };
    }
    class kc extends Pn {
        constructor() {
            super(re(kc.getDefaults(), arguments, [
                'url',
                'onload'
            ]));
            this.name = 'Player';
            this._activeSources = new Set();
            ;
            const e = re(kc.getDefaults(), arguments, [
                'url',
                'onload'
            ]);
            this._buffer = new Pt({
                onload: this._onload.bind(this, e.onload),
                onerror: e.onerror,
                reverse: e.reverse,
                url: e.url
            });
            this.autostart = e.autostart;
            this._loop = e.loop;
            this._loopStart = e.loopStart;
            this._loopEnd = e.loopEnd;
            this._playbackRate = e.playbackRate;
            this.fadeIn = e.fadeIn;
            this.fadeOut = e.fadeOut;
            ;
        }
        static getDefaults() {
            return Object.assign(Pn.getDefaults(), {
                autostart: false,
                fadeIn: 0,
                fadeOut: 0,
                loop: false,
                loopEnd: 0,
                loopStart: 0,
                onload: _t,
                onerror: _t,
                playbackRate: 1,
                reverse: false
            });
        }
        load(e) {
            return An(this, void 0, void 0, function* () {
                return yield this._buffer.load(e), this._onload(), this;
            });
        }
        _onload(e = _t) {
            e();
            this.autostart && this.start();
            ;
        }
        _onSourceEnd(e) {
            this.onstop(this);
            this._activeSources.delete(e);
            this._activeSources.size === 0 && !this._synced && this._state.getValueAtTime(this.now()) === 'started' && (this._state.cancel(this.now()), this._state.setStateAtTime('stopped', this.now()));
            ;
        }
        start(e, n, r) {
            return super.start(e, n, r), this;
        }
        _start(e, n, r) {
            this._loop ? n = $l(n, this._loopStart) : n = $l(n, 0);
            const s = this.toSeconds(n), i = r;
            r = $l(r, Math.max(this._buffer.duration - s, 0));
            let o = this.toSeconds(r);
            o = o / this._playbackRate;
            e = this.toSeconds(e);
            ;
            const a = new Ci({
                url: this._buffer,
                context: this.context,
                fadeIn: this.fadeIn,
                fadeOut: this.fadeOut,
                loop: this._loop,
                loopEnd: this._loopEnd,
                loopStart: this._loopStart,
                onended: this._onSourceEnd.bind(this),
                playbackRate: this._playbackRate
            }).connect(this.output);
            !this._loop && !this._synced && (this._state.cancel(e + o), this._state.setStateAtTime('stopped', e + o, { implicitEnd: true }));
            this._activeSources.add(a);
            this._loop && As(i) ? a.start(e, s) : a.start(e, s, o - this.toSeconds(this.fadeOut));
            ;
        }
        _stop(e) {
            const n = this.toSeconds(e);
            this._activeSources.forEach(r => r.stop(n));
        }
        restart(e, n, r) {
            return super.restart(e, n, r), this;
        }
        _restart(e, n, r) {
            this._stop(e);
            this._start(e, n, r);
            ;
        }
        seek(e, n) {
            const r = this.toSeconds(n);
            if (this._state.getValueAtTime(r) === 'started') {
                const s = this.toSeconds(e);
                this._stop(r);
                this._start(r, s);
                ;
            }
            return this;
        }
        setLoopPoints(e, n) {
            return this.loopStart = e, this.loopEnd = n, this;
        }
        get loopStart() {
            return this._loopStart;
        }
        set loopStart(e) {
            this._loopStart = e;
            this.buffer.loaded && Xs(this.toSeconds(e), 0, this.buffer.duration);
            this._activeSources.forEach(n => {
                ;
            });
            ;
        }
        get loopEnd() {
            return this._loopEnd;
        }
        set loopEnd(e) {
            this._loopEnd = e;
            this.buffer.loaded && Xs(this.toSeconds(e), 0, this.buffer.duration);
            this._activeSources.forEach(n => {
                ;
            });
            ;
        }
        get buffer() {
            return this._buffer;
        }
        set buffer(e) {
            this._buffer.set(e);
        }
        get loop() {
            return this._loop;
        }
        set loop(e) {
            if (this._loop !== e && (this._loop = e, this._activeSources.forEach(n => {
                    ;
                }), e)) {
                const n = this._state.getNextState('stopped', this.now());
                n && this._state.cancel(n.time);
            }
        }
        get playbackRate() {
            return this._playbackRate;
        }
        set playbackRate(e) {
            this._playbackRate = e;
            const n = this.now(), r = this._state.getNextState('stopped', n);
            r && r.implicitEnd && (this._state.cancel(r.time), this._activeSources.forEach(s => s.cancelStop()));
            this._activeSources.forEach(s => {
                s.playbackRate.setValueAtTime(e, n);
            });
            ;
        }
        get reverse() {
            return this._buffer.reverse;
        }
        set reverse(e) {
            this._buffer.reverse = e;
        }
        get loaded() {
            return this._buffer.loaded;
        }
        dispose() {
            return super.dispose(), this._activeSources.forEach(e => e.dispose()), this._activeSources.clear(), this._buffer.dispose(), this;
        }
    }
    ii([To(0)], kc.prototype, 'fadeIn', void 0);
    ii([To(0)], kc.prototype, 'fadeOut', void 0);
    class uf extends Ne {
        constructor() {
            super(re(uf.getDefaults(), arguments, [
                'urls',
                'onload'
            ], 'urls'));
            this.name = 'Players';
            this.input = void 0;
            this._players = new Map();
            ;
            const e = re(uf.getDefaults(), arguments, [
                'urls',
                'onload'
            ], 'urls');
            this._volume = this.output = new Ai({
                context: this.context,
                volume: e.volume
            });
            this.volume = this._volume.volume;
            He(this, 'volume');
            this._buffers = new sd({
                urls: e.urls,
                onload: e.onload,
                baseUrl: e.baseUrl,
                onerror: e.onerror
            });
            this.mute = e.mute;
            this._fadeIn = e.fadeIn;
            this._fadeOut = e.fadeOut;
            ;
        }
        static getDefaults() {
            return Object.assign(Pn.getDefaults(), {
                baseUrl: '',
                fadeIn: 0,
                fadeOut: 0,
                mute: false,
                onload: _t,
                onerror: _t,
                urls: {},
                volume: 0
            });
        }
        get mute() {
            return this._volume.mute;
        }
        set mute(e) {
            this._volume.mute = e;
        }
        get fadeIn() {
            return this._fadeIn;
        }
        set fadeIn(e) {
            this._fadeIn = e;
            this._players.forEach(n => {
                ;
            });
            ;
        }
        get fadeOut() {
            return this._fadeOut;
        }
        set fadeOut(e) {
            this._fadeOut = e;
            this._players.forEach(n => {
                ;
            });
            ;
        }
        get state() {
            return Array.from(this._players).some(([n, r]) => r.state === 'started') ? 'started' : 'stopped';
        }
        has(e) {
            return this._buffers.has(e);
        }
        player(e) {
            if (Xe(this.has(e), `No Player with the name ${ e } exists on this object`), !this._players.has(e)) {
                const n = new kc({
                    context: this.context,
                    fadeIn: this._fadeIn,
                    fadeOut: this._fadeOut,
                    url: this._buffers.get(e)
                }).connect(this.output);
                this._players.set(e, n);
            }
            return this._players.get(e);
        }
        get loaded() {
            return this._buffers.loaded;
        }
        add(e, n, r) {
            return Xe(!this._buffers.has(e), 'A buffer with that name already exists on this object'), this._buffers.add(e, n, r), this;
        }
        stopAll(e) {
            return this._players.forEach(n => n.stop(e)), this;
        }
        dispose() {
            return super.dispose(), this._volume.dispose(), this.volume.dispose(), this._players.forEach(e => e.dispose()), this._buffers.dispose(), this;
        }
    }
    class Xbe extends os {
        constructor() {
            super(...arguments);
            this.name = 'Abs';
            this._abs = new Qs({
                context: this.context,
                mapping: e => Math.abs(e) < 0.001 ? 0 : Math.abs(e)
            });
            this.input = this._abs;
            this.output = this._abs;
            ;
        }
        dispose() {
            return super.dispose(), this._abs.dispose(), this;
        }
    }
    class Qbe extends os {
        constructor() {
            super(...arguments);
            this.name = 'GainToAudio';
            this._norm = new Qs({
                context: this.context,
                mapping: e => Math.abs(e) * 2 - 1
            });
            this.input = this._norm;
            this.output = this._norm;
            ;
        }
        dispose() {
            return super.dispose(), this._norm.dispose(), this;
        }
    }
    class pI extends os {
        constructor() {
            super(...arguments);
            this.name = 'Negate';
            this._multiply = new hn({
                context: this.context,
                value: -1
            });
            this.input = this._multiply;
            this.output = this._multiply;
            ;
        }
        dispose() {
            return super.dispose(), this._multiply.dispose(), this;
        }
    }
    class Fu extends Qe {
        constructor() {
            super(Object.assign(re(Fu.getDefaults(), arguments, ['value'])));
            this.override = false;
            this.name = 'Subtract';
            this._sum = new je({ context: this.context });
            this.input = this._sum;
            this.output = this._sum;
            this._neg = new pI({ context: this.context });
            this.subtrahend = this._param;
            Is(this._constantSource, this._neg, this._sum);
            ;
        }
        static getDefaults() {
            return Object.assign(Qe.getDefaults(), { value: 0 });
        }
        dispose() {
            return super.dispose(), this._neg.dispose(), this._sum.dispose(), this;
        }
    }
    class f5 extends os {
        constructor() {
            super(Object.assign(re(f5.getDefaults(), arguments)));
            this.name = 'GreaterThanZero';
            this._thresh = this.output = new Qs({
                context: this.context,
                length: 127,
                mapping: e => e <= 0 ? 0 : 1
            });
            this._scale = this.input = new hn({
                context: this.context,
                value: 10000
            });
            this._scale.connect(this._thresh);
            ;
        }
        dispose() {
            return super.dispose(), this._scale.dispose(), this._thresh.dispose(), this;
        }
    }
    class $1 extends Qe {
        constructor() {
            super(Object.assign(re($1.getDefaults(), arguments, ['value'])));
            this.name = 'GreaterThan';
            this.override = false;
            ;
            const e = re($1.getDefaults(), arguments, ['value']);
            this._subtract = this.input = new Fu({
                context: this.context,
                value: e.value
            });
            this._gtz = this.output = new f5({ context: this.context });
            this.comparator = this._param = this._subtract.subtrahend;
            He(this, 'comparator');
            this._subtract.connect(this._gtz);
            ;
        }
        static getDefaults() {
            return Object.assign(Qe.getDefaults(), { value: 0 });
        }
        dispose() {
            return super.dispose(), this._gtz.dispose(), this._subtract.dispose(), this.comparator.dispose(), this;
        }
    }
    class hf extends os {
        constructor() {
            super(Object.assign(re(hf.getDefaults(), arguments, ['value'])));
            this.name = 'Pow';
            ;
            const e = re(hf.getDefaults(), arguments, ['value']);
            this._exponentScaler = this.input = this.output = new Qs({
                context: this.context,
                mapping: this._expFunc(e.value),
                length: 8192
            });
            this._exponent = e.value;
            ;
        }
        static getDefaults() {
            return Object.assign(os.getDefaults(), { value: 1 });
        }
        _expFunc(e) {
            return n => Math.pow(Math.abs(n), e);
        }
        get value() {
            return this._exponent;
        }
        set value(e) {
            this._exponent = e;
            this._exponentScaler.setMap(this._expFunc(this._exponent));
            ;
        }
        dispose() {
            return super.dispose(), this._exponentScaler.dispose(), this;
        }
    }
    class L1 extends fo {
        constructor() {
            super(Object.assign(re(L1.getDefaults(), arguments, [
                'min',
                'max',
                'exponent'
            ])));
            this.name = 'ScaleExp';
            ;
            const e = re(L1.getDefaults(), arguments, [
                'min',
                'max',
                'exponent'
            ]);
            this.input = this._exp = new hf({
                context: this.context,
                value: e.exponent
            });
            this._exp.connect(this._mult);
            ;
        }
        static getDefaults() {
            return Object.assign(fo.getDefaults(), { exponent: 1 });
        }
        get exponent() {
            return this._exp.value;
        }
        set exponent(e) {
            this._exp.value = e;
        }
        dispose() {
            return super.dispose(), this._exp.dispose(), this;
        }
    }
    class nr extends Ne {
        constructor() {
            super(re(nr.getDefaults(), arguments, [
                'attack',
                'decay',
                'sustain',
                'release'
            ]));
            this.name = 'Envelope';
            this._sig = new Qe({
                context: this.context,
                value: 0
            });
            this.output = this._sig;
            this.input = void 0;
            ;
            const e = re(nr.getDefaults(), arguments, [
                'attack',
                'decay',
                'sustain',
                'release'
            ]);
            this.attack = e.attack;
            this.decay = e.decay;
            this.sustain = e.sustain;
            this.release = e.release;
            this.attackCurve = e.attackCurve;
            this.releaseCurve = e.releaseCurve;
            this.decayCurve = e.decayCurve;
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), {
                attack: 0.01,
                attackCurve: 'linear',
                decay: 0.1,
                decayCurve: 'exponential',
                release: 1,
                releaseCurve: 'exponential',
                sustain: 0.5
            });
        }
        get value() {
            return this.getValueAtTime(this.now());
        }
        _getCurve(e, n) {
            if (Oi(e)) {
                return e;
            }
            {
                let r;
                for (r in Ap)
                    if (Ap[r][n] === e) {
                        return r;
                    }
                return e;
            }
        }
        _setCurve(e, n, r) {
            if (Oi(r) && Reflect.has(Ap, r)) {
                const s = Ap[r];
                yc(s) ? e !== '_decayCurve' && (this[e] = s[n]) : this[e] = s;
            } else {
                if (ns(r) && e !== '_decayCurve') {
                    this[e] = r;
                } else {
                    throw new Error('Envelope: invalid curve: ' + r);
                }
            }
        }
        get attackCurve() {
            return this._getCurve(this._attackCurve, 'In');
        }
        set attackCurve(e) {
            this._setCurve('_attackCurve', 'In', e);
        }
        get releaseCurve() {
            return this._getCurve(this._releaseCurve, 'Out');
        }
        set releaseCurve(e) {
            this._setCurve('_releaseCurve', 'Out', e);
        }
        get decayCurve() {
            return this._decayCurve;
        }
        set decayCurve(e) {
            Xe([
                'linear',
                'exponential'
            ].some(n => n === e), `Invalid envelope curve: ${ e }`);
            this._decayCurve = e;
            ;
        }
        triggerAttack(e, n = 1) {
            this.log('triggerAttack', e, n);
            e = this.toSeconds(e);
            ;
            let s = this.toSeconds(this.attack);
            const i = this.toSeconds(this.decay), o = this.getValueAtTime(e);
            if (o > 0) {
                const a = 1 / s;
                s = (1 - o) / a;
            }
            if (s < this.sampleTime) {
                this._sig.cancelScheduledValues(e);
                this._sig.setValueAtTime(n, e);
                ;
            } else {
                if (this._attackCurve === 'linear') {
                    this._sig.linearRampTo(n, s, e);
                } else {
                    if (this._attackCurve === 'exponential') {
                        this._sig.targetRampTo(n, s, e);
                    } else {
                        this._sig.cancelAndHoldAtTime(e);
                        let a = this._attackCurve;
                        for (let l = 1; l < a.length; l++) {
                            if (a[l - 1] <= o && o <= a[l]) {
                                a = this._attackCurve.slice(l);
                                a[0] = o;
                                ;
                                break;
                            }
                        }
                        this._sig.setValueCurveAtTime(a, e, s, n);
                    }
                }
            }
            if (i && this.sustain < 1) {
                const a = n * this.sustain, l = e + s;
                this.log('decay', l);
                this._decayCurve === 'linear' ? this._sig.linearRampToValueAtTime(a, i + l) : this._sig.exponentialApproachValueAtTime(a, l, i);
                ;
            }
            return this;
        }
        triggerRelease(e) {
            this.log('triggerRelease', e);
            e = this.toSeconds(e);
            ;
            const n = this.getValueAtTime(e);
            if (n > 0) {
                const r = this.toSeconds(this.release);
                r < this.sampleTime ? this._sig.setValueAtTime(0, e) : this._releaseCurve === 'linear' ? this._sig.linearRampTo(0, r, e) : this._releaseCurve === 'exponential' ? this._sig.targetRampTo(0, r, e) : (Xe(ns(this._releaseCurve), 'releaseCurve must be either \'linear\', \'exponential\' or an array'), this._sig.cancelAndHoldAtTime(e), this._sig.setValueCurveAtTime(this._releaseCurve, e, r, n));
            }
            return this;
        }
        getValueAtTime(e) {
            return this._sig.getValueAtTime(e);
        }
        triggerAttackRelease(e, n, r = 1) {
            return n = this.toSeconds(n), this.triggerAttack(n, r), this.triggerRelease(n + this.toSeconds(e)), this;
        }
        cancel(e) {
            return this._sig.cancelScheduledValues(this.toSeconds(e)), this;
        }
        connect(e, n = 0, r = 0) {
            return Og(this, e, n, r), this;
        }
        asArray(e = 1024) {
            return An(this, void 0, void 0, function* () {
                const n = e / this.context.sampleRate, r = new Tg(1, n, this.context.sampleRate), s = this.toSeconds(this.attack) + this.toSeconds(this.decay), i = s + this.toSeconds(this.release), o = i * 0.1, a = i + o, l = new this.constructor(Object.assign(this.get(), {
                        attack: n * this.toSeconds(this.attack) / a,
                        decay: n * this.toSeconds(this.decay) / a,
                        release: n * this.toSeconds(this.release) / a,
                        context: r
                    }));
                return l._sig.toDestination(), l.triggerAttackRelease(n * (s + o) / a, 0), (yield r.render()).getChannelData(0);
            });
        }
        dispose() {
            return super.dispose(), this._sig.dispose(), this;
        }
    }
    ii([To(0)], nr.prototype, 'attack', void 0);
    ii([To(0)], nr.prototype, 'decay', void 0);
    ii([dI(0, 1)], nr.prototype, 'sustain', void 0);
    ii([To(0)], nr.prototype, 'release', void 0);
    const Ap = ((() => {
        let e, n;
        const r = [];
        for (e = 0; e < 128; e++) {
            ;
        }
        const s = [];
        for (e = 0; e < 127; e++) {
            n = e / 127;
            const p = Math.sin(n * (Math.PI * 2) * 6.4 - Math.PI / 2) + 1;
            ;
        }
        s[127] = 1;
        const o = [];
        for (e = 0; e < 128; e++) {
            ;
        }
        const l = [];
        for (e = 0; e < 128; e++) {
            n = e / 127;
            ;
            ;
        }
        const u = [];
        for (e = 0; e < 128; e++) {
            n = e / 127;
            const p = Math.pow(n, 3) * 4 + 0.2, _ = Math.cos(p * Math.PI * 2 * n);
            ;
        }
        function f(p) {
            const _ = new Array(p.length);
            for (let v = 0; v < p.length; v++) {
                _[v] = 1 - p[v];
            }
            return _;
        }
        function d(p) {
            return p.slice(0).reverse();
        }
        return {
            bounce: {
                In: f(u),
                Out: u
            },
            cosine: {
                In: r,
                Out: d(r)
            },
            exponential: 'exponential',
            linear: 'linear',
            ripple: {
                In: s,
                Out: f(s)
            },
            sine: {
                In: l,
                Out: f(l)
            },
            step: {
                In: o,
                Out: f(o)
            }
        };
    })());
    let Ii = class T2 extends Ne {
        constructor() {
            super(re(T2.getDefaults(), arguments));
            this._scheduledEvents = [];
            this._synced = false;
            this._original_triggerAttack = this.triggerAttack;
            this._original_triggerRelease = this.triggerRelease;
            ;
            const e = re(T2.getDefaults(), arguments);
            this._volume = this.output = new Ai({
                context: this.context,
                volume: e.volume
            });
            this.volume = this._volume.volume;
            He(this, 'volume');
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), { volume: 0 });
        }
        sync() {
            return this._syncState() && (this._syncMethod('triggerAttack', 1), this._syncMethod('triggerRelease', 0)), this;
        }
        _syncState() {
            let e = false;
            return this._synced || (this._synced = true, e = true), e;
        }
        _syncMethod(e, n) {
            const r = this['_original_' + e] = this[e];
            this[e] = (...s) => {
                const i = s[n], o = this.context.transport.schedule(a => {
                        ;
                        r.apply(this, s);
                        ;
                    }, i);
                this._scheduledEvents.push(o);
            };
        }
        unsync() {
            return this._scheduledEvents.forEach(e => this.context.transport.clear(e)), this._scheduledEvents = [], this._synced && (this._synced = false, this.triggerAttack = this._original_triggerAttack, this.triggerRelease = this._original_triggerRelease), this;
        }
        triggerAttackRelease(e, n, r, s) {
            const i = this.toSeconds(r), o = this.toSeconds(n);
            return this.triggerAttack(e, i, s), this.triggerRelease(i + o), this;
        }
        dispose() {
            return super.dispose(), this._volume.dispose(), this.unsync(), this._scheduledEvents = [], this;
        }
    };
    class er extends Ii {
        constructor() {
            super(re(er.getDefaults(), arguments));
            const e = re(er.getDefaults(), arguments);
            this.portamento = e.portamento;
            this.onsilence = e.onsilence;
            ;
        }
        static getDefaults() {
            return Object.assign(Ii.getDefaults(), {
                detune: 0,
                onsilence: _t,
                portamento: 0
            });
        }
        triggerAttack(e, n, r = 1) {
            this.log('triggerAttack', e, n, r);
            const s = this.toSeconds(n);
            return this._triggerEnvelopeAttack(s, r), this.setNote(e, s), this;
        }
        triggerRelease(e) {
            this.log('triggerRelease', e);
            const n = this.toSeconds(e);
            return this._triggerEnvelopeRelease(n), this;
        }
        setNote(e, n) {
            const r = this.toSeconds(n), s = e instanceof Jn ? e.toFrequency() : e;
            if (this.portamento > 0 && this.getLevelAtTime(r) > 0.05) {
                const i = this.toSeconds(this.portamento);
                this.frequency.exponentialRampTo(s, i, r);
            } else {
                this.frequency.setValueAtTime(s, r);
            }
            return this;
        }
    }
    ii([To(0)], er.prototype, 'portamento', void 0);
    class id extends nr {
        constructor() {
            super(re(id.getDefaults(), arguments, [
                'attack',
                'decay',
                'sustain',
                'release'
            ]));
            this.name = 'AmplitudeEnvelope';
            this._gainNode = new je({
                context: this.context,
                gain: 0
            });
            this.output = this._gainNode;
            this.input = this._gainNode;
            this._sig.connect(this._gainNode.gain);
            this.output = this._gainNode;
            this.input = this._gainNode;
            ;
        }
        dispose() {
            return super.dispose(), this._gainNode.dispose(), this;
        }
    }
    class ki extends er {
        constructor() {
            super(re(ki.getDefaults(), arguments));
            this.name = 'Synth';
            ;
            const e = re(ki.getDefaults(), arguments);
            this.oscillator = new Ns(Object.assign({
                context: this.context,
                detune: e.detune,
                onstop: () => this.onsilence(this)
            }, e.oscillator));
            this.frequency = this.oscillator.frequency;
            this.detune = this.oscillator.detune;
            this.envelope = new id(Object.assign({ context: this.context }, e.envelope));
            this.oscillator.chain(this.envelope, this.output);
            He(this, [
                'oscillator',
                'frequency',
                'detune',
                'envelope'
            ]);
            ;
        }
        static getDefaults() {
            return Object.assign(er.getDefaults(), {
                envelope: Object.assign(ur(nr.getDefaults(), Object.keys(Ne.getDefaults())), {
                    attack: 0.005,
                    decay: 0.1,
                    release: 1,
                    sustain: 0.3
                }),
                oscillator: Object.assign(ur(Ns.getDefaults(), [
                    ...Object.keys(Pn.getDefaults()),
                    'frequency',
                    'detune'
                ]), { type: 'triangle' })
            });
        }
        _triggerEnvelopeAttack(e, n) {
            if (this.envelope.triggerAttack(e, n), this.oscillator.start(e), this.envelope.sustain === 0) {
                const r = this.toSeconds(this.envelope.attack), s = this.toSeconds(this.envelope.decay);
                this.oscillator.stop(e + r + s);
            }
        }
        _triggerEnvelopeRelease(e) {
            this.envelope.triggerRelease(e);
            this.oscillator.stop(e + this.toSeconds(this.envelope.release));
            ;
        }
        getLevelAtTime(e) {
            return e = this.toSeconds(e), this.envelope.getValueAtTime(e);
        }
        dispose() {
            return super.dispose(), this.oscillator.dispose(), this.envelope.dispose(), this;
        }
    }
    class ru extends er {
        constructor() {
            super(re(ru.getDefaults(), arguments));
            this.name = 'ModulationSynth';
            ;
            const e = re(ru.getDefaults(), arguments);
            this._carrier = new ki({
                context: this.context,
                oscillator: e.oscillator,
                envelope: e.envelope,
                onsilence: () => this.onsilence(this),
                volume: -10
            });
            this._modulator = new ki({
                context: this.context,
                oscillator: e.modulation,
                envelope: e.modulationEnvelope,
                volume: -10
            });
            this.oscillator = this._carrier.oscillator;
            this.envelope = this._carrier.envelope;
            this.modulation = this._modulator.oscillator;
            this.modulationEnvelope = this._modulator.envelope;
            this.frequency = new Qe({
                context: this.context,
                units: 'frequency'
            });
            this.detune = new Qe({
                context: this.context,
                value: e.detune,
                units: 'cents'
            });
            this.harmonicity = new hn({
                context: this.context,
                value: e.harmonicity,
                minValue: 0
            });
            this._modulationNode = new je({
                context: this.context,
                gain: 0
            });
            He(this, [
                'frequency',
                'harmonicity',
                'oscillator',
                'envelope',
                'modulation',
                'modulationEnvelope',
                'detune'
            ]);
            ;
        }
        static getDefaults() {
            return Object.assign(er.getDefaults(), {
                harmonicity: 3,
                oscillator: Object.assign(ur(Ns.getDefaults(), [
                    ...Object.keys(Pn.getDefaults()),
                    'frequency',
                    'detune'
                ]), { type: 'sine' }),
                envelope: Object.assign(ur(nr.getDefaults(), Object.keys(Ne.getDefaults())), {
                    attack: 0.01,
                    decay: 0.01,
                    sustain: 1,
                    release: 0.5
                }),
                modulation: Object.assign(ur(Ns.getDefaults(), [
                    ...Object.keys(Pn.getDefaults()),
                    'frequency',
                    'detune'
                ]), { type: 'square' }),
                modulationEnvelope: Object.assign(ur(nr.getDefaults(), Object.keys(Ne.getDefaults())), {
                    attack: 0.5,
                    decay: 0,
                    sustain: 1,
                    release: 0.5
                })
            });
        }
        _triggerEnvelopeAttack(e, n) {
            this._carrier._triggerEnvelopeAttack(e, n);
            this._modulator._triggerEnvelopeAttack(e, n);
            ;
        }
        _triggerEnvelopeRelease(e) {
            return this._carrier._triggerEnvelopeRelease(e), this._modulator._triggerEnvelopeRelease(e), this;
        }
        getLevelAtTime(e) {
            return e = this.toSeconds(e), this.envelope.getValueAtTime(e);
        }
        dispose() {
            return super.dispose(), this._carrier.dispose(), this._modulator.dispose(), this.frequency.dispose(), this.detune.dispose(), this.harmonicity.dispose(), this._modulationNode.dispose(), this;
        }
    }
    class Ag extends ru {
        constructor() {
            super(re(Ag.getDefaults(), arguments));
            this.name = 'AMSynth';
            this._modulationScale = new u5({ context: this.context });
            this.frequency.connect(this._carrier.frequency);
            this.frequency.chain(this.harmonicity, this._modulator.frequency);
            this.detune.fan(this._carrier.detune, this._modulator.detune);
            this._modulator.chain(this._modulationScale, this._modulationNode.gain);
            this._carrier.chain(this._modulationNode, this.output);
            ;
        }
        dispose() {
            return super.dispose(), this._modulationScale.dispose(), this;
        }
    }
    class ff extends Ne {
        constructor() {
            super(re(ff.getDefaults(), arguments, [
                'frequency',
                'type'
            ]));
            this.name = 'BiquadFilter';
            ;
            const e = re(ff.getDefaults(), arguments, [
                'frequency',
                'type'
            ]);
            this._filter = this.context.createBiquadFilter();
            this.input = this.output = this._filter;
            this.Q = new ft({
                context: this.context,
                units: 'number',
                value: e.Q,
                param: this._filter.Q
            });
            this.frequency = new ft({
                context: this.context,
                units: 'frequency',
                value: e.frequency,
                param: this._filter.frequency
            });
            this.detune = new ft({
                context: this.context,
                units: 'cents',
                value: e.detune,
                param: this._filter.detune
            });
            this.gain = new ft({
                context: this.context,
                units: 'decibels',
                convert: false,
                value: e.gain,
                param: this._filter.gain
            });
            this.type = e.type;
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), {
                Q: 1,
                type: 'lowpass',
                frequency: 350,
                detune: 0,
                gain: 0
            });
        }
        get type() {
            return this._filter.type;
        }
        set type(e) {
            Xe([
                'lowpass',
                'highpass',
                'bandpass',
                'lowshelf',
                'highshelf',
                'notch',
                'allpass',
                'peaking'
            ].indexOf(e) !== -1, `Invalid filter type: ${ e }`);
            this._filter.type = e;
            ;
        }
        getFrequencyResponse(e = 128) {
            const n = new Float32Array(e);
            for (let o = 0; o < e; o++) {
                const l = Math.pow(o / e, 2) * 19980 + 20;
                ;
            }
            const r = new Float32Array(e), s = new Float32Array(e), i = this.context.createBiquadFilter();
            return i.type = this.type, i.Q.value = this.Q.value, i.frequency.value = this.frequency.value, i.gain.value = this.gain.value, i.getFrequencyResponse(n, r, s), r;
        }
        dispose() {
            return super.dispose(), this._filter.disconnect(), this.Q.dispose(), this.frequency.dispose(), this.gain.dispose(), this.detune.dispose(), this;
        }
    }
    class Dr extends Ne {
        constructor() {
            super(re(Dr.getDefaults(), arguments, [
                'frequency',
                'type',
                'rolloff'
            ]));
            this.name = 'Filter';
            this.input = new je({ context: this.context });
            this.output = new je({ context: this.context });
            this._filters = [];
            ;
            const e = re(Dr.getDefaults(), arguments, [
                'frequency',
                'type',
                'rolloff'
            ]);
            this._filters = [];
            this.Q = new Qe({
                context: this.context,
                units: 'positive',
                value: e.Q
            });
            this.frequency = new Qe({
                context: this.context,
                units: 'frequency',
                value: e.frequency
            });
            this.detune = new Qe({
                context: this.context,
                units: 'cents',
                value: e.detune
            });
            this.gain = new Qe({
                context: this.context,
                units: 'decibels',
                convert: false,
                value: e.gain
            });
            this._type = e.type;
            this.rolloff = e.rolloff;
            He(this, [
                'detune',
                'frequency',
                'gain',
                'Q'
            ]);
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), {
                Q: 1,
                detune: 0,
                frequency: 350,
                gain: 0,
                rolloff: -12,
                type: 'lowpass'
            });
        }
        get type() {
            return this._type;
        }
        set type(e) {
            Xe([
                'lowpass',
                'highpass',
                'bandpass',
                'lowshelf',
                'highshelf',
                'notch',
                'allpass',
                'peaking'
            ].indexOf(e) !== -1, `Invalid filter type: ${ e }`);
            this._type = e;
            this._filters.forEach(r => r.type = e);
            ;
        }
        get rolloff() {
            return this._rolloff;
        }
        set rolloff(e) {
            const n = ho(e) ? e : parseInt(e, 10), r = [
                    -12,
                    -24,
                    -48,
                    -96
                ];
            let s = r.indexOf(n);
            Xe(s !== -1, `rolloff can only be ${ r.join(', ') }`);
            s += 1;
            this._rolloff = n;
            this.input.disconnect();
            this._filters.forEach(i => i.disconnect());
            this._filters = new Array(s);
            ;
            for (let i = 0; i < s; i++) {
                const o = new ff({ context: this.context });
                ;
                this.frequency.connect(o.frequency);
                this.detune.connect(o.detune);
                this.Q.connect(o.Q);
                this.gain.connect(o.gain);
                this._filters[i] = o;
                ;
            }
            this._internalChannels = this._filters;
            Is(this.input, ...this._internalChannels, this.output);
            ;
        }
        getFrequencyResponse(e = 128) {
            const n = new ff({
                    frequency: this.frequency.value,
                    gain: this.gain.value,
                    Q: this.Q.value,
                    type: this._type,
                    detune: this.detune.value
                }), r = new Float32Array(e).map(() => 1);
            return this._filters.forEach(() => {
                n.getFrequencyResponse(e).forEach((i, o) => r[o] *= i);
            }), n.dispose(), r;
        }
        dispose() {
            return super.dispose(), this._filters.forEach(e => {
                e.dispose();
            }), rd(this, [
                'detune',
                'frequency',
                'gain',
                'Q'
            ]), this.frequency.dispose(), this.Q.dispose(), this.detune.dispose(), this.gain.dispose(), this;
        }
    }
    class df extends nr {
        constructor() {
            super(re(df.getDefaults(), arguments, [
                'attack',
                'decay',
                'sustain',
                'release'
            ]));
            this.name = 'FrequencyEnvelope';
            ;
            const e = re(df.getDefaults(), arguments, [
                'attack',
                'decay',
                'sustain',
                'release'
            ]);
            this._octaves = e.octaves;
            this._baseFrequency = this.toFrequency(e.baseFrequency);
            this._exponent = this.input = new hf({
                context: this.context,
                value: e.exponent
            });
            this._scale = this.output = new fo({
                context: this.context,
                min: this._baseFrequency,
                max: this._baseFrequency * Math.pow(2, this._octaves)
            });
            this._sig.chain(this._exponent, this._scale);
            ;
        }
        static getDefaults() {
            return Object.assign(nr.getDefaults(), {
                baseFrequency: 200,
                exponent: 1,
                octaves: 4
            });
        }
        get baseFrequency() {
            return this._baseFrequency;
        }
        set baseFrequency(e) {
            const n = this.toFrequency(e);
            Xs(n, 0);
            this._baseFrequency = n;
            this._scale.min = this._baseFrequency;
            this.octaves = this._octaves;
            ;
        }
        get octaves() {
            return this._octaves;
        }
        set octaves(e) {
            this._octaves = e;
            this._scale.max = this._baseFrequency * Math.pow(2, e);
            ;
        }
        get exponent() {
            return this._exponent.value;
        }
        set exponent(e) {
            this._exponent.value = e;
        }
        dispose() {
            return super.dispose(), this._exponent.dispose(), this._scale.dispose(), this;
        }
    }
    class so extends er {
        constructor() {
            super(re(so.getDefaults(), arguments));
            this.name = 'MonoSynth';
            ;
            const e = re(so.getDefaults(), arguments);
            this.oscillator = new Ns(Object.assign(e.oscillator, {
                context: this.context,
                detune: e.detune,
                onstop: () => this.onsilence(this)
            }));
            this.frequency = this.oscillator.frequency;
            this.detune = this.oscillator.detune;
            this.filter = new Dr(Object.assign(e.filter, { context: this.context }));
            this.filterEnvelope = new df(Object.assign(e.filterEnvelope, { context: this.context }));
            this.envelope = new id(Object.assign(e.envelope, { context: this.context }));
            this.oscillator.chain(this.filter, this.envelope, this.output);
            this.filterEnvelope.connect(this.filter.frequency);
            He(this, [
                'oscillator',
                'frequency',
                'detune',
                'filter',
                'filterEnvelope',
                'envelope'
            ]);
            ;
        }
        static getDefaults() {
            return Object.assign(er.getDefaults(), {
                envelope: Object.assign(ur(nr.getDefaults(), Object.keys(Ne.getDefaults())), {
                    attack: 0.005,
                    decay: 0.1,
                    release: 1,
                    sustain: 0.9
                }),
                filter: Object.assign(ur(Dr.getDefaults(), Object.keys(Ne.getDefaults())), {
                    Q: 1,
                    rolloff: -12,
                    type: 'lowpass'
                }),
                filterEnvelope: Object.assign(ur(df.getDefaults(), Object.keys(Ne.getDefaults())), {
                    attack: 0.6,
                    baseFrequency: 200,
                    decay: 0.2,
                    exponent: 2,
                    octaves: 3,
                    release: 2,
                    sustain: 0.5
                }),
                oscillator: Object.assign(ur(Ns.getDefaults(), Object.keys(Pn.getDefaults())), { type: 'sawtooth' })
            });
        }
        _triggerEnvelopeAttack(e, n = 1) {
            if (this.envelope.triggerAttack(e, n), this.filterEnvelope.triggerAttack(e), this.oscillator.start(e), this.envelope.sustain === 0) {
                const r = this.toSeconds(this.envelope.attack), s = this.toSeconds(this.envelope.decay);
                this.oscillator.stop(e + r + s);
            }
        }
        _triggerEnvelopeRelease(e) {
            this.envelope.triggerRelease(e);
            this.filterEnvelope.triggerRelease(e);
            this.oscillator.stop(e + this.toSeconds(this.envelope.release));
            ;
        }
        getLevelAtTime(e) {
            return e = this.toSeconds(e), this.envelope.getValueAtTime(e);
        }
        dispose() {
            return super.dispose(), this.oscillator.dispose(), this.envelope.dispose(), this.filterEnvelope.dispose(), this.filter.dispose(), this;
        }
    }
    class F1 extends er {
        constructor() {
            super(re(F1.getDefaults(), arguments));
            this.name = 'DuoSynth';
            ;
            const e = re(F1.getDefaults(), arguments);
            this.voice0 = new so(Object.assign(e.voice0, {
                context: this.context,
                onsilence: () => this.onsilence(this)
            }));
            this.voice1 = new so(Object.assign(e.voice1, { context: this.context }));
            this.harmonicity = new hn({
                context: this.context,
                units: 'positive',
                value: e.harmonicity
            });
            this._vibrato = new Sr({
                frequency: e.vibratoRate,
                context: this.context,
                min: -50,
                max: 50
            });
            this._vibrato.start();
            this.vibratoRate = this._vibrato.frequency;
            this._vibratoGain = new je({
                context: this.context,
                units: 'normalRange',
                gain: e.vibratoAmount
            });
            this.vibratoAmount = this._vibratoGain.gain;
            this.frequency = new Qe({
                context: this.context,
                units: 'frequency',
                value: 440
            });
            this.detune = new Qe({
                context: this.context,
                units: 'cents',
                value: e.detune
            });
            this.frequency.connect(this.voice0.frequency);
            this.frequency.chain(this.harmonicity, this.voice1.frequency);
            this._vibrato.connect(this._vibratoGain);
            this._vibratoGain.fan(this.voice0.detune, this.voice1.detune);
            this.detune.fan(this.voice0.detune, this.voice1.detune);
            this.voice0.connect(this.output);
            this.voice1.connect(this.output);
            He(this, [
                'voice0',
                'voice1',
                'frequency',
                'vibratoAmount',
                'vibratoRate'
            ]);
            ;
        }
        getLevelAtTime(e) {
            return e = this.toSeconds(e), this.voice0.envelope.getValueAtTime(e) + this.voice1.envelope.getValueAtTime(e);
        }
        static getDefaults() {
            return Cs(er.getDefaults(), {
                vibratoAmount: 0.5,
                vibratoRate: 5,
                harmonicity: 1.5,
                voice0: Cs(ur(so.getDefaults(), Object.keys(er.getDefaults())), {
                    filterEnvelope: {
                        attack: 0.01,
                        decay: 0,
                        sustain: 1,
                        release: 0.5
                    },
                    envelope: {
                        attack: 0.01,
                        decay: 0,
                        sustain: 1,
                        release: 0.5
                    }
                }),
                voice1: Cs(ur(so.getDefaults(), Object.keys(er.getDefaults())), {
                    filterEnvelope: {
                        attack: 0.01,
                        decay: 0,
                        sustain: 1,
                        release: 0.5
                    },
                    envelope: {
                        attack: 0.01,
                        decay: 0,
                        sustain: 1,
                        release: 0.5
                    }
                })
            });
        }
        _triggerEnvelopeAttack(e, n) {
            this.voice0._triggerEnvelopeAttack(e, n);
            this.voice1._triggerEnvelopeAttack(e, n);
            ;
        }
        _triggerEnvelopeRelease(e) {
            return this.voice0._triggerEnvelopeRelease(e), this.voice1._triggerEnvelopeRelease(e), this;
        }
        dispose() {
            return super.dispose(), this.voice0.dispose(), this.voice1.dispose(), this.frequency.dispose(), this.detune.dispose(), this._vibrato.dispose(), this.vibratoRate.dispose(), this._vibratoGain.dispose(), this.harmonicity.dispose(), this;
        }
    }
    class pf extends ru {
        constructor() {
            super(re(pf.getDefaults(), arguments));
            this.name = 'FMSynth';
            ;
            const e = re(pf.getDefaults(), arguments);
            this.modulationIndex = new hn({
                context: this.context,
                value: e.modulationIndex
            });
            this.frequency.connect(this._carrier.frequency);
            this.frequency.chain(this.harmonicity, this._modulator.frequency);
            this.frequency.chain(this.modulationIndex, this._modulationNode);
            this.detune.fan(this._carrier.detune, this._modulator.detune);
            this._modulator.connect(this._modulationNode.gain);
            this._modulationNode.connect(this._carrier.frequency);
            this._carrier.connect(this.output);
            ;
        }
        static getDefaults() {
            return Object.assign(ru.getDefaults(), { modulationIndex: 10 });
        }
        dispose() {
            return super.dispose(), this.modulationIndex.dispose(), this;
        }
    }
    const Rw = [
        1,
        1.483,
        1.932,
        2.546,
        2.63,
        3.897
    ];
    class U1 extends er {
        constructor() {
            super(re(U1.getDefaults(), arguments));
            this.name = 'MetalSynth';
            this._oscillators = [];
            this._freqMultipliers = [];
            ;
            const e = re(U1.getDefaults(), arguments);
            this.detune = new Qe({
                context: this.context,
                units: 'cents',
                value: e.detune
            });
            this.frequency = new Qe({
                context: this.context,
                units: 'frequency'
            });
            this._amplitude = new je({
                context: this.context,
                gain: 0
            }).connect(this.output);
            this._highpass = new Dr({
                Q: 0,
                context: this.context,
                type: 'highpass'
            }).connect(this._amplitude);
            ;
            for (let n = 0; n < Rw.length; n++) {
                const r = new tu({
                    context: this.context,
                    harmonicity: e.harmonicity,
                    modulationIndex: e.modulationIndex,
                    modulationType: 'square',
                    onstop: n === 0 ? () => this.onsilence(this) : _t,
                    type: 'square'
                });
                r.connect(this._highpass);
                this._oscillators[n] = r;
                ;
                const s = new hn({
                    context: this.context,
                    value: Rw[n]
                });
                this._freqMultipliers[n] = s;
                this.frequency.chain(s, r.frequency);
                this.detune.connect(r.detune);
                ;
            }
            this._filterFreqScaler = new fo({
                context: this.context,
                max: 7000,
                min: this.toFrequency(e.resonance)
            });
            this.envelope = new nr({
                attack: e.envelope.attack,
                attackCurve: 'linear',
                context: this.context,
                decay: e.envelope.decay,
                release: e.envelope.release,
                sustain: 0
            });
            this.envelope.chain(this._filterFreqScaler, this._highpass.frequency);
            this.envelope.connect(this._amplitude.gain);
            this._octaves = e.octaves;
            this.octaves = e.octaves;
            ;
        }
        static getDefaults() {
            return Cs(er.getDefaults(), {
                envelope: Object.assign(ur(nr.getDefaults(), Object.keys(Ne.getDefaults())), {
                    attack: 0.001,
                    decay: 1.4,
                    release: 0.2
                }),
                harmonicity: 5.1,
                modulationIndex: 32,
                octaves: 1.5,
                resonance: 4000
            });
        }
        _triggerEnvelopeAttack(e, n = 1) {
            return this.envelope.triggerAttack(e, n), this._oscillators.forEach(r => r.start(e)), this.envelope.sustain === 0 && this._oscillators.forEach(r => {
                r.stop(e + this.toSeconds(this.envelope.attack) + this.toSeconds(this.envelope.decay));
            }), this;
        }
        _triggerEnvelopeRelease(e) {
            return this.envelope.triggerRelease(e), this._oscillators.forEach(n => n.stop(e + this.toSeconds(this.envelope.release))), this;
        }
        getLevelAtTime(e) {
            return e = this.toSeconds(e), this.envelope.getValueAtTime(e);
        }
        get modulationIndex() {
            return this._oscillators[0].modulationIndex.value;
        }
        set modulationIndex(e) {
            this._oscillators.forEach(n => n.modulationIndex.value = e);
        }
        get harmonicity() {
            return this._oscillators[0].harmonicity.value;
        }
        set harmonicity(e) {
            this._oscillators.forEach(n => n.harmonicity.value = e);
        }
        get resonance() {
            return this._filterFreqScaler.min;
        }
        set resonance(e) {
            this._filterFreqScaler.min = this.toFrequency(e);
            this.octaves = this._octaves;
            ;
        }
        get octaves() {
            return this._octaves;
        }
        set octaves(e) {
            this._octaves = e;
            this._filterFreqScaler.max = this._filterFreqScaler.min * Math.pow(2, e);
            ;
        }
        dispose() {
            return super.dispose(), this._oscillators.forEach(e => e.dispose()), this._freqMultipliers.forEach(e => e.dispose()), this.frequency.dispose(), this.detune.dispose(), this._filterFreqScaler.dispose(), this._amplitude.dispose(), this.envelope.dispose(), this._highpass.dispose(), this;
        }
    }
    class su extends ki {
        constructor() {
            super(re(su.getDefaults(), arguments));
            this.name = 'MembraneSynth';
            this.portamento = 0;
            ;
            const e = re(su.getDefaults(), arguments);
            this.pitchDecay = e.pitchDecay;
            this.octaves = e.octaves;
            He(this, [
                'oscillator',
                'envelope'
            ]);
            ;
        }
        static getDefaults() {
            return Cs(er.getDefaults(), ki.getDefaults(), {
                envelope: {
                    attack: 0.001,
                    attackCurve: 'exponential',
                    decay: 0.4,
                    release: 1.4,
                    sustain: 0.01
                },
                octaves: 10,
                oscillator: { type: 'sine' },
                pitchDecay: 0.05
            });
        }
        setNote(e, n) {
            const r = this.toSeconds(n), s = this.toFrequency(e instanceof Jn ? e.toFrequency() : e), i = s * this.octaves;
            return this.oscillator.frequency.setValueAtTime(i, r), this.oscillator.frequency.exponentialRampToValueAtTime(s, r + this.toSeconds(this.pitchDecay)), this;
        }
        dispose() {
            return super.dispose(), this;
        }
    }
    ii([dI(0)], su.prototype, 'octaves', void 0);
    ii([To(0)], su.prototype, 'pitchDecay', void 0);
    class B1 extends Ii {
        constructor() {
            super(re(B1.getDefaults(), arguments));
            this.name = 'NoiseSynth';
            ;
            const e = re(B1.getDefaults(), arguments);
            this.noise = new pa(Object.assign({ context: this.context }, e.noise));
            this.envelope = new id(Object.assign({ context: this.context }, e.envelope));
            this.noise.chain(this.envelope, this.output);
            ;
        }
        static getDefaults() {
            return Object.assign(Ii.getDefaults(), {
                envelope: Object.assign(ur(nr.getDefaults(), Object.keys(Ne.getDefaults())), {
                    decay: 0.1,
                    sustain: 0
                }),
                noise: Object.assign(ur(pa.getDefaults(), Object.keys(Pn.getDefaults())), { type: 'white' })
            });
        }
        triggerAttack(e, n = 1) {
            return e = this.toSeconds(e), this.envelope.triggerAttack(e, n), this.noise.start(e), this.envelope.sustain === 0 && this.noise.stop(e + this.toSeconds(this.envelope.attack) + this.toSeconds(this.envelope.decay)), this;
        }
        triggerRelease(e) {
            return e = this.toSeconds(e), this.envelope.triggerRelease(e), this.noise.stop(e + this.toSeconds(this.envelope.release)), this;
        }
        sync() {
            return this._syncState() && (this._syncMethod('triggerAttack', 0), this._syncMethod('triggerRelease', 0)), this;
        }
        triggerAttackRelease(e, n, r = 1) {
            return n = this.toSeconds(n), e = this.toSeconds(e), this.triggerAttack(n, r), this.triggerRelease(n + e), this;
        }
        dispose() {
            return super.dispose(), this.noise.dispose(), this.envelope.dispose(), this;
        }
    }
    const d5 = new Set();
    function p5(t) {
        d5.add(t);
    }
    function mI(t, e) {
        const n = `registerProcessor("${ t }", ${ e })`;
        d5.add(n);
    }
    function Jbe() {
        return Array.from(d5).join(`
`);
    }
    class S2 extends Ne {
        constructor(e) {
            super(e);
            this.name = 'ToneAudioWorklet';
            this.workletOptions = {};
            this.onprocessorerror = _t;
            ;
            const n = URL.createObjectURL(new Blob([Jbe()], { type: 'text/javascript' })), r = this._audioWorkletName();
            this._dummyGain = this.context.createGain();
            this._dummyParam = this._dummyGain.gain;
            this.context.addAudioWorkletModule(n, r).then(() => {
                this.disposed || (this._worklet = this.context.createAudioWorkletNode(r, this.workletOptions), this._worklet.onprocessorerror = this.onprocessorerror.bind(this), this.onReady(this._worklet));
            });
            ;
        }
        dispose() {
            return super.dispose(), this._dummyGain.disconnect(), this._worklet && (this._worklet.port.postMessage('dispose'), this._worklet.disconnect()), this;
        }
    }
    const e4e = `
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`;
    p5(e4e);
    const t4e = `
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`;
    p5(t4e);
    const n4e = `
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`;
    p5(n4e);
    const r4e = `
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`;
    mI('feedback-comb-filter', r4e);
    class mf extends S2 {
        constructor() {
            super(re(mf.getDefaults(), arguments, [
                'delayTime',
                'resonance'
            ]));
            this.name = 'FeedbackCombFilter';
            ;
            const e = re(mf.getDefaults(), arguments, [
                'delayTime',
                'resonance'
            ]);
            this.input = new je({ context: this.context });
            this.output = new je({ context: this.context });
            this.delayTime = new ft({
                context: this.context,
                value: e.delayTime,
                units: 'time',
                minValue: 0,
                maxValue: 1,
                param: this._dummyParam,
                swappable: true
            });
            this.resonance = new ft({
                context: this.context,
                value: e.resonance,
                units: 'normalRange',
                param: this._dummyParam,
                swappable: true
            });
            He(this, [
                'resonance',
                'delayTime'
            ]);
            ;
        }
        _audioWorkletName() {
            return 'feedback-comb-filter';
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), {
                delayTime: 0.1,
                resonance: 0.5
            });
        }
        onReady(e) {
            Is(this.input, e, this.output);
            const n = e.parameters.get('delayTime');
            this.delayTime.setParam(n);
            const r = e.parameters.get('feedback');
            this.resonance.setParam(r);
        }
        dispose() {
            return super.dispose(), this.input.dispose(), this.output.dispose(), this.delayTime.dispose(), this.resonance.dispose(), this;
        }
    }
    class gf extends Ne {
        constructor() {
            super(re(gf.getDefaults(), arguments, [
                'frequency',
                'type'
            ]));
            this.name = 'OnePoleFilter';
            ;
            const e = re(gf.getDefaults(), arguments, [
                'frequency',
                'type'
            ]);
            this._frequency = e.frequency;
            this._type = e.type;
            this.input = new je({ context: this.context });
            this.output = new je({ context: this.context });
            this._createFilter();
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), {
                frequency: 880,
                type: 'lowpass'
            });
        }
        _createFilter() {
            const e = this._filter, n = this.toFrequency(this._frequency), r = 1 / (2 * Math.PI * n);
            if (this._type === 'lowpass') {
                const s = 1 / (r * this.context.sampleRate), i = s - 1;
                this._filter = this.context.createIIRFilter([
                    s,
                    0
                ], [
                    1,
                    i
                ]);
            } else {
                const s = 1 / (r * this.context.sampleRate) - 1;
                this._filter = this.context.createIIRFilter([
                    1,
                    -1
                ], [
                    1,
                    s
                ]);
            }
            this.input.chain(this._filter, this.output);
            e && this.context.setTimeout(() => {
                this.disposed || (this.input.disconnect(e), e.disconnect());
            }, this.blockTime);
            ;
        }
        get frequency() {
            return this._frequency;
        }
        set frequency(e) {
            this._frequency = e;
            this._createFilter();
            ;
        }
        get type() {
            return this._type;
        }
        set type(e) {
            this._type = e;
            this._createFilter();
            ;
        }
        getFrequencyResponse(e = 128) {
            const n = new Float32Array(e);
            for (let i = 0; i < e; i++) {
                const a = Math.pow(i / e, 2) * 19980 + 20;
                ;
            }
            const r = new Float32Array(e), s = new Float32Array(e);
            return this._filter.getFrequencyResponse(n, r, s), r;
        }
        dispose() {
            return super.dispose(), this.input.dispose(), this.output.dispose(), this._filter.disconnect(), this;
        }
    }
    class _f extends Ne {
        constructor() {
            super(re(_f.getDefaults(), arguments, [
                'delayTime',
                'resonance',
                'dampening'
            ]));
            this.name = 'LowpassCombFilter';
            ;
            const e = re(_f.getDefaults(), arguments, [
                'delayTime',
                'resonance',
                'dampening'
            ]);
            this._combFilter = this.output = new mf({
                context: this.context,
                delayTime: e.delayTime,
                resonance: e.resonance
            });
            this.delayTime = this._combFilter.delayTime;
            this.resonance = this._combFilter.resonance;
            this._lowpass = this.input = new gf({
                context: this.context,
                frequency: e.dampening,
                type: 'lowpass'
            });
            this._lowpass.connect(this._combFilter);
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), {
                dampening: 3000,
                delayTime: 0.1,
                resonance: 0.5
            });
        }
        get dampening() {
            return this._lowpass.frequency;
        }
        set dampening(e) {
            this._lowpass.frequency = e;
        }
        dispose() {
            return super.dispose(), this._combFilter.dispose(), this._lowpass.dispose(), this;
        }
    }
    class q1 extends Ii {
        constructor() {
            super(re(q1.getDefaults(), arguments));
            this.name = 'PluckSynth';
            ;
            const e = re(q1.getDefaults(), arguments);
            this._noise = new pa({
                context: this.context,
                type: 'pink'
            });
            this.attackNoise = e.attackNoise;
            this._lfcf = new _f({
                context: this.context,
                dampening: e.dampening,
                resonance: e.resonance
            });
            this.resonance = e.resonance;
            this.release = e.release;
            this._noise.connect(this._lfcf);
            this._lfcf.connect(this.output);
            ;
        }
        static getDefaults() {
            return Cs(Ii.getDefaults(), {
                attackNoise: 1,
                dampening: 4000,
                resonance: 0.7,
                release: 1
            });
        }
        get dampening() {
            return this._lfcf.dampening;
        }
        set dampening(e) {
            this._lfcf.dampening = e;
        }
        triggerAttack(e, n) {
            const r = this.toFrequency(e);
            n = this.toSeconds(n);
            const s = 1 / r;
            return this._lfcf.delayTime.setValueAtTime(s, n), this._noise.start(n), this._noise.stop(n + s * this.attackNoise), this._lfcf.resonance.cancelScheduledValues(n), this._lfcf.resonance.setValueAtTime(this.resonance, n), this;
        }
        triggerRelease(e) {
            return this._lfcf.resonance.linearRampTo(0, this.release, e), this;
        }
        dispose() {
            return super.dispose(), this._noise.dispose(), this._lfcf.dispose(), this;
        }
    }
    class uc extends Ii {
        constructor() {
            super(re(uc.getDefaults(), arguments, [
                'voice',
                'options'
            ]));
            this.name = 'PolySynth';
            this._availableVoices = [];
            this._activeVoices = [];
            this._voices = [];
            this._gcTimeout = -1;
            this._averageActiveVoices = 0;
            ;
            const e = re(uc.getDefaults(), arguments, [
                'voice',
                'options'
            ]);
            Xe(!ho(e.voice), 'DEPRECATED: The polyphony count is no longer the first argument.');
            const n = e.voice.getDefaults();
            this.options = Object.assign(n, e.options);
            this.voice = e.voice;
            this.maxPolyphony = e.maxPolyphony;
            this._dummyVoice = this._getNextAvailableVoice();
            ;
            const r = this._voices.indexOf(this._dummyVoice);
            this._voices.splice(r, 1);
            this._gcTimeout = this.context.setInterval(this._collectGarbage.bind(this), 1);
            ;
        }
        static getDefaults() {
            return Object.assign(Ii.getDefaults(), {
                maxPolyphony: 32,
                options: {},
                voice: ki
            });
        }
        get activeVoices() {
            return this._activeVoices.length;
        }
        _makeVoiceAvailable(e) {
            this._availableVoices.push(e);
            const n = this._activeVoices.findIndex(r => r.voice === e);
            this._activeVoices.splice(n, 1);
        }
        _getNextAvailableVoice() {
            if (this._availableVoices.length) {
                return this._availableVoices.shift();
            }
            if (this._voices.length < this.maxPolyphony) {
                const e = new this.voice(Object.assign(this.options, {
                    context: this.context,
                    onsilence: this._makeVoiceAvailable.bind(this)
                }));
                return e.connect(this.output), this._voices.push(e), e;
            } else {
                s5('Max polyphony exceeded. Note dropped.');
            }
        }
        _collectGarbage() {
            if (this._averageActiveVoices = Math.max(this._averageActiveVoices * 0.95, this.activeVoices), this._availableVoices.length && this._voices.length > Math.ceil(this._averageActiveVoices + 1)) {
                const e = this._availableVoices.shift(), n = this._voices.indexOf(e);
                this._voices.splice(n, 1);
                this.context.isOffline || e.dispose();
                ;
            }
        }
        _triggerAttack(e, n, r) {
            e.forEach(s => {
                const i = new M1(this.context, s).toMidi(), o = this._getNextAvailableVoice();
                o && (o.triggerAttack(s, n, r), this._activeVoices.push({
                    midi: i,
                    voice: o,
                    released: false
                }), this.log('triggerAttack', s, n));
            });
        }
        _triggerRelease(e, n) {
            e.forEach(r => {
                const s = new M1(this.context, r).toMidi(), i = this._activeVoices.find(({
                        midi: o,
                        released: a
                    }) => o === s && !a);
                i && (i.voice.triggerRelease(n), i.released = true, this.log('triggerRelease', r, n));
            });
        }
        _scheduleEvent(e, n, r, s) {
            Xe(!this.disposed, 'Synth was already disposed');
            r <= this.now() ? e === 'attack' ? this._triggerAttack(n, r, s) : this._triggerRelease(n, r) : this.context.setTimeout(() => {
                this._scheduleEvent(e, n, r, s);
            }, r - this.now());
            ;
        }
        triggerAttack(e, n, r) {
            Array.isArray(e) || (e = [e]);
            const s = this.toSeconds(n);
            return this._scheduleEvent('attack', e, s, r), this;
        }
        triggerRelease(e, n) {
            Array.isArray(e) || (e = [e]);
            const r = this.toSeconds(n);
            return this._scheduleEvent('release', e, r), this;
        }
        triggerAttackRelease(e, n, r, s) {
            const i = this.toSeconds(r);
            if (this.triggerAttack(e, i, s), ns(n)) {
                Xe(ns(e), 'If the duration is an array, the notes must also be an array');
                e = e;
                ;
                for (let o = 0; o < e.length; o++) {
                    const a = n[Math.min(o, n.length - 1)], l = this.toSeconds(a);
                    Xe(l > 0, 'The duration must be greater than 0');
                    this.triggerRelease(e[o], i + l);
                    ;
                }
            } else {
                const o = this.toSeconds(n);
                Xe(o > 0, 'The duration must be greater than 0');
                this.triggerRelease(e, i + o);
                ;
            }
            return this;
        }
        sync() {
            return this._syncState() && (this._syncMethod('triggerAttack', 1), this._syncMethod('triggerRelease', 1)), this;
        }
        set(e) {
            const n = ur(e, [
                'onsilence',
                'context'
            ]);
            return this.options = Cs(this.options, n), this._voices.forEach(r => r.set(n)), this._dummyVoice.set(n), this;
        }
        get() {
            return this._dummyVoice.get();
        }
        releaseAll(e) {
            const n = this.toSeconds(e);
            return this._activeVoices.forEach(({voice: r}) => {
                r.triggerRelease(n);
            }), this;
        }
        dispose() {
            return super.dispose(), this._dummyVoice.dispose(), this._voices.forEach(e => e.dispose()), this._activeVoices = [], this._availableVoices = [], this.context.clearInterval(this._gcTimeout), this;
        }
    }
    class iu extends Ii {
        constructor() {
            super(re(iu.getDefaults(), arguments, [
                'urls',
                'onload',
                'baseUrl'
            ], 'urls'));
            this.name = 'Sampler';
            this._activeSources = new Map();
            ;
            const e = re(iu.getDefaults(), arguments, [
                    'urls',
                    'onload',
                    'baseUrl'
                ], 'urls'), n = { i: e.urls[r] };
            Object.keys(e.urls).forEach(r => {
                const s = parseInt(r, 10);
                if (Xe(Op(r) || ho(s) && isFinite(s), `url key is neither a note or midi pitch: ${ r }`), Op(r)) {
                    const i = new Jn(this.context, r).toMidi();
                    ;
                } else {
                    ho(s) && isFinite(s) && (n[s] = e.urls[s]);
                }
            });
            this._buffers = new sd({
                urls: n,
                onload: e.onload,
                baseUrl: e.baseUrl,
                onerror: e.onerror
            });
            this.attack = e.attack;
            this.release = e.release;
            this.curve = e.curve;
            this._buffers.loaded && Promise.resolve().then(e.onload);
            ;
        }
        static getDefaults() {
            return Object.assign(Ii.getDefaults(), {
                attack: 0,
                baseUrl: '',
                curve: 'exponential',
                onload: _t,
                onerror: _t,
                release: 0.1,
                urls: {}
            });
        }
        _findClosest(e) {
            let r = 0;
            for (; r < 96;) {
                if (this._buffers.has(e + r)) {
                    return -r;
                }
                if (this._buffers.has(e - r)) {
                    return r;
                }
                r++;
            }
            throw new Error(`No available buffers for note: ${ e }`);
        }
        triggerAttack(e, n, r = 1) {
            return this.log('triggerAttack', e, n, r), Array.isArray(e) || (e = [e]), e.forEach(s => {
                const i = wg(new Jn(this.context, s).toFrequency()), o = Math.round(i), a = i - o, l = this._findClosest(o), u = o - l, f = this._buffers.get(u), d = Ic(l + a), p = new Ci({
                        url: f,
                        context: this.context,
                        curve: this.curve,
                        fadeIn: this.attack,
                        fadeOut: this.release,
                        playbackRate: d
                    }).connect(this.output);
                p.start(n, 0, f.duration / d, r);
                ns(this._activeSources.get(o)) || this._activeSources.set(o, []);
                this._activeSources.get(o).push(p);
                p.onended = () => {
                    if (this._activeSources && this._activeSources.has(o)) {
                        const _ = this._activeSources.get(o), v = _.indexOf(p);
                        v !== -1 && _.splice(v, 1);
                    }
                };
                ;
            }), this;
        }
        triggerRelease(e, n) {
            return this.log('triggerRelease', e, n), Array.isArray(e) || (e = [e]), e.forEach(r => {
                const s = new Jn(this.context, r).toMidi();
                if (this._activeSources.has(s) && this._activeSources.get(s).length) {
                    const i = this._activeSources.get(s);
                    n = this.toSeconds(n);
                    i.forEach(o => {
                        o.stop(n);
                    });
                    this._activeSources.set(s, []);
                    ;
                }
            }), this;
        }
        releaseAll(e) {
            const n = this.toSeconds(e);
            return this._activeSources.forEach(r => {
                for (; r.length;) {
                    r.shift().stop(n);
                }
            }), this;
        }
        sync() {
            return this._syncState() && (this._syncMethod('triggerAttack', 1), this._syncMethod('triggerRelease', 1)), this;
        }
        triggerAttackRelease(e, n, r, s = 1) {
            const i = this.toSeconds(r);
            return this.triggerAttack(e, i, s), ns(n) ? (Xe(ns(e), 'notes must be an array when duration is array'), e.forEach((o, a) => {
                const l = n[Math.min(a, n.length - 1)];
                this.triggerRelease(o, i + this.toSeconds(l));
            })) : this.triggerRelease(e, i + this.toSeconds(n)), this;
        }
        add(e, n, r) {
            if (Xe(Op(e) || isFinite(e), `note must be a pitch or midi: ${ e }`), Op(e)) {
                const s = new Jn(this.context, e).toMidi();
                this._buffers.add(s, n, r);
            } else {
                this._buffers.add(e, n, r);
            }
            return this;
        }
        get loaded() {
            return this._buffers.loaded;
        }
        dispose() {
            return super.dispose(), this._buffers.dispose(), this._activeSources.forEach(e => {
                e.forEach(n => n.dispose());
            }), this._activeSources.clear(), this;
        }
    }
    ii([To(0)], iu.prototype, 'attack', void 0);
    ii([To(0)], iu.prototype, 'release', void 0);
    class ou extends Ne {
        constructor() {
            super(Object.assign(re(ou.getDefaults(), arguments, ['fade'])));
            this.name = 'CrossFade';
            this._panner = this.context.createStereoPanner();
            this._split = this.context.createChannelSplitter(2);
            this._g2a = new Qbe({ context: this.context });
            this.a = new je({
                context: this.context,
                gain: 0
            });
            this.b = new je({
                context: this.context,
                gain: 0
            });
            this.output = new je({ context: this.context });
            this._internalChannels = [
                this.a,
                this.b
            ];
            ;
            const e = re(ou.getDefaults(), arguments, ['fade']);
            this.fade = new Qe({
                context: this.context,
                units: 'normalRange',
                value: e.fade
            });
            He(this, 'fade');
            this.context.getConstant(1).connect(this._panner);
            this._panner.connect(this._split);
            this._panner.channelCount = 1;
            this._panner.channelCountMode = 'explicit';
            ks(this._split, this.a.gain, 0);
            ks(this._split, this.b.gain, 1);
            this.fade.chain(this._g2a, this._panner.pan);
            this.a.connect(this.output);
            this.b.connect(this.output);
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), { fade: 0.5 });
        }
        dispose() {
            return super.dispose(), this.a.dispose(), this.b.dispose(), this.output.dispose(), this.fade.dispose(), this._g2a.dispose(), this._panner.disconnect(), this._split.disconnect(), this;
        }
    }
    class Un extends Ne {
        constructor(e) {
            super(e);
            this.name = 'Effect';
            this._dryWet = new ou({ context: this.context });
            this.wet = this._dryWet.fade;
            this.effectSend = new je({ context: this.context });
            this.effectReturn = new je({ context: this.context });
            this.input = new je({ context: this.context });
            this.output = this._dryWet;
            this.input.fan(this._dryWet.a, this.effectSend);
            this.effectReturn.connect(this._dryWet.b);
            this.wet.setValueAtTime(e.wet, 0);
            this._internalChannels = [
                this.effectReturn,
                this.effectSend
            ];
            He(this, 'wet');
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), { wet: 1 });
        }
        connectEffect(e) {
            return this._internalChannels.push(e), this.effectSend.chain(e, this.effectReturn), this;
        }
        dispose() {
            return super.dispose(), this._dryWet.dispose(), this.effectSend.dispose(), this.effectReturn.dispose(), this.wet.dispose(), this;
        }
    }
    class V1 extends Un {
        constructor(e) {
            super(e);
            this.name = 'LFOEffect';
            this._lfo = new Sr({
                context: this.context,
                frequency: e.frequency,
                amplitude: e.depth
            });
            this.depth = this._lfo.amplitude;
            this.frequency = this._lfo.frequency;
            this.type = e.type;
            He(this, [
                'frequency',
                'depth'
            ]);
            ;
        }
        static getDefaults() {
            return Object.assign(Un.getDefaults(), {
                frequency: 1,
                type: 'sine',
                depth: 1
            });
        }
        start(e) {
            return this._lfo.start(e), this;
        }
        stop(e) {
            return this._lfo.stop(e), this;
        }
        sync() {
            return this._lfo.sync(), this;
        }
        unsync() {
            return this._lfo.unsync(), this;
        }
        get type() {
            return this._lfo.type;
        }
        set type(e) {
            this._lfo.type = e;
        }
        dispose() {
            return super.dispose(), this._lfo.dispose(), this.frequency.dispose(), this.depth.dispose(), this;
        }
    }
    class yf extends V1 {
        constructor() {
            super(re(yf.getDefaults(), arguments, [
                'frequency',
                'baseFrequency',
                'octaves'
            ]));
            this.name = 'AutoFilter';
            ;
            const e = re(yf.getDefaults(), arguments, [
                'frequency',
                'baseFrequency',
                'octaves'
            ]);
            this.filter = new Dr(Object.assign(e.filter, { context: this.context }));
            this.connectEffect(this.filter);
            this._lfo.connect(this.filter.frequency);
            this.octaves = e.octaves;
            this.baseFrequency = e.baseFrequency;
            ;
        }
        static getDefaults() {
            return Object.assign(V1.getDefaults(), {
                baseFrequency: 200,
                octaves: 2.6,
                filter: {
                    type: 'lowpass',
                    rolloff: -12,
                    Q: 1
                }
            });
        }
        get baseFrequency() {
            return this._lfo.min;
        }
        set baseFrequency(e) {
            this._lfo.min = this.toFrequency(e);
            this.octaves = this._octaves;
            ;
        }
        get octaves() {
            return this._octaves;
        }
        set octaves(e) {
            this._octaves = e;
            this._lfo.max = this._lfo.min * Math.pow(2, e);
            ;
        }
        dispose() {
            return super.dispose(), this.filter.dispose(), this;
        }
    }
    class au extends Ne {
        constructor() {
            super(Object.assign(re(au.getDefaults(), arguments, ['pan'])));
            this.name = 'Panner';
            this._panner = this.context.createStereoPanner();
            this.input = this._panner;
            this.output = this._panner;
            ;
            const e = re(au.getDefaults(), arguments, ['pan']);
            this.pan = new ft({
                context: this.context,
                param: this._panner.pan,
                value: e.pan,
                minValue: -1,
                maxValue: 1
            });
            this._panner.channelCount = e.channelCount;
            this._panner.channelCountMode = 'explicit';
            He(this, 'pan');
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), {
                pan: 0,
                channelCount: 1
            });
        }
        dispose() {
            return super.dispose(), this._panner.disconnect(), this.pan.dispose(), this;
        }
    }
    class vf extends V1 {
        constructor() {
            super(re(vf.getDefaults(), arguments, ['frequency']));
            this.name = 'AutoPanner';
            ;
            const e = re(vf.getDefaults(), arguments, ['frequency']);
            this._panner = new au({
                context: this.context,
                channelCount: e.channelCount
            });
            this.connectEffect(this._panner);
            this._lfo.connect(this._panner.pan);
            this._lfo.min = -1;
            this._lfo.max = 1;
            ;
        }
        static getDefaults() {
            return Object.assign(V1.getDefaults(), { channelCount: 1 });
        }
        dispose() {
            return super.dispose(), this._panner.dispose(), this;
        }
    }
    class bf extends Ne {
        constructor() {
            super(re(bf.getDefaults(), arguments, ['smoothing']));
            this.name = 'Follower';
            ;
            const e = re(bf.getDefaults(), arguments, ['smoothing']);
            this._abs = this.input = new Xbe({ context: this.context });
            this._lowpass = this.output = new gf({
                context: this.context,
                frequency: 1 / this.toSeconds(e.smoothing),
                type: 'lowpass'
            });
            this._abs.connect(this._lowpass);
            this._smoothing = e.smoothing;
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), { smoothing: 0.05 });
        }
        get smoothing() {
            return this._smoothing;
        }
        set smoothing(e) {
            this._smoothing = e;
            this._lowpass.frequency = 1 / this.toSeconds(this.smoothing);
            ;
        }
        dispose() {
            return super.dispose(), this._abs.dispose(), this._lowpass.dispose(), this;
        }
    }
    class G1 extends Un {
        constructor() {
            super(re(G1.getDefaults(), arguments, [
                'baseFrequency',
                'octaves',
                'sensitivity'
            ]));
            this.name = 'AutoWah';
            ;
            const e = re(G1.getDefaults(), arguments, [
                'baseFrequency',
                'octaves',
                'sensitivity'
            ]);
            this._follower = new bf({
                context: this.context,
                smoothing: e.follower
            });
            this._sweepRange = new L1({
                context: this.context,
                min: 0,
                max: 1,
                exponent: 0.5
            });
            this._baseFrequency = this.toFrequency(e.baseFrequency);
            this._octaves = e.octaves;
            this._inputBoost = new je({ context: this.context });
            this._bandpass = new Dr({
                context: this.context,
                rolloff: -48,
                frequency: 0,
                Q: e.Q
            });
            this._peaking = new Dr({
                context: this.context,
                type: 'peaking'
            });
            this._peaking.gain.value = e.gain;
            this.gain = this._peaking.gain;
            this.Q = this._bandpass.Q;
            this.effectSend.chain(this._inputBoost, this._follower, this._sweepRange);
            this._sweepRange.connect(this._bandpass.frequency);
            this._sweepRange.connect(this._peaking.frequency);
            this.effectSend.chain(this._bandpass, this._peaking, this.effectReturn);
            this._setSweepRange();
            this.sensitivity = e.sensitivity;
            He(this, [
                'gain',
                'Q'
            ]);
            ;
        }
        static getDefaults() {
            return Object.assign(Un.getDefaults(), {
                baseFrequency: 100,
                octaves: 6,
                sensitivity: 0,
                Q: 2,
                gain: 2,
                follower: 0.2
            });
        }
        get octaves() {
            return this._octaves;
        }
        set octaves(e) {
            this._octaves = e;
            this._setSweepRange();
            ;
        }
        get follower() {
            return this._follower.smoothing;
        }
        set follower(e) {
            this._follower.smoothing = e;
        }
        get baseFrequency() {
            return this._baseFrequency;
        }
        set baseFrequency(e) {
            this._baseFrequency = this.toFrequency(e);
            this._setSweepRange();
            ;
        }
        get sensitivity() {
            return o5(1 / this._inputBoost.gain.value);
        }
        set sensitivity(e) {
            this._inputBoost.gain.value = 1 / k1(e);
        }
        _setSweepRange() {
            this._sweepRange.min = this._baseFrequency;
            this._sweepRange.max = Math.min(this._baseFrequency * Math.pow(2, this._octaves), this.context.sampleRate / 2);
            ;
        }
        dispose() {
            return super.dispose(), this._follower.dispose(), this._sweepRange.dispose(), this._bandpass.dispose(), this._peaking.dispose(), this._inputBoost.dispose(), this;
        }
    }
    const s4e = `
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`;
    mI('bit-crusher', s4e);
    class j1 extends Un {
        constructor() {
            super(re(j1.getDefaults(), arguments, ['bits']));
            this.name = 'BitCrusher';
            ;
            const e = re(j1.getDefaults(), arguments, ['bits']);
            this._bitCrusherWorklet = new W1({
                context: this.context,
                bits: e.bits
            });
            this.connectEffect(this._bitCrusherWorklet);
            this.bits = this._bitCrusherWorklet.bits;
            ;
        }
        static getDefaults() {
            return Object.assign(Un.getDefaults(), { bits: 4 });
        }
        dispose() {
            return super.dispose(), this._bitCrusherWorklet.dispose(), this;
        }
    }
    class W1 extends S2 {
        constructor() {
            super(re(W1.getDefaults(), arguments));
            this.name = 'BitCrusherWorklet';
            ;
            const e = re(W1.getDefaults(), arguments);
            this.input = new je({ context: this.context });
            this.output = new je({ context: this.context });
            this.bits = new ft({
                context: this.context,
                value: e.bits,
                units: 'positive',
                minValue: 1,
                maxValue: 16,
                param: this._dummyParam,
                swappable: true
            });
            ;
        }
        static getDefaults() {
            return Object.assign(S2.getDefaults(), { bits: 12 });
        }
        _audioWorkletName() {
            return 'bit-crusher';
        }
        onReady(e) {
            Is(this.input, e, this.output);
            const n = e.parameters.get('bits');
            this.bits.setParam(n);
        }
        dispose() {
            return super.dispose(), this.input.dispose(), this.output.dispose(), this.bits.dispose(), this;
        }
    }
    class H1 extends Un {
        constructor() {
            super(re(H1.getDefaults(), arguments, ['order']));
            this.name = 'Chebyshev';
            ;
            const e = re(H1.getDefaults(), arguments, ['order']);
            this._shaper = new Qs({
                context: this.context,
                length: 4096
            });
            this._order = e.order;
            this.connectEffect(this._shaper);
            this.order = e.order;
            this.oversample = e.oversample;
            ;
        }
        static getDefaults() {
            return Object.assign(Un.getDefaults(), {
                order: 1,
                oversample: 'none'
            });
        }
        _getCoefficient(e, n, r) {
            return r.has(n) || (n === 0 ? r.set(n, 0) : n === 1 ? r.set(n, e) : r.set(n, 2 * e * this._getCoefficient(e, n - 1, r) - this._getCoefficient(e, n - 2, r))), r.get(n);
        }
        get order() {
            return this._order;
        }
        set order(e) {
            this._order = e;
            this._shaper.setMap(n => this._getCoefficient(n, e, new Map()));
            ;
        }
        get oversample() {
            return this._shaper.oversample;
        }
        set oversample(e) {
            this._shaper.oversample = e;
        }
        dispose() {
            return super.dispose(), this._shaper.dispose(), this;
        }
    }
    class cu extends Ne {
        constructor() {
            super(re(cu.getDefaults(), arguments, ['channels']));
            this.name = 'Split';
            ;
            const e = re(cu.getDefaults(), arguments, ['channels']);
            this._splitter = this.input = this.output = this.context.createChannelSplitter(e.channels);
            this._internalChannels = [this._splitter];
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), { channels: 2 });
        }
        dispose() {
            return super.dispose(), this._splitter.disconnect(), this;
        }
    }
    class Nc extends Ne {
        constructor() {
            super(re(Nc.getDefaults(), arguments, ['channels']));
            this.name = 'Merge';
            ;
            const e = re(Nc.getDefaults(), arguments, ['channels']);
            this._merger = this.output = this.input = this.context.createChannelMerger(e.channels);
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), { channels: 2 });
        }
        dispose() {
            return super.dispose(), this._merger.disconnect(), this;
        }
    }
    class Ni extends Ne {
        constructor(e) {
            super(e);
            this.name = 'StereoEffect';
            this.input = new je({ context: this.context });
            this.input.channelCount = 2;
            this.input.channelCountMode = 'explicit';
            this._dryWet = this.output = new ou({
                context: this.context,
                fade: e.wet
            });
            this.wet = this._dryWet.fade;
            this._split = new cu({
                context: this.context,
                channels: 2
            });
            this._merge = new Nc({
                context: this.context,
                channels: 2
            });
            this.input.connect(this._split);
            this.input.connect(this._dryWet.a);
            this._merge.connect(this._dryWet.b);
            He(this, ['wet']);
            ;
        }
        connectEffectLeft(...e) {
            this._split.connect(e[0], 0, 0);
            Is(...e);
            ks(e[e.length - 1], this._merge, 0, 0);
            ;
        }
        connectEffectRight(...e) {
            this._split.connect(e[0], 1, 0);
            Is(...e);
            ks(e[e.length - 1], this._merge, 0, 1);
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), { wet: 1 });
        }
        dispose() {
            return super.dispose(), this._dryWet.dispose(), this._split.dispose(), this._merge.dispose(), this;
        }
    }
    class w2 extends Ni {
        constructor(e) {
            super(e);
            this.feedback = new Qe({
                context: this.context,
                value: e.feedback,
                units: 'normalRange'
            });
            this._feedbackL = new je({ context: this.context });
            this._feedbackR = new je({ context: this.context });
            this._feedbackSplit = new cu({
                context: this.context,
                channels: 2
            });
            this._feedbackMerge = new Nc({
                context: this.context,
                channels: 2
            });
            this._merge.connect(this._feedbackSplit);
            this._feedbackMerge.connect(this._split);
            this._feedbackSplit.connect(this._feedbackL, 0, 0);
            this._feedbackL.connect(this._feedbackMerge, 0, 0);
            this._feedbackSplit.connect(this._feedbackR, 1, 0);
            this._feedbackR.connect(this._feedbackMerge, 0, 1);
            this.feedback.fan(this._feedbackL.gain, this._feedbackR.gain);
            He(this, ['feedback']);
            ;
        }
        static getDefaults() {
            return Object.assign(Ni.getDefaults(), { feedback: 0.5 });
        }
        dispose() {
            return super.dispose(), this.feedback.dispose(), this._feedbackL.dispose(), this._feedbackR.dispose(), this._feedbackSplit.dispose(), this._feedbackMerge.dispose(), this;
        }
    }
    class z1 extends w2 {
        constructor() {
            super(re(z1.getDefaults(), arguments, [
                'frequency',
                'delayTime',
                'depth'
            ]));
            this.name = 'Chorus';
            ;
            const e = re(z1.getDefaults(), arguments, [
                'frequency',
                'delayTime',
                'depth'
            ]);
            this._depth = e.depth;
            this._delayTime = e.delayTime / 1000;
            this._lfoL = new Sr({
                context: this.context,
                frequency: e.frequency,
                min: 0,
                max: 1
            });
            this._lfoR = new Sr({
                context: this.context,
                frequency: e.frequency,
                min: 0,
                max: 1,
                phase: 180
            });
            this._delayNodeL = new rs({ context: this.context });
            this._delayNodeR = new rs({ context: this.context });
            this.frequency = this._lfoL.frequency;
            He(this, ['frequency']);
            this._lfoL.frequency.connect(this._lfoR.frequency);
            this.connectEffectLeft(this._delayNodeL);
            this.connectEffectRight(this._delayNodeR);
            this._lfoL.connect(this._delayNodeL.delayTime);
            this._lfoR.connect(this._delayNodeR.delayTime);
            this.depth = this._depth;
            this.type = e.type;
            this.spread = e.spread;
            ;
        }
        static getDefaults() {
            return Object.assign(w2.getDefaults(), {
                frequency: 1.5,
                delayTime: 3.5,
                depth: 0.7,
                type: 'sine',
                spread: 180,
                feedback: 0,
                wet: 0.5
            });
        }
        get depth() {
            return this._depth;
        }
        set depth(e) {
            this._depth = e;
            const n = this._delayTime * e;
            this._lfoL.min = Math.max(this._delayTime - n, 0);
            this._lfoL.max = this._delayTime + n;
            this._lfoR.min = Math.max(this._delayTime - n, 0);
            this._lfoR.max = this._delayTime + n;
            ;
        }
        get delayTime() {
            return this._delayTime * 1000;
        }
        set delayTime(e) {
            this._delayTime = e / 1000;
            this.depth = this._depth;
            ;
        }
        get type() {
            return this._lfoL.type;
        }
        set type(e) {
            this._lfoL.type = e;
            this._lfoR.type = e;
            ;
        }
        get spread() {
            return this._lfoR.phase - this._lfoL.phase;
        }
        set spread(e) {
            this._lfoL.phase = 90 - e / 2;
            this._lfoR.phase = e / 2 + 90;
            ;
        }
        start(e) {
            return this._lfoL.start(e), this._lfoR.start(e), this;
        }
        stop(e) {
            return this._lfoL.stop(e), this._lfoR.stop(e), this;
        }
        sync() {
            return this._lfoL.sync(), this._lfoR.sync(), this;
        }
        unsync() {
            return this._lfoL.unsync(), this._lfoR.unsync(), this;
        }
        dispose() {
            return super.dispose(), this._lfoL.dispose(), this._lfoR.dispose(), this._delayNodeL.dispose(), this._delayNodeR.dispose(), this.frequency.dispose(), this;
        }
    }
    class Y1 extends Un {
        constructor() {
            super(re(Y1.getDefaults(), arguments, ['distortion']));
            this.name = 'Distortion';
            ;
            const e = re(Y1.getDefaults(), arguments, ['distortion']);
            this._shaper = new Qs({
                context: this.context,
                length: 4096
            });
            this._distortion = e.distortion;
            this.connectEffect(this._shaper);
            this.distortion = e.distortion;
            this.oversample = e.oversample;
            ;
        }
        static getDefaults() {
            return Object.assign(Un.getDefaults(), {
                distortion: 0.4,
                oversample: 'none'
            });
        }
        get distortion() {
            return this._distortion;
        }
        set distortion(e) {
            this._distortion = e;
            const n = e * 100, r = Math.PI / 180;
            this._shaper.setMap(s => Math.abs(s) < 0.001 ? 0 : (3 + n) * s * 20 * r / (Math.PI + n * Math.abs(s)));
        }
        get oversample() {
            return this._shaper.oversample;
        }
        set oversample(e) {
            this._shaper.oversample = e;
        }
        dispose() {
            return super.dispose(), this._shaper.dispose(), this;
        }
    }
    class K1 extends Un {
        constructor(e) {
            super(e);
            this.name = 'FeedbackEffect';
            this._feedbackGain = new je({
                context: this.context,
                gain: e.feedback,
                units: 'normalRange'
            });
            this.feedback = this._feedbackGain.gain;
            He(this, 'feedback');
            this.effectReturn.chain(this._feedbackGain, this.effectSend);
            ;
        }
        static getDefaults() {
            return Object.assign(Un.getDefaults(), { feedback: 0.125 });
        }
        dispose() {
            return super.dispose(), this._feedbackGain.dispose(), this.feedback.dispose(), this;
        }
    }
    class Z1 extends K1 {
        constructor() {
            super(re(Z1.getDefaults(), arguments, [
                'delayTime',
                'feedback'
            ]));
            this.name = 'FeedbackDelay';
            ;
            const e = re(Z1.getDefaults(), arguments, [
                'delayTime',
                'feedback'
            ]);
            this._delayNode = new rs({
                context: this.context,
                delayTime: e.delayTime,
                maxDelay: e.maxDelay
            });
            this.delayTime = this._delayNode.delayTime;
            this.connectEffect(this._delayNode);
            He(this, 'delayTime');
            ;
        }
        static getDefaults() {
            return Object.assign(K1.getDefaults(), {
                delayTime: 0.25,
                maxDelay: 1
            });
        }
        dispose() {
            return super.dispose(), this._delayNode.dispose(), this.delayTime.dispose(), this;
        }
    }
    class i4e extends Ne {
        constructor(e) {
            super(e);
            this.name = 'PhaseShiftAllpass';
            this.input = new je({ context: this.context });
            this.output = new je({ context: this.context });
            this.offset90 = new je({ context: this.context });
            ;
            const n = [
                    0.6923878,
                    0.9360654322959,
                    0.988229522686,
                    0.9987488452737
                ], r = [
                    0.4021921162426,
                    0.856171088242,
                    0.9722909545651,
                    0.9952884791278
                ];
            this._bank0 = this._createAllPassFilterBank(n);
            this._bank1 = this._createAllPassFilterBank(r);
            this._oneSampleDelay = this.context.createIIRFilter([
                0,
                1
            ], [
                1,
                0
            ]);
            Is(this.input, ...this._bank0, this._oneSampleDelay, this.output);
            Is(this.input, ...this._bank1, this.offset90);
            ;
        }
        _createAllPassFilterBank(e) {
            return e.map(r => {
                const s = [
                    [
                        r * r,
                        0,
                        -1
                    ],
                    [
                        1,
                        0,
                        -(r * r)
                    ]
                ];
                return this.context.createIIRFilter(s[0], s[1]);
            });
        }
        dispose() {
            return super.dispose(), this.input.dispose(), this.output.dispose(), this.offset90.dispose(), this._bank0.forEach(e => e.disconnect()), this._bank1.forEach(e => e.disconnect()), this._oneSampleDelay.disconnect(), this;
        }
    }
    class X1 extends Un {
        constructor() {
            super(re(X1.getDefaults(), arguments, ['frequency']));
            this.name = 'FrequencyShifter';
            ;
            const e = re(X1.getDefaults(), arguments, ['frequency']);
            this.frequency = new Qe({
                context: this.context,
                units: 'frequency',
                value: e.frequency,
                minValue: -this.context.sampleRate / 2,
                maxValue: this.context.sampleRate / 2
            });
            this._sine = new of({
                context: this.context,
                type: 'sine'
            });
            this._cosine = new ln({
                context: this.context,
                phase: -90,
                type: 'sine'
            });
            this._sineMultiply = new hn({ context: this.context });
            this._cosineMultiply = new hn({ context: this.context });
            this._negate = new pI({ context: this.context });
            this._add = new Lu({ context: this.context });
            this._phaseShifter = new i4e({ context: this.context });
            this.effectSend.connect(this._phaseShifter);
            this.frequency.fan(this._sine.frequency, this._cosine.frequency);
            this._phaseShifter.offset90.connect(this._cosineMultiply);
            this._cosine.connect(this._cosineMultiply.factor);
            this._phaseShifter.connect(this._sineMultiply);
            this._sine.connect(this._sineMultiply.factor);
            this._sineMultiply.connect(this._negate);
            this._cosineMultiply.connect(this._add);
            this._negate.connect(this._add.addend);
            this._add.connect(this.effectReturn);
            ;
            const n = this.immediate();
            this._sine.start(n);
            this._cosine.start(n);
            ;
        }
        static getDefaults() {
            return Object.assign(Un.getDefaults(), { frequency: 0 });
        }
        dispose() {
            return super.dispose(), this.frequency.dispose(), this._add.dispose(), this._cosine.dispose(), this._cosineMultiply.dispose(), this._negate.dispose(), this._phaseShifter.dispose(), this._sine.dispose(), this._sineMultiply.dispose(), this;
        }
    }
    const Mw = [
            0.03530612244897959,
            0.03666666666666667,
            0.03380952380952381,
            0.03224489795918367,
            0.02895691609977324,
            0.03074829931972789,
            0.026938775510204082,
            0.025306122448979593
        ], Dw = [
            225,
            556,
            441,
            341
        ];
    class Q1 extends Ni {
        constructor() {
            super(re(Q1.getDefaults(), arguments, [
                'roomSize',
                'dampening'
            ]));
            this.name = 'Freeverb';
            this._combFilters = [];
            this._allpassFiltersL = [];
            this._allpassFiltersR = [];
            ;
            const e = re(Q1.getDefaults(), arguments, [
                'roomSize',
                'dampening'
            ]);
            this.roomSize = new Qe({
                context: this.context,
                value: e.roomSize,
                units: 'normalRange'
            });
            this._allpassFiltersL = Dw.map(n => {
                const r = this.context.createBiquadFilter();
                return r.type = 'allpass', r.frequency.value = n, r;
            });
            this._allpassFiltersR = Dw.map(n => {
                const r = this.context.createBiquadFilter();
                return r.type = 'allpass', r.frequency.value = n, r;
            });
            this._combFilters = Mw.map((n, r) => {
                const s = new _f({
                    context: this.context,
                    dampening: e.dampening,
                    delayTime: n
                });
                return r < Mw.length / 2 ? this.connectEffectLeft(s, ...this._allpassFiltersL) : this.connectEffectRight(s, ...this._allpassFiltersR), this.roomSize.connect(s.resonance), s;
            });
            He(this, ['roomSize']);
            ;
        }
        static getDefaults() {
            return Object.assign(Ni.getDefaults(), {
                roomSize: 0.7,
                dampening: 3000
            });
        }
        get dampening() {
            return this._combFilters[0].dampening;
        }
        set dampening(e) {
            this._combFilters.forEach(n => n.dampening = e);
        }
        dispose() {
            return super.dispose(), this._allpassFiltersL.forEach(e => e.disconnect()), this._allpassFiltersR.forEach(e => e.disconnect()), this._combFilters.forEach(e => e.dispose()), this.roomSize.dispose(), this;
        }
    }
    const $w = [
            0.06748,
            0.06404,
            0.08212,
            0.09004
        ], o4e = [
            0.773,
            0.802,
            0.753,
            0.733
        ], a4e = [
            347,
            113,
            37
        ];
    class J1 extends Ni {
        constructor() {
            super(re(J1.getDefaults(), arguments, ['roomSize']));
            this.name = 'JCReverb';
            this._allpassFilters = [];
            this._feedbackCombFilters = [];
            ;
            const e = re(J1.getDefaults(), arguments, ['roomSize']);
            this.roomSize = new Qe({
                context: this.context,
                value: e.roomSize,
                units: 'normalRange'
            });
            this._scaleRoomSize = new fo({
                context: this.context,
                min: -0.733,
                max: 0.197
            });
            this._allpassFilters = a4e.map(n => {
                const r = this.context.createBiquadFilter();
                return r.type = 'allpass', r.frequency.value = n, r;
            });
            this._feedbackCombFilters = $w.map((n, r) => {
                const s = new mf({
                    context: this.context,
                    delayTime: n
                });
                return this._scaleRoomSize.connect(s.resonance), s.resonance.value = o4e[r], r < $w.length / 2 ? this.connectEffectLeft(...this._allpassFilters, s) : this.connectEffectRight(...this._allpassFilters, s), s;
            });
            this.roomSize.connect(this._scaleRoomSize);
            He(this, ['roomSize']);
            ;
        }
        static getDefaults() {
            return Object.assign(Ni.getDefaults(), { roomSize: 0.5 });
        }
        dispose() {
            return super.dispose(), this._allpassFilters.forEach(e => e.disconnect()), this._feedbackCombFilters.forEach(e => e.dispose()), this.roomSize.dispose(), this._scaleRoomSize.dispose(), this;
        }
    }
    class Lw extends w2 {
        constructor(e) {
            super(e);
            this._feedbackL.disconnect();
            this._feedbackL.connect(this._feedbackMerge, 0, 1);
            this._feedbackR.disconnect();
            this._feedbackR.connect(this._feedbackMerge, 0, 0);
            He(this, ['feedback']);
            ;
        }
    }
    class em extends Lw {
        constructor() {
            super(re(em.getDefaults(), arguments, [
                'delayTime',
                'feedback'
            ]));
            this.name = 'PingPongDelay';
            ;
            const e = re(em.getDefaults(), arguments, [
                'delayTime',
                'feedback'
            ]);
            this._leftDelay = new rs({
                context: this.context,
                maxDelay: e.maxDelay
            });
            this._rightDelay = new rs({
                context: this.context,
                maxDelay: e.maxDelay
            });
            this._rightPreDelay = new rs({
                context: this.context,
                maxDelay: e.maxDelay
            });
            this.delayTime = new Qe({
                context: this.context,
                units: 'time',
                value: e.delayTime
            });
            this.connectEffectLeft(this._leftDelay);
            this.connectEffectRight(this._rightPreDelay, this._rightDelay);
            this.delayTime.fan(this._leftDelay.delayTime, this._rightDelay.delayTime, this._rightPreDelay.delayTime);
            this._feedbackL.disconnect();
            this._feedbackL.connect(this._rightDelay);
            He(this, ['delayTime']);
            ;
        }
        static getDefaults() {
            return Object.assign(Lw.getDefaults(), {
                delayTime: 0.25,
                maxDelay: 1
            });
        }
        dispose() {
            return super.dispose(), this._leftDelay.dispose(), this._rightDelay.dispose(), this._rightPreDelay.dispose(), this.delayTime.dispose(), this;
        }
    }
    class tm extends K1 {
        constructor() {
            super(re(tm.getDefaults(), arguments, ['pitch']));
            this.name = 'PitchShift';
            ;
            const e = re(tm.getDefaults(), arguments, ['pitch']);
            this._frequency = new Qe({ context: this.context });
            this._delayA = new rs({
                maxDelay: 1,
                context: this.context
            });
            this._lfoA = new Sr({
                context: this.context,
                min: 0,
                max: 0.1,
                type: 'sawtooth'
            }).connect(this._delayA.delayTime);
            this._delayB = new rs({
                maxDelay: 1,
                context: this.context
            });
            this._lfoB = new Sr({
                context: this.context,
                min: 0,
                max: 0.1,
                type: 'sawtooth',
                phase: 180
            }).connect(this._delayB.delayTime);
            this._crossFade = new ou({ context: this.context });
            this._crossFadeLFO = new Sr({
                context: this.context,
                min: 0,
                max: 1,
                type: 'triangle',
                phase: 90
            }).connect(this._crossFade.fade);
            this._feedbackDelay = new rs({
                delayTime: e.delayTime,
                context: this.context
            });
            this.delayTime = this._feedbackDelay.delayTime;
            He(this, 'delayTime');
            this._pitch = e.pitch;
            this._windowSize = e.windowSize;
            this._delayA.connect(this._crossFade.a);
            this._delayB.connect(this._crossFade.b);
            this._frequency.fan(this._lfoA.frequency, this._lfoB.frequency, this._crossFadeLFO.frequency);
            this.effectSend.fan(this._delayA, this._delayB);
            this._crossFade.chain(this._feedbackDelay, this.effectReturn);
            ;
            const n = this.now();
            this._lfoA.start(n);
            this._lfoB.start(n);
            this._crossFadeLFO.start(n);
            this.windowSize = this._windowSize;
            ;
        }
        static getDefaults() {
            return Object.assign(K1.getDefaults(), {
                pitch: 0,
                windowSize: 0.1,
                delayTime: 0,
                feedback: 0
            });
        }
        get pitch() {
            return this._pitch;
        }
        set pitch(e) {
            this._pitch = e;
            let n = 0;
            e < 0 ? (this._lfoA.min = 0, this._lfoA.max = this._windowSize, this._lfoB.min = 0, this._lfoB.max = this._windowSize, n = Ic(e - 1) + 1) : (this._lfoA.min = this._windowSize, this._lfoA.max = 0, this._lfoB.min = this._windowSize, this._lfoB.max = 0, n = Ic(e) - 1);
            this._frequency.value = n * (1.2 / this._windowSize);
            ;
        }
        get windowSize() {
            return this._windowSize;
        }
        set windowSize(e) {
            this._windowSize = this.toSeconds(e);
            this.pitch = this._pitch;
            ;
        }
        dispose() {
            return super.dispose(), this._frequency.dispose(), this._delayA.dispose(), this._delayB.dispose(), this._lfoA.dispose(), this._lfoB.dispose(), this._crossFade.dispose(), this._crossFadeLFO.dispose(), this._feedbackDelay.dispose(), this;
        }
    }
    class nm extends Ni {
        constructor() {
            super(re(nm.getDefaults(), arguments, [
                'frequency',
                'octaves',
                'baseFrequency'
            ]));
            this.name = 'Phaser';
            ;
            const e = re(nm.getDefaults(), arguments, [
                'frequency',
                'octaves',
                'baseFrequency'
            ]);
            this._lfoL = new Sr({
                context: this.context,
                frequency: e.frequency,
                min: 0,
                max: 1
            });
            this._lfoR = new Sr({
                context: this.context,
                frequency: e.frequency,
                min: 0,
                max: 1,
                phase: 180
            });
            this._baseFrequency = this.toFrequency(e.baseFrequency);
            this._octaves = e.octaves;
            this.Q = new Qe({
                context: this.context,
                value: e.Q,
                units: 'positive'
            });
            this._filtersL = this._makeFilters(e.stages, this._lfoL);
            this._filtersR = this._makeFilters(e.stages, this._lfoR);
            this.frequency = this._lfoL.frequency;
            this.frequency.value = e.frequency;
            this.connectEffectLeft(...this._filtersL);
            this.connectEffectRight(...this._filtersR);
            this._lfoL.frequency.connect(this._lfoR.frequency);
            this.baseFrequency = e.baseFrequency;
            this.octaves = e.octaves;
            this._lfoL.start();
            this._lfoR.start();
            He(this, [
                'frequency',
                'Q'
            ]);
            ;
        }
        static getDefaults() {
            return Object.assign(Ni.getDefaults(), {
                frequency: 0.5,
                octaves: 3,
                stages: 10,
                Q: 10,
                baseFrequency: 350
            });
        }
        _makeFilters(e, n) {
            const r = [];
            for (let s = 0; s < e; s++) {
                const i = this.context.createBiquadFilter();
                ;
                this.Q.connect(i.Q);
                n.connect(i.frequency);
                r.push(i);
                ;
            }
            return r;
        }
        get octaves() {
            return this._octaves;
        }
        set octaves(e) {
            this._octaves = e;
            const n = this._baseFrequency * Math.pow(2, e);
            this._lfoL.max = n;
            this._lfoR.max = n;
            ;
        }
        get baseFrequency() {
            return this._baseFrequency;
        }
        set baseFrequency(e) {
            this._baseFrequency = this.toFrequency(e);
            this._lfoL.min = this._baseFrequency;
            this._lfoR.min = this._baseFrequency;
            this.octaves = this._octaves;
            ;
        }
        dispose() {
            return super.dispose(), this.Q.dispose(), this._lfoL.dispose(), this._lfoR.dispose(), this._filtersL.forEach(e => e.disconnect()), this._filtersR.forEach(e => e.disconnect()), this.frequency.dispose(), this;
        }
    }
    class rm extends Un {
        constructor() {
            super(re(rm.getDefaults(), arguments, ['decay']));
            this.name = 'Reverb';
            this._convolver = this.context.createConvolver();
            this.ready = Promise.resolve();
            ;
            const e = re(rm.getDefaults(), arguments, ['decay']);
            this._decay = e.decay;
            this._preDelay = e.preDelay;
            this.generate();
            this.connectEffect(this._convolver);
            ;
        }
        static getDefaults() {
            return Object.assign(Un.getDefaults(), {
                decay: 1.5,
                preDelay: 0.01
            });
        }
        get decay() {
            return this._decay;
        }
        set decay(e) {
            e = this.toSeconds(e);
            Xs(e, 0.001);
            this._decay = e;
            this.generate();
            ;
        }
        get preDelay() {
            return this._preDelay;
        }
        set preDelay(e) {
            e = this.toSeconds(e);
            Xs(e, 0);
            this._preDelay = e;
            this.generate();
            ;
        }
        generate() {
            return An(this, void 0, void 0, function* () {
                const e = this.ready, n = new Tg(2, this._decay + this._preDelay, this.context.sampleRate), r = new pa({ context: n }), s = new pa({ context: n }), i = new Nc({ context: n });
                r.connect(i, 0, 0);
                s.connect(i, 0, 1);
                ;
                const o = new je({ context: n }).toDestination();
                i.connect(o);
                r.start(0);
                s.start(0);
                o.gain.setValueAtTime(0, 0);
                o.gain.setValueAtTime(1, this._preDelay);
                o.gain.exponentialApproachValueAtTime(0, this._preDelay, this.decay);
                ;
                const a = n.render();
                return this.ready = a.then(_t), yield e, this._convolver.buffer = (yield a).get(), this;
            });
        }
        dispose() {
            return super.dispose(), this._convolver.disconnect(), this;
        }
    }
    class m5 extends Ne {
        constructor() {
            super(re(m5.getDefaults(), arguments));
            this.name = 'MidSideSplit';
            this._split = this.input = new cu({
                channels: 2,
                context: this.context
            });
            this._midAdd = new Lu({ context: this.context });
            this.mid = new hn({
                context: this.context,
                value: Math.SQRT1_2
            });
            this._sideSubtract = new Fu({ context: this.context });
            this.side = new hn({
                context: this.context,
                value: Math.SQRT1_2
            });
            this._split.connect(this._midAdd, 0);
            this._split.connect(this._midAdd.addend, 1);
            this._split.connect(this._sideSubtract, 0);
            this._split.connect(this._sideSubtract.subtrahend, 1);
            this._midAdd.connect(this.mid);
            this._sideSubtract.connect(this.side);
            ;
        }
        dispose() {
            return super.dispose(), this.mid.dispose(), this.side.dispose(), this._midAdd.dispose(), this._sideSubtract.dispose(), this._split.dispose(), this;
        }
    }
    class g5 extends Ne {
        constructor() {
            super(re(g5.getDefaults(), arguments));
            this.name = 'MidSideMerge';
            this.mid = new je({ context: this.context });
            this.side = new je({ context: this.context });
            this._left = new Lu({ context: this.context });
            this._leftMult = new hn({
                context: this.context,
                value: Math.SQRT1_2
            });
            this._right = new Fu({ context: this.context });
            this._rightMult = new hn({
                context: this.context,
                value: Math.SQRT1_2
            });
            this._merge = this.output = new Nc({ context: this.context });
            this.mid.fan(this._left);
            this.side.connect(this._left.addend);
            this.mid.connect(this._right);
            this.side.connect(this._right.subtrahend);
            this._left.connect(this._leftMult);
            this._right.connect(this._rightMult);
            this._leftMult.connect(this._merge, 0, 0);
            this._rightMult.connect(this._merge, 0, 1);
            ;
        }
        dispose() {
            return super.dispose(), this.mid.dispose(), this.side.dispose(), this._leftMult.dispose(), this._rightMult.dispose(), this._left.dispose(), this._right.dispose(), this;
        }
    }
    class Fw extends Un {
        constructor(e) {
            super(e);
            this.name = 'MidSideEffect';
            this._midSideMerge = new g5({ context: this.context });
            this._midSideSplit = new m5({ context: this.context });
            this._midSend = this._midSideSplit.mid;
            this._sideSend = this._midSideSplit.side;
            this._midReturn = this._midSideMerge.mid;
            this._sideReturn = this._midSideMerge.side;
            this.effectSend.connect(this._midSideSplit);
            this._midSideMerge.connect(this.effectReturn);
            ;
        }
        connectEffectMid(...e) {
            this._midSend.chain(...e, this._midReturn);
        }
        connectEffectSide(...e) {
            this._sideSend.chain(...e, this._sideReturn);
        }
        dispose() {
            return super.dispose(), this._midSideSplit.dispose(), this._midSideMerge.dispose(), this._midSend.dispose(), this._sideSend.dispose(), this._midReturn.dispose(), this._sideReturn.dispose(), this;
        }
    }
    class sm extends Fw {
        constructor() {
            super(re(sm.getDefaults(), arguments, ['width']));
            this.name = 'StereoWidener';
            ;
            const e = re(sm.getDefaults(), arguments, ['width']);
            this.width = new Qe({
                context: this.context,
                value: e.width,
                units: 'normalRange'
            });
            He(this, ['width']);
            this._twoTimesWidthMid = new hn({
                context: this.context,
                value: 2
            });
            this._twoTimesWidthSide = new hn({
                context: this.context,
                value: 2
            });
            this._midMult = new hn({ context: this.context });
            this._twoTimesWidthMid.connect(this._midMult.factor);
            this.connectEffectMid(this._midMult);
            this._oneMinusWidth = new Fu({ context: this.context });
            this._oneMinusWidth.connect(this._twoTimesWidthMid);
            ks(this.context.getConstant(1), this._oneMinusWidth);
            this.width.connect(this._oneMinusWidth.subtrahend);
            this._sideMult = new hn({ context: this.context });
            this.width.connect(this._twoTimesWidthSide);
            this._twoTimesWidthSide.connect(this._sideMult.factor);
            this.connectEffectSide(this._sideMult);
            ;
        }
        static getDefaults() {
            return Object.assign(Fw.getDefaults(), { width: 0.5 });
        }
        dispose() {
            return super.dispose(), this.width.dispose(), this._midMult.dispose(), this._sideMult.dispose(), this._twoTimesWidthMid.dispose(), this._twoTimesWidthSide.dispose(), this._oneMinusWidth.dispose(), this;
        }
    }
    class Ef extends Ni {
        constructor() {
            super(re(Ef.getDefaults(), arguments, [
                'frequency',
                'depth'
            ]));
            this.name = 'Tremolo';
            ;
            const e = re(Ef.getDefaults(), arguments, [
                'frequency',
                'depth'
            ]);
            this._lfoL = new Sr({
                context: this.context,
                type: e.type,
                min: 1,
                max: 0
            });
            this._lfoR = new Sr({
                context: this.context,
                type: e.type,
                min: 1,
                max: 0
            });
            this._amplitudeL = new je({ context: this.context });
            this._amplitudeR = new je({ context: this.context });
            this.frequency = new Qe({
                context: this.context,
                value: e.frequency,
                units: 'frequency'
            });
            this.depth = new Qe({
                context: this.context,
                value: e.depth,
                units: 'normalRange'
            });
            He(this, [
                'frequency',
                'depth'
            ]);
            this.connectEffectLeft(this._amplitudeL);
            this.connectEffectRight(this._amplitudeR);
            this._lfoL.connect(this._amplitudeL.gain);
            this._lfoR.connect(this._amplitudeR.gain);
            this.frequency.fan(this._lfoL.frequency, this._lfoR.frequency);
            this.depth.fan(this._lfoR.amplitude, this._lfoL.amplitude);
            this.spread = e.spread;
            ;
        }
        static getDefaults() {
            return Object.assign(Ni.getDefaults(), {
                frequency: 10,
                type: 'sine',
                depth: 0.5,
                spread: 180
            });
        }
        start(e) {
            return this._lfoL.start(e), this._lfoR.start(e), this;
        }
        stop(e) {
            return this._lfoL.stop(e), this._lfoR.stop(e), this;
        }
        sync() {
            return this._lfoL.sync(), this._lfoR.sync(), this.context.transport.syncSignal(this.frequency), this;
        }
        unsync() {
            return this._lfoL.unsync(), this._lfoR.unsync(), this.context.transport.unsyncSignal(this.frequency), this;
        }
        get type() {
            return this._lfoL.type;
        }
        set type(e) {
            this._lfoL.type = e;
            this._lfoR.type = e;
            ;
        }
        get spread() {
            return this._lfoR.phase - this._lfoL.phase;
        }
        set spread(e) {
            this._lfoL.phase = 90 - e / 2;
            this._lfoR.phase = e / 2 + 90;
            ;
        }
        dispose() {
            return super.dispose(), this._lfoL.dispose(), this._lfoR.dispose(), this._amplitudeL.dispose(), this._amplitudeR.dispose(), this.frequency.dispose(), this.depth.dispose(), this;
        }
    }
    class im extends Un {
        constructor() {
            super(re(im.getDefaults(), arguments, [
                'frequency',
                'depth'
            ]));
            this.name = 'Vibrato';
            ;
            const e = re(im.getDefaults(), arguments, [
                'frequency',
                'depth'
            ]);
            this._delayNode = new rs({
                context: this.context,
                delayTime: 0,
                maxDelay: e.maxDelay
            });
            this._lfo = new Sr({
                context: this.context,
                type: e.type,
                min: 0,
                max: e.maxDelay,
                frequency: e.frequency,
                phase: -90
            }).start().connect(this._delayNode.delayTime);
            this.frequency = this._lfo.frequency;
            this.depth = this._lfo.amplitude;
            this.depth.value = e.depth;
            He(this, [
                'frequency',
                'depth'
            ]);
            this.effectSend.chain(this._delayNode, this.effectReturn);
            ;
        }
        static getDefaults() {
            return Object.assign(Un.getDefaults(), {
                maxDelay: 0.005,
                frequency: 5,
                depth: 0.1,
                type: 'sine'
            });
        }
        get type() {
            return this._lfo.type;
        }
        set type(e) {
            this._lfo.type = e;
        }
        dispose() {
            return super.dispose(), this._delayNode.dispose(), this._lfo.dispose(), this.frequency.dispose(), this.depth.dispose(), this;
        }
    }
    class En extends Ne {
        constructor() {
            super(re(En.getDefaults(), arguments, ['solo']));
            this.name = 'Solo';
            ;
            const e = re(En.getDefaults(), arguments, ['solo']);
            this.input = this.output = new je({ context: this.context });
            En._allSolos.has(this.context) || En._allSolos.set(this.context, new Set());
            En._allSolos.get(this.context).add(this);
            this.solo = e.solo;
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), { solo: false });
        }
        get solo() {
            return this._isSoloed();
        }
        set solo(e) {
            e ? this._addSolo() : this._removeSolo();
            En._allSolos.get(this.context).forEach(n => n._updateSolo());
            ;
        }
        get muted() {
            return this.input.gain.value === 0;
        }
        _addSolo() {
            En._soloed.has(this.context) || En._soloed.set(this.context, new Set());
            En._soloed.get(this.context).add(this);
            ;
        }
        _removeSolo() {
            En._soloed.has(this.context) && En._soloed.get(this.context).delete(this);
        }
        _isSoloed() {
            return En._soloed.has(this.context) && En._soloed.get(this.context).has(this);
        }
        _noSolos() {
            return !En._soloed.has(this.context) || En._soloed.has(this.context) && En._soloed.get(this.context).size === 0;
        }
        _updateSolo() {
            this._isSoloed() ? this.input.gain.value = 1 : this._noSolos() ? this.input.gain.value = 1 : this.input.gain.value = 0;
        }
        dispose() {
            return super.dispose(), En._allSolos.get(this.context).delete(this), this._removeSolo(), this;
        }
    }
    En._allSolos = new Map();
    En._soloed = new Map();
    class lu extends Ne {
        constructor() {
            super(re(lu.getDefaults(), arguments, [
                'pan',
                'volume'
            ]));
            this.name = 'PanVol';
            ;
            const e = re(lu.getDefaults(), arguments, [
                'pan',
                'volume'
            ]);
            this._panner = this.input = new au({
                context: this.context,
                pan: e.pan,
                channelCount: e.channelCount
            });
            this.pan = this._panner.pan;
            this._volume = this.output = new Ai({
                context: this.context,
                volume: e.volume
            });
            this.volume = this._volume.volume;
            this._panner.connect(this._volume);
            this.mute = e.mute;
            He(this, [
                'pan',
                'volume'
            ]);
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), {
                mute: false,
                pan: 0,
                volume: 0,
                channelCount: 1
            });
        }
        get mute() {
            return this._volume.mute;
        }
        set mute(e) {
            this._volume.mute = e;
        }
        dispose() {
            return super.dispose(), this._panner.dispose(), this.pan.dispose(), this._volume.dispose(), this.volume.dispose(), this;
        }
    }
    class ac extends Ne {
        constructor() {
            super(re(ac.getDefaults(), arguments, [
                'volume',
                'pan'
            ]));
            this.name = 'Channel';
            ;
            const e = re(ac.getDefaults(), arguments, [
                'volume',
                'pan'
            ]);
            this._solo = this.input = new En({
                solo: e.solo,
                context: this.context
            });
            this._panVol = this.output = new lu({
                context: this.context,
                pan: e.pan,
                volume: e.volume,
                mute: e.mute,
                channelCount: e.channelCount
            });
            this.pan = this._panVol.pan;
            this.volume = this._panVol.volume;
            this._solo.connect(this._panVol);
            He(this, [
                'pan',
                'volume'
            ]);
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), {
                pan: 0,
                volume: 0,
                mute: false,
                solo: false,
                channelCount: 1
            });
        }
        get solo() {
            return this._solo.solo;
        }
        set solo(e) {
            this._solo.solo = e;
        }
        get muted() {
            return this._solo.muted || this.mute;
        }
        get mute() {
            return this._panVol.mute;
        }
        set mute(e) {
            this._panVol.mute = e;
        }
        _getBus(e) {
            return ac.buses.has(e) || ac.buses.set(e, new je({ context: this.context })), ac.buses.get(e);
        }
        send(e, n = 0) {
            const r = this._getBus(e), s = new je({
                    context: this.context,
                    units: 'decibels',
                    gain: n
                });
            return this.connect(s), s.connect(r), s;
        }
        receive(e) {
            return this._getBus(e).connect(this), this;
        }
        dispose() {
            return super.dispose(), this._panVol.dispose(), this.pan.dispose(), this.volume.dispose(), this._solo.dispose(), this;
        }
    }
    ac.buses = new Map();
    class Tf extends Ne {
        constructor() {
            super(re(Tf.getDefaults(), arguments, [
                'lowFrequency',
                'highFrequency'
            ]));
            this.name = 'MultibandSplit';
            this.input = new je({ context: this.context });
            this.output = void 0;
            this.low = new Dr({
                context: this.context,
                frequency: 0,
                type: 'lowpass'
            });
            this._lowMidFilter = new Dr({
                context: this.context,
                frequency: 0,
                type: 'highpass'
            });
            this.mid = new Dr({
                context: this.context,
                frequency: 0,
                type: 'lowpass'
            });
            this.high = new Dr({
                context: this.context,
                frequency: 0,
                type: 'highpass'
            });
            this._internalChannels = [
                this.low,
                this.mid,
                this.high
            ];
            ;
            const e = re(Tf.getDefaults(), arguments, [
                'lowFrequency',
                'highFrequency'
            ]);
            this.lowFrequency = new Qe({
                context: this.context,
                units: 'frequency',
                value: e.lowFrequency
            });
            this.highFrequency = new Qe({
                context: this.context,
                units: 'frequency',
                value: e.highFrequency
            });
            this.Q = new Qe({
                context: this.context,
                units: 'positive',
                value: e.Q
            });
            this.input.fan(this.low, this.high);
            this.input.chain(this._lowMidFilter, this.mid);
            this.lowFrequency.fan(this.low.frequency, this._lowMidFilter.frequency);
            this.highFrequency.fan(this.mid.frequency, this.high.frequency);
            this.Q.connect(this.low.Q);
            this.Q.connect(this._lowMidFilter.Q);
            this.Q.connect(this.mid.Q);
            this.Q.connect(this.high.Q);
            He(this, [
                'high',
                'mid',
                'low',
                'highFrequency',
                'lowFrequency'
            ]);
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), {
                Q: 1,
                highFrequency: 2500,
                lowFrequency: 400
            });
        }
        dispose() {
            return super.dispose(), rd(this, [
                'high',
                'mid',
                'low',
                'highFrequency',
                'lowFrequency'
            ]), this.low.dispose(), this._lowMidFilter.dispose(), this.mid.dispose(), this.high.dispose(), this.lowFrequency.dispose(), this.highFrequency.dispose(), this.Q.dispose(), this;
        }
    }
    class c4e extends Ne {
        constructor() {
            super(...arguments);
            this.name = 'Listener';
            this.positionX = new ft({
                context: this.context,
                param: this.context.rawContext.listener.positionX
            });
            this.positionY = new ft({
                context: this.context,
                param: this.context.rawContext.listener.positionY
            });
            this.positionZ = new ft({
                context: this.context,
                param: this.context.rawContext.listener.positionZ
            });
            this.forwardX = new ft({
                context: this.context,
                param: this.context.rawContext.listener.forwardX
            });
            this.forwardY = new ft({
                context: this.context,
                param: this.context.rawContext.listener.forwardY
            });
            this.forwardZ = new ft({
                context: this.context,
                param: this.context.rawContext.listener.forwardZ
            });
            this.upX = new ft({
                context: this.context,
                param: this.context.rawContext.listener.upX
            });
            this.upY = new ft({
                context: this.context,
                param: this.context.rawContext.listener.upY
            });
            this.upZ = new ft({
                context: this.context,
                param: this.context.rawContext.listener.upZ
            });
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), {
                positionX: 0,
                positionY: 0,
                positionZ: 0,
                forwardX: 0,
                forwardY: 0,
                forwardZ: -1,
                upX: 0,
                upY: 1,
                upZ: 0
            });
        }
        dispose() {
            return super.dispose(), this.positionX.dispose(), this.positionY.dispose(), this.positionZ.dispose(), this.forwardX.dispose(), this.forwardY.dispose(), this.forwardZ.dispose(), this.upX.dispose(), this.upY.dispose(), this.upZ.dispose(), this;
        }
    }
    bg(t => {
        ;
    });
    Eg(t => {
        t.listener.dispose();
    });
    class ra extends Ne {
        constructor() {
            super(re(ra.getDefaults(), arguments, [
                'threshold',
                'ratio'
            ]));
            this.name = 'Compressor';
            this._compressor = this.context.createDynamicsCompressor();
            this.input = this._compressor;
            this.output = this._compressor;
            ;
            const e = re(ra.getDefaults(), arguments, [
                'threshold',
                'ratio'
            ]);
            this.threshold = new ft({
                minValue: this._compressor.threshold.minValue,
                maxValue: this._compressor.threshold.maxValue,
                context: this.context,
                convert: false,
                param: this._compressor.threshold,
                units: 'decibels',
                value: e.threshold
            });
            this.attack = new ft({
                minValue: this._compressor.attack.minValue,
                maxValue: this._compressor.attack.maxValue,
                context: this.context,
                param: this._compressor.attack,
                units: 'time',
                value: e.attack
            });
            this.release = new ft({
                minValue: this._compressor.release.minValue,
                maxValue: this._compressor.release.maxValue,
                context: this.context,
                param: this._compressor.release,
                units: 'time',
                value: e.release
            });
            this.knee = new ft({
                minValue: this._compressor.knee.minValue,
                maxValue: this._compressor.knee.maxValue,
                context: this.context,
                convert: false,
                param: this._compressor.knee,
                units: 'decibels',
                value: e.knee
            });
            this.ratio = new ft({
                minValue: this._compressor.ratio.minValue,
                maxValue: this._compressor.ratio.maxValue,
                context: this.context,
                convert: false,
                param: this._compressor.ratio,
                units: 'positive',
                value: e.ratio
            });
            He(this, [
                'knee',
                'release',
                'attack',
                'ratio',
                'threshold'
            ]);
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), {
                attack: 0.003,
                knee: 30,
                ratio: 12,
                release: 0.25,
                threshold: -24
            });
        }
        get reduction() {
            return this._compressor.reduction;
        }
        dispose() {
            return super.dispose(), this._compressor.disconnect(), this.attack.dispose(), this.release.dispose(), this.threshold.dispose(), this.ratio.dispose(), this.knee.dispose(), this;
        }
    }
    class om extends Ne {
        constructor() {
            super(Object.assign(re(om.getDefaults(), arguments, [
                'threshold',
                'smoothing'
            ])));
            this.name = 'Gate';
            ;
            const e = re(om.getDefaults(), arguments, [
                'threshold',
                'smoothing'
            ]);
            this._follower = new bf({
                context: this.context,
                smoothing: e.smoothing
            });
            this._gt = new $1({
                context: this.context,
                value: k1(e.threshold)
            });
            this.input = new je({ context: this.context });
            this._gate = this.output = new je({ context: this.context });
            this.input.connect(this._gate);
            this.input.chain(this._follower, this._gt, this._gate.gain);
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), {
                smoothing: 0.1,
                threshold: -40
            });
        }
        get threshold() {
            return o5(this._gt.value);
        }
        set threshold(e) {
            this._gt.value = k1(e);
        }
        get smoothing() {
            return this._follower.smoothing;
        }
        set smoothing(e) {
            this._follower.smoothing = e;
        }
        dispose() {
            return super.dispose(), this.input.dispose(), this._follower.dispose(), this._gt.dispose(), this._gate.dispose(), this;
        }
    }
    class am extends Ne {
        constructor() {
            super(Object.assign(re(am.getDefaults(), arguments, ['threshold'])));
            this.name = 'Limiter';
            ;
            const e = re(am.getDefaults(), arguments, ['threshold']);
            this._compressor = this.input = this.output = new ra({
                context: this.context,
                ratio: 20,
                attack: 0.003,
                release: 0.01,
                threshold: e.threshold
            });
            this.threshold = this._compressor.threshold;
            He(this, 'threshold');
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), { threshold: -12 });
        }
        get reduction() {
            return this._compressor.reduction;
        }
        dispose() {
            return super.dispose(), this._compressor.dispose(), this.threshold.dispose(), this;
        }
    }
    class cm extends Ne {
        constructor() {
            super(Object.assign(re(cm.getDefaults(), arguments)));
            this.name = 'MultibandCompressor';
            ;
            const e = re(cm.getDefaults(), arguments);
            this._splitter = this.input = new Tf({
                context: this.context,
                lowFrequency: e.lowFrequency,
                highFrequency: e.highFrequency
            });
            this.lowFrequency = this._splitter.lowFrequency;
            this.highFrequency = this._splitter.highFrequency;
            this.output = new je({ context: this.context });
            this.low = new ra(Object.assign(e.low, { context: this.context }));
            this.mid = new ra(Object.assign(e.mid, { context: this.context }));
            this.high = new ra(Object.assign(e.high, { context: this.context }));
            this._splitter.low.chain(this.low, this.output);
            this._splitter.mid.chain(this.mid, this.output);
            this._splitter.high.chain(this.high, this.output);
            He(this, [
                'high',
                'mid',
                'low',
                'highFrequency',
                'lowFrequency'
            ]);
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), {
                lowFrequency: 250,
                highFrequency: 2000,
                low: {
                    ratio: 6,
                    threshold: -30,
                    release: 0.25,
                    attack: 0.03,
                    knee: 10
                },
                mid: {
                    ratio: 3,
                    threshold: -24,
                    release: 0.03,
                    attack: 0.02,
                    knee: 16
                },
                high: {
                    ratio: 3,
                    threshold: -24,
                    release: 0.03,
                    attack: 0.02,
                    knee: 16
                }
            });
        }
        dispose() {
            return super.dispose(), this._splitter.dispose(), this.low.dispose(), this.mid.dispose(), this.high.dispose(), this.output.dispose(), this;
        }
    }
    class lm extends Ne {
        constructor() {
            super(re(lm.getDefaults(), arguments, [
                'low',
                'mid',
                'high'
            ]));
            this.name = 'EQ3';
            this.output = new je({ context: this.context });
            this._internalChannels = [];
            ;
            const e = re(lm.getDefaults(), arguments, [
                'low',
                'mid',
                'high'
            ]);
            this.input = this._multibandSplit = new Tf({
                context: this.context,
                highFrequency: e.highFrequency,
                lowFrequency: e.lowFrequency
            });
            this._lowGain = new je({
                context: this.context,
                gain: e.low,
                units: 'decibels'
            });
            this._midGain = new je({
                context: this.context,
                gain: e.mid,
                units: 'decibels'
            });
            this._highGain = new je({
                context: this.context,
                gain: e.high,
                units: 'decibels'
            });
            this.low = this._lowGain.gain;
            this.mid = this._midGain.gain;
            this.high = this._highGain.gain;
            this.Q = this._multibandSplit.Q;
            this.lowFrequency = this._multibandSplit.lowFrequency;
            this.highFrequency = this._multibandSplit.highFrequency;
            this._multibandSplit.low.chain(this._lowGain, this.output);
            this._multibandSplit.mid.chain(this._midGain, this.output);
            this._multibandSplit.high.chain(this._highGain, this.output);
            He(this, [
                'low',
                'mid',
                'high',
                'lowFrequency',
                'highFrequency'
            ]);
            this._internalChannels = [this._multibandSplit];
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), {
                high: 0,
                highFrequency: 2500,
                low: 0,
                lowFrequency: 400,
                mid: 0
            });
        }
        dispose() {
            return super.dispose(), rd(this, [
                'low',
                'mid',
                'high',
                'lowFrequency',
                'highFrequency'
            ]), this._multibandSplit.dispose(), this.lowFrequency.dispose(), this.highFrequency.dispose(), this._lowGain.dispose(), this._midGain.dispose(), this._highGain.dispose(), this.low.dispose(), this.mid.dispose(), this.high.dispose(), this.Q.dispose(), this;
        }
    }
    Ts().transport;
    Ts().destination;
    Ts().destination;
    Ts().listener;
    Ts().draw;
    Ts();
    function _5() {
        return Pt.loaded();
    }
    class l4e {
        constructor(e) {
            this.isPlayable = true;
            this.node = new Ag(e);
            ;
        }
        attack(e) {
            e.length && this.node.triggerAttack(e[0]);
        }
        oneShot(e, n = 0.25) {
            e.length && this.node.triggerAttackRelease(e[0], n);
        }
        update(e) {
            e.length && (this.node.frequency.value = e[0]);
        }
        release(e) {
            this.node.triggerRelease();
        }
    }
    class u4e {
        constructor(e) {
            this.isPlayable = false;
            const n = new Ns(e.frequency || 440, e.type || 'sine'), r = new yf(e).start();
            n.connect(r);
            this.node = r;
            ;
        }
    }
    class h4e {
        constructor(e) {
            this.isPlayable = false;
            const n = new Ns(e.frequency || 440, e.type || 'sine'), r = new vf(e).start();
            n.connect(r);
            this.node = r;
            ;
        }
    }
    class Js extends Ne {
        constructor() {
            super(re(Js.getDefaults(), arguments));
            this._scheduledEvents = [];
            this._synced = false;
            this._original_triggerAttack = this.triggerAttack;
            this._original_triggerRelease = this.triggerRelease;
            ;
            const e = re(Js.getDefaults(), arguments);
            this._volume = new Ai({
                context: this.context,
                volume: e.volume
            });
            this.output = this._volume;
            this.volume = this._volume.volume;
            He(this, 'volume');
            ;
        }
        static getDefaults() {
            return Object.assign(Ne.getDefaults(), { volume: 0 });
        }
        sync() {
            return this._syncState() && (this._syncMethod('triggerAttack', 1), this._syncMethod('triggerRelease', 0)), this;
        }
        _syncState() {
            let e = false;
            return this._synced || (this._synced = true, e = true), e;
        }
        _syncMethod(e, n) {
            const r = this[e];
            this[`_original_${ e }`] = this[e];
            this[e] = (...s) => {
                const i = s[n], o = this.context.transport.schedule(a => {
                        ;
                        r.apply(this, s);
                        ;
                    }, i);
                this._scheduledEvents.push(o);
            };
            ;
        }
        unsync() {
            return this._scheduledEvents.forEach(e => this.context.transport.clear(e)), this._scheduledEvents = [], this._synced && (this._synced = false, this.triggerAttack = this._original_triggerAttack, this.triggerRelease = this._original_triggerRelease), this;
        }
        triggerAttackRelease(e, n, r, s) {
            const i = this.toSeconds(r), o = this.toSeconds(n);
            return this.triggerAttack(e, i, s), this.triggerRelease(i + o), this;
        }
        dispose() {
            return super.dispose(), this._volume.dispose(), this.unsync(), this._scheduledEvents = [], this;
        }
    }
    var um = (t, e) => Array(Math.abs(e) + 1).join(t);
    function yI(t, e, n) {
        return function (...r) {
            return console.warn(`${ t } is deprecated. Use ${ e }.`), n.apply(this, r);
        };
    }
    function vI(t) {
        return t !== null && typeof t == 'object' && typeof t.name == 'string';
    }
    function bI(t) {
        return t !== null && typeof t == 'object' && typeof t.step == 'number' && typeof t.alt == 'number';
    }
    var EI = [
            0,
            2,
            4,
            -1,
            1,
            3,
            5
        ], TI = EI.map(t => Math.floor(t * 7 / 12));
    function SI(t) {
        const {
                step: e,
                alt: n,
                oct: r,
                dir: s = 1
            } = t, i = EI[e] + 7 * n;
        if (r === void 0) {
            return [s * i];
        }
        const o = r - TI[e] - 4 * n;
        return [
            s * i,
            s * o
        ];
    }
    var f4e = [
        3,
        0,
        4,
        1,
        5,
        2,
        6
    ];
    function wI(t) {
        const [e, n, r] = t, s = f4e[d4e(e)], i = Math.floor((e + 1) / 7);
        if (n === void 0) {
            return {
                step: s,
                alt: i,
                dir: r
            };
        }
        const o = n + 4 * i + TI[s];
        return {
            step: s,
            alt: i,
            oct: o,
            dir: r
        };
    }
    function d4e(t) {
        const e = (t + 1) % 7;
        return e < 0 ? 7 + e : e;
    }
    var Uw = new Map(), p4e = t => 'CDEFGAB'.charAt(t), m4e = t => t < 0 ? um('b', -t) : um('#', t), g4e = t => t[0] === 'b' ? -t.length : t.length;
    function zt(t) {
        const e = JSON.stringify(t), n = Uw.get(e);
        if (n) {
            return n;
        }
        const r = typeof t == 'string' ? b4e(t) : bI(t) ? zt(E4e(t)) : vI(t) ? zt(t.name) : OI;
        return Uw.set(e, r), r;
    }
    ;
    function AI(t) {
        const e = /^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\d*)\s*(.*)$/.exec(t);
        return [
            e[1].toUpperCase(),
            e[2].replace(/x/g, '##'),
            e[3],
            e[4]
        ];
    }
    function y4e(t) {
        return zt(wI(t));
    }
    var v4e = (t, e) => (t % e + e) % e, Wy = [
            0,
            2,
            4,
            5,
            7,
            9,
            11
        ];
    function b4e(t) {
        const e = AI(t);
        if (e[0] === '' || e[3] !== '') {
            return OI;
        }
        const n = e[0], r = e[1], s = e[2], i = (n.charCodeAt(0) + 3) % 7, o = g4e(r), a = s.length ? +s : void 0, l = SI({
                step: i,
                alt: o,
                oct: a
            }), u = n + r + s, f = n + r, d = (Wy[i] + o + 120) % 12, p = a === void 0 ? v4e(Wy[i] + o, 12) - 1188 : Wy[i] + o + 12 * (a + 1), _ = p >= 0 && p <= 127 ? p : null, v = a === void 0 ? null : Math.pow(2, (p - 69) / 12) * 440;
        return {
            empty: false,
            acc: r,
            alt: o,
            chroma: d,
            coord: l,
            freq: v,
            height: p,
            letter: n,
            midi: _,
            name: u,
            oct: a,
            pc: f,
            step: i
        };
    }
    function E4e(t) {
        const {
                step: e,
                alt: n,
                oct: r
            } = t, s = p4e(e);
        if (!s) {
            return '';
        }
        const i = s + m4e(n);
        return r || r === 0 ? i + r : i;
    }
    var w4e = new RegExp('^([-+]?\\d+)(d{1,4}|m|M|P|A{1,4})|(AA|A|P|M|m|d|dd)([-+]?\\d+)$');
    function O4e(t) {
        const e = w4e.exec(`${ t }`);
        return e === null ? [
            '',
            ''
        ] : e[1] ? [
            e[1],
            e[2]
        ] : [
            e[4],
            e[3]
        ];
    }
    var Bw = {};
    function Sf(t) {
        return typeof t == 'string' ? Bw[t] || (Bw[t] = A4e(t)) : bI(t) ? Sf(k4e(t)) : vI(t) ? Sf(t.name) : O2;
    }
    var qw = [
        0,
        2,
        4,
        5,
        7,
        9,
        11
    ];
    function A4e(t) {
        const e = O4e(t);
        if (e[0] === '') {
            return O2;
        }
        const n = +e[0], r = e[1], s = (Math.abs(n) - 1) % 7, i = 'PMMPPMM'[s];
        if (i === 'M' && r === 'P') {
            return O2;
        }
        const o = i === 'M' ? 'majorable' : 'perfectable', a = '' + n + r, l = n < 0 ? -1 : 1, u = n === 8 || n === -8 ? n : l * (s + 1), f = I4e(o, r), d = Math.floor((Math.abs(n) - 1) / 7), p = l * (qw[s] + f + 12 * d), _ = (l * (qw[s] + f) % 12 + 12) % 12, v = SI({
                step: s,
                alt: f,
                oct: d,
                dir: l
            });
        return {
            empty: false,
            name: a,
            num: n,
            q: r,
            step: s,
            alt: f,
            dir: l,
            type: o,
            simple: u,
            semitones: p,
            chroma: _,
            coord: v,
            oct: d
        };
    }
    function C4e(t, e) {
        const [n, r = 0] = t, s = n * 7 + r * 12 < 0, i = e || s ? [
                -n,
                -r,
                -1
            ] : [
                n,
                r,
                1
            ];
        return Sf(wI(i));
    }
    function I4e(t, e) {
        return e === 'M' && t === 'majorable' || e === 'P' && t === 'perfectable' ? 0 : e === 'm' && t === 'majorable' ? -1 : /^A+$/.test(e) ? e.length : /^d+$/.test(e) ? -1 * (t === 'perfectable' ? e.length : e.length + 1) : 0;
    }
    function k4e(t) {
        const {
            step: e,
            alt: n,
            oct: r = 0,
            dir: s
        } = t;
        if (!s) {
            return '';
        }
        const i = e + 1 + 7 * r, o = i === 0 ? e + 1 : i, a = s < 0 ? '-' : '', l = 'PMMPPMM'[e] === 'M' ? 'majorable' : 'perfectable';
        return a + o + N4e(l, n);
    }
    function N4e(t, e) {
        return e === 0 ? t === 'majorable' ? 'M' : 'P' : e === -1 && t === 'majorable' ? 'm' : e > 0 ? um('A', e) : um('d', t === 'perfectable' ? e : e + 1);
    }
    function ma(t, e) {
        const n = zt(t), r = Array.isArray(e) ? e : Sf(e).coord;
        if (n.empty || !r || r.length < 2) {
            return '';
        }
        const s = n.coord, i = s.length === 1 ? [s[0] + r[0]] : [
                s[0] + r[0],
                s[1] + r[1]
            ];
        return y4e(i).name;
    }
    function Cg(t, e) {
        const n = t.length;
        return r => {
            if (!e) {
                return '';
            }
            const s = r < 0 ? (n - -r % n) % n : r % n, i = Math.floor(r / n), o = ma(e, [
                    0,
                    i
                ]);
            return ma(o, t[s]);
        };
    }
    function x4e(t, e) {
        const n = zt(t), r = zt(e);
        if (n.empty || r.empty) {
            return '';
        }
        const s = n.coord, i = r.coord, o = i[0] - s[0], a = s.length === 2 && i.length === 2 ? i[1] - s[1] : -Math.floor(o * 7 / 12), l = r.height === n.height && r.midi !== null && n.midi !== null && n.step > r.step;
        return C4e([
            o,
            a
        ], l).name;
    }
    function P4e(t, e) {
        const n = [];
        for (; e--; n[e] = e + t) {
            ;
        }
        return n;
    }
    function R4e(t, e) {
        const n = [];
        for (; e--; n[e] = t - e) {
            ;
        }
        return n;
    }
    function M4e(t, e) {
        return t < e ? P4e(t, e - t + 1) : R4e(t, t - e + 1);
    }
    function od(t, e) {
        const n = e.length, r = (t % n + n) % n;
        return e.slice(r, n).concat(e.slice(0, r));
    }
    function D4e(t) {
        return t.filter(e => e === 0 || e);
    }
    var xc = {
            empty: true,
            name: '',
            setNum: 0,
            chroma: '000000000000',
            normalized: '000000000000',
            intervals: []
        }, II = t => Number(t).toString(2), Vw = t => parseInt(t, 2);
    function y5(t) {
        return /^[01]{12}$/.test(t);
    }
    var L4e = t => typeof t == 'number' && t >= 0 && t <= 4095, F4e = t => t && y5(t.chroma), Gw = { [xc.chroma]: xc };
    function ga(t) {
        const e = y5(t) ? t : L4e(t) ? II(t) : Array.isArray(t) ? j4e(t) : F4e(t) ? t.chroma : xc.chroma;
        return Gw[e] = Gw[e] || G4e(e);
    }
    var U4e = t => ga(t).chroma, B4e = [
            '1P',
            '2m',
            '2M',
            '3m',
            '3M',
            '4P',
            '5d',
            '5P',
            '6m',
            '6M',
            '7m',
            '7M'
        ];
    function q4e(t) {
        const e = [];
        for (let n = 0; n < 12; n++) {
            t.charAt(n) === '1' && e.push(B4e[n]);
        }
        return e;
    }
    function kI(t, e = true) {
        const r = ga(t).chroma.split('');
        return D4e(r.map((s, i) => {
            const o = od(i, r);
            return e && o[0] === '0' ? null : o.join('');
        }));
    }
    function v5(t) {
        const e = ga(t).setNum;
        return n => {
            const r = ga(n).setNum;
            return e && e !== r && (r & e) === r;
        };
    }
    function b5(t) {
        const e = ga(t).setNum;
        return n => {
            const r = ga(n).setNum;
            return e && e !== r && (r | e) === r;
        };
    }
    function V4e(t) {
        const e = t.split('');
        return e.map((n, r) => od(r, e).join(''));
    }
    function G4e(t) {
        const e = Vw(t), n = V4e(t).map(Vw).filter(i => i >= 2048).sort()[0], r = II(n), s = q4e(t);
        return {
            empty: false,
            name: '',
            setNum: e,
            chroma: t,
            normalized: r,
            intervals: s
        };
    }
    function j4e(t) {
        if (t.length === 0) {
            return xc.chroma;
        }
        let e;
        const n = [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ];
        for (let r = 0; r < t.length; r++) {
            e = zt(t[r]);
            e.empty && (e = Sf(t[r]));
            e.empty || (n[e.chroma] = 1);
            ;
        }
        return n.join('');
    }
    var W4e = [
            [
                '1P 3M 5P',
                'major',
                'M ^  maj'
            ],
            [
                '1P 3M 5P 7M',
                'major seventh',
                'maj7 Δ ma7 M7 Maj7 ^7'
            ],
            [
                '1P 3M 5P 7M 9M',
                'major ninth',
                'maj9 Δ9 ^9'
            ],
            [
                '1P 3M 5P 7M 9M 13M',
                'major thirteenth',
                'maj13 Maj13 ^13'
            ],
            [
                '1P 3M 5P 6M',
                'sixth',
                '6 add6 add13 M6'
            ],
            [
                '1P 3M 5P 6M 9M',
                'sixth/ninth',
                '6/9 69 M69'
            ],
            [
                '1P 3M 6m 7M',
                'major seventh flat sixth',
                'M7b6 ^7b6'
            ],
            [
                '1P 3M 5P 7M 11A',
                'major seventh sharp eleventh',
                'maj#4 Δ#4 Δ#11 M7#11 ^7#11 maj7#11'
            ],
            [
                '1P 3m 5P',
                'minor',
                'm min -'
            ],
            [
                '1P 3m 5P 7m',
                'minor seventh',
                'm7 min7 mi7 -7'
            ],
            [
                '1P 3m 5P 7M',
                'minor/major seventh',
                'm/ma7 m/maj7 mM7 mMaj7 m/M7 -Δ7 mΔ -^7'
            ],
            [
                '1P 3m 5P 6M',
                'minor sixth',
                'm6 -6'
            ],
            [
                '1P 3m 5P 7m 9M',
                'minor ninth',
                'm9 -9'
            ],
            [
                '1P 3m 5P 7M 9M',
                'minor/major ninth',
                'mM9 mMaj9 -^9'
            ],
            [
                '1P 3m 5P 7m 9M 11P',
                'minor eleventh',
                'm11 -11'
            ],
            [
                '1P 3m 5P 7m 9M 13M',
                'minor thirteenth',
                'm13 -13'
            ],
            [
                '1P 3m 5d',
                'diminished',
                'dim \xB0 o'
            ],
            [
                '1P 3m 5d 7d',
                'diminished seventh',
                'dim7 \xB07 o7'
            ],
            [
                '1P 3m 5d 7m',
                'half-diminished',
                'm7b5 ø -7b5 h7 h'
            ],
            [
                '1P 3M 5P 7m',
                'dominant seventh',
                '7 dom'
            ],
            [
                '1P 3M 5P 7m 9M',
                'dominant ninth',
                '9'
            ],
            [
                '1P 3M 5P 7m 9M 13M',
                'dominant thirteenth',
                '13'
            ],
            [
                '1P 3M 5P 7m 11A',
                'lydian dominant seventh',
                '7#11 7#4'
            ],
            [
                '1P 3M 5P 7m 9m',
                'dominant flat ninth',
                '7b9'
            ],
            [
                '1P 3M 5P 7m 9A',
                'dominant sharp ninth',
                '7#9'
            ],
            [
                '1P 3M 7m 9m',
                'altered',
                'alt7'
            ],
            [
                '1P 4P 5P',
                'suspended fourth',
                'sus4 sus'
            ],
            [
                '1P 2M 5P',
                'suspended second',
                'sus2'
            ],
            [
                '1P 4P 5P 7m',
                'suspended fourth seventh',
                '7sus4 7sus'
            ],
            [
                '1P 5P 7m 9M 11P',
                'eleventh',
                '11'
            ],
            [
                '1P 4P 5P 7m 9m',
                'suspended fourth flat ninth',
                'b9sus phryg 7b9sus 7b9sus4'
            ],
            [
                '1P 5P',
                'fifth',
                '5'
            ],
            [
                '1P 3M 5A',
                'augmented',
                'aug + +5 ^#5'
            ],
            [
                '1P 3m 5A',
                'minor augmented',
                'm#5 -#5 m+'
            ],
            [
                '1P 3M 5A 7M',
                'augmented seventh',
                'maj7#5 maj7+5 +maj7 ^7#5'
            ],
            [
                '1P 3M 5P 7M 9M 11A',
                'major sharp eleventh (lydian)',
                'maj9#11 Δ9#11 ^9#11'
            ],
            [
                '1P 2M 4P 5P',
                '',
                'sus24 sus4add9'
            ],
            [
                '1P 3M 5A 7M 9M',
                '',
                'maj9#5 Maj9#5'
            ],
            [
                '1P 3M 5A 7m',
                '',
                '7#5 +7 7+ 7aug aug7'
            ],
            [
                '1P 3M 5A 7m 9A',
                '',
                '7#5#9 7#9#5 7alt'
            ],
            [
                '1P 3M 5A 7m 9M',
                '',
                '9#5 9+'
            ],
            [
                '1P 3M 5A 7m 9M 11A',
                '',
                '9#5#11'
            ],
            [
                '1P 3M 5A 7m 9m',
                '',
                '7#5b9 7b9#5'
            ],
            [
                '1P 3M 5A 7m 9m 11A',
                '',
                '7#5b9#11'
            ],
            [
                '1P 3M 5A 9A',
                '',
                '+add#9'
            ],
            [
                '1P 3M 5A 9M',
                '',
                'M#5add9 +add9'
            ],
            [
                '1P 3M 5P 6M 11A',
                '',
                'M6#11 M6b5 6#11 6b5'
            ],
            [
                '1P 3M 5P 6M 7M 9M',
                '',
                'M7add13'
            ],
            [
                '1P 3M 5P 6M 9M 11A',
                '',
                '69#11'
            ],
            [
                '1P 3m 5P 6M 9M',
                '',
                'm69 -69'
            ],
            [
                '1P 3M 5P 6m 7m',
                '',
                '7b6'
            ],
            [
                '1P 3M 5P 7M 9A 11A',
                '',
                'maj7#9#11'
            ],
            [
                '1P 3M 5P 7M 9M 11A 13M',
                '',
                'M13#11 maj13#11 M13+4 M13#4'
            ],
            [
                '1P 3M 5P 7M 9m',
                '',
                'M7b9'
            ],
            [
                '1P 3M 5P 7m 11A 13m',
                '',
                '7#11b13 7b5b13'
            ],
            [
                '1P 3M 5P 7m 13M',
                '',
                '7add6 67 7add13'
            ],
            [
                '1P 3M 5P 7m 9A 11A',
                '',
                '7#9#11 7b5#9 7#9b5'
            ],
            [
                '1P 3M 5P 7m 9A 11A 13M',
                '',
                '13#9#11'
            ],
            [
                '1P 3M 5P 7m 9A 11A 13m',
                '',
                '7#9#11b13'
            ],
            [
                '1P 3M 5P 7m 9A 13M',
                '',
                '13#9'
            ],
            [
                '1P 3M 5P 7m 9A 13m',
                '',
                '7#9b13'
            ],
            [
                '1P 3M 5P 7m 9M 11A',
                '',
                '9#11 9+4 9#4'
            ],
            [
                '1P 3M 5P 7m 9M 11A 13M',
                '',
                '13#11 13+4 13#4'
            ],
            [
                '1P 3M 5P 7m 9M 11A 13m',
                '',
                '9#11b13 9b5b13'
            ],
            [
                '1P 3M 5P 7m 9m 11A',
                '',
                '7b9#11 7b5b9 7b9b5'
            ],
            [
                '1P 3M 5P 7m 9m 11A 13M',
                '',
                '13b9#11'
            ],
            [
                '1P 3M 5P 7m 9m 11A 13m',
                '',
                '7b9b13#11 7b9#11b13 7b5b9b13'
            ],
            [
                '1P 3M 5P 7m 9m 13M',
                '',
                '13b9'
            ],
            [
                '1P 3M 5P 7m 9m 13m',
                '',
                '7b9b13'
            ],
            [
                '1P 3M 5P 7m 9m 9A',
                '',
                '7b9#9'
            ],
            [
                '1P 3M 5P 9M',
                '',
                'Madd9 2 add9 add2'
            ],
            [
                '1P 3M 5P 9m',
                '',
                'Maddb9'
            ],
            [
                '1P 3M 5d',
                '',
                'Mb5'
            ],
            [
                '1P 3M 5d 6M 7m 9M',
                '',
                '13b5'
            ],
            [
                '1P 3M 5d 7M',
                '',
                'M7b5'
            ],
            [
                '1P 3M 5d 7M 9M',
                '',
                'M9b5'
            ],
            [
                '1P 3M 5d 7m',
                '',
                '7b5'
            ],
            [
                '1P 3M 5d 7m 9M',
                '',
                '9b5'
            ],
            [
                '1P 3M 7m',
                '',
                '7no5'
            ],
            [
                '1P 3M 7m 13m',
                '',
                '7b13'
            ],
            [
                '1P 3M 7m 9M',
                '',
                '9no5'
            ],
            [
                '1P 3M 7m 9M 13M',
                '',
                '13no5'
            ],
            [
                '1P 3M 7m 9M 13m',
                '',
                '9b13'
            ],
            [
                '1P 3m 4P 5P',
                '',
                'madd4'
            ],
            [
                '1P 3m 5P 6m 7M',
                '',
                'mMaj7b6'
            ],
            [
                '1P 3m 5P 6m 7M 9M',
                '',
                'mMaj9b6'
            ],
            [
                '1P 3m 5P 7m 11P',
                '',
                'm7add11 m7add4'
            ],
            [
                '1P 3m 5P 9M',
                '',
                'madd9'
            ],
            [
                '1P 3m 5d 6M 7M',
                '',
                'o7M7'
            ],
            [
                '1P 3m 5d 7M',
                '',
                'oM7'
            ],
            [
                '1P 3m 6m 7M',
                '',
                'mb6M7'
            ],
            [
                '1P 3m 6m 7m',
                '',
                'm7#5'
            ],
            [
                '1P 3m 6m 7m 9M',
                '',
                'm9#5'
            ],
            [
                '1P 3m 5A 7m 9M 11P',
                '',
                'm11A'
            ],
            [
                '1P 3m 6m 9m',
                '',
                'mb6b9'
            ],
            [
                '1P 2M 3m 5d 7m',
                '',
                'm9b5'
            ],
            [
                '1P 4P 5A 7M',
                '',
                'M7#5sus4'
            ],
            [
                '1P 4P 5A 7M 9M',
                '',
                'M9#5sus4'
            ],
            [
                '1P 4P 5A 7m',
                '',
                '7#5sus4'
            ],
            [
                '1P 4P 5P 7M',
                '',
                'M7sus4'
            ],
            [
                '1P 4P 5P 7M 9M',
                '',
                'M9sus4'
            ],
            [
                '1P 4P 5P 7m 9M',
                '',
                '9sus4 9sus'
            ],
            [
                '1P 4P 5P 7m 9M 13M',
                '',
                '13sus4 13sus'
            ],
            [
                '1P 4P 5P 7m 9m 13m',
                '',
                '7sus4b9b13 7b9b13sus4'
            ],
            [
                '1P 4P 7m 10m',
                '',
                '4 quartal'
            ],
            [
                '1P 5P 7m 9m 11P',
                '',
                '11b9'
            ]
        ], H4e = W4e, z4e = {
            ...xc,
            name: '',
            quality: 'Unknown',
            intervals: [],
            aliases: []
        }, E5 = [], Mh = { e: t };
    function Y4e(t) {
        return Mh[t] || z4e;
    }
    function Ig() {
        return E5.slice();
    }
    function K4e(t, e, n) {
        const r = X4e(t), s = {
                ...ga(t),
                name: n || '',
                quality: r,
                intervals: t,
                aliases: e
            };
        E5.push(s);
        s.name && (Mh[s.name] = s);
        Mh[s.setNum] = s;
        Mh[s.chroma] = s;
        s.aliases.forEach(i => Z4e(s, i));
        ;
    }
    function Z4e(t, e) {
        ;
    }
    function X4e(t) {
        const e = n => t.indexOf(n) !== -1;
        return e('5A') ? 'Augmented' : e('3M') ? 'Major' : e('5d') ? 'Diminished' : e('3m') ? 'Minor' : 'Unknown';
    }
    H4e.forEach(([t, e, n]) => K4e(t.split(' '), n.split(' '), e));
    E5.sort((t, e) => t.setNum - e.setNum);
    var Q4e = t => {
        const e = t.reduce((n, r) => {
            const s = zt(r).chroma;
            return s !== void 0 && (n[s] = n[s] || zt(r).name), n;
        }, {});
        return n => e[n];
    };
    function J4e(t, e = {}) {
        const n = t.map(s => zt(s).pc).filter(s => s);
        return zt.length === 0 ? [] : oEe(n, 1, e).filter(s => s.weight).sort((s, i) => i.weight - s.weight).map(s => s.name);
    }
    var Ng = t => e => !!(e & t), eEe = Ng(384), tEe = Ng(16), nEe = Ng(3), rEe = Ng(40);
    function sEe(t) {
        const e = parseInt(t.chroma, 2);
        return eEe(e) && tEe(e) && nEe(e);
    }
    function iEe(t) {
        const e = parseInt(t, 2);
        return rEe(e) ? t : (e | 16).toString(2);
    }
    function oEe(t, e, n) {
        const r = t[0], s = zt(r).chroma, i = Q4e(t), o = kI(t, false), a = [];
        return o.forEach((l, u) => {
            const f = n.assumePerfectFifth && iEe(l);
            Ig().filter(p => n.assumePerfectFifth && sEe(p) ? p.chroma === f : p.chroma === l).forEach(p => {
                const _ = p.aliases[0], v = i(u);
                u !== s ? a.push({
                    weight: 0.5 * e,
                    name: `${ v }${ _ }/${ r }`
                }) : a.push({
                    weight: 1 * e,
                    name: `${ v }${ _ }`
                });
            });
        }), a;
    }
    var aEe = [
            [
                '1P 2M 3M 5P 6M',
                'major pentatonic',
                'pentatonic'
            ],
            [
                '1P 2M 3M 4P 5P 6M 7M',
                'major',
                'ionian'
            ],
            [
                '1P 2M 3m 4P 5P 6m 7m',
                'minor',
                'aeolian'
            ],
            [
                '1P 2M 3m 3M 5P 6M',
                'major blues'
            ],
            [
                '1P 3m 4P 5d 5P 7m',
                'minor blues',
                'blues'
            ],
            [
                '1P 2M 3m 4P 5P 6M 7M',
                'melodic minor'
            ],
            [
                '1P 2M 3m 4P 5P 6m 7M',
                'harmonic minor'
            ],
            [
                '1P 2M 3M 4P 5P 6M 7m 7M',
                'bebop'
            ],
            [
                '1P 2M 3m 4P 5d 6m 6M 7M',
                'diminished',
                'whole-half diminished'
            ],
            [
                '1P 2M 3m 4P 5P 6M 7m',
                'dorian'
            ],
            [
                '1P 2M 3M 4A 5P 6M 7M',
                'lydian'
            ],
            [
                '1P 2M 3M 4P 5P 6M 7m',
                'mixolydian',
                'dominant'
            ],
            [
                '1P 2m 3m 4P 5P 6m 7m',
                'phrygian'
            ],
            [
                '1P 2m 3m 4P 5d 6m 7m',
                'locrian'
            ],
            [
                '1P 3M 4P 5P 7M',
                'ionian pentatonic'
            ],
            [
                '1P 3M 4P 5P 7m',
                'mixolydian pentatonic',
                'indian'
            ],
            [
                '1P 2M 4P 5P 6M',
                'ritusen'
            ],
            [
                '1P 2M 4P 5P 7m',
                'egyptian'
            ],
            [
                '1P 3M 4P 5d 7m',
                'neopolitan major pentatonic'
            ],
            [
                '1P 3m 4P 5P 6m',
                'vietnamese 1'
            ],
            [
                '1P 2m 3m 5P 6m',
                'pelog'
            ],
            [
                '1P 2m 4P 5P 6m',
                'kumoijoshi'
            ],
            [
                '1P 2M 3m 5P 6m',
                'hirajoshi'
            ],
            [
                '1P 2m 4P 5d 7m',
                'iwato'
            ],
            [
                '1P 2m 4P 5P 7m',
                'in-sen'
            ],
            [
                '1P 3M 4A 5P 7M',
                'lydian pentatonic',
                'chinese'
            ],
            [
                '1P 3m 4P 6m 7m',
                'malkos raga'
            ],
            [
                '1P 3m 4P 5d 7m',
                'locrian pentatonic',
                'minor seven flat five pentatonic'
            ],
            [
                '1P 3m 4P 5P 7m',
                'minor pentatonic',
                'vietnamese 2'
            ],
            [
                '1P 3m 4P 5P 6M',
                'minor six pentatonic'
            ],
            [
                '1P 2M 3m 5P 6M',
                'flat three pentatonic',
                'kumoi'
            ],
            [
                '1P 2M 3M 5P 6m',
                'flat six pentatonic'
            ],
            [
                '1P 2m 3M 5P 6M',
                'scriabin'
            ],
            [
                '1P 3M 5d 6m 7m',
                'whole tone pentatonic'
            ],
            [
                '1P 3M 4A 5A 7M',
                'lydian #5P pentatonic'
            ],
            [
                '1P 3M 4A 5P 7m',
                'lydian dominant pentatonic'
            ],
            [
                '1P 3m 4P 5P 7M',
                'minor #7M pentatonic'
            ],
            [
                '1P 3m 4d 5d 7m',
                'super locrian pentatonic'
            ],
            [
                '1P 2M 3m 4P 5P 7M',
                'minor hexatonic'
            ],
            [
                '1P 2A 3M 5P 5A 7M',
                'augmented'
            ],
            [
                '1P 2M 4P 5P 6M 7m',
                'piongio'
            ],
            [
                '1P 2m 3M 4A 6M 7m',
                'prometheus neopolitan'
            ],
            [
                '1P 2M 3M 4A 6M 7m',
                'prometheus'
            ],
            [
                '1P 2m 3M 5d 6m 7m',
                'mystery #1'
            ],
            [
                '1P 2m 3M 4P 5A 6M',
                'six tone symmetric'
            ],
            [
                '1P 2M 3M 4A 5A 6A',
                'whole tone',
                'messiaen\'s mode #1'
            ],
            [
                '1P 2m 4P 4A 5P 7M',
                'messiaen\'s mode #5'
            ],
            [
                '1P 2M 3M 4P 5d 6m 7m',
                'locrian major',
                'arabian'
            ],
            [
                '1P 2m 3M 4A 5P 6m 7M',
                'double harmonic lydian'
            ],
            [
                '1P 2m 2A 3M 4A 6m 7m',
                'altered',
                'super locrian',
                'diminished whole tone',
                'pomeroy'
            ],
            [
                '1P 2M 3m 4P 5d 6m 7m',
                'locrian #2',
                'half-diminished',
                'aeolian b5'
            ],
            [
                '1P 2M 3M 4P 5P 6m 7m',
                'mixolydian b6',
                'melodic minor fifth mode',
                'hindu'
            ],
            [
                '1P 2M 3M 4A 5P 6M 7m',
                'lydian dominant',
                'lydian b7',
                'overtone'
            ],
            [
                '1P 2M 3M 4A 5A 6M 7M',
                'lydian augmented'
            ],
            [
                '1P 2m 3m 4P 5P 6M 7m',
                'dorian b2',
                'phrygian #6',
                'melodic minor second mode'
            ],
            [
                '1P 2m 3m 4d 5d 6m 7d',
                'ultralocrian',
                'superlocrian bb7',
                'superlocrian diminished'
            ],
            [
                '1P 2m 3m 4P 5d 6M 7m',
                'locrian 6',
                'locrian natural 6',
                'locrian sharp 6'
            ],
            [
                '1P 2A 3M 4P 5P 5A 7M',
                'augmented heptatonic'
            ],
            [
                '1P 2M 3m 4A 5P 6M 7m',
                'dorian #4',
                'ukrainian dorian',
                'romanian minor',
                'altered dorian'
            ],
            [
                '1P 2M 3m 4A 5P 6M 7M',
                'lydian diminished'
            ],
            [
                '1P 2M 3M 4A 5A 7m 7M',
                'leading whole tone'
            ],
            [
                '1P 2M 3M 4A 5P 6m 7m',
                'lydian minor'
            ],
            [
                '1P 2m 3M 4P 5P 6m 7m',
                'phrygian dominant',
                'spanish',
                'phrygian major'
            ],
            [
                '1P 2m 3m 4P 5P 6m 7M',
                'balinese'
            ],
            [
                '1P 2m 3m 4P 5P 6M 7M',
                'neopolitan major'
            ],
            [
                '1P 2M 3M 4P 5P 6m 7M',
                'harmonic major'
            ],
            [
                '1P 2m 3M 4P 5P 6m 7M',
                'double harmonic major',
                'gypsy'
            ],
            [
                '1P 2M 3m 4A 5P 6m 7M',
                'hungarian minor'
            ],
            [
                '1P 2A 3M 4A 5P 6M 7m',
                'hungarian major'
            ],
            [
                '1P 2m 3M 4P 5d 6M 7m',
                'oriental'
            ],
            [
                '1P 2m 3m 3M 4A 5P 7m',
                'flamenco'
            ],
            [
                '1P 2m 3m 4A 5P 6m 7M',
                'todi raga'
            ],
            [
                '1P 2m 3M 4P 5d 6m 7M',
                'persian'
            ],
            [
                '1P 2m 3M 5d 6m 7m 7M',
                'enigmatic'
            ],
            [
                '1P 2M 3M 4P 5A 6M 7M',
                'major augmented',
                'major #5',
                'ionian augmented',
                'ionian #5'
            ],
            [
                '1P 2A 3M 4A 5P 6M 7M',
                'lydian #9'
            ],
            [
                '1P 2m 2M 4P 4A 5P 6m 7M',
                'messiaen\'s mode #4'
            ],
            [
                '1P 2m 3M 4P 4A 5P 6m 7M',
                'purvi raga'
            ],
            [
                '1P 2m 3m 3M 4P 5P 6m 7m',
                'spanish heptatonic'
            ],
            [
                '1P 2M 3m 3M 4P 5P 6M 7m',
                'bebop minor'
            ],
            [
                '1P 2M 3M 4P 5P 5A 6M 7M',
                'bebop major'
            ],
            [
                '1P 2m 3m 4P 5d 5P 6m 7m',
                'bebop locrian'
            ],
            [
                '1P 2M 3m 4P 5P 6m 7m 7M',
                'minor bebop'
            ],
            [
                '1P 2M 3M 4P 5d 5P 6M 7M',
                'ichikosucho'
            ],
            [
                '1P 2M 3m 4P 5P 6m 6M 7M',
                'minor six diminished'
            ],
            [
                '1P 2m 3m 3M 4A 5P 6M 7m',
                'half-whole diminished',
                'dominant diminished',
                'messiaen\'s mode #2'
            ],
            [
                '1P 3m 3M 4P 5P 6M 7m 7M',
                'kafi raga'
            ],
            [
                '1P 2M 3M 4P 4A 5A 6A 7M',
                'messiaen\'s mode #6'
            ],
            [
                '1P 2M 3m 3M 4P 5d 5P 6M 7m',
                'composite blues'
            ],
            [
                '1P 2M 3m 3M 4A 5P 6m 7m 7M',
                'messiaen\'s mode #3'
            ],
            [
                '1P 2m 2M 3m 4P 4A 5P 6m 6M 7M',
                'messiaen\'s mode #7'
            ],
            [
                '1P 2m 2M 3m 3M 4P 5d 5P 6m 6M 7m 7M',
                'chromatic'
            ]
        ], cEe = aEe, lEe = {
            ...xc,
            intervals: [],
            aliases: []
        }, T5 = [], Dh = { e: t };
    function uEe() {
        return T5.map(t => t.name);
    }
    function NI(t) {
        return Dh[t] || lEe;
    }
    function xg() {
        return T5.slice();
    }
    function hEe(t, e, n = []) {
        const r = {
            ...ga(t),
            name: e,
            intervals: t,
            aliases: n
        };
        return T5.push(r), Dh[r.name] = r, Dh[r.setNum] = r, Dh[r.chroma] = r, r.aliases.forEach(s => fEe(r, s)), r;
    }
    function fEe(t, e) {
        ;
    }
    cEe.forEach(([t, e, ...n]) => hEe(t.split(' '), e, n));
    var A2 = {
        empty: true,
        name: '',
        symbol: '',
        root: '',
        rootDegree: 0,
        type: '',
        tonic: null,
        setNum: NaN,
        quality: 'Unknown',
        chroma: '',
        normalized: '',
        aliases: [],
        notes: [],
        intervals: []
    };
    function S5(t) {
        const [e, n, r, s] = AI(t);
        return e === '' ? [
            '',
            t
        ] : e === 'A' && s === 'ug' ? [
            '',
            'aug'
        ] : !s && (r === '4' || r === '5') ? [
            e + n,
            r
        ] : /^(6|64|7|9|11|13)$/.test(r) ? [
            e + n,
            r + s
        ] : [
            e + n + r,
            s
        ];
    }
    function Uc(t) {
        if (t === '') {
            return A2;
        }
        if (Array.isArray(t) && t.length === 2) {
            return qp(t[1], t[0]);
        }
        {
            const [e, n] = S5(t), r = qp(n, e);
            return r.empty ? qp(t) : r;
        }
    }
    function qp(t, e, n) {
        const r = Y4e(t), s = zt(e || ''), i = zt(n || '');
        if (r.empty || e && s.empty || n && i.empty) {
            return A2;
        }
        const o = x4e(s.pc, i.pc), a = r.intervals.indexOf(o) + 1;
        if (!i.empty && !a) {
            return A2;
        }
        const l = Array.from(r.intervals);
        for (let p = 1; p < a; p++) {
            const _ = l[0][0], v = l[0][1], y = parseInt(_, 10) + 7;
            l.push(`${ y }${ v }`);
            l.shift();
            ;
        }
        const u = s.empty ? [] : l.map(p => ma(s, p));
        t = r.aliases.indexOf(t) !== -1 ? t : r.aliases[0];
        const f = `${ s.empty ? '' : s.pc }${ t }${ i.empty || a <= 1 ? '' : '/' + i.pc }`, d = `${ e ? s.pc + ' ' : '' }${ r.name }${ a > 1 && n ? ' over ' + i.pc : '' }`;
        return {
            ...r,
            name: d,
            symbol: f,
            type: r.name,
            root: i.name,
            intervals: l,
            rootDegree: a,
            tonic: s.name,
            notes: u
        };
    }
    var pEe = yI('Chord.chord', 'Chord.get', Uc);
    function mEe(t, e) {
        const [n, r] = S5(t);
        return n ? ma(n, e) + r : t;
    }
    function gEe(t) {
        const e = Uc(t), n = b5(e.chroma);
        return xg().filter(r => n(r.chroma)).map(r => r.name);
    }
    function _Ee(t) {
        const e = Uc(t), n = b5(e.chroma);
        return Ig().filter(r => n(r.chroma)).map(r => e.tonic + r.aliases[0]);
    }
    function yEe(t) {
        const e = Uc(t), n = v5(e.chroma);
        return Ig().filter(r => n(r.chroma)).map(r => e.tonic + r.aliases[0]);
    }
    function vEe(t) {
        const {
                intervals: e,
                tonic: n
            } = Uc(t), r = Cg(e, n);
        return s => s ? r(s > 0 ? s - 1 : s) : '';
    }
    function bEe(t) {
        const {
            intervals: e,
            tonic: n
        } = Uc(t);
        return Cg(e, n);
    }
    var C2 = {
        getChord: qp,
        get: Uc,
        detect: J4e,
        chordScales: gEe,
        extended: _Ee,
        reduced: yEe,
        tokenize: S5,
        transpose: mEe,
        degrees: vEe,
        steps: bEe,
        chord: pEe
    };
    function xI(t) {
        return +t >= 0 && +t <= 127;
    }
    function EEe(t) {
        if (xI(t)) {
            return +t;
        }
        const e = zt(t);
        return e.empty ? null : e.midi;
    }
    function TEe(t, e = 440) {
        return Math.pow(2, (t - 69) / 12) * e;
    }
    var SEe = Math.log(2), wEe = Math.log(440);
    function w5(t) {
        const e = 12 * (Math.log(t) - wEe) / SEe + 69;
        return Math.round(e * 100) / 100;
    }
    var OEe = 'C C# D D# E F F# G G# A A# B'.split(' '), AEe = 'C Db D Eb E F Gb G Ab A Bb B'.split(' ');
    function Bc(t, e = {}) {
        if (isNaN(t) || t === -1e+400 || t === 1e+400) {
            return '';
        }
        t = Math.round(t);
        const r = (e.sharps === true ? OEe : AEe)[t % 12];
        if (e.pitchClass) {
            return r;
        }
        const s = Math.floor(t / 12) - 1;
        return r + s;
    }
    function O5(t) {
        return t % 12;
    }
    function CEe(t) {
        return t.split('').reduce((e, n, r) => (r < 12 && n === '1' && e.push(r), e), []);
    }
    function IEe(t) {
        return t.map(O5).sort((e, n) => e - n).filter((e, n, r) => n === 0 || e !== r[n - 1]);
    }
    function A5(t) {
        return Array.isArray(t) ? IEe(t) : CEe(t);
    }
    function kEe(t) {
        const e = A5(t);
        return n => {
            const r = O5(n);
            for (let s = 0; s < 12; s++) {
                if (e.includes(r + s)) {
                    return n + s;
                }
                if (e.includes(r - s)) {
                    return n - s;
                }
            }
        };
    }
    function PI(t, e) {
        const n = A5(t), r = n.length;
        return s => {
            const i = s < 0 ? (r - -s % r) % r : s % r, o = Math.floor(s / r);
            return n[i] + o * 12 + e;
        };
    }
    function NEe(t, e) {
        const n = PI(t, e);
        return r => {
            if (r !== 0) {
                return n(r > 0 ? r - 1 : r);
            }
        };
    }
    var xEe = {
            chroma: O5,
            freqToMidi: w5,
            isMidi: xI,
            midiToFreq: TEe,
            midiToNoteName: Bc,
            pcsetNearest: kEe,
            pcset: A5,
            pcsetDegrees: NEe,
            pcsetSteps: PI,
            toMidi: EEe
        }, PEe = [
            'C',
            'D',
            'E',
            'F',
            'G',
            'A',
            'B'
        ], RI = t => t.name, MI = t => t.map(zt).filter(e => !e.empty);
    function REe(t) {
        return t === void 0 ? PEe.slice() : Array.isArray(t) ? MI(t).map(RI) : [];
    }
    var ei = zt, MEe = t => ei(t).name, DEe = t => ei(t).pc, $Ee = t => ei(t).acc, LEe = t => ei(t).oct, FEe = t => ei(t).midi, UEe = t => ei(t).freq, BEe = t => ei(t).chroma;
    function DI(t) {
        return Bc(t);
    }
    function qEe(t) {
        return Bc(w5(t));
    }
    function VEe(t) {
        return Bc(w5(t), { sharps: true });
    }
    function GEe(t) {
        return Bc(t, { sharps: true });
    }
    var ad = ma, jEe = ma, $I = t => e => ad(e, t), WEe = $I, LI = t => e => ad(t, e), HEe = LI;
    function FI(t, e) {
        return ad(t, [
            e,
            0
        ]);
    }
    var zEe = FI;
    function YEe(t, e) {
        return ad(t, [
            0,
            e
        ]);
    }
    var C5 = (t, e) => t.height - e.height, KEe = (t, e) => e.height - t.height;
    function UI(t, e) {
        return e = e || C5, MI(t).sort(e).map(RI);
    }
    function BI(t) {
        return UI(t, C5).filter((e, n, r) => n === 0 || e !== r[n - 1]);
    }
    var ZEe = t => {
        const e = ei(t);
        return e.empty ? '' : Bc(e.midi || e.chroma, {
            sharps: e.alt > 0,
            pitchClass: e.midi === null
        });
    };
    function qI(t, e) {
        const n = ei(t);
        if (n.empty) {
            return '';
        }
        const r = ei(e || Bc(n.midi || n.chroma, {
            sharps: n.alt < 0,
            pitchClass: true
        }));
        if (r.empty || r.chroma !== n.chroma) {
            return '';
        }
        if (n.oct === void 0) {
            return r.pc;
        }
        const s = n.chroma - n.alt, i = r.chroma - r.alt, o = s > 11 || i < 0 ? -1 : s < 0 || i > 11 ? 1 : 0, a = n.oct + o;
        return r.pc + a;
    }
    var I2 = {
            names: REe,
            get: ei,
            name: MEe,
            pitchClass: DEe,
            accidentals: $Ee,
            octave: LEe,
            midi: FEe,
            ascending: C5,
            descending: KEe,
            sortedNames: UI,
            sortedUniqNames: BI,
            fromMidi: DI,
            fromMidiSharps: GEe,
            freq: UEe,
            fromFreq: qEe,
            fromFreqSharps: VEe,
            chroma: BEe,
            transpose: ad,
            tr: jEe,
            transposeBy: $I,
            trBy: WEe,
            transposeFrom: LI,
            trFrom: HEe,
            transposeFifths: FI,
            transposeOctaves: YEe,
            trFifths: zEe,
            simplify: ZEe,
            enharmonic: qI
        }, I5 = [
            [
                0,
                2773,
                0,
                'ionian',
                '',
                'Maj7',
                'major'
            ],
            [
                1,
                2902,
                2,
                'dorian',
                'm',
                'm7'
            ],
            [
                2,
                3418,
                4,
                'phrygian',
                'm',
                'm7'
            ],
            [
                3,
                2741,
                -1,
                'lydian',
                '',
                'Maj7'
            ],
            [
                4,
                2774,
                1,
                'mixolydian',
                '',
                '7'
            ],
            [
                5,
                2906,
                3,
                'aeolian',
                'm',
                'm7',
                'minor'
            ],
            [
                6,
                3434,
                5,
                'locrian',
                'dim',
                'm7b5'
            ]
        ], jw = {
            ...xc,
            name: '',
            alt: 0,
            modeNum: NaN,
            triad: '',
            seventh: '',
            aliases: []
        }, XEe = I5.map(QEe), k2 = { e: t };
    XEe.forEach(t => {
        k2[t.name] = t;
        t.aliases.forEach(e => {
            ;
        });
        ;
    });
    function VI(t) {
        return typeof t == 'string' ? k2[t.toLowerCase()] || jw : t && t.name ? VI(t.name) : jw;
    }
    function QEe(t) {
        const [e, n, r, s, i, o, a] = t, l = a ? [a] : [], u = Number(n).toString(2);
        return {
            empty: false,
            intervals: NI(s).intervals,
            modeNum: e,
            chroma: u,
            normalized: u,
            name: s,
            setNum: n,
            alt: r,
            triad: i,
            seventh: o,
            aliases: l
        };
    }
    function GI(t) {
        return (e, n) => {
            const r = VI(e);
            if (r.empty) {
                return [];
            }
            const s = od(r.modeNum, t), i = r.intervals.map(o => ma(n, o));
            return s.map((o, a) => i[a] + o);
        };
    }
    GI(I5.map(t => t[4]));
    GI(I5.map(t => t[5]));
    var JEe = {
        empty: true,
        name: '',
        type: '',
        tonic: null,
        setNum: NaN,
        chroma: '',
        normalized: '',
        aliases: [],
        notes: [],
        intervals: []
    };
    function jI(t) {
        if (typeof t != 'string') {
            return [
                '',
                ''
            ];
        }
        const e = t.indexOf(' '), n = zt(t.substring(0, e));
        if (n.empty) {
            const s = zt(t);
            return s.empty ? [
                '',
                t
            ] : [
                s.name,
                ''
            ];
        }
        const r = t.substring(n.name.length + 1);
        return [
            n.name,
            r.length ? r : ''
        ];
    }
    var eTe = uEe;
    function xi(t) {
        const e = Array.isArray(t) ? t : jI(t), n = zt(e[0]).name, r = NI(e[1]);
        if (r.empty) {
            return JEe;
        }
        const s = r.name, i = n ? r.intervals.map(a => ma(n, a)) : [], o = n ? n + ' ' + s : s;
        return {
            ...r,
            name: o,
            type: s,
            tonic: n,
            notes: i
        };
    }
    var tTe = yI('Scale.scale', 'Scale.get', xi);
    function nTe(t, e = {}) {
        const n = U4e(t), r = zt(e.tonic ?? t[0] ?? ''), s = r.chroma;
        if (s === void 0) {
            return [];
        }
        const i = n.split('');
        ;
        const o = od(s, i).join(''), a = xg().find(u => u.chroma === o), l = [];
        return a && l.push(r.name + ' ' + a.name), e.match === 'exact' || WI(o).forEach(u => {
            l.push(r.name + ' ' + u);
        }), l;
    }
    function rTe(t) {
        const e = xi(t), n = v5(e.chroma);
        return Ig().filter(r => n(r.chroma)).map(r => r.aliases[0]);
    }
    function WI(t) {
        const e = y5(t) ? t : xi(t).chroma, n = b5(e);
        return xg().filter(r => n(r.chroma)).map(r => r.name);
    }
    function sTe(t) {
        const e = v5(xi(t).chroma);
        return xg().filter(n => e(n.chroma)).map(n => n.name);
    }
    function HI(t) {
        const e = t.map(s => zt(s).pc).filter(s => s), n = e[0], r = BI(e);
        return od(r.indexOf(n), r);
    }
    function iTe(t) {
        const e = xi(t);
        if (e.empty) {
            return [];
        }
        const n = e.tonic ? e.notes : e.intervals;
        return kI(e.chroma).map((r, s) => {
            const i = xi(r).name;
            return i ? [
                n[s],
                i
            ] : [
                '',
                ''
            ];
        }).filter(r => r[0]);
    }
    function oTe(t) {
        const e = Array.isArray(t) ? HI(t) : xi(t).notes, n = e.map(r => zt(r).chroma);
        return r => {
            const s = zt(typeof r == 'number' ? DI(r) : r), i = s.height;
            if (i === void 0) {
                return;
            }
            const o = i % 12, a = n.indexOf(o);
            if (a !== -1) {
                return qI(s.name, e[a]);
            }
        };
    }
    function aTe(t) {
        const e = oTe(t);
        return (n, r) => {
            const s = zt(n).height, i = zt(r).height;
            return s === void 0 || i === void 0 ? [] : M4e(s, i).map(e).filter(o => o);
        };
    }
    function cTe(t) {
        const {
                intervals: e,
                tonic: n
            } = xi(t), r = Cg(e, n);
        return s => s ? r(s > 0 ? s - 1 : s) : '';
    }
    function lTe(t) {
        const {
            intervals: e,
            tonic: n
        } = xi(t);
        return Cg(e, n);
    }
    var Ww = {
        degrees: cTe,
        detect: nTe,
        extended: WI,
        get: xi,
        modeNames: iTe,
        names: eTe,
        rangeOf: aTe,
        reduced: sTe,
        scaleChords: rTe,
        scaleNotes: HI,
        steps: lTe,
        tokenize: jI,
        scale: tTe
    };
    class N2 {
        static getChordNameFromMidi(e) {
            const n = e.sort().map(r => I2.fromMidi(r));
            return this.getChordNameFromNotes(n);
        }
        static getChordNameFromFrequencies(e) {
            const n = e.sort().map(r => I2.fromFreq(r));
            return this.getChordNameFromNotes(n);
        }
        static getChordNameFromNotes(e, n = 'Unknown') {
            const r = [], s = C2.detect(e);
            if (!s.length) {
                return [e.join('').replace(/[0-9]/g, '').toLowerCase()];
            }
            r.push(s[0]);
            let i = s[0];
            const o = s[0].split('/');
            if (o.length > 1) {
                i = o[0];
                r.push(i);
            }
            const a = C2.get(i);
            if (a.quality === 'Major') {
                r.push(`${ a.tonic }`);
            } else {
                if (a.quality === 'Minor') {
                    r.push(`${ a.tonic }m`);
                } else {
                    if (a.quality === 'Diminished') {
                        r.push(`${ a.tonic }m`);
                        const u = a.intervals.findIndex(f => f.includes('3'));
                        u !== -1 && r.push(`${ a.notes[u] }m`);
                    } else {
                        if (a.type === 'fifth') {
                            r.push(`${ a.tonic }m`);
                        } else {
                            if (a.type === 'minor augmented') {
                                const u = a.intervals.findIndex(f => f.includes('5A'));
                                u !== -1 && r.push(`${ a.notes[u] }`);
                            } else {
                                if (a.type === 'augmented') {
                                    const u = a.intervals.findIndex(f => f.includes('3'));
                                    u !== -1 && r.push(`${ a.notes[u] }`);
                                }
                            }
                        }
                    }
                }
            }
            return n === 'Major' ? r.push(`${ a.tonic }`) : n === 'Minor' && r.push(`${ a.tonic }m`), r.map(u => (u = u.replace(/M/g, '').replace(/\//g, '|').toLowerCase(), this.desharp(u)));
        }
        static desharp(e) {
            const n = e.indexOf('#');
            if (n === -1) {
                return e;
            }
            if (e.indexOf('##') !== -1) {
                switch (e[n - 1]) {
                case 'a':
                    return e.replace('a##', 'b');
                case 'b':
                    return e.replace('b##', 'db');
                case 'c':
                    return e.replace('c##', 'd');
                case 'd':
                    return e.replace('d##', 'e');
                case 'e':
                    return e.replace('e##', 'gb');
                case 'f':
                    return e.replace('f##', 'g');
                case 'g':
                    return e.replace('g##', 'a');
                }
            }
            switch (e[n - 1]) {
            case 'a':
                return e.replace('a#', 'bb');
            case 'b':
                return e.replace('b#', 'c');
            case 'c':
                return e.replace('c#', 'db');
            case 'd':
                return e.replace('d#', 'eb');
            case 'e':
                return e.replace('e#', 'f');
            case 'f':
                return e.replace('f#', 'gb');
            case 'g':
                return e.replace('g#', 'gb');
            }
            return e;
        }
        static getRandomNumber(e, n) {
            return Math.floor(Math.random() * (n - e + 1) + e);
        }
        static getNotesInScale(e, n) {
            const r = Ww.get(e);
            return n.map(s => {
                const i = s === 8 ? Ww.degrees(r.name)(8) : r.notes[s - 1];
                return xEe.toMidi(i) ?? 60;
            });
        }
        static getLimitsOctaveShift(e, n) {
            if (!e.preferredRange || !n.limits || n.type !== 'Continuous') {
                return 0;
            }
            let r = 128, s = 0;
            if (n.limits.forEach(([a, l, u]) => {
                    l < r && (r = l);
                    u > s && (s = u);
                    ;
                }), r > e.preferredRange[0] && s < e.preferredRange[1]) {
                return 0;
            }
            let i = 0, o = 0;
            for (let a = -6; a < 6; a++) {
                const l = e.preferredRange[0] + a, u = e.preferredRange[1] + a, f = Math.max(l, r), p = Math.max(u, s) - f + 1;
                if (p > o) {
                    i = a;
                    o = p;
                }
            }
            return i;
        }
    }
    class oi {
        constructor(e, n) {
            this.notes = new Set();
            this.isMidiKeyed = true;
            this.rotationType = n.rotationType ?? 'serial';
            n.isHarmonic && (this.isMidiKeyed = false);
            ;
            let r;
            Array.isArray(e) ? (this.isMidiKeyed = false, r = { samples: e }) : r = e;
            const s = new Map(), i = {};
            Object.keys(r).forEach(o => {
                const a = [];
                let l;
                if (this.isMidiKeyed) {
                    const u = Ph(o).toMidi();
                    this.notes.add(u);
                    l = `${ u }`;
                    ;
                } else {
                    l = o.toLowerCase();
                }
                r[o].forEach((u, f) => {
                    i[`${ l }:${ f }`] = u;
                    i[`${ l }:${ f }`] = u;
                    a.push(`${ l }:${ f }`);
                    ;
                });
                s.set(l, {
                    nextIndex: this.rotationType === 'serial' ? 0 : N2.getRandomNumber(0, a.length - 1),
                    bufferKeys: a
                });
                ;
            });
            this.groupMap = s;
            this.buffers = new sd({
                urls: i,
                onload: n.onload,
                baseUrl: n.baseUrl,
                onerror: n.onerror
            });
            ;
        }
        get loaded() {
            return this.buffers.loaded;
        }
        findClosest(e) {
            if (!this.isMidiKeyed) {
                return e;
            }
            ;
            let r = 0;
            for (; r < 96;) {
                if (this.notes.has(e + r)) {
                    return -r;
                }
                if (this.notes.has(e - r)) {
                    return r;
                }
                r += 1;
            }
            return e;
        }
        get(e) {
            e === void 0 && (e = 'samples');
            typeof e == 'number' && (e = `${ e }`);
            ;
            const n = this.groupMap.get(e);
            if (!n) {
                return;
            }
            const r = n.bufferKeys[n.nextIndex];
            return r ? (this.rotationType === 'random' ? n.nextIndex = N2.getRandomNumber(0, n.bufferKeys.length - 1) : n.nextIndex = n.nextIndex === n.bufferKeys.length - 1 ? 0 : n.nextIndex + 1, this.buffers.get(r)) : void 0;
        }
        keys() {
            return Array.from(this.groupMap.keys());
        }
        has(e) {
            return !this.isMidiKeyed || e === void 0 ? true : (typeof e == 'number' && (e = `${ e }`), this.groupMap.has(e));
        }
        dispose() {
            this.buffers.dispose();
        }
        static transformSampleMap(e) {
            const n = {};
            return Object.keys(e.urls).forEach(r => {
                var s, i;
                (s = e.notes) != null && s.length && !e.notes.includes(r) || (i = e.chords) != null && i.length && !e.chords.includes(r) || (n[r] = e.urls[r].map(o => this.transformUrl(o, e.baseUrl, e.ext)));
            }), n;
        }
        static transformSampleObject(e) {
            const n = {};
            return Object.keys(e.urls).forEach(r => {
                e.notes && !e.notes.includes(r) || e.chords && !e.chords.includes(r) || (n[r] = this.transformUrl(e.urls[r], e.baseUrl, e.ext));
            }), n;
        }
        static transformSampleArray(e) {
            return e.urls.map(n => this.transformUrl(n, e.baseUrl, e.ext));
        }
        static transformUrl(e, n, r) {
            return r || (r = Pt.supportsType('ogg') ? 'ogg' : 'mp3'), e.includes(`.${ r }`) ? `${ n }/${ e }` : `${ n }/${ e }.${ r }`;
        }
    }
    class wf extends Js {
        constructor() {
            super(re(wf.getDefaults(), arguments, [
                'urls',
                'onload',
                'baseUrl'
            ], 'urls'));
            this.name = 'OneShotSampler';
            this.activeSources = new Map();
            ;
            const e = re(wf.getDefaults(), arguments, [
                'urls',
                'onload',
                'baseUrl'
            ], 'urls');
            this.buffers = new oi(e.urls, {
                rotationType: e.rotationType,
                baseUrl: e.baseUrl,
                onload: e.onload,
                onerror: e.onerror
            });
            this.attack = e.attack;
            this.release = e.release;
            this.curve = e.curve;
            this.isPitchLocked = e.pitchLocked ?? false;
            this.restrictToSingleNotes = e.restrictToSingleNotes ?? false;
            this.buffers.loaded && Promise.resolve().then(e.onload);
            ;
        }
        get loaded() {
            return this.buffers.loaded;
        }
        static getDefaults() {
            return Object.assign(Js.getDefaults(), {
                attack: 0,
                baseUrl: '',
                curve: 'linear',
                onload: _t,
                onerror: _t,
                release: 0.1,
                isOneShot: false,
                pitchLocked: false,
                restrictToSingleNotes: false,
                rotationType: 'serial',
                urls: {}
            });
        }
        triggerAttack(e, n) {
            return Array.isArray(e) || (e = [e]), this.restrictToSingleNotes && e.length > 1 ? this : (e.forEach(r => {
                const s = wg(new Jn(this.context, r).toFrequency()), i = Math.round(s), o = s - i, a = this.buffers.findClosest(i);
                if (a === null) {
                    return;
                }
                const l = i - a, u = Ic(a + o), f = this.buffers.get(l);
                if (!f) {
                    return;
                }
                const d = new Ci({
                    url: f,
                    context: this.context,
                    curve: this.curve,
                    playbackRate: this.isPitchLocked ? 1 : u,
                    fadeIn: this.attack,
                    fadeOut: this.release,
                    onended: () => {
                        this.onSourceEnded(i, d);
                    },
                    loop: false
                }).connect(this.output);
                d.start(n, 0);
                const p = this.activeSources.get(i) ?? new Set();
                p.add(d);
                this.activeSources.set(i, p);
                ;
            }), this);
        }
        triggerAttackRelease(e, n, r) {
            const s = this.toSeconds(r);
            return this.triggerAttack(e, s), this.triggerRelease(s + this.toSeconds(n)), this;
        }
        triggerRelease(e, n) {
            return Array.isArray(e) || (e = [e]), this.restrictToSingleNotes && e.length > 1 ? this : (e.forEach(r => {
                const s = new Jn(this.context, r).toMidi(), i = this.activeSources.get(s);
                i && (i.forEach(o => {
                    n ? o.stop(this.toSeconds(n)) : o.stop(this.now());
                }), this.activeSources.delete(s));
            }), this);
        }
        onSourceEnded(e, n) {
            n.stop(this.now());
            const r = this.activeSources.get(e);
            r && (r.delete(n), r.size || this.activeSources.delete(e));
        }
        sync() {
            return this._syncState() && (this._syncMethod('triggerAttack', 1), this._syncMethod('triggerRelease', 1)), this;
        }
        dispose() {
            return super.dispose(), this.buffers.dispose(), this.activeSources.forEach(e => {
                e.forEach(n => n.dispose());
            }), this.activeSources.clear(), this;
        }
    }
    const k5 = class x2 {
        constructor(e, n) {
            this.isPlayable = true;
            ;
            n.baseUrl && (e.urls = oi.transformSampleMap({
                urls: e.urls,
                baseUrl: n.baseUrl,
                ext: n.ext
            }));
            this.node = new wf(e);
            ;
        }
        attack(e) {
            this.node.triggerAttack(e);
        }
        oneShot(e, n) {
            n ? this.node.triggerAttackRelease(e, n) : this.node.triggerAttack(e);
        }
        release(e) {
            this.node.triggerRelease(e);
        }
        convertDrumRackKeys(e) {
            const n = {};
            return Object.keys(e).forEach(r => {
                x2.keyToNoteMap[r] ? n[x2.keyToNoteMap[r]] = e[r] : n[r] = e[r];
            }), n;
        }
    };
    k5.keys = [
        'kick',
        'rim',
        'snare',
        'sidestick',
        'rimshot',
        'pedalhh',
        'closedhh',
        'floortom',
        'mediumhh',
        'lowtom',
        'openhh',
        'midtom',
        'hitom',
        'crash',
        'ride',
        'click'
    ];
    k5.keyToNoteMap = {
        kick: 'c2',
        rim: 'db2',
        snare: 'd2',
        sidestick: 'eb2',
        rimshot: 'e2',
        pedalhh: 'f2',
        closedhh: 'gb2',
        floortom: 'g2',
        mediumhh: 'ab2',
        lowtom: 'a2',
        openhh: 'bb2',
        midtom: 'b2',
        hitom: 'c3',
        crash: 'd3',
        ride: 'eb3',
        click: 'g3'
    };
    let uTe = k5;
    class hTe {
        constructor(e) {
            this.isPlayable = true;
            this.node = new F1(e);
            ;
        }
        attack(e) {
            e.length && this.node.triggerAttack(e[0]);
        }
        oneShot(e, n = 0.25) {
            e.length && this.node.triggerAttackRelease(e[0], n);
        }
        update(e) {
            e.length && (this.node.frequency.value = e[0]);
        }
        release(e) {
            this.node.triggerRelease();
        }
    }
    class hm extends Js {
        constructor() {
            super(re(hm.getDefaults(), arguments, [
                'urls',
                'onload',
                'baseUrl'
            ], 'urls'));
            this.name = 'FlubSampler';
            this.activeSources = new Set();
            ;
            const e = re(hm.getDefaults(), arguments, [
                'urls',
                'onload',
                'baseUrl'
            ], 'urls');
            this.buffers = new oi(e.urls, {
                rotationType: e.rotationType,
                baseUrl: e.baseUrl,
                onload: e.onload,
                onerror: e.onerror
            });
            this.attack = e.attack;
            this.release = e.release;
            this.curve = e.curve;
            this.buffers.loaded && Promise.resolve().then(e.onload);
            ;
        }
        get loaded() {
            return this.buffers.loaded;
        }
        static getDefaults() {
            return Object.assign(Js.getDefaults(), {
                attack: 0,
                baseUrl: '',
                curve: 'exponential',
                onload: _t,
                onerror: _t,
                release: 0.1,
                rotationType: 'serial',
                urls: []
            });
        }
        triggerAttack(e) {
            const n = this.buffers.get();
            if (!n) {
                return this;
            }
            const r = new Ci({
                url: n,
                context: this.context,
                curve: this.curve,
                fadeIn: this.attack,
                fadeOut: this.release,
                onended: s => this.activeSources.delete(s)
            }).connect(this.output);
            return r.start(e, 0), this.activeSources.add(r), this;
        }
        triggerAttackRelease() {
            return this;
        }
        triggerRelease() {
            return this;
        }
        sync() {
            return this._syncState() && (this._syncMethod('triggerAttack', 1), this._syncMethod('triggerRelease', 1)), this;
        }
        dispose() {
            return super.dispose(), this.buffers.dispose(), this.activeSources.forEach(e => e.dispose()), this.activeSources.clear(), this;
        }
    }
    class fTe {
        constructor(e, n) {
            this.isPlayable = true;
            n.baseUrl && (e.urls = oi.transformSampleArray({
                urls: e.urls,
                baseUrl: n.baseUrl,
                ext: n.ext
            }));
            this.node = new hm(e);
            ;
        }
        attack() {
            this.node.triggerAttack();
        }
        oneShot() {
            this.node.triggerAttack();
        }
        release() {
            this.node.triggerRelease();
        }
    }
    class dTe {
        constructor(e) {
            this.isPlayable = true;
            this.node = new pf(e);
            ;
        }
        attack(e) {
            e.length && this.node.triggerAttack(e[0]);
        }
        oneShot(e, n = 0.25) {
            e.length && this.node.triggerAttackRelease(e[0], n);
        }
        update(e) {
            e.length && (this.node.frequency.value = e[0]);
        }
        release(e) {
            this.node.triggerRelease();
        }
    }
    class fm extends Js {
        constructor() {
            super(re(fm.getDefaults(), arguments, [
                'urls',
                'onload',
                'baseUrl'
            ], 'urls'));
            this.name = 'HarmonicSampler';
            ;
            const e = re(fm.getDefaults(), arguments, [
                'urls',
                'onload',
                'baseUrl'
            ], 'urls');
            this.buffers = new oi(e.urls, {
                isHarmonic: true,
                rotationType: e.rotationType,
                baseUrl: e.baseUrl,
                onload: e.onload,
                onerror: e.onerror
            });
            this.attack = e.attack;
            this.release = e.release;
            this.curve = e.curve;
            this.buffers.loaded && Promise.resolve().then(e.onload);
            ;
        }
        get loaded() {
            return this.buffers.loaded;
        }
        static getDefaults() {
            return Object.assign(Js.getDefaults(), {
                attack: 0,
                baseUrl: '',
                curve: 'exponential',
                onload: _t,
                onerror: _t,
                release: 0.1,
                rotationType: 'serial',
                urls: {}
            });
        }
        triggerAttack(e, n) {
            if (!Array.isArray(e)) {
                return this;
            }
            if (e.length < 2) {
                return this;
            }
            let r;
            const s = N2.getChordNameFromFrequencies(e);
            for (let i = 0; i < s.length && (r = this.buffers.get(s[i]), !r); i++) {
                ;
            }
            if (!r) {
                const i = e.sort().map(o => I2.fromFreq(o));
                return console.warn('Buffer not found', s, C2.detect(i), i), this;
            }
            return this.activeSource && (this.activeSource.stop(), this.disposeActiveSource()), this.activeSource = new Ci({
                url: r,
                context: this.context,
                curve: this.curve,
                fadeIn: this.attack,
                fadeOut: this.release,
                loop: false
            }).connect(this.output), this.activeSource.start(n, 0), this;
        }
        triggerAttackRelease(e, n, r) {
            const s = this.toSeconds(r);
            return this.triggerAttack(e, s), this.triggerRelease(s + this.toSeconds(n)), this;
        }
        triggerRelease(e, n) {
            return Array.isArray(e) ? this.activeSource ? (n ? this.activeSource.stop(this.toSeconds(n)) : this.activeSource.stop(this.now()), delete this.activeSource, this) : this : this;
        }
        disposeActiveSource() {
            this.activeSource && (this.activeSource.dispose(), delete this.activeSource);
        }
        sync() {
            return this._syncState() && (this._syncMethod('triggerAttack', 1), this._syncMethod('triggerRelease', 1)), this;
        }
        dispose() {
            return super.dispose(), this.buffers.dispose(), this.disposeActiveSource(), this;
        }
    }
    class pTe {
        constructor(e, n) {
            this.isPlayable = true;
            n.baseUrl && (e.urls = oi.transformSampleMap({
                urls: e.urls,
                baseUrl: n.baseUrl,
                ext: n.ext
            }));
            this.node = new fm(e);
            ;
        }
        attack(e) {
            this.node.triggerAttack(e);
        }
        oneShot(e, n = 0.25) {
            this.node.triggerAttackRelease(e, n);
        }
        release(e) {
            this.node.triggerRelease(e);
        }
    }
    class mTe {
        constructor(e) {
            this.isPlayable = true;
            this.node = new su(e);
            ;
        }
        attack(e) {
            e.length && this.node.triggerAttack(e[0]);
        }
        oneShot(e, n = 0.25) {
            e.length && this.node.triggerAttackRelease(e[0], n);
        }
        update(e) {
            e.length && (this.node.frequency.value = e[0]);
        }
        release(e) {
            this.node.triggerRelease();
        }
    }
    class gTe {
        constructor(e) {
            this.isPlayable = true;
            this.node = new U1(e);
            ;
        }
        attack(e) {
            e.length && this.node.triggerAttack(e[0]);
        }
        oneShot(e, n = 0.25) {
            e.length && this.node.triggerAttackRelease(e[0], n);
        }
        update(e) {
            e.length && (this.node.frequency.value = e[0]);
        }
        release(e) {
            this.node.triggerRelease();
        }
    }
    class _Te {
        constructor(e) {
            this.isPlayable = true;
            this.node = new so(e);
            ;
        }
        attack(e) {
            e.length && this.node.triggerAttack(e[0]);
        }
        oneShot(e, n = 0.25) {
            e.length && this.node.triggerAttackRelease(e[0], n);
        }
        update(e) {
            e.length && (this.node.frequency.value = e[0]);
        }
        release(e) {
            this.node.triggerRelease();
        }
    }
    class yTe {
        constructor(e) {
            this.isPlayable = true;
            this.node = new B1(e);
            ;
        }
        attack(e) {
            e.length && this.node.triggerAttack(e[0]);
        }
        oneShot(e, n = 0.25) {
            e.length && this.node.triggerAttackRelease(e[0], n);
        }
        release(e) {
            this.node.triggerRelease();
        }
    }
    class vTe {
        constructor(e, n) {
            this.isPlayable = true;
            let r;
            n.notes && (r = n.notes.map(s => Ph(s, 'midi').toNote()));
            n.baseUrl && (e.urls = oi.transformSampleMap({
                urls: e.urls,
                baseUrl: n.baseUrl,
                ext: n.ext,
                notes: r
            }));
            this.node = new wf(e);
            ;
        }
        attack(e) {
            this.node.triggerAttack(e);
        }
        oneShot(e, n) {
            n ? this.node.triggerAttackRelease(e, n) : this.node.triggerAttack(e);
        }
        release(e) {
            this.node.triggerRelease(e);
        }
    }
    class bTe {
        constructor(e, n) {
            this.isPlayable = true;
            n.baseUrl && (e.url = oi.transformUrl(e.url, n.baseUrl, n.ext));
            this.node = new kc(e);
            ;
        }
        attack(e) {
            this.node.start();
        }
        oneShot(e, n = 0.25) {
            this.node.start();
            window.setTimeout(() => {
                this.node.stop();
            }, n * 1000);
            ;
        }
        release(e) {
            this.node.stop();
        }
    }
    class ETe {
        constructor(e) {
            this.isPlayable = true;
            this.node = new q1(e);
            ;
        }
        attack(e) {
            e.length && this.node.triggerAttack(e[0]);
        }
        oneShot(e, n = 0.25) {
            e.length && this.node.triggerAttackRelease(e[0], n);
        }
        release(e) {
            this.node.triggerRelease();
        }
    }
    class TTe {
        constructor(e) {
            this.isPlayable = true;
            this.node = this.getNode(e);
            ;
        }
        getNode(e) {
            return e.voice.type === 'amSynth' ? new uc({
                voice: Ag,
                maxPolyphony: e.maxPolyphony ?? 12,
                options: e.voice.options
            }) : e.voice.type === 'fmSynth' ? new uc({
                voice: pf,
                maxPolyphony: e.maxPolyphony ?? 12,
                options: e.voice.options
            }) : e.voice.type === 'monoSynth' ? new uc({
                voice: so,
                maxPolyphony: e.maxPolyphony ?? 12,
                options: e.voice.options
            }) : new uc({
                voice: ki,
                maxPolyphony: e.maxPolyphony ?? 12,
                options: e.voice.options
            });
        }
        attack(e) {
            this.node.triggerAttack(e);
        }
        oneShot(e, n = 0.25) {
            this.node.triggerAttackRelease(e, n);
        }
        release(e) {
            this.node.triggerRelease(e);
        }
    }
    class STe {
        constructor(e, n) {
            this.isPlayable = true;
            n.baseUrl && (e.urls = oi.transformSampleObject({
                urls: e.urls,
                baseUrl: n.baseUrl,
                ext: n.ext
            }));
            this.node = new iu(e);
            ;
        }
        attack(e) {
            this.node.triggerAttack(e);
        }
        oneShot(e, n = 0.25) {
            this.node.triggerAttackRelease(e, n);
        }
        release(e) {
            this.node.triggerRelease(e);
        }
    }
    class wTe {
        constructor(e) {
            this.isPlayable = false;
            this.node = this.getNode(e);
            ;
        }
        getNode(e) {
            switch (e.type) {
            case 'compressor':
                return new ra(e.options);
            case 'eq3':
                return new lm(e.options);
            case 'filter':
                return new Dr(e.options);
            case 'gate':
                return new om(e.options);
            case 'limiter':
                return new am(e.options);
            case 'multibandCompressor':
                return new cm(e.options);
            case 'panVol':
                return new lu(e.options);
            case 'panner':
                return new au(e.options);
            case 'volume':
                return new Ai(e.options);
            case 'autoFilter':
                return new yf(e.options);
            case 'autoPanner':
                return new vf(e.options);
            case 'autoWah':
                return new G1(e.options);
            case 'bitCrusher':
                return new j1(e.options);
            case 'chebyshev':
                return new H1(e.options);
            case 'chorus':
                return new z1(e.options);
            case 'distortion':
                return new Y1(e.options);
            case 'feedbackDelay':
                return new Z1(e.options);
            case 'freeverb':
                return new Q1(e.options);
            case 'frequencyShifter':
                return new X1(e.options);
            case 'jcReverb':
                return new J1(e.options);
            case 'phaser':
                return new nm(e.options);
            case 'pingPongDelay':
                return new em(e.options);
            case 'pitchShift':
                return new tm(e.options);
            case 'reverb':
                return new rm(e.options);
            case 'stereoWidener':
                return new sm(e.options);
            case 'tremolo':
                return new Ef(e.options);
            case 'vibrato':
                return new im(e.options);
            default:
                throw new Error(`Unknown static node type ${ e.type }`);
            }
        }
    }
    class dm extends Js {
        constructor() {
            super(re(dm.getDefaults(), arguments, [
                'urls',
                'onload',
                'baseUrl'
            ], 'urls'));
            this.name = 'SustainSampler';
            ;
            const e = re(dm.getDefaults(), arguments, [
                'urls',
                'onload',
                'baseUrl'
            ], 'urls');
            this.buffers = new oi(e.urls, {
                rotationType: e.rotationType,
                baseUrl: e.baseUrl,
                onload: e.onload,
                onerror: e.onerror
            });
            this.attack = e.attack;
            this.release = e.release;
            this.curve = e.curve;
            this.legato = e.legato;
            this.buffers.loaded && Promise.resolve().then(e.onload);
            ;
        }
        static getDefaults() {
            return Object.assign(Js.getDefaults(), {
                attack: 0,
                baseUrl: '',
                curve: 'exponential',
                legato: false,
                onload: _t,
                onerror: _t,
                release: 0.1,
                rotationType: 'serial',
                urls: {}
            });
        }
        triggerAttack(e, n) {
            var d;
            const r = wg(new Jn(this.context, e).toFrequency());
            if (this.activeSource && this.activeNote && !this.legato) {
                const p = r - this.activeNote, _ = this.buffers.findClosest(this.activeNote);
                if (_ === null) {
                    return this;
                }
                const v = Ic(_ + p);
                return this.activeSource.playbackRate.value = v, this;
            }
            const s = Math.round(r), i = r - s, o = this.buffers.findClosest(s);
            if (o === null) {
                return this;
            }
            const a = Ic(o + i), l = s - o;
            if (this.legato) {
                if (l === this.activeNote) {
                    return this;
                }
                (d = this.activeSource) == null || d.stop(this.now());
            }
            const u = this.buffers.get(l);
            if (!u) {
                return this;
            }
            const f = new Ci({
                url: u,
                context: this.context,
                curve: this.curve,
                fadeIn: this.attack,
                fadeOut: this.release,
                loop: true,
                playbackRate: a
            }).connect(this.output);
            return f.start(n, 0), this.activeSource = f, this.activeNote = l, this;
        }
        triggerAttackRelease(e, n, r) {
            return this;
        }
        triggerUpdate(e, n) {
            return this.triggerAttack(e, n), this;
        }
        triggerRelease(e) {
            return this.activeSource ? (e ? this.activeSource.stop(this.toSeconds(e)) : this.activeSource.stop(this.now()), delete this.activeSource, delete this.activeNote, this) : this;
        }
        sync() {
            return this._syncState() && (this._syncMethod('triggerAttack', 1), this._syncMethod('triggerRelease', 1)), this;
        }
        dispose() {
            var e;
            return super.dispose(), this.buffers.dispose(), (e = this.activeSource) == null || e.dispose(), this;
        }
    }
    class OTe {
        constructor(e, n) {
            this.isPlayable = true;
            n.baseUrl && (e.urls = oi.transformSampleMap({
                urls: e.urls,
                baseUrl: n.baseUrl,
                ext: n.ext
            }));
            this.node = new dm(e);
            ;
        }
        attack(e) {
            e.length && this.node.triggerAttack(e[0]);
        }
        oneShot(e, n = 0.25) {
            e.length && this.node.triggerAttackRelease(e[0], n);
        }
        update(e) {
            e.length && this.node.triggerAttack(e[0]);
        }
        release(e) {
            this.node.triggerRelease();
        }
    }
    class ATe {
        constructor(e) {
            this.isPlayable = true;
            this.node = new ki(e);
            ;
        }
        attack(e) {
            e.length && this.node.triggerAttack(e[0]);
        }
        oneShot(e, n = 0.25) {
            e.length && this.node.triggerAttackRelease(e[0], n);
        }
        update(e) {
            e.length && (this.node.frequency.value = e[0]);
        }
        release(e) {
            this.node.triggerRelease();
        }
    }
    class CTe {
        constructor(e) {
            this.isPlayable = false;
            const n = new Ns(e.frequency || 440, e.type || 'sine'), r = new Ef(e).start();
            n.connect(r);
            this.node = r;
            ;
        }
    }
    class ah {
        constructor(e, n) {
            this.nodes = [];
            this.duration = n.duration ?? 0.25;
            e.forEach(r => {
                if (r.isDisabled) {
                    return;
                }
                const s = this.getNode(r, n);
                this.nodes.push(s);
                this.isPlayableNode(s) && (this.playable = s);
                ;
            });
            this.connectNodes();
            ;
        }
        get inNode() {
            return this.nodes[0];
        }
        get outNode() {
            return this.nodes[this.nodes.length - 1];
        }
        isPlayableNode(e) {
            return e.attack !== void 0;
        }
        getNode(e, n) {
            switch (e.type) {
            case 'amSynth':
                return new l4e(e.options);
            case 'autoFilter':
                return new u4e(e.options);
            case 'autoPanner':
                return new h4e(e.options);
            case 'drumRackSampler':
                return new uTe(e.options, n);
            case 'duoSynth':
                return new hTe(e.options);
            case 'flubSampler':
                return new fTe(e.options, n);
            case 'fmSynth':
                return new dTe(e.options);
            case 'harmonicSampler':
                return new pTe(e.options, n);
            case 'membraneSynth':
                return new mTe(e.options);
            case 'metalSynth':
                return new gTe(e.options);
            case 'monoSynth':
                return new _Te(e.options);
            case 'noiseSynth':
                return new yTe(e.options);
            case 'oneShotSampler':
                return new vTe(e.options, n);
            case 'player':
                return new bTe(e.options, n);
            case 'pluckSynth':
                return new ETe(e.options);
            case 'polySynth':
                return new TTe(e.options);
            case 'sampler':
                return new STe(e.options, n);
            case 'sustainSampler':
                return new OTe(e.options, n);
            case 'synth':
                return new ATe(e.options);
            case 'tremolo':
                return new CTe(e.options);
            default:
                return new wTe(e);
            }
        }
        connectNodes() {
            this.nodes.forEach((e, n) => {
                n !== this.nodes.length - 1 && e.node.connect(this.nodes[n + 1].node);
            });
        }
        attack(e) {
            var n;
            (n = this.playable) != null && n.attack && this.playable.attack(e);
        }
        oneShot(e, n) {
            var r;
            (r = this.playable) != null && r.oneShot && this.playable.oneShot(e, n);
        }
        update(e) {
            var n;
            (n = this.playable) != null && n.update && this.playable.update(e);
        }
        release(e) {
            var n;
            (n = this.playable) != null && n.release && this.playable.release(e);
        }
    }
    class N5 {
        constructor(e = {}) {
            this.attackChains = [];
            this.mainChains = [];
            this.releaseChains = [];
            this.flubChains = [];
            this.activeFrequency = null;
            this.activeFrequencies = new Set();
            this.outNode = new lu();
            this.settings = {
                baseUrl: null,
                ext: null,
                chords: [],
                config: null,
                notes: [],
                isOneShot: false,
                noFlubs: false
            };
            this.continuous = {
                attack: (n, r, s) => {
                    if (this.activeFrequency === null) {
                        n = this.normalizeSignal(n);
                        this.activeFrequency = this.signalToFrequency(n, r, s);
                        this.attackChains.forEach(i => i.oneShot([this.activeFrequency], i.duration));
                        this.mainChains.forEach(i => i.attack([this.activeFrequency]));
                    }
                },
                update: (n, r, s) => {
                    if (this.activeFrequency !== null) {
                        n = this.normalizeSignal(n);
                        this.activeFrequency = this.signalToFrequency(n, r, s);
                        this.mainChains.forEach(i => i.update([this.activeFrequency]));
                    }
                },
                release: () => {
                    if (this.activeFrequency !== null) {
                        this.releaseChains.forEach(n => n.oneShot([this.activeFrequency], n.duration));
                        this.mainChains.forEach(n => n.release([this.activeFrequency]));
                        this.activeFrequency = null;
                    }
                }
            };
            this.discrete = {
                attack: n => {
                    n = this.transposeNotesIntoRange(n);
                    const r = n.map(s => Ph(s, 'midi').toFrequency());
                    r.forEach(s => {
                        this.activeFrequencies.has(s) && this.mainChains.forEach(i => i.release([s]));
                        this.activeFrequencies.add(s);
                        ;
                    });
                    this.attackChains.forEach(s => s.oneShot(r, s.duration));
                    this.mainChains.forEach(s => {
                        this.isOneShot ? s.oneShot(r) : s.attack(r);
                    });
                    ;
                },
                release: n => {
                    n = this.transposeNotesIntoRange(n);
                    const r = n.map(s => Ph(s, 'midi').toFrequency());
                    r.forEach(s => this.activeFrequencies.delete(s));
                    this.releaseChains.forEach(s => s.oneShot(r, s.duration));
                    !this.isOneShot && this.mainChains.forEach(s => s.release(r));
                    ;
                }
            };
            this.flub = {
                attack: () => {
                    this.flubChains.forEach(n => n.oneShot([60], n.duration));
                }
            };
            this.outNode.toDestination();
            this.update(e);
            ;
        }
        update(e = {}) {
            this.releaseAll();
            const n = JSON.parse(JSON.stringify(e));
            n.baseUrl !== void 0 && (this.settings.baseUrl = n.baseUrl);
            n.ext !== void 0 && (this.settings.ext = n.ext);
            n.chords !== void 0 && (this.settings.chords = n.chords);
            n.notes !== void 0 && (this.settings.notes = this.transposeNotesIntoRange(n.notes.sort()));
            n.noFlubs !== void 0 && (this.settings.noFlubs = n.noFlubs);
            n.config !== void 0 && (this.settings.config = n.config);
            this.settings.config && (this.settings.isOneShot = this.settings.config.capabilities.includes('OneShot'), this.resetChains());
            ;
        }
        get baseUrl() {
            return this.settings.baseUrl;
        }
        get ext() {
            return this.settings.ext;
        }
        get chords() {
            return this.settings.chords;
        }
        get notes() {
            return this.settings.notes;
        }
        get isOneShot() {
            return this.settings.isOneShot;
        }
        get noFlubs() {
            return this.settings.noFlubs;
        }
        get config() {
            return this.settings.config;
        }
        resetChains() {
            this.clearChains();
            this.config && (this.buildChains(), this.connectChains());
            ;
        }
        clearChains() {
            const e = [];
            this.attackChains.forEach(n => {
                e.push(...n.nodes);
            });
            this.mainChains.forEach(n => {
                e.push(...n.nodes);
            });
            this.releaseChains.forEach(n => {
                e.push(...n.nodes);
            });
            this.flubChains.forEach(n => {
                e.push(...n.nodes);
            });
            this.effectChain && e.push(...this.effectChain.nodes);
            this.attackChains = [];
            this.mainChains = [];
            this.releaseChains = [];
            this.flubChains = [];
            delete this.effectChain;
            e.forEach(n => {
                n.node.disconnect();
                n.node.dispose();
                ;
            });
            ;
        }
        buildChains() {
            this.config && this.config.chains.forEach(e => {
                var r;
                if (this.settings.noFlubs && e.type === 'flub' || !e.nodes.length || (r = e.nodes[0]) != null && r.isDisabled && e.type !== 'effect') {
                    return;
                }
                const n = {};
                this.baseUrl && (n.baseUrl = this.baseUrl);
                this.chords && (n.chords = this.chords);
                this.ext && (n.ext = this.ext);
                this.notes && (n.notes = this.notes);
                e.type === 'effect' ? this.effectChain = new ah(e.nodes, n) : e.type === 'main' ? this.mainChains.push(new ah(e.nodes, n)) : (n.duration = e.duration, e.type === 'attack' ? this.attackChains.push(new ah(e.nodes, n)) : e.type === 'release' ? this.releaseChains.push(new ah(e.nodes, n)) : this.flubChains.push(new ah(e.nodes, n)));
                ;
            });
        }
        connectChains() {
            this.effectChain && this.effectChain.outNode.node.connect(this.outNode);
            [
                ...this.attackChains,
                ...this.mainChains,
                ...this.releaseChains,
                ...this.flubChains
            ].forEach(n => {
                this.effectChain ? n.outNode.node.connect(this.effectChain.inNode.node) : n.outNode.node.connect(this.outNode);
            });
            ;
        }
        normalizeSignal(e) {
            return e < 0 ? 0 : e > 1 ? 1 : e;
        }
        signalToFrequency(e, n, r) {
            const s = (r - n) * e + n;
            return Ph(s, 'midi').toFrequency();
        }
        transposeNotesIntoRange(e) {
            return e.map(this.transposeNoteIntoRange.bind(this));
        }
        transposeNoteIntoRange(e) {
            if (!this.config || !this.config.preferredRange) {
                return e;
            }
            if (e < this.config.preferredRange[0]) {
                for (let n = e; n <= 127; n += 12) {
                    if (n >= this.config.preferredRange[0]) {
                        return n;
                    }
                }
                return console.warn(`Unable to transpose note ${ e } into range ${ this.config.preferredRange }`), e;
            }
            if (e > this.config.preferredRange[1]) {
                for (let n = e; n >= 0; n -= 12) {
                    if (n <= this.config.preferredRange[1]) {
                        return n;
                    }
                }
                console.warn(`Unable to transpose note ${ e } into range ${ this.config.preferredRange }`);
            }
            return e;
        }
        releaseAll() {
            const e = Array.from(this.activeFrequencies);
            this.discrete.release(e);
            this.continuous.release();
            ;
        }
    }
    const ITe = at({
            props: {
                beatmap: {
                    type: Object,
                    required: true
                },
                instrument: {
                    type: Object,
                    required: true
                }
            },
            setup() {
                return { instraface: new N5({ noFlubs: true }) };
            },
            data() {
                return {
                    isLoading: true,
                    isDown: false,
                    signal: 0
                };
            },
            computed: {
                classes() {
                    const t = [lr.categorySlugByKey(this.beatmap.config.category)];
                    return this.isLoading && t.push('loading'), t;
                },
                limits() {
                    const e = 12 + (this.instrument.config.testOctave ?? 3) * 12;
                    return [
                        e - 12,
                        e + 12
                    ];
                }
            },
            watch: {
                instrument: {
                    handler(t, e) {
                        e && t.config.slug === e.config.slug || (this.instraface.update({
                            baseUrl: `https://cdn.jackboxgames.com/nopus-opus/instruments/${ this.instrument.config.slug }`,
                            config: this.instrument.config
                        }), this.instraface.outNode.volume.value = 8, this.waitForLoading());
                    },
                    immediate: true
                }
            },
            beforeUnmount() {
                this.instraface.releaseAll();
                this.instraface.update({ config: null });
                ;
            },
            methods: {
                normalizeSignal(t) {
                    return t < 0 ? 0 : t > 1 ? 1 : t;
                },
                onPointerBoxStart(t) {
                    if (!this.isLoading) {
                        this.isDown = true;
                        this.signal = this.normalizeSignal(t.detail.percentX);
                        ;
                        try {
                            this.instraface.continuous.attack(this.signal, this.limits[0], this.limits[1]);
                        } catch {
                            t.detail.cancel();
                            console.warn('not loaded');
                            ;
                        }
                    }
                },
                onPointerBoxMove(t) {
                    if (!this.isLoading) {
                        this.signal = this.normalizeSignal(t.detail.percentX);
                        try {
                            this.instraface.continuous.update(this.signal, this.limits[0], this.limits[1]);
                        } catch {
                            console.warn('not loaded');
                        }
                    }
                },
                onPointerBoxEnd() {
                    if (!this.isLoading) {
                        this.isDown = false;
                        try {
                            this.instraface.continuous.release();
                        } catch {
                            console.warn('not loaded');
                        }
                    }
                },
                async waitForLoading() {
                    this.isLoading = true;
                    await _5();
                    this.isLoading = false;
                    ;
                }
            }
        }), NTe = ['disabled'];
    function RTe(t, e, n, r, s, i) {
        const o = fn('pointerbox'), a = fn('t');
        return G(), K('div', {
            class: nt([
                'tester',
                t.classes
            ])
        }, [
            V('div', kTe, [qe((G(), K('div', {
                    class: 'slider',
                    disabled: t.isLoading,
                    'onPointerbox:start': e[0] || (e[0] = (...l) => t.onPointerBoxStart && t.onPointerBoxStart(...l)),
                    'onPointerbox:move': e[1] || (e[1] = (...l) => t.onPointerBoxMove && t.onPointerBoxMove(...l)),
                    'onPointerbox:end': e[2] || (e[2] = (...l) => t.onPointerBoxEnd && t.onPointerBoxEnd(...l))
                }, [V('div', {
                        class: nt([
                            'indicator',
                            { visible: t.isDown }
                        ]),
                        style: an({ left: `${ t.signal * 100 }%` })
                    }, null, 6)], 40, NTe)), [[
                        o,
                        void 0,
                        void 0,
                        { restrict: true }
                    ]])]),
            t.isLoading ? qe((G(), K('p', xTe, null, 512)), [[
                    a,
                    'MENU.LOADING'
                ]]) : qe((G(), K('p', PTe, null, 512)), [[
                    a,
                    'MENU.TEST_IT'
                ]])
        ], 2);
    }
    const MTe = Je(ITe, [
            [
                'render',
                RTe
            ],
            [
                '__scopeId',
                'data-v-8e7f796a'
            ]
        ]), DTe = [
            {
                lanes: [],
                hit: 0
            },
            {
                lanes: [
                    0,
                    50,
                    100
                ],
                hit: 14.5
            },
            {
                lanes: [
                    0,
                    30,
                    50,
                    70,
                    100
                ],
                hit: 14.5
            },
            {
                lanes: [
                    0,
                    22,
                    35,
                    50,
                    65,
                    78,
                    100
                ],
                hit: 14.5
            },
            {
                lanes: [
                    0,
                    15,
                    25,
                    38.33,
                    50,
                    61.66,
                    75,
                    85,
                    100
                ],
                hit: 14.5
            },
            {
                lanes: [
                    0,
                    10,
                    20,
                    30,
                    40,
                    50,
                    60,
                    70,
                    80,
                    90,
                    100
                ],
                hit: 14.5
            },
            {
                lanes: [
                    0,
                    8.33,
                    16.67,
                    25,
                    33.33,
                    41.5,
                    50,
                    58.5,
                    66.67,
                    75,
                    83.33,
                    91.67,
                    100
                ],
                hit: 12
            }
        ];
    function x5(t) {
        const e = DTe[t];
        if (!e) {
            return null;
        }
        const n = [];
        for (let r = 1; r < e.lanes.length; r += 2) {
            n.push({
                left: e.lanes[r - 1],
                center: e.lanes[r],
                right: e.lanes[r + 1]
            });
        }
        return {
            lanes: n,
            hit: e.hit
        };
    }
    const $Te = at({
            props: {
                beatmap: {
                    type: Object,
                    required: true
                },
                instrument: {
                    type: Object,
                    required: true
                }
            },
            setup() {
                return { instraface: new N5({ noFlubs: true }) };
            },
            data() {
                return {
                    isLoading: true,
                    activeCustomizing: null,
                    down: []
                };
            },
            computed: {
                hotkeys() {
                    return this.$hotkeyManager.mappings.get(this.laneCount);
                },
                laneCount() {
                    return this.beatmap.config.laneCount;
                },
                layout() {
                    return x5(this.laneCount);
                },
                classes() {
                    const t = [lr.categorySlugByKey(this.beatmap.config.category)];
                    return this.isLoading && t.push('loading'), t;
                },
                isPercussion() {
                    for (let t = 0; t < this.instrument.config.capabilities.length; t++) {
                        if (this.instrument.config.capabilities[t] === 'DrumRack' || this.instrument.config.capabilities[t] === 'PercRolling' || this.instrument.config.capabilities[t] === 'Drums' || this.instrument.config.capabilities[t] === 'PercSingle' || this.instrument.config.capabilities[t] === 'PercRep' || this.instrument.config.capabilities[t] === 'PercPitched') {
                            return true;
                        }
                    }
                    return false;
                },
                notes() {
                    if (this.isPercussion) {
                        switch (this.beatmap.config.laneCount) {
                        case 1:
                            return [36];
                        case 2:
                            return [
                                36,
                                38
                            ];
                        case 3:
                            return [
                                36,
                                38,
                                42
                            ];
                        case 4:
                            return [
                                36,
                                38,
                                42,
                                50
                            ];
                        case 5:
                            return [
                                36,
                                38,
                                42,
                                45,
                                50
                            ];
                        default:
                            return [
                                36,
                                38,
                                42,
                                45,
                                48,
                                50
                            ];
                        }
                    }
                    const e = 17 + (this.instrument.config.testOctave ?? 3) * 12;
                    switch (this.beatmap.config.laneCount) {
                    case 1:
                        return [e];
                    case 2:
                        return [
                            e,
                            e + 7
                        ];
                    case 3:
                        return [
                            e,
                            e + 4,
                            e + 7
                        ];
                    case 4:
                        return [
                            e,
                            e + 2,
                            e + 4,
                            e + 7
                        ];
                    case 5:
                        return [
                            e,
                            e + 2,
                            e + 4,
                            e + 7,
                            e + 11
                        ];
                    default:
                        return [
                            e,
                            e + 2,
                            e + 4,
                            e + 7,
                            e + 11,
                            e + 12
                        ];
                    }
                },
                hitIndicators() {
                    const t = [];
                    for (let e = 0; e < this.laneCount; e++) {
                        const n = {
                            text: this.hotkeys.keys[e],
                            classes: this.down[e] ? ['down'] : [],
                            styles: { left: `${ this.layout.lanes[e].center * 100 }%` }
                        };
                        this.activeCustomizing && (e < this.activeCustomizing.length ? n.text = this.activeCustomizing[e] : e === this.activeCustomizing.length ? (n.text = '?', n.classes.push('current-customizing')) : (n.text = '?', n.classes.push('pending-customizing')));
                        n.text === ' ' && (n.text = this.$t('MENU.SPACEBAR'));
                        n.text.length > 2 && n.classes.push('long');
                        t.push(n);
                        ;
                    }
                    return t;
                }
            },
            watch: {
                instrument: {
                    handler(t, e) {
                        if (!(e && t.config.slug === e.config.slug)) {
                            this.instraface.update({
                                baseUrl: `https://cdn.jackboxgames.com/nopus-opus/instruments/${ this.instrument.config.slug }`,
                                config: this.instrument.config
                            });
                            this.instraface.outNode.volume.value = 8;
                            this.down = [];
                            ;
                            for (let n = 0; n < this.beatmap.config.laneCount; n++) {
                                this.down.push(false);
                            }
                            this.waitForLoading();
                        }
                    },
                    immediate: true
                }
            },
            mounted() {
                window.addEventListener('keydown', this.onKeyDown);
                window.addEventListener('keyup', this.onKeyUp);
                ;
            },
            beforeUnmount() {
                window.removeEventListener('keydown', this.onKeyDown);
                window.removeEventListener('keyup', this.onKeyUp);
                this.instraface.releaseAll();
                this.instraface.update({ config: null });
                ;
            },
            methods: {
                onPointerDown(t, e) {
                    this.$hotkeyManager.checkEvent(t);
                    this.onDown(e);
                    ;
                },
                onPointerUp(t, e) {
                    this.$hotkeyManager.checkEvent(t);
                    this.onUp(e);
                    ;
                },
                onKeyDown(t) {
                    if (this.$hotkeyManager.checkEvent(t), t.repeat) {
                        return;
                    }
                    if (this.activeCustomizing) {
                        this.setCustomKey(t);
                        return;
                    }
                    const e = t.key.toLowerCase(), n = this.hotkeys.keys.indexOf(e);
                    n !== -1 && this.onDown(n);
                },
                onKeyUp(t) {
                    if (this.$hotkeyManager.checkEvent(t), t.repeat) {
                        return;
                    }
                    const e = t.key.toLowerCase(), n = this.hotkeys.keys.indexOf(e);
                    n !== -1 && this.onUp(n);
                },
                onDown(t) {
                    if (this.isLoading) {
                        return;
                    }
                    const e = this.notes[t];
                    this.down[t] = true;
                    try {
                        this.instraface.discrete.attack([e]);
                    } catch {
                        console.warn('not loaded');
                    }
                },
                onUp(t) {
                    if (this.isLoading || !this.down[t]) {
                        return;
                    }
                    const e = this.notes[t];
                    this.down[t] = false;
                    try {
                        this.instraface.discrete.release([e]);
                    } catch {
                        console.warn('not loaded');
                    }
                },
                async waitForLoading() {
                    this.isLoading = true;
                    await _5();
                    this.isLoading = false;
                    ;
                },
                setCustomKey(t) {
                    if (!this.activeCustomizing) {
                        return;
                    }
                    const e = this.$hotkeyManager.getKeyFromEvent(t);
                    e && (this.activeCustomizing.includes(e) || (this.activeCustomizing.push(e), !(this.activeCustomizing.length < this.laneCount) && (this.$hotkeyManager.set(this.laneCount, this.activeCustomizing), this.activeCustomizing = null)));
                },
                onCancelClick() {
                    this.activeCustomizing = null;
                },
                onResetClick() {
                    this.$hotkeyManager.reset(this.laneCount);
                },
                onCustomizeClick() {
                    this.activeCustomizing = [];
                }
            }
        }), FTe = [
            'onPointerdown',
            'onPointerleave',
            'onPointerup'
        ];
    function VTe(t, e, n, r, s, i) {
        const o = fn('t');
        return G(), K('div', {
            class: nt([
                'tester',
                t.classes
            ])
        }, [
            V('div', LTe, [(G(true), K(gt, null, wn(t.hitIndicators, (a, l) => (G(), K('div', {
                    key: l,
                    class: 'cell'
                }, [V('button', {
                        class: nt([
                            'note',
                            a.classes
                        ]),
                        onPointerdown: u => t.onPointerDown(u, l),
                        onPointerleave: u => t.onPointerUp(u, l),
                        onPointerup: u => t.onPointerUp(u, l)
                    }, [V('span', UTe, Nt(a.text), 1)], 42, FTe)]))), 128))]),
            t.isLoading ? qe((G(), K('p', BTe, null, 512)), [[
                    o,
                    'MENU.LOADING'
                ]]) : qe((G(), K('p', qTe, null, 512)), [[
                    o,
                    'MENU.TEST_IT'
                ]]),
            t.activeCustomizing ? qe((G(), K('button', {
                key: 2,
                class: 'customize',
                onClick: e[0] || (e[0] = (...a) => t.onCancelClick && t.onCancelClick(...a))
            }, null, 512)), [[
                    o,
                    'MENU.CANCEL'
                ]]) : t.hotkeys.isCustom ? qe((G(), K('button', {
                key: 3,
                class: 'customize',
                onClick: e[1] || (e[1] = (...a) => t.onResetClick && t.onResetClick(...a))
            }, null, 512)), [[
                    o,
                    'MENU.RESET'
                ]]) : qe((G(), K('button', {
                key: 4,
                class: 'customize',
                onClick: e[2] || (e[2] = (...a) => t.onCustomizeClick && t.onCustomizeClick(...a))
            }, null, 512)), [[
                    o,
                    'MENU.CUSTOMIZE'
                ]])
        ], 2);
    }
    const GTe = Je($Te, [
            [
                'render',
                VTe
            ],
            [
                '__scopeId',
                'data-v-f71ef1a3'
            ]
        ]), jTe = at({
            props: {
                title: {
                    type: String,
                    required: false
                },
                titleKey: {
                    type: String,
                    required: false
                }
            },
            emits: { didRequestClose: () => true },
            methods: {
                onCloseClick() {
                    this.$emit('didRequestClose');
                }
            }
        });
    function ZTe(t, e, n, r, s, i) {
        const o = fn('t');
        return G(), wt(Ta, { name: 'modal' }, {
            default: go(() => [V('div', {
                    class: 'modal',
                    onClick: e[0] || (e[0] = Si((...a) => t.onCloseClick && t.onCloseClick(...a), ['self'])),
                    onKeyup: e[1] || (e[1] = pv((...a) => t.onCloseClick && t.onCloseClick(...a), ['esc']))
                }, [V('div', WTe, [
                        V('div', HTe, [
                            t.title ? (G(), K('h3', zTe, Nt(t.title), 1)) : De('', true),
                            t.titleKey ? qe((G(), K('h3', YTe, null, 512)), [[
                                    o,
                                    t.titleKey
                                ]]) : De('', true)
                        ]),
                        V('div', KTe, [o7(t.$slots, 'default', {}, void 0, true)])
                    ])], 32)]),
            _: 3
        });
    }
    const zI = Je(jTe, [
            [
                'render',
                ZTe
            ],
            [
                '__scopeId',
                'data-v-3d94c627'
            ]
        ]), XTe = at({
            components: {
                AvatarSVG: U3,
                BaseModal: zI
            },
            props: {
                info: {
                    type: Object,
                    required: true
                },
                players: {
                    type: Object,
                    required: true
                },
                responseKey: {
                    type: String,
                    required: true
                }
            },
            emits: { didRequestClose: () => true },
            computed: {
                choices() {
                    return Object.keys(this.players).filter(t => !(t === `${ this.info.id }` || this.info.inSong && this.players[t].inSong === false)).map(t => {
                        const e = this.players[t];
                        return {
                            avatar: e.avatar,
                            id: parseInt(t, 10),
                            label: e.name
                        };
                    });
                }
            },
            methods: {
                onCloseClick() {
                    this.$emit('didRequestClose');
                },
                async onChoiceClick(t) {
                    try {
                        await this.$ecast.updateObject(this.responseKey, { changeVip: t });
                    } catch (e) {
                        this.$handleEcastError(e);
                    }
                    this.$emit('didRequestClose');
                }
            }
        }), QTe = ['onClick'];
    function JTe(t, e, n, r, s, i) {
        const o = We('AvatarSVG'), a = We('BaseModal'), l = fn('t');
        return G(), wt(a, { 'title-key': 'MENU.CHOOSE_HOST' }, {
            default: go(() => [
                (G(true), K(gt, null, wn(t.choices, (u, f) => (G(), K('button', {
                    key: f,
                    class: 'choice has-icon',
                    onClick: Si(d => t.onChoiceClick(u.id), ['prevent'])
                }, [
                    Tn(Nt(u.label) + ' ', 1),
                    Ye(o, {
                        focusable: 'false',
                        avatar: u.avatar,
                        class: 'icon'
                    }, null, 8, ['avatar'])
                ], 8, QTe))), 128)),
                qe(V('button', {
                    class: 'secondary close',
                    onClick: e[0] || (e[0] = (...u) => t.onCloseClick && t.onCloseClick(...u))
                }, null, 512), [[
                        l,
                        'NEVERMIND'
                    ]])
            ]),
            _: 1
        }, 8, ['title-key']);
    }
    const P5 = Je(XTe, [[
                'render',
                JTe
            ]]), eSe = at({
            props: {
                category: {
                    type: String,
                    required: true
                },
                selected: {
                    type: Boolean,
                    required: false
                },
                disabled: {
                    type: Boolean,
                    required: false
                },
                classes: {
                    type: Array,
                    required: false
                }
            },
            computed: {
                iconClasses() {
                    const t = this.classes ? [...this.classes] : [];
                    return t.push(lr.categorySlugByKey(this.category)), this.selected && t.push('selected'), this.disabled && t.push('disabled'), t;
                }
            }
        });
    function lSe(t, e, n, r, s, i) {
        return G(), K('svg', {
            viewBox: '0 0 30 50',
            class: nt(t.iconClasses)
        }, [
            t.selected ? (G(), K('rect', tSe)) : De('', true),
            t.category === 'AuxPercussion' ? (G(), K('path', nSe)) : t.category === 'Bass' ? (G(), K('path', rSe)) : t.category === 'CounterMelody' ? (G(), K('path', sSe)) : t.category === 'Drums' ? (G(), K('path', iSe)) : t.category === 'Harmony' ? (G(), K('path', oSe)) : t.category === 'Melody' ? (G(), K('path', aSe)) : t.category === 'Signature' ? (G(), K('path', cSe)) : De('', true)
        ], 2);
    }
    const YI = Je(eSe, [
            [
                'render',
                lSe
            ],
            [
                '__scopeId',
                'data-v-724f8d43'
            ]
        ]), uSe = at({
            props: {
                lanes: {
                    type: Number,
                    required: false
                }
            },
            computed: {
                viewbox() {
                    return this.lanes === 1 ? '0 0 30 150' : this.lanes === 2 ? '0 0 80 150' : this.lanes === 3 ? '0 0 130 150' : this.lanes === 5 ? '0 0 230 150' : this.lanes === 6 ? '0 0 280 150' : '0 0 180 150';
                }
            }
        }), hSe = ['viewBox'];
    function bSe(t, e, n, r, s, i) {
        return G(), K('svg', { viewBox: t.viewbox }, [
            t.lanes ? (G(), K('rect', fSe)) : De('', true),
            t.lanes && t.lanes > 1 ? (G(), K('rect', dSe)) : De('', true),
            t.lanes && t.lanes > 2 ? (G(), K('rect', pSe)) : De('', true),
            t.lanes && t.lanes > 3 ? (G(), K('rect', mSe)) : De('', true),
            t.lanes && t.lanes > 4 ? (G(), K('rect', gSe)) : De('', true),
            t.lanes && t.lanes > 5 ? (G(), K('rect', _Se)) : De('', true),
            t.lanes ? De('', true) : (G(), K('rect', ySe)),
            t.lanes ? De('', true) : (G(), K('circle', vSe))
        ], 8, hSe);
    }
    const ESe = Je(uSe, [
            [
                'render',
                bSe
            ],
            [
                '__scopeId',
                'data-v-8ddc6f95'
            ]
        ]), TSe = {}, wSe = V('path', { d: 'm65,5.22v89.56c0,4.32-4.68,6.76-7.91,4.13L1.84,53.88c-2.45-2-2.45-5.76,0-7.76L57.09,1.09c3.23-2.63,7.91-.19,7.91,4.13Z' }, null, -1), OSe = [wSe];
    function ASe(t, e) {
        return G(), K('svg', SSe, OSe);
    }
    const CSe = Je(TSe, [[
                'render',
                ASe
            ]]), ISe = at({
            components: {
                ChangeVIP: P5,
                Choice: f0e,
                ContinuousTester: MTe,
                DiscreteTester: GTe,
                PlayerHeader: Hf,
                CategorySVG: YI,
                LanesSVG: ESe,
                LeftArrowSVG: CSe
            },
            props: {
                beatmaps: {
                    type: Object,
                    required: true
                },
                info: {
                    type: Object,
                    required: true
                },
                instruments: {
                    type: Object,
                    required: true
                },
                players: {
                    type: Object,
                    required: true
                },
                player: {
                    type: Object,
                    required: true
                }
            },
            data() {
                return {
                    audienceId: null,
                    showChangeVIP: false,
                    selectedCategory: null
                };
            },
            computed: {
                selectedId() {
                    return this.audienceId ? this.audienceId : `${ this.info.beatmapSlug }:${ this.info.instrumentSlug }`;
                },
                selectedChoice() {
                    const t = this.standardChoices.find(e => e.isSelected);
                    if (t) {
                        return t;
                    }
                    for (let e = 0; e < this.unlockedChoices.length; e++) {
                        const n = this.unlockedChoices[e].choices;
                        for (let r = 0; r < n.length; r++) {
                            const s = n.find(i => i.isSelected);
                            if (s) {
                                return s;
                            }
                        }
                    }
                    return this.standardChoices[0];
                },
                selectedUnlocked() {
                    return !this.unlockedChoices.length || !this.selectedCategory ? null : this.unlockedChoices.find(t => t.category === this.selectedCategory) ?? null;
                },
                standardChoices() {
                    const t = this.player.instruments.instruments.map((e, n) => {
                        const r = `${ e.beatmapSlug }:${ e.instrumentSlug }`;
                        return {
                            beatmap: this.beatmaps[e.beatmapSlug],
                            id: r,
                            index: n,
                            instrument: this.instruments[e.instrumentSlug],
                            instrumentSlug: e.instrumentSlug,
                            isSelected: this.selectedId === r,
                            isUnlockable: false,
                            label: e.instrumentName,
                            players: this.mappedPlayers[r] ?? []
                        };
                    });
                    return t.sort((e, n) => e.beatmap.config.difficulty === n.beatmap.config.difficulty ? e.beatmap.config.category === n.beatmap.config.category ? e.index - n.index : e.beatmap.config.category < n.beatmap.config.category ? -1 : 1 : e.beatmap.config.difficulty - n.beatmap.config.difficulty), t;
                },
                unlockedChoices() {
                    return this.player.unlockedInstruments ? Object.keys(this.player.unlockedInstruments).map(e => {
                        const n = this.beatmaps[e].config.category, r = {
                                isSelected: this.selectedCategory === n,
                                sortOrder: lr.categorySortOrderByKey(n),
                                classes: [lr.categorySlugByKey(n)],
                                category: n,
                                choices: []
                            };
                        return r.choices = this.player.unlockedInstruments[e].map((s, i) => {
                            const o = s.response, [a, l] = s.response.split(':');
                            return {
                                beatmap: this.beatmaps[a],
                                id: o,
                                index: i,
                                instrumentSlug: l,
                                isSelected: this.selectedId === o,
                                isUnlockable: true,
                                label: s.name,
                                players: this.mappedPlayers[o] ?? []
                            };
                        }), r;
                    }).sort((e, n) => e.sortOrder - n.sortOrder) : [];
                },
                mappedPlayers() {
                    const t = {};
                    return Object.values(this.players).forEach(e => {
                        if (!e.beatmapSlug || !e.instrumentSlug) {
                            return;
                        }
                        const n = `${ e.beatmapSlug }:${ e.instrumentSlug }`;
                        t[n] || (t[n] = []);
                        t[n].push(e);
                        ;
                    }), t;
                },
                details() {
                    const t = this.selectedChoice.beatmap;
                    return {
                        beatmap: t,
                        category: {
                            slug: lr.categoryI18ByKey(t.config.category),
                            key: t.config.category,
                            i18n: lr.categoryI18ByKey(t.config.category)
                        },
                        difficulty: { i18n: lr.difficultyI18ByNumber(t.config.difficulty) },
                        instrument: this.selectedChoice.instrument,
                        label: this.selectedChoice.label,
                        laneCount: {
                            icon: t.config.laneCount ?? null,
                            label: t.config.laneCount ?? '\u221E'
                        }
                    };
                }
            },
            mounted() {
                this.info.isAudience && this.setAudienceChoice(this.standardChoices[0]);
            },
            methods: {
                onDidRequestChangeVIP() {
                    this.showChangeVIP = true;
                },
                onDidRequestModalClose() {
                    this.showChangeVIP = false;
                },
                async onBackClick() {
                    if (this.player.responseKey) {
                        try {
                            await this.$ecast.updateObject(this.player.responseKey, { backToSongSelect: true });
                        } catch (t) {
                            this.$handleEcastError(t);
                        }
                    }
                },
                onUnlockedNavClick(t) {
                    if (this.selectedCategory === t) {
                        this.selectedCategory = null;
                        return;
                    }
                    this.selectedCategory = t;
                },
                async onChoiceClick(t) {
                    if (!this.player.responseKey) {
                        this.setAudienceChoice(t);
                        return;
                    }
                    try {
                        await this.$ecast.updateObject(this.player.responseKey, {
                            selectInstrument: {
                                beatmapSlug: t.beatmap.config.slug,
                                instrumentSlug: t.instrumentSlug
                            }
                        });
                    } catch (e) {
                        this.$handleEcastError(e);
                    }
                },
                setAudienceChoice(t) {
                    this.audienceId = t.id;
                    Dn.set('audienceId', t.id, 'code');
                    ;
                },
                async onStartClick() {
                    if (this.player.responseKey) {
                        try {
                            await this.$ecast.updateObject(this.player.responseKey, { startSong: true });
                        } catch (t) {
                            this.$handleEcastError(t);
                        }
                    }
                }
            }
        }), MSe = ['aria-label'], DSe = ['aria-label'];
    function YSe(t, e, n, r, s, i) {
        const o = We('LeftArrowSVG'), a = We('Choice'), l = We('CategorySVG'), u = We('LanesSVG'), f = We('ContinuousTester'), d = We('DiscreteTester'), p = We('PlayerHeader'), _ = We('ChangeVIP'), v = fn('t');
        return G(), K('div', kSe, [
            V('div', NSe, [
                V('div', xSe, [
                    t.selectedUnlocked ? qe((G(), K('h3', PSe, null, 512)), [[
                            v,
                            'MENU.UNLOCKED'
                        ]]) : qe((G(), K('h3', RSe, null, 512)), [[
                            v,
                            'MENU.CHOOSE_INSTRUMENT'
                        ]]),
                    t.selectedUnlocked ? (G(), K('button', {
                        key: 2,
                        'aria-label': t.$t('ACTION.CLOSE'),
                        class: 'close',
                        onClick: e[0] || (e[0] = y => t.onUnlockedNavClick(null))
                    }, [Ye(o)], 8, MSe)) : t.info.isVip ? (G(), K('button', {
                        key: 3,
                        'aria-label': t.$t('ACTION.BACK'),
                        class: 'back',
                        onClick: e[1] || (e[1] = (...y) => t.onBackClick && t.onBackClick(...y))
                    }, [Ye(o)], 8, DSe)) : De('', true)
                ]),
                V('div', {
                    class: nt([
                        'choices-wrapper',
                        { collapsed: t.selectedUnlocked }
                    ])
                }, [V('div', $Se, [(G(true), K(gt, null, wn(t.standardChoices, y => (G(), wt(a, {
                            key: y.id,
                            choice: y,
                            onClick: Si(g => t.onChoiceClick(y), ['prevent'])
                        }, null, 8, [
                            'choice',
                            'onClick'
                        ]))), 128))])], 2),
                V('div', {
                    class: nt([
                        'choices-wrapper',
                        { collapsed: !t.selectedUnlocked }
                    ])
                }, [t.selectedUnlocked ? (G(), K('div', {
                        key: 0,
                        class: nt([
                            'choices unlocked',
                            t.selectedUnlocked.classes
                        ])
                    }, [(G(true), K(gt, null, wn(t.selectedUnlocked.choices, y => (G(), wt(a, {
                            key: y.id,
                            choice: y,
                            onClick: Si(g => t.onChoiceClick(y), ['prevent'])
                        }, null, 8, [
                            'choice',
                            'onClick'
                        ]))), 128))], 2)) : De('', true)], 2),
                V('div', LSe, [
                    V('div', FSe, [
                        V('p', USe, Nt(t.details.label), 1),
                        V('div', {
                            class: nt([
                                'box part',
                                t.details.category.slug
                            ])
                        }, [
                            Ye(l, {
                                category: t.details.category.key,
                                class: 'icon'
                            }, null, 8, ['category']),
                            qe(V('p', BSe, null, 512), [[
                                    v,
                                    'MENU.SONG_PART'
                                ]]),
                            qe(V('p', qSe, null, 512), [[
                                    v,
                                    t.details.category.i18n
                                ]])
                        ], 2),
                        V('div', VSe, [
                            qe(V('p', GSe, null, 512), [[
                                    v,
                                    'MENU.DIFFICULTY'
                                ]]),
                            qe(V('p', jSe, null, 512), [[
                                    v,
                                    t.details.difficulty.i18n
                                ]])
                        ]),
                        V('div', WSe, [
                            qe(V('p', HSe, null, 512), [[
                                    v,
                                    'MENU.LANES'
                                ]]),
                            V('p', zSe, [
                                Ye(u, {
                                    lanes: t.details.laneCount.icon,
                                    class: 'icon'
                                }, null, 8, ['lanes']),
                                Tn(' ' + Nt(t.details.laneCount.label), 1)
                            ])
                        ])
                    ]),
                    t.details.instrument && t.details.beatmap.config.type === 'Continuous' ? (G(), wt(f, {
                        key: 0,
                        beatmap: t.details.beatmap,
                        instrument: t.details.instrument
                    }, null, 8, [
                        'beatmap',
                        'instrument'
                    ])) : t.details.instrument && t.details.beatmap.config.type === 'Discrete' ? (G(), wt(d, {
                        key: 1,
                        beatmap: t.details.beatmap,
                        instrument: t.details.instrument
                    }, null, 8, [
                        'beatmap',
                        'instrument'
                    ])) : De('', true)
                ]),
                t.info.isVip ? qe((G(), K('button', {
                    key: 0,
                    class: 'primary',
                    onClick: e[2] || (e[2] = (...y) => t.onStartClick && t.onStartClick(...y))
                }, null, 512)), [[
                        v,
                        'MENU.START_SONG'
                    ]]) : De('', true)
            ]),
            Ye(p, {
                info: t.info,
                players: t.players,
                'is-vip': t.info.isVip && !t.info.isSolo,
                'response-key': t.player.responseKey,
                onDidRequestChangeVip: t.onDidRequestChangeVIP
            }, null, 8, [
                'info',
                'players',
                'is-vip',
                'response-key',
                'onDidRequestChangeVip'
            ]),
            t.showChangeVIP && t.player.responseKey ? (G(), wt(_, {
                key: 0,
                info: t.info,
                players: t.players,
                'response-key': t.player.responseKey,
                onDidRequestClose: t.onDidRequestModalClose
            }, null, 8, [
                'info',
                'players',
                'response-key',
                'onDidRequestClose'
            ])) : De('', true)
        ]);
    }
    const KSe = Je(ISe, [
            [
                'render',
                YSe
            ],
            [
                '__scopeId',
                'data-v-2ac9ff12'
            ]
        ]), ZSe = {}, QSe = V('path', { d: 'm9.69,100c-22.03-2.79-1.78-29.92,14.06-21.33V13.83L79.68,0c-1.07,7.9,2.83,79.11-2.84,84.29-3.99,7.74-16.19,13.35-23.78,7.78-9.11-11.56,9.48-25.36,21.08-19.16V11.05l-44.86,11.98v56.07c.3,10.79-8.3,20.84-19.59,20.89Z' }, null, -1), JSe = [QSe];
    function e6e(t, e) {
        return G(), K('svg', XSe, JSe);
    }
    const R5 = Je(ZSe, [[
                'render',
                e6e
            ]]), t6e = at({
            components: { NoteSVG: R5 },
            props: {
                render: {
                    type: Object,
                    required: true
                }
            },
            emits: { statusDidChange: t => true },
            data() {
                return {
                    videoFile: null,
                    status: 'paused'
                };
            }
        }), i6e = ['href'];
    function o6e(t, e, n, r, s, i) {
        const o = We('NoteSVG');
        return G(), K('div', n6e, [
            V('p', r6e, [
                Ye(o, { class: 'icon' }),
                Tn(Nt(t.render.title), 1)
            ]),
            V('div', s6e, [V('a', {
                    href: t.render.renderUrl,
                    class: 'button primary'
                }, 'DOWNLOAD MP3', 8, i6e)])
        ]);
    }
    const a6e = Je(t6e, [
            [
                'render',
                o6e
            ],
            [
                '__scopeId',
                'data-v-5a44742f'
            ]
        ]), c6e = at({
            props: {
                theme: {
                    type: String,
                    default: () => 'mono'
                }
            },
            data() {
                return {
                    wordClasses: [
                        'note',
                        'do-1',
                        'do-2',
                        're',
                        'mi',
                        'note',
                        'do-1',
                        'do-2',
                        're',
                        'mi',
                        'note',
                        'do-1',
                        'do-2',
                        're',
                        'mi',
                        'fa',
                        'so',
                        'la',
                        'ti'
                    ],
                    wordClassIndex: 0
                };
            },
            computed: {
                classes() {
                    return [
                        this.theme,
                        this.wordClass
                    ];
                },
                wordClass() {
                    return this.wordClasses[this.wordClassIndex];
                }
            },
            methods: {
                onClick(t) {
                    this.wordClassIndex = this.wordClassIndex < this.wordClasses.length - 1 ? this.wordClassIndex + 1 : 0;
                }
            }
        }), KI = t => (Ri('data-v-6aa58b27'), t = t(), Mi(), t), l6e = KI(() => V('path', {
            class: 'staff',
            d: 'm75.9,81.23h63.61v-5.06h-68.87c2.53,1.46,4.28,3.15,5.26,5.06Zm-6.01-35.13l-.17.17.17-.08v-.08Zm132.07,35.13v-5.06h-30.61v5.06h30.61Zm53.34-22.34h33.29v-5.06h-38.35c2.3,1.17,3.99,2.86,5.06,5.06Zm-53.34-5.06h-124.55c-.49,2.3-1.25,3.99-2.29,5.06h126.84v-5.06ZM22.6,98.56h-14.21v5.06h14.21v-5.06Zm281.42,5.06h95.98v-5.06h-95.98v5.06Zm80.06-22.39h15.92v-5.06h-15.92v5.06Zm0-27.4v5.06h15.92v-5.06h-15.92ZM22.6,120.9h-14.21v5.06h14.21v-5.06Zm0-44.73h-14.21v5.06h14.21v-5.06Zm-14.21,72.33h391.61v-5.06H8.39v5.06Zm206.76-22.53h184.85v-5.06h-184.85v5.06Z'
        }, null, -1)), u6e = KI(() => V('path', {
            class: 'dodo',
            d: 'm373.82,59.13c1.52-1.98,1.56-9.79.1-11.78-1.76-3.48-12.13-3.18-13.82.29-4.67,10.7,4.7,19.24,13.73,11.49ZM82.18,102.35c-3.3,5.2-3.55,24.24.73,29.64,5.09,9.45,28.85,8.86,33.63,0,4.02-5.04,3.82-25.2.19-30.18-4.31-10.06-30.25-8.92-34.56.54Zm21.95,23.46c-.89,3.18-8.36,3.32-9.34,0-.58-1.14-.71-13.45,0-14.75.65-2.29,9.03-4.24,9.49-.78.23.65.34,3.23.34,7.74,0,4.19-.16,6.78-.49,7.79Zm-57.89-46.81c.24-1.98-.03-5.88.02-6.56-.06-.75-.15-4.35-.44-4.32-.46.04-1.88.18-2.35.24-.18.02.17,4.32,0,4.34.23.84-.34,4.44.07,6.48-1.83.12-3.71.26-5.62.38.63-1.88-.1-5.77.14-6.69-.08-.65.34-4,0-4h-2.8c-.26,0,.26,4,0,4,.31.97-.52,5.03.2,6.84-1.52.09-3.06.16-4.62.21l-.15,57.24c25.92,1.24,46.62,8.82,45.46-28.38,1.44-29.35-11.62-30.84-29.91-29.77Zm-.32,45.89v-25.94c12.63-1.87,14.65-.28,13.19,15.67,1.01,10.69-5.29,11.84-13.19,10.27Zm313.83-32.95h14.65l.54-26.43-15.33.92.15,25.5Zm-195.27-13l-16.6.97.34,20.93h-.49c-3.71-9.42-19.68-6.51-23.46.39-2.14,3.18-3.21,7.84-3.21,13.97-.75,14.63,4.92,21.95,16.99,21.95,7.59,1.14,12.05-2.08,13.38-9.64l-.92,9.64h14.31c-.57-11.56-.27-45.51-.34-58.21Zm-21.66,48.57c-8.23,1.08-6.85-13.11-5.16-17.38,1.85-4.68,10-3.87,10.56-.92.44,4.18,3.35,19.62-5.4,18.3Zm98.75-39.47c8.63-.55,11.9-8.14,11.05-16.01-.36-21.2-29.71-12.27-42.54-13.38v37.28c3.28,2.4,5.19,8.29,5.74,17.67h9.73v-17.28c14.27-4.54,12.67,6.84,12.65,17.28h15.82c-.9-15.31,1.83-23.77-12.46-25.55Zm-16.69-2.82v-13.53c3.28.17,11.24-2.66,10.85,3.36.59,10.61-.79,10.45-10.85,10.17Zm51.01-12.17c-8.18.32-13.6,2.77-16.26,7.35-3.17,4.87-3.41,23.22.68,28.28,4.56,8.68,26.53,8.43,31.59.88,2.14-2.73,3.29-6.96,3.46-12.7l-14.11,1.41c0,3.28-.23,5.4-.68,6.38-1.07,2.81-7.99,2.89-8.81-.34-.39-1.07-.58-3.7-.58-7.88l24.19-2.19c-.2-13.37-5.2-21.8-19.47-21.17Zm5.11,18.11v-.1l-9.83,1.02.05-5.99c-.46-2.89,4.94-5.03,7.64-3.16,2.14,1.03,1.68,6.29,2.14,8.13h.05l-.05.1Zm51.15-54.22l-6.18,37.53c-2.5-12.2-4.98-24.95-7.45-38.26l-20.25.73-.97,35.34c4.09,4.02,6.44,10.58,7.06,19.66h9.39l.68-35.09,8.66,34.85,9.78-.54,4.53-34.31,2.63,35.09h16.26l-2.63-55.73-21.51.73Zm-144.6,57.87c-16.11.92-19.55,7.1-19.47,22.44-.06,14.02,4.74,21.49,19.47,21.61,15.89-.32,20.43-6.53,20.39-21.76-.02-15.4-4.02-22.7-20.39-22.29Zm4.92,31c-.79,3.15-8.38,3.35-9.25,0-.31-4.07-3.18-17.31,4.48-17.18,6.8-.88,4.86,2.19,5.35,9.39,0,4.19-.2,6.78-.58,7.79Z'
        }, null, -1)), p6e = Ea('<path class="body" d="m68.09,27.21c-5.66-5.9-14.06-8.01-22.04-6.32-19.35,3.7-25.66,31.48-31.66,47.43,7.29,3.62,15.59,4.7,23.66,4.4,7.3-.06,15.39-.91,21.78-4.16,15.41-6.75,19.11-29.17,8.25-41.36" data-v-6aa58b27></path><path class="feathers" d="m7.65,41.36c-2.59-4.27-4.16-7.13-4.71-8.6-2.48,8.63-.58,18.43,4.52,25.75C4.84,57.1,2.34,55.58,0,53.88c1.41,7.04,8.22,12.41,14.95,14.62,0,0,2.23-8.29,3.65-12.34-4.88-5.9-8.53-10.83-10.96-14.79m25.46,1.98c-12.14-.27-23.72,41.31-4.9,15.79-.03.87-1.24,4.9-.5,5.54,2.45,1.3,7.34-4.67,8.56-6.52,1.13-1.86,2.12-3.87,2.68-5.99.89-3.97-1.35-8.89-5.83-8.82m13.36-31.79c-.88-3.16-1.63-7.37-4.75-8.96-3.32-1.41-5.66,2.73-4.44,5.56.33.87,1.09,1.98,2.28,3.31,3.56,3.52,5.72,6.66,6.49,9.42-.02.36,1.06-.11,1.38-.06-.03-2.76-.5-7.2-.97-9.28Z" data-v-6aa58b27></path><path class="eyes" d="m70.3,36.41c.06-2.66-4.16-2.68-4.09,0-.07,2.66,4.15,2.64,4.09,0Zm-23.34,1c0,2.68,4.17,2.66,4.09,0-.08-2.83-4.09-2.58-4.09,0Z" data-v-6aa58b27></path><path class="dodo" d="m53.44,46.47c.98,8.36,14.89,7.71,16-.14l.74-.52c.53-.06.86-.2.98-.41.03-2.74-2.05-5.25-4.14-6.8-5.54-3.62-14.36,1.08-13.58,7.87Z" data-v-6aa58b27></path><path class="mouth" d="m69.97,45.94l.03-.03h.03c-.2-.25-19.28-.19-16.5.6,4.37.16,12.04-.26,16.03-.24-.02-.08.14-.14.19-.17.06-.06.1-.12.17-.12.01-.02.02-.03.03-.03Z" data-v-6aa58b27></path>', 5), m6e = [p6e];
    function w6e(t, e, n, r, s, i) {
        return G(), K('svg', {
            viewBox: '0 0 400 150',
            class: nt(t.classes),
            onClick: e[0] || (e[0] = (...o) => t.onClick && t.onClick(...o))
        }, [
            l6e,
            u6e,
            t.theme === 'mono' ? (G(), K('g', h6e, [t.theme === 'mono' ? (G(), K('path', f6e)) : De('', true)])) : (G(), K('g', d6e, m6e)),
            t.wordClass === 'note' ? (G(), K('path', g6e)) : De('', true),
            t.wordClass === 'do-1' || t.wordClass === 'do-2' ? (G(), K('path', _6e)) : De('', true),
            t.wordClass === 're' ? (G(), K('path', y6e)) : De('', true),
            t.wordClass === 'mi' ? (G(), K('path', v6e)) : De('', true),
            t.wordClass === 'fa' ? (G(), K('path', b6e)) : De('', true),
            t.wordClass === 'so' ? (G(), K('path', E6e)) : De('', true),
            t.wordClass === 'la' ? (G(), K('path', T6e)) : De('', true),
            t.wordClass === 'ti' ? (G(), K('path', S6e)) : De('', true)
        ], 2);
    }
    const ZI = Je(c6e, [
            [
                'render',
                w6e
            ],
            [
                '__scopeId',
                'data-v-6aa58b27'
            ]
        ]), O6e = at({
            components: {
                Shareable: a6e,
                LogoSVG: ZI
            },
            props: {
                info: {
                    type: Object,
                    required: true
                },
                player: {
                    type: Object,
                    required: true
                },
                players: {
                    type: Object,
                    required: true
                },
                renders: {
                    type: Array,
                    required: true
                }
            },
            data() {
                return {
                    status: 'paused',
                    showChangeVIP: false,
                    canShare: navigator.share !== void 0
                };
            },
            computed: {
                vipName() {
                    const t = Object.keys(this.players).find(e => this.players[e].isVip);
                    return t !== void 0 ? this.players[t].name : '';
                }
            },
            methods: {
                onDidRequestChangeVIP() {
                    this.showChangeVIP = true;
                },
                onDidRequestModalClose() {
                    this.showChangeVIP = false;
                },
                async onChoiceClick(t) {
                    if (this.player.responseKey) {
                        try {
                            await this.$ecast.updateObject(this.player.responseKey, { [t]: true });
                        } catch (e) {
                            this.$handleEcastError(e);
                        }
                    }
                }
            }
        });
    function k6e(t, e, n, r, s, i) {
        const o = We('LogoSVG'), a = We('Shareable');
        return G(), K('div', A6e, [V('div', C6e, [
                Ye(o, {
                    class: 'logo',
                    theme: 'full'
                }),
                V('div', I6e, [(G(true), K(gt, null, wn(t.renders, (l, u) => (G(), wt(a, {
                        key: u,
                        render: {
                            title: l.title,
                            slug: l.slug,
                            renderUrl: l.renderUrl,
                            locale: 'en'
                        }
                    }, null, 8, ['render']))), 128))])
            ])]);
    }
    const N6e = Je(O6e, [
            [
                'render',
                k6e
            ],
            [
                '__scopeId',
                'data-v-341e90d4'
            ]
        ]), x6e = at({
            components: { PlayerHeader: Hf },
            props: {
                info: {
                    type: Object,
                    required: true
                },
                player: {
                    type: Object,
                    required: true
                }
            },
            data() {
                return { isOn: false };
            },
            methods: {
                onFlyClick() {
                    this.isOn = !this.isOn;
                }
            }
        }), M6e = Ea('<polygon class="glow glow-2" points="195.39 133.91 200 83.28 175.52 32.62 130.86 3.76 84.34 0 55.6 8.73 19.48 37.39 0 78.27 .83 124.82 19.04 161.62 63.36 194.14 111.4 200 151.08 186.81 184.35 155.64 195.39 133.91" data-v-d0fbd8aa></polygon><polygon class="glow glow-1" points="84.26 40.63 59.32 57.95 49.34 79.13 51.49 108.2 70.4 132.51 100 141.81 131.63 131.02 150.15 103.03 145.37 64.98 119.53 42.01 84.26 40.63" data-v-d0fbd8aa></polygon><polygon class="glow glow-0" points="100 49.11 75.55 61.13 69.11 80 76.65 100.21 92.62 109.99 118.29 104.89 130.13 86.8 123.9 60.44 109.83 50.72 100 49.11" data-v-d0fbd8aa></polygon><path class="body" d="m111.81,17.5c2.73-.71,4.59,3.41,6.88,1.97.59-.59.59-1.54,0-2.12-5.3-5.69-15.7-2.2-16.51,5.52-1.04-.1-2.12-.14-3.17-.09-.87-7.67-11.22-11.09-16.49-5.43-.59.59-.59,1.54,0,2.12.59.59,1.54.59,2.12,0,3.62-3.88,10.72-1.6,11.39,3.66-15.75,1.46-15.95,29.65-9.99,49.32,3.3,10.88,8.48,18.17,13.96,17.88,5.45.29,10.64-7,13.95-17.88,5.84-19.21,5.85-46.52-8.81-49.05.34-3.28,3.37-5.96,6.67-5.89Z" data-v-d0fbd8aa></path><path class="bottom-wing left" d="m98.71,33.9c8.7,7.81-21.59,50.03-31.91,39.49-8.7-7.81,21.59-50.03,31.91-39.49Z" data-v-d0fbd8aa></path><path class="bottom-wing right" d="m101.29,33.9c10.33-10.54,40.62,31.68,31.91,39.49-10.33,10.54-40.62-31.68-31.91-39.49Z" data-v-d0fbd8aa></path><path class="top-wing left" d="m98.58,31.04c9.59,9.1-26.11,44.79-35.2,35.2-9.59-9.1,26.11-44.79,35.2-35.2Z" data-v-d0fbd8aa></path><path class="top-wing right" d="m101.42,31.04c9.1-9.59,44.79,26.11,35.2,35.2-9.1,9.59-44.79-26.11-35.2-35.2Z" data-v-d0fbd8aa></path><path class="butt" d="m100,67.86c-5.23,0-10.25,1.71-14.15,4.6,3.3,10.88,8.68,20.17,14.15,19.88,5.45.29,10.84-9,14.15-19.88-3.9-2.88-8.92-4.59-14.15-4.59Z" data-v-d0fbd8aa></path>', 9), D6e = [M6e];
    function U6e(t, e, n, r, s, i) {
        const o = We('PlayerHeader'), a = fn('t');
        return G(), K('div', {
            class: nt([
                'playback',
                { on: t.isOn }
            ])
        }, [
            V('div', P6e, [
                V('div', R6e, [(G(), K('svg', {
                        class: 'fly',
                        viewBox: '0 0 200 200',
                        onClick: e[0] || (e[0] = (...l) => t.onFlyClick && t.onFlyClick(...l))
                    }, D6e))]),
                V('div', $6e, [
                    qe(V('p', L6e, null, 512), [[
                            a,
                            'PLAYBACK.SIT_BACK'
                        ]]),
                    qe(V('p', F6e, null, 512), [[
                            a,
                            'PLAYBACK.LOOK_UP'
                        ]])
                ])
            ]),
            Ye(o, { info: t.info }, null, 8, ['info'])
        ], 2);
    }
    const B6e = Je(x6e, [
        [
            'render',
            U6e
        ],
        [
            '__scopeId',
            'data-v-d0fbd8aa'
        ]
    ]);
    class q6e {
        constructor() {
            Ae(this, 'idCounter', 1);
            Ae(this, 'idMap', new Map());
            Ae(this, 'fnMap', new Map());
            Ae(this, 'times', []);
        }
        schedule(e, n) {
            const r = this.idCounter, s = this.idMap.get(n);
            return s ? s.push(this.idCounter) : (this.idMap.set(n, [r]), this.times.push(n), this.times.sort((i, o) => i - o)), this.fnMap.set(r, e), this.idCounter += 1, r;
        }
        cancel(e) {
            this.fnMap.delete(e);
        }
        call(e) {
            const n = this.fnMap.get(e);
            this.fnMap.delete(e);
            n && n();
            ;
        }
        check(e) {
            let n = 0;
            for (let r = 0; r < this.times.length && !(this.times[r] > e); r++) {
                n += 1;
                const s = this.idMap.get(this.times[r]);
                s && s.forEach(i => this.call(i));
            }
            this.times.splice(0, n);
        }
    }
    class XI {
        constructor(e) {
            Ae(this, 'criteria');
            Ae(this, 'difficulty');
            Ae(this, 'duration');
            Ae(this, 'guide');
            Ae(this, 'instraface');
            Ae(this, 'isAudience');
            Ae(this, 'isLoaded', Qr(false));
            Ae(this, 'missThreshold');
            Ae(this, 'audienceReportAt', 0);
            Ae(this, 'inputs', new Map());
            Ae(this, 'manifest', new Map());
            Ae(this, 'callbackMap', new Map());
            Ae(this, 'scheduler', new q6e());
            Ae(this, 'noteQualityScoreFactors');
            Ae(this, 'scorePerHighestCombo');
            Ae(this, 'scorePoolPerDifficulty');
            Ae(this, 'successPercentage');
            Ae(this, 'minimumDisplayCombo');
            Ae(this, 'currentCombo', 0);
            Ae(this, 'accuracy', 0);
            Ae(this, 'longestCombo', 0);
            Ae(this, 'pastNotes', 0);
            Ae(this, 'qualities', [
                0,
                0,
                0,
                0
            ]);
            Ae(this, 'appearThreshold', 3000);
            Ae(this, 'baseTime');
            Ae(this, 'disappearThreshold', 1000);
            Ae(this, 'hasStarted', false);
            Ae(this, 'isComplete', false);
            Ae(this, 'isRunning', false);
            Ae(this, 'lastTime', 0);
            Ae(this, 'currentTime', 0);
            Ae(this, 'progress', 0);
            Ae(this, 'pendingInputs', []);
            Ae(this, 'reportInterval');
            Ae(this, 'responseKey');
            Ae(this, 'wsClient');
            this.criteria = e.criteria;
            this.difficulty = e.beatmap.difficulty;
            this.duration = e.duration;
            this.guide = e.guide;
            this.isAudience = e.isAudience;
            this.missThreshold = e.criteria.time[e.criteria.time.length - 1];
            this.noteQualityScoreFactors = e.noteQualityScoreFactors;
            this.scorePerHighestCombo = e.scorePerHighestCombo;
            this.scorePoolPerDifficulty = e.scorePoolPerDifficulty;
            this.successPercentage = e.successPercentage;
            this.minimumDisplayCombo = e.minimumDisplayCombo;
            this.currentTime = e.offset ?? 0;
            this.responseKey = e.responseKey;
            this.wsClient = e.wsClient;
            ;
            const n = `https://cdn.jackboxgames.com/nopus-opus/instruments/${ e.instrument.slug }`;
            this.instraface = new N5({
                baseUrl: n,
                config: e.instrument
            });
            this.instraface.outNode.volume.value = 8;
            this.isAudience || (this.reportInterval = window.setInterval(() => {
                this.onReportInterval();
            }, 2000));
            this.parseInputs(e.beatmap);
            this.awaitForLoaded();
            ;
        }
        get now() {
            return this.baseTime ? Math.round(window.performance.now() - this.baseTime) : 0;
        }
        get scorePool() {
            return this.scorePoolPerDifficulty[this.difficulty - 1];
        }
        millisecondsToY(e) {
            return e / this.duration;
        }
        durationToHeight(e) {
            return e / this.duration;
        }
        async awaitForLoaded() {
            await _5();
            this.isLoaded.value = true;
            ;
        }
        start(e) {
            this.baseTime = Math.round(window.performance.now());
            if (e !== void 0) {
                this.currentTime = e;
                this.baseTime -= e;
            }
            this.hasStarted = true;
            this.isRunning = true;
            window.requestAnimationFrame(this.onRequestAnimationFrame.bind(this));
            ;
        }
        stop() {
            this.isRunning = false;
        }
        destroy() {
            var e;
            this.stop();
            this.callbackMap.clear();
            (e = this.instraface) == null || e.update({ config: null });
            delete this.instraface;
            this.reportInterval && (window.clearInterval(this.reportInterval), delete this.reportInterval);
            ;
        }
        schedule(e, n) {
            return this.scheduler.schedule(e, n + this.now);
        }
        on(e, n) {
            const r = this.callbackMap.get(e) ?? new Set();
            r.size || this.callbackMap.set(e, r);
            r.add(n);
            ;
        }
        off(e, n) {
            const r = this.callbackMap.get(e);
            r && r.delete(n);
        }
        emit(e) {
            var n;
            (n = this.callbackMap.get(e.type)) == null || n.forEach(r => r(e));
        }
        scoreInput(e) {
            if (this.pastNotes += 1, e === null) {
                this.qualities[3] += 1;
                this.currentCombo = 0;
                ;
                return;
            }
            this.accuracy += this.noteQualityScoreFactors[e];
            this.currentCombo += 1;
            this.qualities[e] += 1;
            this.currentCombo > this.longestCombo && (this.longestCombo = this.currentCombo);
            ;
        }
        onRequestAnimationFrame() {
            this.isRunning && (this.onFrame(), window.requestAnimationFrame(this.onRequestAnimationFrame.bind(this)));
        }
        onFrame() {
            const e = this.now;
            this.emit({
                type: 'frame',
                now: e
            });
            e >= this.duration ? this.onEnd() : (this.currentTime = this.now, this.progress = this.millisecondsToY(this.currentTime));
            ;
            for (let n = this.lastTime; n < this.currentTime; n++) {
                this.scheduler.check(n);
                this.processMillisecond(n);
                ;
            }
            this.lastTime = this.currentTime;
        }
        addInput(e, n) {
            Object.keys(n).forEach(i => {
                const o = n[i];
                this.manifest.get(o) || this.manifest.set(o, new Map());
                this.manifest.get(o).get(i) || this.manifest.get(o).set(i, new Set());
                this.manifest.get(o).get(i).add(e);
                ;
            });
            const s = this.inputs.get(n.start) ?? new Set();
            s.add(e);
            this.inputs.set(n.start, s);
            ;
        }
        processMillisecond(e) {
            var r, s, i, o, a;
            if (e === this.audienceReportAt) {
                this.saveAudienceScore();
                this.reportAudienceAccuracy();
            }
            const n = this.manifest.get(e);
            n && ((r = n.get('appear')) == null || r.forEach(this.inputDidAppear.bind(this)), (s = n.get('disappear')) == null || s.forEach(this.inputDidDisappear.bind(this)), (i = n.get('end')) == null || i.forEach(this.inputDidEnd.bind(this)), (o = n.get('miss')) == null || o.forEach(this.checkForMissedInput.bind(this)), (a = n.get('start')) == null || a.forEach(this.inputDidStart.bind(this)));
        }
        onEnd() {
            this.isRunning = false;
            this.isComplete = true;
            this.currentTime = this.duration;
            this.progress = 1;
            this.stop();
            ;
        }
        inputDidAppear(e) {
            ;
        }
        inputDidDisappear(e) {
            ;
        }
        inputDidEnd(e) {
            ;
        }
        checkForMissedInput(e) {
            e.isHolding || e.isMissed || e.isTaken || this.inputWasMissed(e);
        }
        inputWasMissed(e) {
            this.scoreInput(null);
            ;
            ;
        }
        inputDidStart(e) {
            ;
            ;
            ;
        }
        reportInput(e) {
            this.isAudience || this.reportInterval && this.pendingInputs.push(e);
        }
        async onReportInterval() {
            if (this.isAudience || !this.pendingInputs.length) {
                return;
            }
            const e = this.pendingInputs.sort((n, r) => n.start - r.start);
            this.pendingInputs = [];
            try {
                await this.wsClient.updateObject(this.responseKey, { input: e });
            } catch (n) {
                console.error(n);
            }
        }
        saveAudienceScore() {
            if (!this.isAudience) {
                return;
            }
            const e = this.longestCombo * this.scorePerHighestCombo, s = [
                    Math.round(this.scorePool * (this.accuracy / this.pastNotes)) + e,
                    this.longestCombo,
                    this.qualities[0],
                    this.qualities[1],
                    this.qualities[2],
                    this.qualities[3],
                    this.pastNotes
                ];
            Dn.set('audienceScore', s.join(':'), 'code');
        }
        async reportAudienceAccuracy() {
            if (!this.isAudience) {
                return;
            }
            const e = Math.round(this.accuracy / this.pastNotes * 100);
            if (e !== 0) {
                try {
                    await this.wsClient.incrementCountGroupCounter(this.responseKey, `${ e }`);
                } catch (n) {
                    console.error(n);
                }
            }
        }
    }
    class V6e extends XI {
        constructor(n) {
            super(n);
            Ae(this, 'activeAt');
            Ae(this, 'activeQuality');
            Ae(this, 'currentInput');
            Ae(this, 'currentLimits');
            Ae(this, 'currentPerfect', null);
            Ae(this, 'currentSignal', null);
            Ae(this, 'currentQuality', null);
            Ae(this, 'isActive', false);
            Ae(this, 'isFlubbing', false);
            Ae(this, 'pointerId');
            Ae(this, 'trackedSignals');
            Ae(this, 'feedback', []);
            Ae(this, 'limitsIndex', new Map());
            Ae(this, 'perfectIndex', new Map());
            if (this.parseLimits(n.beatmap), this.parsePerfects(n.beatmap), this.currentLimits = this.limitsIndex.get(0), n.isAudience) {
                const r = n.beatmap.inputs[n.beatmap.inputs.length - 1];
                this.audienceReportAt = r.start + r.duration + 50;
            }
        }
        roundSignal(n) {
            return Math.round(n * 1000) / 1000;
        }
        getPathForInput(n) {
            let r = '';
            return n.signal.forEach((s, i) => {
                const o = 1 - s.start / n.duration;
                r += `${ i ? 'L' : 'M' } ${ s.signal } ${ o } `;
            }), r;
        }
        getEndXForInput(n) {
            return n.signal[n.signal.length - 1].signal;
        }
        getSignalQuality(n) {
            const r = this.criteria.signal.findIndex(s => n < s);
            return r === -1 ? null : r;
        }
        getNoteQuality(n) {
            const r = this.criteria.percentage.findIndex(s => n > s);
            return r === -1 ? null : r;
        }
        parseInputs(n) {
            n.inputs.forEach(s => {
                const i = {
                    duration: s.duration,
                    height: this.durationToHeight(s.duration),
                    isAudible: false,
                    isCurrent: false,
                    isPassed: false,
                    isHolding: false,
                    isMissed: false,
                    isTaken: false,
                    isVisible: false,
                    path: this.getPathForInput(s),
                    endX: this.getEndXForInput(s),
                    signal: s.signal,
                    start: s.start,
                    y: this.millisecondsToY(s.start)
                };
                this.addInput(i, {
                    appear: i.start - this.appearThreshold,
                    disappear: i.start + i.duration + this.disappearThreshold,
                    end: i.start + i.duration,
                    miss: i.start + i.duration,
                    start: i.start
                });
            });
        }
        parseLimits(n) {
            n.limits && n.limits.forEach(r => {
                this.limitsIndex.set(r[0], [
                    r[1],
                    r[2]
                ]);
            });
        }
        parsePerfects(n) {
            n.inputs.forEach(s => {
                s.signal.forEach(i => {
                    this.perfectIndex.set(s.start + i.start, i.signal);
                });
                this.perfectIndex.set(s.start + s.duration, null);
                ;
            });
        }
        onDown(n, r) {
            if (this.instraface && this.isRunning) {
                if (this.pointerId === r) {
                    this.onMove(n, r);
                    return;
                }
                if (this.pointerId === void 0) {
                    n = this.roundSignal(n);
                    this.instraface.continuous.attack(n, this.currentLimits[0], this.currentLimits[1]);
                    this.trackedSignals = [{
                            start: 0,
                            signal: n
                        }];
                    this.currentInput && (this.currentInput.isHolding = true);
                    this.activeAt = this.now;
                    this.isActive = true;
                    this.pointerId = r;
                    this.currentSignal = n;
                }
            }
        }
        onMove(n, r) {
            if (!this.instraface || !this.isRunning || this.pointerId !== r || !this.trackedSignals) {
                return;
            }
            n = this.roundSignal(n);
            this.currentSignal = n;
            this.instraface.continuous.update(n, this.currentLimits[0], this.currentLimits[1]);
            this.currentInput && (this.currentInput.isHolding = true);
            ;
            const s = this.now - this.activeAt;
            this.trackedSignals[this.trackedSignals.length - 1].start + 150 > s || this.trackedSignals.push({
                start: s,
                signal: n
            });
        }
        onUp(n) {
            this.instraface && (n && this.pointerId !== n || this.trackedSignals && (this.instraface.continuous.release(), this.currentInput && (this.currentInput.isHolding = false, this.currentInput.isTaken = true), this.trackedSignals && this.activeAt && this.reportInput({
                start: this.activeAt,
                duration: this.now - this.activeAt,
                signal: this.trackedSignals
            }), this.isActive = false, this.currentSignal = null, delete this.trackedSignals, delete this.pointerId, delete this.activeAt));
        }
        processMillisecond(n) {
            super.processMillisecond(n);
            const r = this.limitsIndex.get(n);
            r && (this.currentLimits = r);
            const s = this.perfectIndex.get(n);
            s !== void 0 && (this.currentPerfect = s);
            this.processSignal();
            ;
        }
        inputDidEnd(n) {
            if (super.inputDidEnd(n), !this.currentInput) {
                return;
            }
            const r = this.activeQuality / this.currentInput.duration * 100, s = this.getNoteQuality(r);
            this.scoreInput(s);
            s !== null && this.feedback.push([
                n.endX,
                s
            ]);
            delete this.activeQuality;
            delete this.currentInput;
            ;
        }
        onEnd() {
            super.onEnd();
            this.pointerId && this.onUp(this.pointerId);
            ;
        }
        inputDidStart(n) {
            super.inputDidStart(n);
            this.activeQuality = 0;
            this.currentInput = n;
            ;
        }
        processSignal() {
            if (!this.currentInput || this.currentPerfect === null || this.currentSignal === null) {
                return;
            }
            const n = Math.abs(this.currentSignal - this.currentPerfect), r = this.getSignalQuality(n);
            this.currentQuality = r;
            r !== null && (this.activeQuality += this.criteria.factors[r]);
            ;
        }
    }
    const G6e = at({
        props: {
            manager: {
                type: Object,
                required: true
            }
        },
        methods: {
            normalizeSignal(t) {
                return t < 0.25 ? 0 : t > 0.75 ? 1 : (t - 0.25) * 2;
            },
            onPointerBoxStart(t) {
                this.manager.isRunning && this.manager.onDown(this.normalizeSignal(t.detail.percentX), t.detail.id);
            },
            onPointerBoxMove(t) {
                this.manager.isRunning && this.manager.onMove(this.normalizeSignal(t.detail.percentX), t.detail.id);
            },
            onPointerBoxEnd(t) {
                this.manager.onUp(t.detail.id);
            },
            onReleaserUp(t) {
                this.manager.onUp(t.pointerId);
            },
            onContextMenu(t) {
                t.preventDefault();
                this.manager.onUp();
                ;
            }
        }
    });
    function W6e(t, e, n, r, s, i) {
        const o = fn('pointerbox');
        return G(), K(gt, null, [
            V('div', {
                class: 'releaser',
                onPointerup: e[0] || (e[0] = (...a) => t.onReleaserUp && t.onReleaserUp(...a))
            }, null, 32),
            V('div', j6e, [qe(V('div', {
                    class: 'hitbox',
                    onContextmenu: e[1] || (e[1] = (...a) => t.onContextMenu && t.onContextMenu(...a)),
                    'onPointerbox:start': e[2] || (e[2] = (...a) => t.onPointerBoxStart && t.onPointerBoxStart(...a)),
                    'onPointerbox:move': e[3] || (e[3] = (...a) => t.onPointerBoxMove && t.onPointerBoxMove(...a)),
                    'onPointerbox:end': e[4] || (e[4] = (...a) => t.onPointerBoxEnd && t.onPointerBoxEnd(...a))
                }, null, 544), [[
                        o,
                        void 0,
                        void 0,
                        { restrict: true }
                    ]])])
        ], 64);
    }
    const H6e = Je(G6e, [
            [
                'render',
                W6e
            ],
            [
                '__scopeId',
                'data-v-2786811b'
            ]
        ]), z6e = at({
            props: {
                duration: {
                    type: Number,
                    required: true
                },
                guide: {
                    type: Array,
                    required: true
                }
            },
            computed: {
                beatLines() {
                    const t = this.guide.flat(), e = [];
                    for (let n = 0; n < t.length; n += 2) {
                        const r = t[n], i = (t[n + 1] ?? this.duration) - r;
                        e.push({
                            styles: {
                                bottom: `${ r / this.duration * 100 }%`,
                                height: `${ i / this.duration * 100 }%`
                            }
                        });
                    }
                    return e;
                }
            }
        });
    function K6e(t, e, n, r, s, i) {
        return G(), K('div', Y6e, [(G(true), K(gt, null, wn(t.beatLines, (o, a) => (G(), K('div', {
                key: a,
                class: 'beat-line',
                style: an(o.styles)
            }, null, 4))), 128))]);
    }
    const QI = Je(z6e, [
            [
                'render',
                K6e
            ],
            [
                '__scopeId',
                'data-v-7f81041d'
            ]
        ]), Z6e = at({
            components: { Beatlines: QI },
            props: {
                manager: {
                    type: Object,
                    required: true
                },
                showCta: {
                    type: Boolean,
                    required: true
                }
            },
            data() {
                return {
                    textItems: [],
                    cleanupInterval: window.setInterval(this.cleanup, 2000)
                };
            },
            computed: {
                scrollStyles() {
                    return { transform: `translateY(${ this.manager.progress * 100 }%)` };
                },
                hitIndicator() {
                    const t = [];
                    return this.manager.isActive && t.push('active'), this.manager.isFlubbing && t.push('flubbing'), {
                        classes: t,
                        styles: { left: `${ (this.manager.currentSignal ?? 0) * 100 }%` }
                    };
                },
                homeClasses() {
                    return this.showCta ? ['alert'] : this.manager.isFlubbing ? ['flub'] : this.manager.isActive ? this.manager.currentQuality === 0 ? ['perfect'] : this.manager.currentQuality === 1 ? ['good'] : this.manager.currentQuality === 2 ? ['okay'] : [] : [];
                },
                inputs() {
                    const t = [];
                    return this.manager.inputs.forEach(e => {
                        e.forEach(n => {
                            if (!n.isVisible) {
                                return;
                            }
                            const r = {
                                classes: [],
                                path: n.path,
                                key: n.start,
                                headStyles: {
                                    left: `${ n.signal[0].signal * 100 }%`,
                                    bottom: `${ n.y * 100 }%`
                                },
                                lineStyles: {
                                    height: `${ n.height * 100 }%`,
                                    bottom: `${ n.y * 100 }%`
                                }
                            };
                            n.isCurrent && this.manager.isActive && r.classes.push('active');
                            n.isPassed && r.classes.push('passed');
                            t.push(r);
                            ;
                        });
                    }), t;
                },
                showCombo() {
                    return this.manager.currentCombo > this.manager.minimumDisplayCombo;
                }
            },
            watch: {
                'manager.feedback': {
                    handler: 'onFeedbackChange',
                    deep: true
                }
            },
            beforeUnmount() {
                window.clearInterval(this.cleanupInterval);
            },
            methods: {
                onFeedbackChange(t) {
                    const e = t[t.length - 1];
                    if (e === null) {
                        return;
                    }
                    const n = { left: `${ e[0] * 100 }%` };
                    e[1] === 0 && this.textItems.push([
                        'QUALITY.PERFECT',
                        'perfect',
                        n,
                        Date.now()
                    ]);
                    e[1] === 1 && this.textItems.push([
                        'QUALITY.GOOD',
                        'good',
                        n,
                        Date.now()
                    ]);
                    e[1] === 2 && this.textItems.push([
                        'QUALITY.OKAY',
                        'okay',
                        n,
                        Date.now()
                    ]);
                    ;
                },
                cleanup() {
                    const t = Date.now() - 2000, e = this.textItems.findIndex(([n, r, s, i]) => i < t);
                    this.textItems.splice(e);
                }
            }
        }), X6e = t => (Ri('data-v-deeb4095'), t = t(), Mi(), t), ewe = Ea('<div class="home" data-v-deeb4095><svg viewBox="0 0 300 54" data-v-deeb4095><g class="outer-group" data-v-deeb4095><line x1="30" y1="-5000" x2="30" y2="0" data-v-deeb4095></line><line x1="90" y1="-5000" x2="90" y2="0" data-v-deeb4095></line><line x1="150" y1="-5000" x2="150" y2="0" data-v-deeb4095></line><line x1="210" y1="-5000" x2="210" y2="0" data-v-deeb4095></line><line x1="270" y1="-5000" x2="270" y2="0" data-v-deeb4095></line><rect class="outer" rx="27" ry="27" width="300" height="54" data-v-deeb4095></rect></g><rect class="middle" rx="27" ry="27" width="300" height="54" data-v-deeb4095></rect><rect class="inner" x="16" y="16" rx="11" ry="11" width="268" height="22" data-v-deeb4095></rect></svg></div>', 1), twe = [ewe], swe = ['d'], iwe = ['d'], cwe = X6e(() => V('circle', {
            cx: '55',
            cy: '55',
            r: '53'
        }, null, -1)), lwe = [cwe], hwe = Ea('<svg viewBox="0 0 300 54" class="glow" data-v-deeb4095><defs data-v-deeb4095><linearGradient id="glow-gradient" x1="-4" y1="-42" x2="-4" y2="54" gradientUnits="userSpaceOnUse" data-v-deeb4095><stop class="stop0" offset="0%" data-v-deeb4095></stop><stop class="stop1" offset="100%" data-v-deeb4095></stop></linearGradient></defs><rect x="-4" y="-100" rx="32" ry="32" width="308" height="159" data-v-deeb4095></rect></svg>', 1), fwe = [hwe], dwe = Ea('<defs data-v-deeb4095><linearGradient id="line-gradient" x1="0" y1="-200" x2="0" y2="0" gradientUnits="userSpaceOnUse" data-v-deeb4095><stop class="stop0" offset="0%" data-v-deeb4095></stop><stop class="stop1" offset="50%" data-v-deeb4095></stop></linearGradient></defs><circle cx="55" cy="55" r="53" data-v-deeb4095></circle><line x1="55" y1="-200" x2="55" y2="0" data-v-deeb4095></line>', 3), pwe = [dwe];
    function vwe(t, e, n, r, s, i) {
        const o = We('Beatlines'), a = fn('t');
        return G(), K('div', Q6e, [
            V('div', J6e, [Ye(o, {
                    class: 'scroll-container',
                    guide: t.manager.guide,
                    duration: t.manager.duration,
                    style: an(t.scrollStyles)
                }, null, 8, [
                    'guide',
                    'duration',
                    'style'
                ])]),
            V('div', {
                class: nt([
                    'constrainer',
                    t.homeClasses
                ])
            }, twe, 2),
            V('div', nwe, [V('div', {
                    class: 'scroll-container',
                    style: an(t.scrollStyles)
                }, [V('div', rwe, [(G(true), K(gt, null, wn(t.inputs, l => (G(), K('svg', {
                            key: l.key,
                            class: nt([
                                'line',
                                l.classes
                            ]),
                            viewBox: '0 0 1 1',
                            preserveAspectRatio: 'none',
                            style: an(l.lineStyles)
                        }, [
                            V('path', {
                                class: 'back',
                                d: l.path
                            }, null, 8, swe),
                            V('path', {
                                class: 'front',
                                d: l.path
                            }, null, 8, iwe)
                        ], 6))), 128))])], 4)]),
            V('div', owe, [V('div', {
                    class: 'scroll-container',
                    style: an(t.scrollStyles)
                }, [V('div', awe, [(G(true), K(gt, null, wn(t.inputs, l => (G(), K('svg', {
                            key: l.key,
                            class: nt([
                                'head',
                                l.classes
                            ]),
                            viewBox: '0 0 110 110',
                            style: an(l.headStyles)
                        }, lwe, 6))), 128))])], 4)]),
            V('div', uwe, [
                V('div', {
                    class: nt([
                        'home',
                        t.homeClasses
                    ])
                }, fwe, 2),
                (G(), K('svg', {
                    viewBox: '0 0 110 110',
                    class: nt([
                        'indicator',
                        t.hitIndicator.classes
                    ]),
                    style: an(t.hitIndicator.styles)
                }, pwe, 6)),
                V('div', mwe, [(G(true), K(gt, null, wn(t.textItems, (l, u) => qe((G(), K('p', {
                        key: u,
                        class: nt([
                            'text-item',
                            l[1]
                        ]),
                        style: an(l[2])
                    }, null, 6)), [[
                            a,
                            l[0]
                        ]])), 128))])
            ]),
            Ye(Ta, { name: 'cta' }, {
                default: go(() => [t.showCta ? (G(), K('div', gwe, [V('div', _we, [qe(V('p', ywe, null, 512), [[
                                    a,
                                    'INFO.CONTINUOUS'
                                ]])])])) : De('', true)]),
                _: 1
            })
        ]);
    }
    const bwe = Je(Z6e, [
        [
            'render',
            vwe
        ],
        [
            '__scopeId',
            'data-v-deeb4095'
        ]
    ]);
    class Ewe extends XI {
        constructor(n) {
            super(n);
            Ae(this, 'lanes', []);
            if (this.parseLanes(n.beatmap.laneCount), n.isAudience) {
                const r = n.beatmap.inputs[n.beatmap.inputs.length - 1];
                this.audienceReportAt = r.start + (r.duration ?? this.missThreshold);
            }
        }
        laneWithPointerId(n) {
            return this.lanes.find(r => r.pointerId === n) ?? null;
        }
        getDurationOfNotes(n) {
            return Math.max(...n.map(r => r.start + r.duration));
        }
        getNextInputOnLane(n) {
            const r = this.now;
            for (let s = r - this.missThreshold; s < r + this.missThreshold; s++) {
                const i = n.inputIndex.get(s);
                if (i && !i.isTaken) {
                    return i;
                }
            }
            return null;
        }
        parseInputs(n) {
            n.inputs.forEach(s => {
                const i = this.getDurationOfNotes(s.notes), [o, a] = this.parseNoteIndexes(s.notes), l = s.lanes.map(d => ({
                        isDown: false,
                        key: `${ s.start }:${ d }`,
                        lane: d
                    })), u = {
                        attackIds: [],
                        attackIndex: o,
                        audioDuration: i,
                        audioHeight: this.durationToHeight(i),
                        indicators: l,
                        isAudible: false,
                        isCurrent: false,
                        isPassed: false,
                        isHold: s.duration !== void 0,
                        isHolding: false,
                        isMissed: false,
                        isTaken: false,
                        isVisible: false,
                        lanes: s.lanes,
                        notes: s.notes,
                        releaseIds: [],
                        releaseIndex: a,
                        start: s.start,
                        y: this.millisecondsToY(s.start)
                    };
                s.duration && (u.duration = s.duration, u.height = this.durationToHeight(u.duration));
                const f = s.duration ?? 0;
                this.addInput(u, {
                    appear: u.start - this.appearThreshold,
                    disappear: u.start + f + this.disappearThreshold,
                    end: u.start + f,
                    miss: u.start + this.missThreshold,
                    start: u.start
                });
            });
        }
        parseNoteIndexes(n) {
            const r = new Map(), s = new Map();
            return n.forEach(i => {
                const o = i.start, a = r.get(o) ?? [];
                a.push(i.note);
                r.set(o, a);
                ;
                const l = i.start + i.duration, u = s.get(l) ?? [];
                u.push(i.note);
                s.set(l, u);
                ;
            }), [
                r,
                s
            ];
        }
        parseLanes(n) {
            for (let r = 0; r < n; r++) {
                const s = {
                    feedback: [],
                    index: r,
                    isActive: false,
                    isAudible: false,
                    inputIndex: new Map()
                };
                this.inputs.forEach((i, o) => {
                    i.forEach(a => {
                        a.lanes.includes(r) && s.inputIndex.set(o, a);
                    });
                });
                this.lanes.push(s);
                ;
            }
        }
        inputWasMissed(n) {
            super.inputWasMissed(n);
            n.lanes.forEach(r => this.lanes[r].feedback.push(3));
            ;
        }
        onEnd() {
            super.onEnd();
            this.lanes.forEach(n => {
                n.pointerId && this.onUp(n.pointerId);
            });
            ;
        }
        onDown(n, r) {
            if (!this.isRunning) {
                return;
            }
            const s = this.lanes[n];
            if (s.isActive || this.laneWithPointerId(r)) {
                return;
            }
            ;
            ;
            ;
            ;
            const o = this.getNextInputOnLane(s);
            if (!o) {
                this.flubOnLane(s);
                return;
            }
            if (!o.lanes.every(p => this.lanes[p].isActive)) {
                return;
            }
            const u = o.lanes.reduce((p, _) => this.lanes[_].activeAt + p, 0) / o.lanes.length, f = Math.abs(u - o.start), d = this.criteria.time.findIndex(p => f < p);
            d === void 0 && console.warn('unexpected quality');
            o.isHold ? (o.isHolding = true, o.pendingQuality = d, o.lanes.forEach(p => {
                this.lanes[p].activeInput = o;
                this.lanes[p].feedback.push(d + 10);
                ;
            })) : (o.isTaken = true, o.lanes.forEach(p => {
                this.lanes[p].feedback.push(d);
            }));
            this.scoreInput(d);
            this.attackWithInput(o);
            ;
        }
        onUp(n) {
            const r = this.laneWithPointerId(n);
            if (!r) {
                return;
            }
            this.reportInput({
                start: r.activeAt,
                duration: this.now - r.activeAt,
                lane: r.index
            });
            const s = r.activeInput;
            s != null && s.isHold && (s.isTaken = true, s.isHolding = false, s.lanes.forEach(i => {
                delete this.lanes[i].activeInput;
            }), this.releaseWithInput(s));
            delete r.activeAt;
            ;
            delete r.pointerId;
            ;
        }
        flubOnLane(n) {
            this.instraface && (n.flubEndId && this.scheduler.cancel(n.flubEndId), n.feedback.push(null), this.instraface.flub.attack(), n.flubEndId = this.schedule(() => {
                delete n.flubEndId;
            }, 250));
        }
        attackWithInput(n) {
            this.instraface && (n.attackIndex.forEach((r, s) => {
                if (s) {
                    const i = this.schedule(() => {
                        this.instraface.discrete.attack(r);
                    }, s);
                    n.attackIds.push(i);
                    return;
                }
                this.instraface.discrete.attack(r);
            }), n.releaseIndex.forEach((r, s) => {
                const i = this.schedule(() => {
                    this.instraface.discrete.release(r);
                }, s);
                n.releaseIds.push(i);
            }));
        }
        releaseWithInput(n) {
            n.attackIds.forEach(r => this.scheduler.cancel(r));
            n.releaseIds.forEach(r => this.scheduler.call(r));
            ;
        }
        async onReportInterval() {
            if (this.lanes.some(r => {
                    const s = r.activeInput;
                    return s == null ? void 0 : s.isHold;
                })) {
                console.log(`[reporter] Did not send ${ this.pendingInputs.length } because an input is being held`);
                return;
            }
            await super.onReportInterval();
        }
    }
    function eo(t) {
        if (t === void 0) {
            throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
        }
        return t;
    }
    function JI(t, e) {
        ;
        t.prototype.constructor = t;
        ;
        ;
    }
    var $r = {
            autoSleep: 120,
            force3D: 'auto',
            nullTargetWarn: 1,
            units: { lineHeight: '' }
        }, M5, Bt = 1e-8, P2 = Math.PI * 2, Twe = P2 / 4, Swe = 0, ek = Math.sqrt, wwe = Math.cos, Owe = Math.sin, dr = function (e) {
            return typeof e == 'string';
        }, jn = function (e) {
            return typeof e == 'function';
        }, po = function (e) {
            return typeof e == 'number';
        }, D5 = function (e) {
            return typeof e > 'u';
        }, mo = function (e) {
            return typeof e == 'object';
        }, Fr = function (e) {
            return e !== false;
        }, tk = function () {
            return typeof window < 'u';
        }, Hw = function (e) {
            return jn(e) || dr(e);
        }, nk = typeof ArrayBuffer == 'function' && ArrayBuffer.isView || function () {
        }, ss = Array.isArray, pn, mi, M2, $5, as = {
            TweenMax: as.TweenLite = Vn,
            TimelineLite: as.TimelineMax = Mr
        }, pm = {}, ok, ak = function (e) {
            return (pm = fu(e, as)) && Pi;
        }, L5 = function (e, n) {
            return console.warn('Invalid property', e, 'set to', n, 'Missing plugin? gsap.registerPlugin()');
        }, mm = function (e, n) {
            return !n && console.warn(e);
        }, ck = function (e, n) {
            return e && (as[e] = n) && pm && (pm[e] = n) || as;
        }, hu = function () {
            return 0;
        }, F5 = {}, sa = [], D2 = {}, lk, Xr = {}, zy = {
            n: function (a, l, u) {
                return r(Ss(a), xs(l || {}, i), u);
            }
        }, zw = 30, Vp = [], U5 = '', B5 = function (e) {
            var n = e[0], r, s;
            if (mo(n) || jn(n) || (e = [e]), !(r = (n._gsap || {}).harness)) {
                for (s = Vp.length; s-- && !Vp[s].targetTest(n);) {
                    ;
                }
                r = Vp[s];
            }
            for (s = e.length; s--;) {
                e[s] && (e[s]._gsap || (e[s]._gsap = new xk(e[s], r))) || e.splice(s, 1);
            }
            return e;
        }, bc = function (e) {
            return e._gsap || B5(Ss(e))[0]._gsap;
        }, uk = function (e, n, r) {
            return (r = e[n]) && jn(r) ? e[n]() : D5(r) && e.getAttribute && e.getAttribute(n) || r;
        }, is = function (e, n) {
            return (e = e.split(',')).forEach(n) || e;
        }, Ct = function (e) {
            return Math.round(e * 100000) / 100000 || 0;
        }, Cwe = function (e, n) {
            for (var r = n.length, s = 0; e.indexOf(n[s]) < 0 && ++s < r;) {
                ;
            }
            return s < r;
        }, gm = function () {
            var e = sa.length, n = sa.slice(0), r, s;
            for (D2 = {}, sa.length = 0, r = 0; r < e; r++) {
                s = n[r];
                s && s._lazy && (s.render(s._lazy[0], s._lazy[1], true)._lazy = 0);
                ;
            }
        }, hk = function (e, n, r, s) {
            sa.length && gm();
            e.render(n, r, s);
            sa.length && gm();
            ;
        }, fk = function (e) {
            var n = parseFloat(e);
            return (n || n === 0) && (e + '').match(/[^,'"\[\]\s]+/gi).length < 2 ? n : dr(e) ? e.trim() : e;
        }, dk = function (e) {
            return e;
        }, xs = function (e, n) {
            for (var r in n)
                r in e || (e[r] = n[r]);
            return e;
        }, Iwe = function (e, n) {
            for (var r in n)
                r in e || r === 'duration' || r === 'ease' || (e[r] = n[r]);
        }, fu = function (e, n) {
            for (var r in n);
            return e;
        }, Yw = function t(e, n) {
            for (var r in n)
                r !== '__proto__' && r !== 'constructor' && r !== 'prototype' && (e[r] = mo(n[r]) ? t(e[r] || (e[r] = {}), n[r]) : n[r]);
            return e;
        }, $2 = function (e, n) {
            var r = {}, s;
            for (s in e)
                s in n || (r[s] = e[s]);
            return r;
        }, Gp = function (e) {
            var n = e.parent || pn, r = e.keyframes ? Iwe : xs;
            if (Fr(e.inherit)) {
                for (; n;) {
                    r(e, n.vars.defaults);
                    n = n.parent || n._dp;
                    ;
                }
            }
            return e;
        }, kwe = function (e, n) {
            for (var r = e.length, s = r === n.length; s && r-- && e[r] === n[r];) {
                ;
            }
            return r < 0;
        }, Nwe = function (e, n, r, s, i) {
            r === void 0 && (r = '_first');
            s === void 0 && (s = '_last');
            ;
            var o = e[s], a;
            if (i) {
                for (a = n[i]; o && o[i] > a;) {
                    o = o._prev;
                }
            }
            return o ? (n._next = o._next, o._next = n) : (n._next = e[r], e[r] = n), n._next ? n._next._prev = n : e[s] = n, n._prev = o, n.parent = n._dp = e, n;
        }, Pg = function (e, n, r, s) {
            r === void 0 && (r = '_first');
            s === void 0 && (s = '_last');
            ;
            var i = n._prev, o = n._next;
            i ? i._next = o : e[r] === n && (e[r] = o);
            o ? o._prev = i : e[s] === n && (e[s] = i);
            ;
            ;
        }, _a = function (e, n) {
            e.parent && (!n || e.parent.autoRemoveChildren) && e.parent.remove(e);
            ;
            ;
        }, Ec = function (e, n) {
            if (e && (!n || n._end > e._dur || n._start < 0)) {
                for (var r = e; r;) {
                    ;
                    r = r.parent;
                    ;
                }
            }
            return e;
        }, xwe = function (e) {
            for (var n = e.parent; n && n.parent;) {
                ;
                n.totalDuration();
                n = n.parent;
                ;
            }
            return e;
        }, Pwe = function t(e) {
            return !e || e._ts && t(e.parent);
        }, Kw = function (e) {
            return e._repeat ? du(e._tTime, e = e.duration() + e._rDelay) * e : 0;
        }, du = function (e, n) {
            var r = Math.floor(e /= n);
            return e && r === e ? r - 1 : r;
        }, _m = function (e, n) {
            return (e - n._start) * n._ts + (n._ts >= 0 ? 0 : n._dirty ? n.totalDuration() : n._tDur);
        }, q5 = function (e) {
            return e._end = Ct(e._start + (e._tDur / Math.abs(e._ts || e._rts || Bt) || 0));
        }, pk = function (e, n) {
            var r = e._dp;
            return r && r.smoothChildTiming && e._ts && (e._start = Ct(r._time - (e._ts > 0 ? n / e._ts : ((e._dirty ? e.totalDuration() : e._tDur) - n) / -e._ts)), q5(e), r._dirty || Ec(r, e)), e;
        }, mk = function (e, n) {
            var r;
            if ((n._time || n._initted && !n._dur) && (r = _m(e.rawTime(), n), (!n._dur || cd(0, n.totalDuration(), r) - n._tTime > Bt) && n.render(r, true)), Ec(e, n)._dp && e._initted && e._time >= e._dur && e._ts) {
                if (e._dur < e.duration()) {
                    for (r = e; r._dp;) {
                        r.rawTime() >= 0 && r.totalTime(r._tTime);
                        r = r._dp;
                        ;
                    }
                }
                ;
            }
        }, bi = function (e, n, r, s) {
            return n.parent && _a(n), n._start = Ct((po(r) ? r : r || e !== pn ? vs(e, r, n) : e._time) + n._delay), n._end = Ct(n._start + (n.totalDuration() / Math.abs(n.timeScale()) || 0)), Nwe(e, n, '_first', '_last', e._sort ? '_start' : 0), L2(n) || (e._recent = n), s || mk(e, n), e;
        }, gk = function (e, n) {
            return (as.ScrollTrigger || L5('scrollTrigger', n)) && as.ScrollTrigger.create(n, e);
        }, _k = function (e, n, r, s) {
            if (t8e(e, n), !e._initted) {
                return 1;
            }
            if (!r && e._pt && (e._dur && e.vars.lazy !== false || !e._dur && e.vars.lazy) && lk !== Es.frame) {
                return sa.push(e), e._lazy = [
                    n,
                    s
                ], 1;
            }
        }, Rwe = function t(e) {
            var n = e.parent;
            return n && n._ts && n._initted && !n._lock && (n.rawTime() < 0 || t(n));
        }, L2 = function (e) {
            var n = e.data;
            return n === 'isFromStart' || n === 'isStart';
        }, Mwe = function (e, n, r, s) {
            var i = e.ratio, o = n < 0 || !n && (!e._start && Rwe(e) && !(!e._initted && L2(e)) || (e._ts < 0 || e._dp._ts < 0) && !L2(e)) ? 0 : 1, a = e._rDelay, l = 0, u, f, d;
            if (a && e._repeat && (l = cd(0, e._tDur, n), f = du(l, a), d = du(e._tTime, a), e._yoyo && f & 1 && (o = 1 - o), f !== d && (i = 1 - o, e.vars.repeatRefresh && e._initted && e.invalidate())), o !== i || s || e._zTime === Bt || !n && e._zTime) {
                if (!e._initted && _k(e, n, s, r)) {
                    return;
                }
                for (d = e._zTime, e._zTime = n || (r ? Bt : 0), r || (r = n && !d), e.ratio = o, e._from && (o = 1 - o), e._time = 0, e._tTime = l, u = e._pt; u;) {
                    u.r(o, u.d);
                    u = u._next;
                    ;
                }
                e._startAt && n < 0 && e._startAt.render(n, true, true);
                e._onUpdate && !r && es(e, 'onUpdate');
                l && e._repeat && !r && e.parent && es(e, 'onRepeat');
                (n >= e._tDur || n < 0) && e.ratio === o && (o && _a(e, 1), r || (es(e, o ? 'onComplete' : 'onReverseComplete', true), e._prom && e._prom()));
                ;
            } else {
                e._zTime || (e._zTime = n);
            }
        }, Dwe = function (e, n, r) {
            var s;
            if (r > n) {
                for (s = e._first; s && s._start <= r;) {
                    if (!s._dur && s.data === 'isPause' && s._start > n) {
                        return s;
                    }
                    s = s._next;
                }
            } else {
                for (s = e._last; s && s._start >= r;) {
                    if (!s._dur && s.data === 'isPause' && s._start < n) {
                        return s;
                    }
                    s = s._prev;
                }
            }
        }, pu = function (e, n, r, s) {
            var i = e._repeat, o = Ct(n) || 0, a = e._tTime / e._tDur;
            return a && !s && (e._time *= o / e._dur), e._dur = o, e._tDur = i ? i < 0 ? 10000000000 : Ct(o * (i + 1) + e._rDelay * i) : o, a && !s ? pk(e, e._tTime = e._tDur * a) : e.parent && q5(e), r || Ec(e.parent, e), e;
        }, Zw = function (e) {
            return e instanceof Mr ? Ec(e) : pu(e, e._dur);
        }, $we = {
            _start: 0,
            endTime: hu,
            totalDuration: hu
        }, vs = function t(e, n, r) {
            var s = e.labels, i = e._recent || $we, o = e.duration() >= 100000000 ? i.endTime(false) : e._dur, a, l, u;
            return dr(n) && (isNaN(n) || n in s) ? (l = n.charAt(0), u = n.substr(-1) === '%', a = n.indexOf('='), l === '<' || l === '>' ? (a >= 0 && (n = n.replace(/=/, '')), (l === '<' ? i._start : i.endTime(i._repeat >= 0)) + (parseFloat(n.substr(1)) || 0) * (u ? (a < 0 ? i : r).totalDuration() / 100 : 1)) : a < 0 ? (n in s || (s[n] = o), s[n]) : (l = parseFloat(n.charAt(a - 1) + n.substr(a + 1)), u && r && (l = l / 100 * (ss(r) ? r[0] : r).totalDuration()), a > 1 ? t(e, n.substr(0, a - 1), r) + l : o + l)) : n == null ? o : +n;
        }, $h = function (e, n, r) {
            var s = po(n[1]), i = (s ? 2 : 1) + (e < 2 ? 0 : 1), o = n[i], a, l;
            if (s && (o.duration = n[1]), o.parent = r, e) {
                for (a = o, l = r; l && !('immediateRender' in a);) {
                    a = l.vars.defaults || {};
                    l = Fr(l.vars.inherit) && l.parent;
                    ;
                }
                ;
                e < 2 ? o.runBackwards = 1 : o.startAt = n[i - 1];
                ;
            }
            return new Vn(n[0], o, n[i + 1]);
        }, $a = function (e, n) {
            return e || e === 0 ? n(e) : n;
        }, cd = function (e, n, r) {
            return r < e ? e : r > n ? n : r;
        }, ts = function (e) {
            if (typeof e != 'string') {
                return '';
            }
            var n = /[\d.+\-=]+(?:e[-+]\d*)*/i.exec(e);
            return n ? e.substr(n.index + n[0].length) : '';
        }, Lwe = function (e, n, r) {
            return $a(r, function (s) {
                return cd(e, n, s);
            });
        }, F2 = [].slice, yk = function (e, n) {
            return e && mo(e) && 'length' in e && (!n && !e.length || e.length - 1 in e && mo(e[0])) && !e.nodeType && e !== mi;
        }, Fwe = function (e, n, r) {
            return r === void 0 && (r = []), e.forEach(function (s) {
                var i;
                return dr(s) && !n || yk(s, 1) ? (i = r).push.apply(i, Ss(s)) : r.push(s);
            }) || r;
        }, Ss = function (e, n, r) {
            return dr(e) && !r && (M2 || !mu()) ? F2.call((n || $5).querySelectorAll(e), 0) : ss(e) ? Fwe(e, r) : yk(e) ? F2.call(e, 0) : e ? [e] : [];
        }, Uwe = function (e) {
            return e = Ss(e)[0] || mm('Invalid scope') || {}, function (n) {
                var r = e.current || e.nativeElement || e;
                return Ss(n, r.querySelectorAll ? r : r === e ? mm('Invalid scope') || $5.createElement('div') : e);
            };
        }, vk = function (e) {
            return e.sort(function () {
                return 0.5 - Math.random();
            });
        }, bk = function (e) {
            if (jn(e)) {
                return e;
            }
            var n = mo(e) ? e : { each: e }, r = Fl(n.ease), s = n.from || 0, i = parseFloat(n.base) || 0, o = {}, a = s > 0 && s < 1, l = isNaN(s) || a, u = n.axis, f = s, d = s;
            return dr(s) ? f = d = {
                center: 0.5,
                edges: 0.5,
                end: 1
            }[s] || 0 : !a && l && (f = s[0], d = s[1]), function (p, _, v) {
                var y = (v || n).length, g = o[y], b, A, N, I, O, x, M, L, U;
                if (!g) {
                    if (U = n.grid === 'auto' ? 0 : (n.grid || [
                            1,
                            100000000
                        ])[1], !U) {
                        for (M = -100000000; M < (M = v[U++].getBoundingClientRect().left) && U < y;) {
                            ;
                        }
                        U--;
                    }
                    for (g = o[y] = [], b = l ? Math.min(U, y) * f - 0.5 : s % U, A = l ? y * d / U - 0.5 : s / U | 0, M = 0, L = 100000000, x = 0; x < y; x++) {
                        N = x % U - b;
                        I = A - (x / U | 0);
                        ;
                        O > M && (M = O);
                        O < L && (L = O);
                        ;
                    }
                    s === 'random' && vk(g);
                    ;
                    ;
                    ;
                    ;
                    ;
                    r = r && y < 0 ? Ik(r) : r;
                    ;
                }
                return y = (g[p] - g.min) / g.max || 0, Ct(g.b + (r ? r(y) : y) * g.v) + g.u;
            };
        }, U2 = function (e) {
            var n = e < 1 ? Math.pow(10, (e + '').length - 2) : 1;
            return function (r) {
                var s = Math.round(parseFloat(r) / e) * e * n;
                return (s - s % 1) / n + (po(r) ? 0 : ts(r));
            };
        }, Ek = function (e, n) {
            var r = ss(e), s, i;
            return !r && mo(e) && (s = r = e.radius || 100000000, e.values ? (e = Ss(e.values), (i = !po(e[0])) && (s *= s)) : e = U2(e.increment)), $a(n, r ? jn(e) ? function (o) {
                return i = e(o), Math.abs(i - o) <= s ? i : o;
            } : function (o) {
                for (var a = parseFloat(i ? o.x : o), l = parseFloat(i ? o.y : 0), u = 100000000, f = 0, d = e.length, p, _; d--;) {
                    i ? (p = e[d].x - a, _ = e[d].y - l, p = p * p + _ * _) : p = Math.abs(e[d] - a);
                    if (p < u) {
                        u = p;
                        f = d;
                    }
                    ;
                }
                return f = !s || u <= s ? e[f] : o, i || f === o || po(o) ? f : f + ts(o);
            } : U2(e));
        }, Tk = function (e, n, r, s) {
            return $a(ss(e) ? !n : r === true ? !!(r = 0) : !s, function () {
                return ss(e) ? e[~~(Math.random() * e.length)] : (r = r || 0.00001) && (s = r < 1 ? Math.pow(10, (r + '').length - 2) : 1) && Math.floor(Math.round((e - r / 2 + Math.random() * (n - e + r * 0.99)) / r) * r * s) / s;
            });
        }, Bwe = function () {
            for (var e = arguments.length, n = new Array(e), r = 0; r < e; r++) {
                ;
            }
            return function (s) {
                return n.reduce(function (i, o) {
                    return o(i);
                }, s);
            };
        }, qwe = function (e, n) {
            return function (r) {
                return e(parseFloat(r)) + (n || ts(r));
            };
        }, Vwe = function (e, n, r) {
            return wk(e, n, 0, 1, r);
        }, Sk = function (e, n, r) {
            return $a(r, function (s) {
                return e[~~n(s)];
            });
        }, Gwe = function t(e, n, r) {
            var s = n - e;
            return ss(e) ? Sk(e, t(0, e.length), n) : $a(r, function (i) {
                return (s + (i - e) % s) % s + e;
            });
        }, jwe = function t(e, n, r) {
            var s = n - e, i = s * 2;
            return ss(e) ? Sk(e, t(0, e.length - 1), n) : $a(r, function (o) {
                return o = (i + (o - e) % i) % i || 0, e + (o > s ? i - o : o);
            });
        }, Rg = function (e) {
            for (var n = 0, r = '', s, i, o, a; ~(s = e.indexOf('random(', n));) {
                o = e.indexOf(')', s);
                a = e.charAt(s + 7) === '[';
                i = e.substr(s + 7, o - s - 7).match(a ? /[^,'"\[\]\s]+/gi : /(?:-?\.?\d|\.)+/gi);
                r += e.substr(n, s - n) + Tk(a ? i : +i[0], a ? 0 : +i[1], +i[2] || 0.00001);
                n = o + 1;
                ;
            }
            return r + e.substr(n, e.length - n);
        }, wk = function (e, n, r, s, i) {
            var o = n - e, a = s - r;
            return $a(i, function (l) {
                return r + ((l - e) / o * a || 0);
            });
        }, Wwe = function t(e, n, r, s) {
            var i = isNaN(e + n) ? 0 : function (_) {
                return (1 - _) * e + _ * n;
            };
            if (!i) {
                var o = dr(e), a = {}, l, u, f, d, p;
                if (r === true && (s = 1) && (r = null), o) {
                    e = { p: e };
                    n = { p: n };
                    ;
                } else {
                    if (ss(e) && !ss(n)) {
                        for (f = [], d = e.length, p = d - 2, u = 1; u < d; u++) {
                            f.push(t(e[u - 1], e[u]));
                        }
                        d--;
                        i = function (v) {
                            v *= d;
                            var y = Math.min(p, ~~v);
                            return f[y](v - y);
                        };
                        r = n;
                        ;
                    } else {
                        s || (e = fu(ss(e) ? [] : {}, e));
                    }
                }
                if (!f) {
                    for (l in n)
                        V5.call(a, e, l, 'get', n[l]);
                    i = function (v) {
                        return W5(v, a) || (o ? e.p : e);
                    };
                }
            }
            return $a(r, i);
        }, Xw = function (e, n, r) {
            var s = e.labels, i = 100000000, o, a, l;
            for (o in s)
                a = s[o] - n, a < 0 == !!r && a && i > (a = Math.abs(a)) && (l = o, i = a);
            return l;
        }, es = function (e, n, r) {
            var s = e.vars, i = s[n], o, a;
            if (i) {
                return o = s[n + 'Params'], a = s.callbackScope || e, r && sa.length && gm(), o ? i.apply(a, o) : i.call(a);
            }
        }, ph = function (e) {
            return _a(e), e.scrollTrigger && e.scrollTrigger.kill(false), e.progress() < 1 && es(e, 'onInterrupt'), e;
        }, vl, Hwe = function (e) {
            e = !e.name && e.default || e;
            var n = e.name, r = jn(e), s = n && !r && e.init ? function () {
                    this._props = [];
                } : e, i = {
                    init: hu,
                    render: W5,
                    add: V5,
                    kill: c8e,
                    modifier: a8e,
                    rawVars: 0
                }, o = {
                    targetTest: 0,
                    get: 0,
                    getSetter: j5,
                    aliases: {},
                    register: 0
                };
            if (mu(), e !== s) {
                if (Xr[n]) {
                    return;
                }
                xs(s, xs($2(e, i), o));
                fu(s.prototype, fu(i, $2(e, o)));
                Xr[s.prop = n] = s;
                e.targetTest && (Vp.push(s), F5[n] = 1);
                n = (n === 'css' ? 'CSS' : n.charAt(0).toUpperCase() + n.substr(1)) + 'Plugin';
                ;
            }
            ck(n, s);
            e.register && e.register(Pi, s, Ur);
            ;
        }, mh = {
            aqua: [
                0,
                255,
                255
            ],
            lime: [
                0,
                255,
                0
            ],
            silver: [
                192,
                192,
                192
            ],
            black: [
                0,
                0,
                0
            ],
            maroon: [
                128,
                0,
                0
            ],
            teal: [
                0,
                128,
                128
            ],
            blue: [
                0,
                0,
                255
            ],
            navy: [
                0,
                0,
                128
            ],
            white: [
                255,
                255,
                255
            ],
            olive: [
                128,
                128,
                0
            ],
            yellow: [
                255,
                255,
                0
            ],
            orange: [
                255,
                165,
                0
            ],
            gray: [
                128,
                128,
                128
            ],
            purple: [
                128,
                0,
                128
            ],
            green: [
                0,
                128,
                0
            ],
            red: [
                255,
                0,
                0
            ],
            pink: [
                255,
                192,
                203
            ],
            cyan: [
                0,
                255,
                255
            ],
            transparent: [
                255,
                255,
                255,
                0
            ]
        }, Yy = function (e, n, r) {
            return e = e < 0 ? e + 1 : e > 1 ? e - 1 : e, (e * 6 < 1 ? n + (r - n) * e * 6 : e < 0.5 ? r : e * 3 < 2 ? n + (r - n) * (0.6666666666666666 - e) * 6 : n) * 255 + 0.5 | 0;
        }, Ok = function (e, n, r) {
            var s = e ? po(e) ? [
                    e >> 16,
                    e >> 8 & 255,
                    e & 255
                ] : 0 : mh.black, i, o, a, l, u, f, d, p, _, v;
            if (!s) {
                if (e.substr(-1) === ',' && (e = e.substr(0, e.length - 1)), mh[e]) {
                    s = mh[e];
                } else {
                    if (e.charAt(0) === '#') {
                        if (e.length < 6 && (i = e.charAt(1), o = e.charAt(2), a = e.charAt(3), e = '#' + i + i + o + o + a + a + (e.length === 5 ? e.charAt(4) + e.charAt(4) : '')), e.length === 9) {
                            return s = parseInt(e.substr(1, 6), 16), [
                                s >> 16,
                                s >> 8 & 255,
                                s & 255,
                                parseInt(e.substr(7), 16) / 255
                            ];
                        }
                        e = parseInt(e.substr(1), 16);
                        s = [
                            e >> 16,
                            e >> 8 & 255,
                            e & 255
                        ];
                        ;
                    } else {
                        if (e.substr(0, 3) === 'hsl') {
                            if (s = v = e.match(/(?:-?\.?\d|\.)+/gi), !n) {
                                l = +s[0] % 360 / 360;
                                u = +s[1] / 100;
                                f = +s[2] / 100;
                                o = f <= 0.5 ? f * (u + 1) : f + u - f * u;
                                i = f * 2 - o;
                                s.length > 3 && (s[3] *= 1);
                                s[0] = Yy(l + 0.3333333333333333, i, o);
                                s[1] = Yy(l, i, o);
                                s[2] = Yy(l - 0.3333333333333333, i, o);
                                ;
                            } else {
                                if (~e.indexOf('=')) {
                                    return s = e.match(/[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g), r && s.length < 4 && (s[3] = 1), s;
                                }
                            }
                        } else {
                            s = e.match(/(?:-?\.?\d|\.)+/gi) || mh.transparent;
                        }
                    }
                }
                s = s.map(Number);
            }
            return n && !v && (i = s[0] / 255, o = s[1] / 255, a = s[2] / 255, d = Math.max(i, o, a), p = Math.min(i, o, a), f = (d + p) / 2, d === p ? l = u = 0 : (_ = d - p, u = f > 0.5 ? _ / (2 - d - p) : _ / (d + p), l = d === i ? (o - a) / _ + (o < a ? 6 : 0) : d === o ? (a - i) / _ + 2 : (i - o) / _ + 4, l *= 60), s[0] = ~~(l + 0.5), s[1] = ~~(u * 100 + 0.5), s[2] = ~~(f * 100 + 0.5)), r && s.length < 4 && (s[3] = 1), s;
        }, Ak = function (e) {
            var n = [], r = [], s = -1;
            return e.split(ia).forEach(function (i) {
                var o = i.match(/[-+=.]*\d+[.e-]*\d*[a-z%]*/g) || [];
                n.push.apply(n, o);
                r.push(s += o.length + 1);
                ;
            }), n.c = r, n;
        }, Qw = function (e, n, r) {
            var s = '', i = (e + s).match(ia), o = n ? 'hsla(' : 'rgba(', a = 0, l, u, f, d;
            if (!i) {
                return e;
            }
            if (i = i.map(function (p) {
                    return (p = Ok(p, n, 1)) && o + (n ? p[0] + ',' + p[1] + '%,' + p[2] + '%,' + p[3] : p.join(',')) + ')';
                }), r && (f = Ak(e), l = r.c, l.join(s) !== f.c.join(s))) {
                for (u = e.replace(ia, '1').split(/[-+=.]*\d+[.e-]*\d*[a-z%]*/g), d = u.length - 1; a < d; a++) {
                    s += u[a] + (~l.indexOf(a) ? i.shift() || o + '0,0,0,0)' : (f.length ? f : i.length ? i : r).shift());
                }
            }
            if (!u) {
                for (u = e.split(ia), d = u.length - 1; a < d; a++) {
                    s += u[a] + i[a];
                }
            }
            return s + u[d];
        }, ia = (function () {
            var t = '(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b', e;
            for (e in mh)
                t += '|' + e + '\\b';
            return new RegExp(t + ')', 'gi');
        }()), Ck = function (e) {
            var n = e.join(' '), r;
            if (ia.lastIndex = 0, ia.test(n)) {
                return r = /hsl[a]?\(/.test(n), e[1] = Qw(e[1], r), e[0] = Qw(e[0], r, Ak(e[1])), true;
            }
        }, ym, Es = (function () {
            var t = Date.now, e = 500, n = 33, r = t(), s = r, i = 4.166666666666667, o = i, a = [], l, u, f, d, p, _, v = function y(g) {
                    var b = t() - s, A = g === true, N, I, O, x;
                    if (b > e && (r += b - n), s += b, O = s - r, N = O - o, (N > 0 || A) && (x = ++d.frame, p = O - d.time * 1000, d.time = O = O / 1000, o += N + (N >= i ? 4 : i - N), I = 1), A || (l = u(y)), I) {
                        for (_ = 0; _ < a.length; _++) {
                            a[_](O, p, x, g);
                        }
                    }
                };
            return d = {
                time: 0,
                frame: 0,
                tick: function () {
                    v(true);
                },
                deltaRatio: function (g) {
                    return p / (1000 / (g || 60));
                },
                wake: function () {
                    ok && (!M2 && tk() && (mi = M2 = window, $5 = mi.document || {}, as.gsap = Pi, (mi.gsapVersions || (mi.gsapVersions = [])).push(Pi.version), ak(pm || mi.GreenSockGlobals || !mi.gsap && mi || {}), f = mi.requestAnimationFrame), l && d.sleep(), u = f || function (g) {
                        return setTimeout(g, o - d.time * 1000 + 1 | 0);
                    }, ym = 1, v(2));
                },
                sleep: function () {
                    (f ? mi.cancelAnimationFrame : clearTimeout)(l);
                    ym = 0;
                    u = hu;
                    ;
                },
                lagSmoothing: function (g, b) {
                    e = g || 1 / Bt;
                    n = Math.min(b, e, 0);
                    ;
                },
                fps: function (g) {
                    i = 1000 / (g || 240);
                    o = d.time * 1000 + i;
                    ;
                },
                add: function (g) {
                    a.indexOf(g) < 0 && a.push(g);
                    mu();
                    ;
                },
                remove: function (g) {
                    var b;
                    ~(b = a.indexOf(g)) && a.splice(b, 1) && _ >= b && _--;
                },
                _listeners: a
            }, d;
        }()), mu = function () {
            return !ym && Es.wake();
        }, xt = {
            a: as[a] = i,
            SteppedEase: xt.steps = as.SteppedEase = {
                config: function (e, n) {
                    e === void 0 && (e = 1);
                    var r = 1 / e, s = e + (n ? 0 : 1), i = n ? 1 : 0, o = 1 - Bt;
                    return function (a) {
                        return ((s * cd(0, o, a) | 0) + i) * r;
                    };
                }
            },
            e: Fl(n)
        }, Zwe = function (e) {
            for (var n = { s: isNaN(u) ? u.replace(/["']/g, '').trim() : +u }, r = e.substr(1, e.length - 3).split(':'), s = r[0], i = 1, o = r.length, a, l, u; i < o; i++) {
                l = r[i];
                a = i !== o - 1 ? l.lastIndexOf(',') : l.length;
                u = l.substr(0, a);
                ;
                s = l.substr(a + 1).trim();
                ;
            }
            return n;
        }, Xwe = function (e) {
            var n = e.indexOf('(') + 1, r = e.indexOf(')'), s = e.indexOf('(', n);
            return e.substring(n, ~s && s < r ? e.indexOf(')', r + 1) : r);
        }, Qwe = function (e) {
            var n = (e + '').split('('), r = xt[n[0]];
            return r && n.length > 1 && r.config ? r.config.apply(null, ~e.indexOf('{') ? [Zwe(n[1])] : Xwe(e).split(',').map(fk)) : xt._CE && /^[\d.\-M][\d.\-,\s]/.test(e) ? xt._CE('', e) : r;
        }, Ik = function (e) {
            return function (n) {
                return 1 - e(1 - n);
            };
        }, kk = function t(e, n) {
            for (var r = e._first, s; r;) {
                r instanceof Mr ? t(r, n) : r.vars.yoyoEase && (!r._yoyo || !r._repeat) && r._yoyo !== n && (r.timeline ? t(r.timeline, n) : (s = r._ease, r._ease = r._yEase, r._yEase = s, r._yoyo = n));
                r = r._next;
                ;
            }
        }, Fl = function (e, n) {
            return e && (jn(e) ? e : xt[e] || Qwe(e)) || n;
        }, qc = function (e, n, r, s) {
            r === void 0 && (r = function (l) {
                return 1 - n(1 - l);
            });
            s === void 0 && (s = function (l) {
                return l < 0.5 ? n(l * 2) / 2 : 1 - n((1 - l) * 2) / 2;
            });
            ;
            var i = {
                    easeIn: n,
                    easeOut: r,
                    easeInOut: s
                }, o;
            return is(e, function (a) {
                ;
                xt[o = a.toLowerCase()] = r;
                ;
                for (var l in i)
                    xt[o + (l === 'easeIn' ? '.in' : l === 'easeOut' ? '.out' : '.inOut')] = xt[a + '.' + l] = i[l];
            }), i;
        }, Nk = function (e) {
            return function (n) {
                return n < 0.5 ? (1 - e(1 - n * 2)) / 2 : 0.5 + e((n - 0.5) * 2) / 2;
            };
        }, Ky = function t(e, n, r) {
            var s = n >= 1 ? n : 1, i = (r || (e ? 0.3 : 0.45)) / (n < 1 ? n : 1), o = i / P2 * (Math.asin(1 / s) || 0), a = function (f) {
                    return f === 1 ? 1 : s * Math.pow(2, -10 * f) * Owe((f - o) * i) + 1;
                }, l = e === 'out' ? a : e === 'in' ? function (u) {
                    return 1 - a(1 - u);
                } : Nk(a);
            return i = P2 / i, l.config = function (u, f) {
                return t(e, u, f);
            }, l;
        }, Zy = function t(e, n) {
            n === void 0 && (n = 1.70158);
            var r = function (o) {
                    return o ? --o * o * ((n + 1) * o + n) + 1 : 0;
                }, s = e === 'out' ? r : e === 'in' ? function (i) {
                    return 1 - r(1 - i);
                } : Nk(r);
            return s.config = function (i) {
                return t(e, i);
            }, s;
        };
    is('Linear,Quad,Cubic,Quart,Quint,Strong', function (t, e) {
        var n = e < 5 ? e + 1 : e;
        qc(t + ',Power' + (n - 1), e ? function (r) {
            return Math.pow(r, n);
        } : function (r) {
            return r;
        }, function (r) {
            return 1 - Math.pow(1 - r, n);
        }, function (r) {
            return r < 0.5 ? Math.pow(r * 2, n) / 2 : 1 - Math.pow((1 - r) * 2, n) / 2;
        });
    });
    xt.Linear.easeNone = xt.none = xt.Linear.easeIn;
    qc('Elastic', Ky('in'), Ky('out'), Ky());
    (function (t, e) {
        var n = 1 / e, r = 2 * n, s = 2.5 * n, i = function (a) {
                return a < n ? t * a * a : a < r ? t * Math.pow(a - 1.5 / e, 2) + 0.75 : a < s ? t * (a -= 2.25 / e) * a + 0.9375 : t * Math.pow(a - 2.625 / e, 2) + 0.984375;
            };
        qc('Bounce', function (o) {
            return 1 - i(1 - o);
        }, i);
    }(7.5625, 2.75));
    qc('Expo', function (t) {
        return t ? Math.pow(2, 10 * (t - 1)) : 0;
    });
    qc('Circ', function (t) {
        return -(ek(1 - t * t) - 1);
    });
    qc('Sine', function (t) {
        return t === 1 ? 1 : -wwe(t * Twe) + 1;
    });
    qc('Back', Zy('in'), Zy('out'), Zy());
    ;
    uu.ease = xt['quad.out'];
    is('onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt', function (t) {
        return U5 += t + ',' + t + 'Params,';
    });
    var xk = function (e, n) {
            this.id = Swe++;
            ;
            this.target = e;
            this.harness = n;
            this.get = n ? n.get : uk;
            this.set = n ? n.getSetter : j5;
            ;
        }, Of = (function () {
            function t(n) {
                this.vars = n;
                this._delay = +n.delay || 0;
                (this._repeat = n.repeat === 1e+400 ? -2 : n.repeat || 0) && (this._rDelay = n.repeatDelay || 0, this._yoyo = !!n.yoyo || !!n.yoyoEase);
                this._ts = 1;
                pu(this, +n.duration, 1, 1);
                this.data = n.data;
                ym || Es.wake();
                ;
            }
            var e = t.prototype;
            return e.delay = function (r) {
                return r || r === 0 ? (this.parent && this.parent.smoothChildTiming && this.startTime(this._start + r - this._delay), this._delay = r, this) : this._delay;
            }, e.duration = function (r) {
                return arguments.length ? this.totalDuration(this._repeat > 0 ? r + (r + this._rDelay) * this._repeat : r) : this.totalDuration() && this._dur;
            }, e.totalDuration = function (r) {
                return arguments.length ? (this._dirty = 0, pu(this, this._repeat < 0 ? r : (r - this._repeat * this._rDelay) / (this._repeat + 1))) : this._tDur;
            }, e.totalTime = function (r, s) {
                if (mu(), !arguments.length) {
                    return this._tTime;
                }
                var i = this._dp;
                if (i && i.smoothChildTiming && this._ts) {
                    for (pk(this, r), !i._dp || i.parent || mk(i, this); i.parent;) {
                        i.parent._time !== i._start + (i._ts >= 0 ? i._tTime / i._ts : (i.totalDuration() - i._tTime) / -i._ts) && i.totalTime(i._tTime, true);
                        i = i.parent;
                        ;
                    }
                    !this.parent && this._dp.autoRemoveChildren && (this._ts > 0 && r < this._tDur || this._ts < 0 && r > 0 || !this._tDur && !r) && bi(this._dp, this, this._start - this._delay);
                }
                return (this._tTime !== r || !this._dur && !s || this._initted && Math.abs(this._zTime) === Bt || !r && !this._initted && (this.add || this._ptLookup)) && (this._ts || (this._pTime = r), hk(this, r, s)), this;
            }, e.time = function (r, s) {
                return arguments.length ? this.totalTime(Math.min(this.totalDuration(), r + Kw(this)) % this._dur || (r ? this._dur : 0), s) : this._time;
            }, e.totalProgress = function (r, s) {
                return arguments.length ? this.totalTime(this.totalDuration() * r, s) : this.totalDuration() ? Math.min(1, this._tTime / this._tDur) : this.ratio;
            }, e.progress = function (r, s) {
                return arguments.length ? this.totalTime(this.duration() * (this._yoyo && !(this.iteration() & 1) ? 1 - r : r) + Kw(this), s) : this.duration() ? Math.min(1, this._time / this._dur) : this.ratio;
            }, e.iteration = function (r, s) {
                var i = this.duration() + this._rDelay;
                return arguments.length ? this.totalTime(this._time + (r - 1) * i, s) : this._repeat ? du(this._tTime, i) + 1 : 1;
            }, e.timeScale = function (r) {
                if (!arguments.length) {
                    return this._rts === -Bt ? 0 : this._rts;
                }
                if (this._rts === r) {
                    return this;
                }
                var s = this.parent && this._ts ? _m(this.parent._time, this) : this._tTime;
                return this._rts = +r || 0, this._ts = this._ps || r === -Bt ? 0 : this._rts, xwe(this.totalTime(cd(-this._delay, this._tDur, s), true));
            }, e.paused = function (r) {
                return arguments.length ? (this._ps !== r && (this._ps = r, r ? (this._pTime = this._tTime || Math.max(-this._delay, this.rawTime()), this._ts = this._act = 0) : (mu(), this._ts = this._rts, this.totalTime(this.parent && !this.parent.smoothChildTiming ? this.rawTime() : this._tTime || this._pTime, this.progress() === 1 && (this._tTime -= Bt) && Math.abs(this._zTime) !== Bt))), this) : this._ps;
            }, e.startTime = function (r) {
                if (arguments.length) {
                    this._start = r;
                    var s = this.parent || this._dp;
                    return s && (s._sort || !this.parent) && bi(s, this, r - this._delay), this;
                }
                return this._start;
            }, e.endTime = function (r) {
                return this._start + (Fr(r) ? this.totalDuration() : this.duration()) / Math.abs(this._ts);
            }, e.rawTime = function (r) {
                var s = this.parent || this._dp;
                return s ? r && (!this._ts || this._repeat && this._time && this.totalProgress() < 1) ? this._tTime % (this._dur + this._rDelay) : this._ts ? _m(s.rawTime(r), this) : this._tTime : this._tTime;
            }, e.globalTime = function (r) {
                for (var s = this, i = arguments.length ? r : s.rawTime(); s;) {
                    i = s._start + i / (s._ts || 1);
                    s = s._dp;
                    ;
                }
                return i;
            }, e.repeat = function (r) {
                return arguments.length ? (this._repeat = r === 1e+400 ? -2 : r, Zw(this)) : this._repeat === -2 ? 1e+400 : this._repeat;
            }, e.repeatDelay = function (r) {
                return arguments.length ? (this._rDelay = r, Zw(this)) : this._rDelay;
            }, e.yoyo = function (r) {
                return arguments.length ? (this._yoyo = r, this) : this._yoyo;
            }, e.seek = function (r, s) {
                return this.totalTime(vs(this, r), Fr(s));
            }, e.restart = function (r, s) {
                return this.play().totalTime(r ? -this._delay : 0, Fr(s));
            }, e.play = function (r, s) {
                return r != null && this.seek(r, s), this.reversed(false).paused(false);
            }, e.reverse = function (r, s) {
                return r != null && this.seek(r || this.totalDuration(), s), this.reversed(true).paused(false);
            }, e.pause = function (r, s) {
                return r != null && this.seek(r, s), this.paused(true);
            }, e.resume = function () {
                return this.paused(false);
            }, e.reversed = function (r) {
                return arguments.length ? (!!r !== this.reversed() && this.timeScale(-this._rts || (r ? -Bt : 0)), this) : this._rts < 0;
            }, e.invalidate = function () {
                return this._initted = this._act = 0, this._zTime = -Bt, this;
            }, e.isActive = function () {
                var r = this.parent || this._dp, s = this._start, i;
                return !!(!r || this._ts && this._initted && r.isActive() && (i = r.rawTime(true)) >= s && i < this.endTime(true) - Bt);
            }, e.eventCallback = function (r, s, i) {
                var o = this.vars;
                return arguments.length > 1 ? (s ? (o[r] = s, i && (o[r + 'Params'] = i), r === 'onUpdate' && (this._onUpdate = s)) : delete o[r], this) : o[r];
            }, e.then = function (r) {
                var s = this;
                return new Promise(function (i) {
                    var o = jn(r) ? r : dk, a = function () {
                            var u = s.then;
                            ;
                            jn(o) && (o = o(s)) && (o.then || o === s) && (s.then = u);
                            i(o);
                            ;
                            ;
                        };
                    s._initted && s.totalProgress() === 1 && s._ts >= 0 || !s._tTime && s._ts < 0 ? a() : s._prom = a;
                });
            }, e.kill = function () {
                ph(this);
            }, t;
        }());
    xs(Of.prototype, {
        _time: 0,
        _start: 0,
        _end: 0,
        _tTime: 0,
        _tDur: 0,
        _dirty: 0,
        _repeat: 0,
        _yoyo: false,
        parent: null,
        _initted: false,
        _rDelay: 0,
        _ts: 1,
        _dp: 0,
        ratio: 0,
        _zTime: -Bt,
        _prom: 0,
        _ps: false,
        _rts: 1
    });
    var Mr = function (t) {
        JI(e, t);
        function e(r, s) {
            var i;
            return r === void 0 && (r = {}), i = t.call(this, r) || this, i.labels = {}, i.smoothChildTiming = !!r.smoothChildTiming, i.autoRemoveChildren = !!r.autoRemoveChildren, i._sort = Fr(r.sortChildren), pn && bi(r.parent || pn, eo(i), s), r.reversed && i.reverse(), r.paused && i.paused(true), r.scrollTrigger && gk(eo(i), r.scrollTrigger), i;
        }
        var n = e.prototype;
        return n.to = function (s, i, o) {
            return $h(0, arguments, this), this;
        }, n.from = function (s, i, o) {
            return $h(1, arguments, this), this;
        }, n.fromTo = function (s, i, o, a) {
            return $h(2, arguments, this), this;
        }, n.set = function (s, i, o) {
            return i.duration = 0, i.parent = this, Gp(i).repeatDelay || (i.repeat = 0), i.immediateRender = !!i.immediateRender, new Vn(s, i, vs(this, o), 1), this;
        }, n.call = function (s, i, o) {
            return bi(this, Vn.delayedCall(0, s, i), o);
        }, n.staggerTo = function (s, i, o, a, l, u, f) {
            return o.duration = i, o.stagger = o.stagger || a, o.onComplete = u, o.onCompleteParams = f, o.parent = this, new Vn(s, o, vs(this, l)), this;
        }, n.staggerFrom = function (s, i, o, a, l, u, f) {
            return o.runBackwards = 1, Gp(o).immediateRender = Fr(o.immediateRender), this.staggerTo(s, i, o, a, l, u, f);
        }, n.staggerFromTo = function (s, i, o, a, l, u, f, d) {
            return a.startAt = o, Gp(a).immediateRender = Fr(a.immediateRender), this.staggerTo(s, i, a, l, u, f, d);
        }, n.render = function (s, i, o) {
            var a = this._time, l = this._dirty ? this.totalDuration() : this._tDur, u = this._dur, f = this !== pn && s > l - Bt && s >= 0 ? l : s < Bt ? 0 : s, d = this._zTime < 0 != s < 0 && (this._initted || !u), p, _, v, y, g, b, A, N, I, O, x, M;
            if (f !== this._tTime || o || d) {
                if (a !== this._time && u && (f += this._time - a, s += this._time - a), p = f, I = this._start, N = this._ts, b = !N, d && (u || (a = this._zTime), (s || !i) && (this._zTime = s)), this._repeat) {
                    if (x = this._yoyo, g = u + this._rDelay, this._repeat < -1 && s < 0) {
                        return this.totalTime(g * 100 + s, i, o);
                    }
                    if (p = Ct(f % g), f === l ? (y = this._repeat, p = u) : (y = ~~(f / g), y && y === f / g && (p = u, y--), p > u && (p = u)), O = du(this._tTime, g), !a && this._tTime && O !== y && (O = y), x && y & 1 && (p = u - p, M = 1), y !== O && !this._lock) {
                        var L = x && O & 1, U = L === (x && y & 1);
                        if (y < O && (L = !L), a = L ? 0 : u, this._lock = 1, this.render(a || (M ? 0 : Ct(y * g)), i, !u)._lock = 0, this._tTime = f, !i && this.parent && es(this, 'onRepeat'), this.vars.repeatRefresh && !M && (this.invalidate()._lock = 1), a && a !== this._time || b !== !this._ts || this.vars.onRepeat && !this.parent && !this._act) {
                            return this;
                        }
                        if (u = this._dur, l = this._tDur, U && (this._lock = 2, a = L ? u : -0.0001, this.render(a, true), this.vars.repeatRefresh && !M && this.invalidate()), this._lock = 0, !this._ts && !b) {
                            return this;
                        }
                        kk(this, M);
                    }
                }
                if (this._hasPause && !this._forcing && this._lock < 2 && (A = Dwe(this, Ct(a), Ct(p)), A && (f -= p - (p = A._start))), this._tTime = f, this._time = p, this._act = !N, this._initted || (this._onUpdate = this.vars.onUpdate, this._initted = 1, this._zTime = s, a = 0), !a && p && !i && (es(this, 'onStart'), this._tTime !== f)) {
                    return this;
                }
                if (p >= a && s >= 0) {
                    for (_ = this._first; _;) {
                        if (v = _._next, (_._act || p >= _._start) && _._ts && A !== _) {
                            if (_.parent !== this) {
                                return this.render(s, i, o);
                            }
                            if (_.render(_._ts > 0 ? (p - _._start) * _._ts : (_._dirty ? _.totalDuration() : _._tDur) + (p - _._start) * _._ts, i, o), p !== this._time || !this._ts && !b) {
                                A = 0;
                                v && (f += this._zTime = -Bt);
                                ;
                                break;
                            }
                        }
                        _ = v;
                    }
                } else {
                    _ = this._last;
                    for (var ee = s < 0 ? s : p; _;) {
                        if (v = _._prev, (_._act || ee <= _._end) && _._ts && A !== _) {
                            if (_.parent !== this) {
                                return this.render(s, i, o);
                            }
                            if (_.render(_._ts > 0 ? (ee - _._start) * _._ts : (_._dirty ? _.totalDuration() : _._tDur) + (ee - _._start) * _._ts, i, o), p !== this._time || !this._ts && !b) {
                                A = 0;
                                v && (f += this._zTime = ee ? -Bt : Bt);
                                ;
                                break;
                            }
                        }
                        _ = v;
                    }
                }
                if (A && !i && (this.pause(), A.render(p >= a ? 0 : -Bt)._zTime = p >= a ? 1 : -1, this._ts)) {
                    return this._start = I, q5(this), this.render(s, i, o);
                }
                this._onUpdate && !i && es(this, 'onUpdate', true);
                (f === l && l >= this.totalDuration() || !f && a) && (I === this._start || Math.abs(N) !== Math.abs(this._ts)) && (this._lock || ((s || !u) && (f === l && this._ts > 0 || !f && this._ts < 0) && _a(this, 1), !i && !(s < 0 && !a) && (f || a || !l) && (es(this, f === l && s >= 0 ? 'onComplete' : 'onReverseComplete', true), this._prom && !(f < l && this.timeScale() > 0) && this._prom())));
                ;
            }
            return this;
        }, n.add = function (s, i) {
            var o = this;
            if (po(i) || (i = vs(this, i, s)), !(s instanceof Of)) {
                if (ss(s)) {
                    return s.forEach(function (a) {
                        return o.add(a, i);
                    }), this;
                }
                if (dr(s)) {
                    return this.addLabel(s, i);
                }
                if (jn(s)) {
                    s = Vn.delayedCall(0, s);
                } else {
                    return this;
                }
            }
            return this !== s ? bi(this, s, i) : this;
        }, n.getChildren = function (s, i, o, a) {
            s === void 0 && (s = true);
            i === void 0 && (i = true);
            o === void 0 && (o = true);
            a === void 0 && (a = -100000000);
            ;
            for (var l = [], u = this._first; u;) {
                u._start >= a && (u instanceof Vn ? i && l.push(u) : (o && l.push(u), s && l.push.apply(l, u.getChildren(true, i, o))));
                u = u._next;
                ;
            }
            return l;
        }, n.getById = function (s) {
            for (var i = this.getChildren(1, 1, 1), o = i.length; o--;) {
                if (i[o].vars.id === s) {
                    return i[o];
                }
            }
        }, n.remove = function (s) {
            return dr(s) ? this.removeLabel(s) : jn(s) ? this.killTweensOf(s) : (Pg(this, s), s === this._recent && (this._recent = this._last), Ec(this));
        }, n.totalTime = function (s, i) {
            return arguments.length ? (this._forcing = 1, !this._dp && this._ts && (this._start = Ct(Es.time - (this._ts > 0 ? s / this._ts : (this.totalDuration() - s) / -this._ts))), t.prototype.totalTime.call(this, s, i), this._forcing = 0, this) : this._tTime;
        }, n.addLabel = function (s, i) {
            return this.labels[s] = vs(this, i), this;
        }, n.removeLabel = function (s) {
            return delete this.labels[s], this;
        }, n.addPause = function (s, i, o) {
            var a = Vn.delayedCall(0, i || hu, o);
            return a.data = 'isPause', this._hasPause = 1, bi(this, a, vs(this, s));
        }, n.removePause = function (s) {
            var i = this._first;
            for (s = vs(this, s); i;) {
                i._start === s && i.data === 'isPause' && _a(i);
                i = i._next;
                ;
            }
        }, n.killTweensOf = function (s, i, o) {
            for (var a = this.getTweensOf(s, o), l = a.length; l--;) {
                zo !== a[l] && a[l].kill(s, i);
            }
            return this;
        }, n.getTweensOf = function (s, i) {
            for (var o = [], a = Ss(s), l = this._first, u = po(i), f; l;) {
                l instanceof Vn ? Cwe(l._targets, a) && (u ? (!zo || l._initted && l._ts) && l.globalTime(0) <= i && l.globalTime(l.totalDuration()) > i : !i || l.isActive()) && o.push(l) : (f = l.getTweensOf(a, i)).length && o.push.apply(o, f);
                l = l._next;
                ;
            }
            return o;
        }, n.tweenTo = function (s, i) {
            i = i || {};
            var o = this, a = vs(o, s), l = i, u = l.startAt, f = l.onStart, d = l.onStartParams, p = l.immediateRender, _, v = Vn.to(o, xs({
                    ease: i.ease || 'none',
                    lazy: false,
                    immediateRender: false,
                    time: a,
                    overwrite: 'auto',
                    duration: i.duration || Math.abs((a - (u && 'time' in u ? u.time : o._time)) / o.timeScale()) || Bt,
                    onStart: function () {
                        if (o.pause(), !_) {
                            var g = i.duration || Math.abs((a - (u && 'time' in u ? u.time : o._time)) / o.timeScale());
                            v._dur !== g && pu(v, g, 0, 1).render(v._time, true, true);
                            _ = 1;
                            ;
                        }
                        f && f.apply(v, d || []);
                    }
                }, i));
            return p ? v.render(0) : v;
        }, n.tweenFromTo = function (s, i, o) {
            return this.tweenTo(i, xs({ startAt: { time: vs(this, s) } }, o));
        }, n.recent = function () {
            return this._recent;
        }, n.nextLabel = function (s) {
            return s === void 0 && (s = this._time), Xw(this, vs(this, s));
        }, n.previousLabel = function (s) {
            return s === void 0 && (s = this._time), Xw(this, vs(this, s), 1);
        }, n.currentLabel = function (s) {
            return arguments.length ? this.seek(s, true) : this.previousLabel(this._time + Bt);
        }, n.shiftChildren = function (s, i, o) {
            o === void 0 && (o = 0);
            for (var a = this._first, l = this.labels, u; a;) {
                if (a._start >= o) {
                    a._start += s;
                    a._end += s;
                }
                a = a._next;
                ;
            }
            if (i) {
                for (u in l)
                    l[u] >= o && (l[u] += s);
            }
            return Ec(this);
        }, n.invalidate = function () {
            var s = this._first;
            for (this._lock = 0; s;) {
                s.invalidate();
                s = s._next;
                ;
            }
            return t.prototype.invalidate.call(this);
        }, n.clear = function (s) {
            s === void 0 && (s = true);
            for (var i = this._first, o; i;) {
                o = i._next;
                this.remove(i);
                i = o;
                ;
            }
            return this._dp && (this._time = this._tTime = this._pTime = 0), s && (this.labels = {}), Ec(this);
        }, n.totalDuration = function (s) {
            var i = 0, o = this, a = o._last, l = 100000000, u, f, d;
            if (arguments.length) {
                return o.timeScale((o._repeat < 0 ? o.duration() : o.totalDuration()) / (o.reversed() ? -s : s));
            }
            if (o._dirty) {
                for (d = o.parent; a;) {
                    u = a._prev;
                    a._dirty && a.totalDuration();
                    f = a._start;
                    f > l && o._sort && a._ts && !o._lock ? (o._lock = 1, bi(o, a, f - a._delay, 1)._lock = 0) : l = f;
                    f < 0 && a._ts && (i -= f, (!d && !o._dp || d && d.smoothChildTiming) && (o._start += f / o._ts, o._time -= f, o._tTime -= f), o.shiftChildren(-f, false, -null), l = 0);
                    a._end > i && a._ts && (i = a._end);
                    a = u;
                    ;
                }
                pu(o, o === pn && o._time > i ? o._time : i, 1, 1);
                ;
                ;
            }
            return o._tDur;
        }, e.updateRoot = function (s) {
            if (pn._ts && (hk(pn, _m(s, pn)), lk = Es.frame), Es.frame >= zw) {
                zw += $r.autoSleep || 120;
                var i = pn._first;
                if ((!i || !i._ts) && $r.autoSleep && Es._listeners.length < 2) {
                    for (; i && !i._ts;) {
                        i = i._next;
                    }
                    i || Es.sleep();
                }
            }
        }, e;
    }(Of);
    xs(Mr.prototype, {
        _lock: 0,
        _hasPause: 0,
        _forcing: 0
    });
    var Jwe = function (e, n, r, s, i, o, a) {
            var l = new Ur(this._pt, e, n, 0, 1, $k, null, i), u = 0, f = 0, d, p, _, v, y, g, b, A;
            for (l.b = r, l.e = s, r += '', s += '', (b = ~s.indexOf('random(')) && (s = Rg(s)), o && (A = [
                    r,
                    s
                ], o(A, e, n), r = A[0], s = A[1]), p = r.match(/[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi) || []; d = /[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi.exec(s);) {
                v = d[0];
                y = s.substring(u, d.index);
                _ ? _ = (_ + 1) % 5 : y.substr(-5) === 'rgba(' && (_ = 1);
                if (v !== p[f++]) {
                    g = parseFloat(p[f - 1]) || 0;
                    l._pt = {
                        _next: l._pt,
                        p: y || f === 1 ? y : ',',
                        s: g,
                        c: v.charAt(1) === '=' ? parseFloat(v.substr(2)) * (v.charAt(0) === '-' ? -1 : 1) : parseFloat(v) - g,
                        m: _ && _ < 4 ? Math.round : 0
                    };
                    u = /[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi.lastIndex;
                }
                ;
            }
            return l.c = u < s.length ? s.substring(u, s.length) : '', l.fp = a, (/[+-]=-?[.\d]+/.test(s) || b) && (l.e = 0), this._pt = l, l;
        }, V5 = function (e, n, r, s, i, o, a, l, u) {
            jn(s) && (s = s(i || 0, e, o));
            var f = e[n], d = r !== 'get' ? r : jn(f) ? u ? e[n.indexOf('set') || !jn(e['get' + n.substr(3)]) ? n : 'get' + n.substr(3)](u) : e[n]() : f, p = jn(f) ? u ? s8e : Mk : G5, _;
            if (dr(s) && (~s.indexOf('random(') && (s = Rg(s)), s.charAt(1) === '=' && (_ = parseFloat(d) + parseFloat(s.substr(2)) * (s.charAt(0) === '-' ? -1 : 1) + (ts(d) || 0), (_ || _ === 0) && (s = _))), d !== s) {
                return !isNaN(d * s) && s !== '' ? (_ = new Ur(this._pt, e, n, +d || 0, s - (d || 0), typeof f == 'boolean' ? o8e : Dk, 0, p), u && (_.fp = u), a && _.modifier(a, this, e), this._pt = _) : (!f && !(n in e) && L5(n, s), Jwe.call(this, e, n, d, s, p, l || $r.stringFilter, u));
            }
        }, e8e = function (e, n, r, s, i) {
            if (jn(e) && (e = Lh(e, i, n, r, s)), !mo(e) || e.style && e.nodeType || ss(e) || nk(e)) {
                return dr(e) ? Lh(e, i, n, r, s) : e;
            }
            var o = { a: Lh(e[a], i, n, r, s) }, a;
            for (a in e);
            return o;
        }, Pk = function (e, n, r, s, i, o) {
            var a, l, u, f;
            if (Xr[e] && (a = new Xr[e]()).init(i, a.rawVars ? n[e] : e8e(n[e], s, i, o, r), r, s, o) !== false && (r._pt = l = new Ur(r._pt, i, e, 0, 1, a.render, a, 0, a.priority), r !== vl)) {
                for (u = r._ptLookup[r._targets.indexOf(i)], f = a._props.length; f--;) {
                    u[a._props[f]] = l;
                }
            }
            return a;
        }, zo, t8e = function t(e, n) {
            var r = e.vars, s = r.ease, i = r.startAt, o = r.immediateRender, a = r.lazy, l = r.onUpdate, u = r.onUpdateParams, f = r.callbackScope, d = r.runBackwards, p = r.yoyoEase, _ = r.keyframes, v = r.autoRevert, y = e._dur, g = e._startAt, b = e._targets, A = e.parent, N = A && A.data === 'nested' ? A.parent._targets : b, I = e._overwrite === 'auto' && !M5, O = e.timeline, x, M, L, U, ee, ae, Z, fe, ge, Y, Q, ue, _e;
            if (O && (!_ || !s) && (s = 'none'), e._ease = Fl(s, uu.ease), e._yEase = p ? Ik(Fl(p === true ? s : p, uu.ease)) : 0, p && e._yoyo && !e._repeat && (p = e._yEase, e._yEase = e._ease, e._ease = p), e._from = !O && !!r.runBackwards, !O) {
                if (fe = b[0] ? bc(b[0]).harness : 0, ue = fe && r[fe.prop], x = $2(r, F5), g && g.render(-1, true).kill(), i) {
                    if (_a(e._startAt = Vn.set(b, xs({
                            data: 'isStart',
                            overwrite: false,
                            parent: A,
                            immediateRender: true,
                            lazy: Fr(a),
                            startAt: null,
                            delay: 0,
                            onUpdate: l,
                            onUpdateParams: u,
                            callbackScope: f,
                            stagger: 0
                        }, i))), n < 0 && !o && !v && e._startAt.render(-1, true), o) {
                        if (n > 0 && !v && (e._startAt = 0), y && n <= 0) {
                            n && (e._zTime = n);
                            return;
                        }
                    } else {
                        v === false && (e._startAt = 0);
                    }
                } else {
                    if (d && y) {
                        if (g) {
                            !v && (e._startAt = 0);
                        } else {
                            if (n && (o = false), L = xs({
                                    overwrite: false,
                                    data: 'isFromStart',
                                    lazy: o && Fr(a),
                                    immediateRender: o,
                                    stagger: 0,
                                    parent: A
                                }, x), ue && (L[fe.prop] = ue), _a(e._startAt = Vn.set(b, L)), n < 0 && e._startAt.render(-1, true), !o) {
                                t(e._startAt, Bt);
                            } else {
                                if (!n) {
                                    return;
                                }
                            }
                        }
                    }
                }
                for (e._pt = 0, a = y && Fr(a) || a && !y, M = 0; M < b.length; M++) {
                    if (ee = b[M], Z = ee._gsap || B5(b)[M]._gsap, e._ptLookup[M] = Y = {}, D2[Z.id] && sa.length && gm(), Q = N === b ? M : N.indexOf(ee), fe && (ge = new fe()).init(ee, ue || x, e, Q, N) !== false && (e._pt = U = new Ur(e._pt, ee, ge.name, 0, 1, ge.render, ge, 0, ge.priority), ge._props.forEach(function (Oe) {
                            Y[Oe] = U;
                        }), ge.priority && (ae = 1)), !fe || ue) {
                        for (L in x)
                            Xr[L] && (ge = Pk(L, x, e, Q, ee, N)) ? ge.priority && (ae = 1) : Y[L] = U = V5.call(e, ee, L, 'get', x[L], Q, N, 0, r.stringFilter);
                    }
                    e._op && e._op[M] && e.kill(ee, e._op[M]);
                    I && e._pt && (zo = e, pn.killTweensOf(ee, Y, e.globalTime(0)), _e = !e.parent, zo = 0);
                    e._pt && a && (D2[Z.id] = 1);
                    ;
                }
                ae && Lk(e);
                e._onInit && e._onInit(e);
                ;
            }
            ;
            ;
            ;
        }, n8e = function (e, n) {
            var r = e[0] ? bc(e[0]).harness : 0, s = r && r.aliases, i, o, a, l;
            if (!s) {
                return n;
            }
            i = fu({}, n);
            for (o in s)
                if (o in i) {
                    for (l = s[o].split(','), a = l.length; a--;) {
                        i[l[a]] = i[o];
                    }
                }
            return i;
        }, Lh = function (e, n, r, s, i) {
            return jn(e) ? e.call(n, r, s, i) : dr(e) && ~e.indexOf('random(') ? Rg(e) : e;
        }, Rk = U5 + 'repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase', r8e = (Rk + ',id,stagger,delay,duration,paused,scrollTrigger').split(','), Vn = function (t) {
            JI(e, t);
            function e(r, s, i, o) {
                var a;
                if (typeof s == 'number') {
                    i.duration = s;
                    s = i;
                    i = null;
                }
                a = t.call(this, o ? s : Gp(s)) || this;
                ;
                var l = a.vars, u = l.duration, f = l.delay, d = l.immediateRender, p = l.stagger, _ = l.overwrite, v = l.keyframes, y = l.defaults, g = l.scrollTrigger, b = l.yoyoEase, A = s.parent || pn, N = (ss(r) || nk(r) ? po(r[0]) : 'length' in s) ? [r] : Ss(r), I, O, x, M, L, U, ee, ae;
                if (a._targets = N.length ? B5(N) : mm('GSAP target ' + r + ' not found. https://greensock.com', !$r.nullTargetWarn) || [], a._ptLookup = [], a._overwrite = _, v || p || Hw(u) || Hw(f)) {
                    if (s = a.vars, I = a.timeline = new Mr({
                            data: 'nested',
                            defaults: y || {}
                        }), I.kill(), I.parent = I._dp = eo(a), I._start = 0, v) {
                        xs(I.vars.defaults, { ease: 'none' });
                        p ? N.forEach(function (Z, fe) {
                            return v.forEach(function (ge, Y) {
                                return I.to(Z, ge, Y ? '>' : fe * p);
                            });
                        }) : v.forEach(function (Z) {
                            return I.to(N, Z, '>');
                        });
                        ;
                    } else {
                        if (M = N.length, ee = p ? bk(p) : hu, mo(p)) {
                            for (L in p)
                                ~Rk.indexOf(L) && (ae || (ae = {}), ae[L] = p[L]);
                        }
                        for (O = 0; O < M; O++) {
                            x = {};
                            for (L in s)
                                r8e.indexOf(L) < 0 && (x[L] = s[L]);
                            x.stagger = 0;
                            b && (x.yoyoEase = b);
                            ae && fu(x, ae);
                            U = N[O];
                            x.duration = +Lh(u, eo(a), O, U, N);
                            x.delay = (+Lh(f, eo(a), O, U, N) || 0) - a._delay;
                            !p && M === 1 && x.delay && (a._delay = f = x.delay, a._start += f, x.delay = 0);
                            I.to(U, x, ee(O, U, N));
                            ;
                        }
                        I.duration() ? u = f = 0 : a.timeline = 0;
                    }
                    u || a.duration(u = I.duration());
                } else {
                    ;
                }
                return _ === true && !M5 && (zo = eo(a), pn.killTweensOf(N), zo = 0), bi(A, eo(a), i), s.reversed && a.reverse(), s.paused && a.paused(true), (d || !u && !v && a._start === Ct(A._time) && Fr(d) && Pwe(eo(a)) && A.data !== 'nested') && (a._tTime = -Bt, a.render(Math.max(0, -f))), g && gk(eo(a), g), a;
            }
            var n = e.prototype;
            return n.render = function (s, i, o) {
                var a = this._time, l = this._tDur, u = this._dur, f = s > l - Bt && s >= 0 ? l : s < Bt ? 0 : s, d, p, _, v, y, g, b, A, N;
                if (!u) {
                    Mwe(this, s, i, o);
                } else {
                    if (f !== this._tTime || !s || o || !this._initted && this._tTime || this._startAt && this._zTime < 0 != s < 0) {
                        if (d = f, A = this.timeline, this._repeat) {
                            if (v = u + this._rDelay, this._repeat < -1 && s < 0) {
                                return this.totalTime(v * 100 + s, i, o);
                            }
                            if (d = Ct(f % v), f === l ? (_ = this._repeat, d = u) : (_ = ~~(f / v), _ && _ === f / v && (d = u, _--), d > u && (d = u)), g = this._yoyo && _ & 1, g && (N = this._yEase, d = u - d), y = du(this._tTime, v), d === a && !o && this._initted) {
                                return this;
                            }
                            if (_ !== y) {
                                A && this._yEase && kk(A, g);
                                this.vars.repeatRefresh && !g && !this._lock && (this._lock = o = 1, this.render(Ct(v * _), true).invalidate()._lock = 0);
                            }
                        }
                        if (!this._initted) {
                            if (_k(this, s < 0 ? s : d, o, i)) {
                                return this._tTime = 0, this;
                            }
                            if (u !== this._dur) {
                                return this.render(s, i, o);
                            }
                        }
                        if (this._tTime = f, this._time = d, !this._act && this._ts && (this._act = 1, this._lazy = 0), this.ratio = b = (N || this._ease)(d / u), this._from && (this.ratio = b = 1 - b), d && !a && !i && es(this, 'onStart'), d && !a && !i && (es(this, 'onStart'), this._tTime !== f)) {
                            return this;
                        }
                        for (p = this._pt; p;) {
                            p.r(b, p.d);
                            p = p._next;
                            ;
                        }
                        A && A.render(s < 0 ? s : !d && g ? -Bt : A._dur * b, i, o) || this._startAt && (this._zTime = s);
                        this._onUpdate && !i && (s < 0 && this._startAt && this._startAt.render(s, true, o), es(this, 'onUpdate'));
                        this._repeat && _ !== y && this.vars.onRepeat && !i && this.parent && es(this, 'onRepeat');
                        (f === this._tDur || !f) && this._tTime === f && (s < 0 && this._startAt && !this._onUpdate && this._startAt.render(s, true, true), (s || !u) && (f === this._tDur && this._ts > 0 || !f && this._ts < 0) && _a(this, 1), !i && !(s < 0 && !a) && (f || a) && (es(this, f === l ? 'onComplete' : 'onReverseComplete', true), this._prom && !(f < l && this.timeScale() > 0) && this._prom()));
                        ;
                    }
                }
                return this;
            }, n.targets = function () {
                return this._targets;
            }, n.invalidate = function () {
                return this._pt = this._op = this._startAt = this._onUpdate = this._lazy = this.ratio = 0, this._ptLookup = [], this.timeline && this.timeline.invalidate(), t.prototype.invalidate.call(this);
            }, n.kill = function (s, i) {
                if (i === void 0 && (i = 'all'), !s && (!i || i === 'all')) {
                    return this._lazy = this._pt = 0, this.parent ? ph(this) : this;
                }
                if (this.timeline) {
                    var o = this.timeline.totalDuration();
                    return this.timeline.killTweensOf(s, i, zo && zo.vars.overwrite !== true)._first || ph(this), this.parent && o !== this.timeline.totalDuration() && pu(this, this._dur * this.timeline._tDur / o, 0, 1), this;
                }
                var a = this._targets, l = s ? Ss(s) : a, u = this._ptLookup, f = this._pt, d, p, _, v, y, g, b;
                if ((!i || i === 'all') && kwe(a, l)) {
                    return i === 'all' && (this._pt = 0), ph(this);
                }
                for (d = this._op = this._op || [], i !== 'all' && (dr(i) && (y = {}, is(i, function (A) {
                        return y[A] = 1;
                    }), i = y), i = n8e(a, i)), b = a.length; b--;) {
                    if (~l.indexOf(a[b])) {
                        p = u[b];
                        i === 'all' ? (d[b] = i, v = p, _ = {}) : (_ = d[b] = d[b] || {}, v = i);
                        ;
                        for (y in v)
                            g = p && p[y], g && ((!('kill' in g.d) || g.d.kill(y) === true) && Pg(this, g, '_pt'), delete p[y]), _ !== 'all' && (_[y] = 1);
                    }
                }
                return this._initted && !this._pt && f && ph(this), this;
            }, e.to = function (s, i) {
                return new e(s, i, arguments[2]);
            }, e.from = function (s, i) {
                return $h(1, arguments);
            }, e.delayedCall = function (s, i, o, a) {
                return new e(i, 0, {
                    immediateRender: false,
                    lazy: false,
                    overwrite: false,
                    delay: s,
                    onComplete: i,
                    onReverseComplete: i,
                    onCompleteParams: o,
                    onReverseCompleteParams: o,
                    callbackScope: a
                });
            }, e.fromTo = function (s, i, o) {
                return $h(2, arguments);
            }, e.set = function (s, i) {
                return i.duration = 0, i.repeatDelay || (i.repeat = 0), new e(s, i);
            }, e.killTweensOf = function (s, i, o) {
                return pn.killTweensOf(s, i, o);
            }, e;
        }(Of);
    xs(Vn.prototype, {
        _targets: [],
        _lazy: 0,
        _startAt: 0,
        _op: 0,
        _onInit: 0
    });
    is('staggerTo,staggerFrom,staggerFromTo', function (t) {
        Vn[t] = function () {
            var e = new Mr(), n = F2.call(arguments, 0);
            return n.splice(t === 'staggerFromTo' ? 5 : 4, 0, 0), e[t].apply(e, n);
        };
    });
    var G5 = function (e, n, r) {
            return e[n] = r;
        }, Mk = function (e, n, r) {
            return e[n](r);
        }, s8e = function (e, n, r, s) {
            return e[n](s.fp, r);
        }, i8e = function (e, n, r) {
            return e.setAttribute(n, r);
        }, j5 = function (e, n) {
            return jn(e[n]) ? Mk : D5(e[n]) && e.setAttribute ? i8e : G5;
        }, Dk = function (e, n) {
            return n.set(n.t, n.p, Math.round((n.s + n.c * e) * 1000000) / 1000000, n);
        }, o8e = function (e, n) {
            return n.set(n.t, n.p, !!(n.s + n.c * e), n);
        }, $k = function (e, n) {
            var r = n._pt, s = '';
            if (!e && n.b) {
                s = n.b;
            } else {
                if (e === 1 && n.e) {
                    s = n.e;
                } else {
                    for (; r;) {
                        s = r.p + (r.m ? r.m(r.s + r.c * e) : Math.round((r.s + r.c * e) * 10000) / 10000) + s;
                        r = r._next;
                        ;
                    }
                    s += n.c;
                }
            }
            n.set(n.t, n.p, s, n);
        }, W5 = function (e, n) {
            for (var r = n._pt; r;) {
                r.r(e, r.d);
                r = r._next;
                ;
            }
        }, a8e = function (e, n, r, s) {
            for (var i = this._pt, o; i;) {
                o = i._next;
                i.p === s && i.modifier(e, n, r);
                i = o;
                ;
            }
        }, c8e = function (e) {
            for (var n = this._pt, r, s; n;) {
                s = n._next;
                n.p === e && !n.op || n.op === e ? Pg(this, n, '_pt') : n.dep || (r = 1);
                n = s;
                ;
            }
            return !r;
        }, l8e = function (e, n, r, s) {
            s.mSet(e, n, s.m.call(s.tween, r, s.mt), s);
        }, Lk = function (e) {
            for (var n = e._pt, r, s, i, o; n;) {
                for (r = n._next, s = i; s && s.pr > n.pr;) {
                    s = s._next;
                }
                (n._prev = s ? s._prev : o) ? n._prev._next = n : i = n;
                (n._next = s) ? s._prev = n : o = n;
                n = r;
                ;
            }
            ;
        }, Ur = (function () {
            function t(n, r, s, i, o, a, l, u, f) {
                this.t = r;
                this.s = i;
                this.c = o;
                this.p = s;
                this.r = a || Dk;
                this.d = l || this;
                this.set = u || G5;
                this.pr = f || 0;
                this._next = n;
                n && (n._prev = this);
                ;
            }
            var e = t.prototype;
            return e.modifier = function (r, s, i) {
                this.mSet = this.mSet || this.set;
                this.set = l8e;
                this.m = r;
                this.mt = i;
                this.tween = s;
                ;
            }, t;
        }());
    is(U5 + 'parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger', function (t) {
        return F5[t] = 1;
    });
    ;
    ;
    pn = new Mr({
        sortChildren: false,
        defaults: uu,
        autoRemoveChildren: true,
        id: 'root',
        smoothChildTiming: true
    });
    $r.stringFilter = Ck;
    var vm = {
        registerPlugin: function () {
            for (var e = arguments.length, n = new Array(e), r = 0; r < e; r++) {
                ;
            }
            n.forEach(function (s) {
                return Hwe(s);
            });
        },
        timeline: function (e) {
            return new Mr(e);
        },
        getTweensOf: function (e, n) {
            return pn.getTweensOf(e, n);
        },
        getProperty: function (e, n, r, s) {
            dr(e) && (e = Ss(e)[0]);
            var i = bc(e || {}).get, o = r ? dk : fk;
            return r === 'native' && (r = ''), e && (n ? o((Xr[n] && Xr[n].get || i)(e, n, r, s)) : function (a, l, u) {
                return o((Xr[a] && Xr[a].get || i)(e, a, l, u));
            });
        },
        quickSetter: function (e, n, r) {
            if (e = Ss(e), e.length > 1) {
                var s = e.map(function (f) {
                        return Pi.quickSetter(f, n, r);
                    }), i = s.length;
                return function (f) {
                    for (var d = i; d--;) {
                        s[d](f);
                    }
                };
            }
            e = e[0] || {};
            var o = Xr[n], a = bc(e), l = a.harness && (a.harness.aliases || {})[n] || n, u = o ? function (f) {
                    var d = new o();
                    vl._pt = 0;
                    d.init(e, r ? f + r : f, vl, 0, [e]);
                    d.render(1, d);
                    vl._pt && W5(1, vl);
                    ;
                } : a.set(e, l);
            return o ? u : function (f) {
                return u(e, l, r ? f + r : f, a, 1);
            };
        },
        isTweening: function (e) {
            return pn.getTweensOf(e, true).length > 0;
        },
        defaults: function (e) {
            return e && e.ease && (e.ease = Fl(e.ease, uu.ease)), Yw(uu, e || {});
        },
        config: function (e) {
            return Yw($r, e || {});
        },
        registerEffect: function (e) {
            var n = e.name, r = e.effect, s = e.plugins, i = e.defaults, o = e.extendTimeline;
            (s || '').split(',').forEach(function (a) {
                return a && !Xr[a] && !as[a] && mm(n + ' effect requires ' + a + ' plugin.');
            });
            ;
            o && (Mr.prototype[n] = function (a, l, u) {
                return this.add(zy[n](a, mo(l) ? l : (u = l) && {}, this), u);
            });
            ;
        },
        registerEase: function (e, n) {
            ;
        },
        parseEase: function (e, n) {
            return arguments.length ? Fl(e, n) : xt;
        },
        getById: function (e) {
            return pn.getById(e);
        },
        exportRoot: function (e, n) {
            e === void 0 && (e = {});
            var r = new Mr(e), s, i;
            for (r.smoothChildTiming = Fr(e.smoothChildTiming), pn.remove(r), r._dp = 0, r._time = r._tTime = pn._time, s = pn._first; s;) {
                i = s._next;
                (n || !(!s._dur && s instanceof Vn && s.vars.onComplete === s._targets[0])) && bi(r, s, s._start - s._delay);
                s = i;
                ;
            }
            return bi(pn, r, 0), r;
        },
        utils: {
            wrap: Gwe,
            wrapYoyo: jwe,
            distribute: bk,
            random: Tk,
            snap: Ek,
            normalize: Vwe,
            getUnit: ts,
            clamp: Lwe,
            splitColor: Ok,
            toArray: Ss,
            selector: Uwe,
            mapRange: wk,
            pipe: Bwe,
            unitize: qwe,
            interpolate: Wwe,
            shuffle: vk
        },
        install: ak,
        effects: zy,
        ticker: Es,
        updateRoot: Mr.updateRoot,
        plugins: Xr,
        globalTimeline: pn,
        core: {
            PropTween: Ur,
            globals: ck,
            Tween: Vn,
            Timeline: Mr,
            Animation: Of,
            getCache: bc,
            _removeLinkedListItem: Pg,
            suppressOverwrites: function (e) {
                return M5 = e;
            }
        }
    };
    is('to,from,fromTo,delayedCall,set,killTweensOf', function (t) {
        return vm[t] = Vn[t];
    });
    Es.add(Mr.updateRoot);
    vl = vm.to({}, { duration: 0 });
    var u8e = function (e, n) {
            for (var r = e._pt; r && r.p !== n && r.op !== n && r.fp !== n;) {
                r = r._next;
            }
            return r;
        }, h8e = function (e, n) {
            var r = e._targets, s, i, o;
            for (s in n)
                for (i = r.length; i--;) {
                    o = e._ptLookup[i][s];
                    o && (o = o.d) && (o._pt && (o = u8e(o, s)), o && o.modifier && o.modifier(n[s], e, r[i], s));
                    ;
                }
        }, Xy = function (e, n) {
            return {
                name: e,
                rawVars: 1,
                init: function (s, i, o) {
                    ;
                }
            };
        }, Pi = vm.registerPlugin({
            name: 'attr',
            init: function (e, n, r, s, i) {
                var o, a;
                for (o in n)
                    a = this.add(e, 'setAttribute', (e.getAttribute(o) || 0) + '', n[o], s, i, 0, 0, o), a && (a.op = o), this._props.push(o);
            }
        }, {
            name: 'endArray',
            init: function (e, n) {
                for (var r = n.length; r--;) {
                    this.add(e, r, e[r] || 0, n[r]);
                }
            }
        }, Xy('roundProps', U2), Xy('modifiers'), Xy('snap', Ek)) || vm;
    Vn.version = Mr.version = Pi.version = '3.7.0';
    ok = 1;
    tk() && mu();
    xt.Power0;
    xt.Power1;
    xt.Power2;
    xt.Power3;
    xt.Power4;
    xt.Linear;
    xt.Quad;
    xt.Cubic;
    xt.Quart;
    xt.Quint;
    xt.Strong;
    xt.Elastic;
    xt.Back;
    xt.SteppedEase;
    xt.Bounce;
    xt.Sine;
    xt.Expo;
    xt.Circ;
    var Jw, Yo, Ul, H5, hc, e8, f8e = function () {
            return typeof window < 'u';
        }, ya = { i: 1 }, ec = 180 / Math.PI, Bl = Math.PI / 180, al = Math.atan2, Uk = function (e, n) {
            return n.set(n.t, n.p, Math.round((n.s + n.c * e) * 10000) / 10000 + n.u, n);
        }, m8e = function (e, n) {
            return n.set(n.t, n.p, e === 1 ? n.e : Math.round((n.s + n.c * e) * 10000) / 10000 + n.u, n);
        }, g8e = function (e, n) {
            return n.set(n.t, n.p, e ? Math.round((n.s + n.c * e) * 10000) / 10000 + n.u : n.b, n);
        }, _8e = function (e, n) {
            var r = n.s + n.c * e;
            n.set(n.t, n.p, ~~(r + (r < 0 ? -0.5 : 0.5)) + n.u, n);
        }, Bk = function (e, n) {
            return n.set(n.t, n.p, e ? n.e : n.b, n);
        }, qk = function (e, n) {
            return n.set(n.t, n.p, e !== 1 ? n.b : n.e, n);
        }, y8e = function (e, n, r) {
            return e.style[n] = r;
        }, v8e = function (e, n, r) {
            return e.style.setProperty(n, r);
        }, b8e = function (e, n, r) {
            return e._gsap[n] = r;
        }, E8e = function (e, n, r) {
            return e._gsap.scaleX = e._gsap.scaleY = r;
        }, T8e = function (e, n, r, s, i) {
            var o = e._gsap;
            ;
            o.renderTransform(i, o);
            ;
        }, S8e = function (e, n, r, s, i) {
            var o = e._gsap;
            ;
            o.renderTransform(i, o);
            ;
        }, Kn = 'transform', va = Kn + 'Origin', Vk, B2 = function (e, n) {
            var r = Yo.createElementNS ? Yo.createElementNS((n || 'http://www.w3.org/1999/xhtml').replace(/^https/, 'http'), e) : Yo.createElement(e);
            return r.style ? r : Yo.createElement(e);
        }, co = function t(e, n, r) {
            var s = getComputedStyle(e);
            return s[n] || s.getPropertyValue(n.replace(/([A-Z])/g, '-$1').toLowerCase()) || s.getPropertyValue(n) || !r && t(e, gu(n) || n, 1) || '';
        }, n8 = 'O,Moz,ms,Ms,Webkit'.split(','), gu = function (e, n, r) {
            var s = n || hc, i = s.style, o = 5;
            if (e in i && !r) {
                return e;
            }
            for (e = e.charAt(0).toUpperCase() + e.substr(1); o-- && !(n8[o] + e in i);) {
                ;
            }
            return o < 0 ? null : (o === 3 ? 'ms' : o >= 0 ? n8[o] : '') + e;
        }, q2 = function () {
            f8e() && window.document && (Jw = window, Yo = Jw.document, Ul = Yo.documentElement, hc = B2('div') || { style: {} }, B2('div'), Kn = gu(Kn), va = Kn + 'Origin', hc.style.cssText = 'border-width:0;line-height:0;position:absolute;padding:0', Vk = !!gu('perspective'), H5 = 1);
        }, Qy = function t(e) {
            var n = B2('svg', this.ownerSVGElement && this.ownerSVGElement.getAttribute('xmlns') || 'http://www.w3.org/2000/svg'), r = this.parentNode, s = this.nextSibling, i = this.style.cssText, o;
            if (Ul.appendChild(n), n.appendChild(this), this.style.display = 'block', e) {
                try {
                    o = this.getBBox();
                    this._gsapBBox = this.getBBox;
                    this.getBBox = t;
                    ;
                } catch {
                }
            } else {
                this._gsapBBox && (o = this._gsapBBox());
            }
            return r && (s ? r.insertBefore(this, s) : r.appendChild(this)), Ul.removeChild(n), this.style.cssText = i, o;
        }, r8 = function (e, n) {
            for (var r = n.length; r--;) {
                if (e.hasAttribute(n[r])) {
                    return e.getAttribute(n[r]);
                }
            }
        }, Gk = function (e) {
            var n;
            try {
                n = e.getBBox();
            } catch {
                n = Qy.call(e, true);
            }
            return n && (n.width || n.height) || e.getBBox === Qy || (n = Qy.call(e, true)), n && !n.width && !n.x && !n.y ? {
                x: +r8(e, [
                    'x',
                    'cx',
                    'x1'
                ]) || 0,
                y: +r8(e, [
                    'y',
                    'cy',
                    'y1'
                ]) || 0,
                width: 0,
                height: 0
            } : n;
        }, jk = function (e) {
            return !!(e.getCTM && (!e.parentNode || e.ownerSVGElement) && Gk(e));
        }, Af = function (e, n) {
            if (n) {
                var r = e.style;
                n in ya && n !== va && (n = Kn);
                r.removeProperty ? ((n.substr(0, 2) === 'ms' || n.substr(0, 6) === 'webkit') && (n = '-' + n), r.removeProperty(n.replace(/([A-Z])/g, '-$1').toLowerCase())) : r.removeAttribute(n);
                ;
            }
        }, Zo = function (e, n, r, s, i, o) {
            var a = new Ur(e._pt, n, r, 0, 1, o ? qk : Bk);
            return e._pt = a, a.b = s, a.e = i, e._props.push(r), a;
        }, ba = function t(e, n, r, s) {
            var i = parseFloat(r) || 0, o = (r + '').trim().substr((i + '').length) || 'px', a = hc.style, l = /(?:left|right|width|margin|padding|x)/i.test(n), u = e.tagName.toLowerCase() === 'svg', f = (u ? 'client' : 'offset') + (l ? 'Width' : 'Height'), d = 100, p = s === 'px', _ = s === '%', v, y, g, b;
            return s === o || !i || s8[s] || s8[o] ? i : (o !== 'px' && !p && (i = t(e, n, r, 'px')), b = e.getCTM && jk(e), (_ || o === '%') && (ya[n] || ~n.indexOf('adius')) ? (v = b ? e.getBBox()[l ? 'width' : 'height'] : e[f], Ct(_ ? i / v * d : i / 100 * v)) : (a[l ? 'width' : 'height'] = d + (p ? o : s), y = ~n.indexOf('adius') || s === 'em' && e.appendChild && !u ? e : e.parentNode, b && (y = (e.ownerSVGElement || {}).parentNode), (!y || y === Yo || !y.appendChild) && (y = Yo.body), g = y._gsap, g && _ && g.width && l && g.time === Es.time ? Ct(i / g.width * d) : ((_ || o === '%') && (a.position = co(e, 'position')), y === e && (a.position = 'static'), y.appendChild(hc), v = hc[f], y.removeChild(hc), a.position = 'absolute', l && _ && (g = bc(y), g.time = Es.time, g.width = y[f]), Ct(p ? v * i / d : v && i ? d / v * i : 0))));
        }, hl = function (e, n, r, s) {
            var i;
            return H5 || q2(), n in Ko && n !== 'transform' && (n = Ko[n], ~n.indexOf(',') && (n = n.split(',')[0])), ya[n] && n !== 'transform' ? (i = If(e, s), i = n !== 'transformOrigin' ? i[n] : i.svg ? i.origin : Em(co(e, va)) + ' ' + i.zOrigin + 'px') : (i = e.style[n], (!i || i === 'auto' || s || ~(i + '').indexOf('calc(')) && (i = bm[n] && bm[n](e, n, r) || co(e, n) || uk(e, n) || (n === 'opacity' ? 1 : 0))), r && !~(i + '').trim().indexOf(' ') ? ba(e, n, i, r) + r : i;
        }, w8e = function (e, n, r, s) {
            if (!r || r === 'none') {
                var i = gu(n, e, 1), o = i && co(e, i, 1);
                o && o !== r ? (n = i, r = o) : n === 'borderColor' && (r = co(e, 'borderTopColor'));
            }
            var a = new Ur(this._pt, e.style, n, 0, 1, $k), l = 0, u = 0, f, d, p, _, v, y, g, b, A, N, I, O, x;
            if (a.b = r, a.e = s, r += '', s += '', s === 'auto' && (e.style[n] = s, s = co(e, n) || s, e.style[n] = r), f = [
                    r,
                    s
                ], Ck(f), r = f[0], s = f[1], p = r.match(/[-+=.]*\d+[.e-]*\d*[a-z%]*/g) || [], x = s.match(/[-+=.]*\d+[.e-]*\d*[a-z%]*/g) || [], x.length) {
                for (; d = /[-+=.]*\d+[.e-]*\d*[a-z%]*/g.exec(s);) {
                    g = d[0];
                    A = s.substring(l, d.index);
                    v ? v = (v + 1) % 5 : (A.substr(-5) === 'rgba(' || A.substr(-5) === 'hsla(') && (v = 1);
                    if (g !== (y = p[u++] || '')) {
                        _ = parseFloat(y) || 0;
                        I = y.substr((_ + '').length);
                        O = g.charAt(1) === '=' ? +(g.charAt(0) + '1') : 0;
                        O && (g = g.substr(2));
                        b = parseFloat(g);
                        N = g.substr((b + '').length);
                        l = /[-+=.]*\d+[.e-]*\d*[a-z%]*/g.lastIndex - N.length;
                        N || (N = N || $r.units[n] || I, l === s.length && (s += N, a.e += N));
                        I !== N && (_ = ba(e, n, y, N) || 0);
                        a._pt = {
                            _next: a._pt,
                            p: A || u === 1 ? A : ',',
                            s: _,
                            c: O ? O * b : b - _,
                            m: v && v < 4 || n === 'zIndex' ? Math.round : 0
                        };
                    }
                    ;
                }
                ;
            } else {
                ;
            }
            return /[+-]=-?[.\d]+/.test(s) && (a.e = 0), this._pt = a, a;
        }, O8e = function (e) {
            var n = e.split(' '), r = n[0], s = n[1] || '50%';
            return (r === 'top' || r === 'bottom' || s === 'left' || s === 'right') && (e = r, r = s, s = e), n[0] = i8[r] || r, n[1] = i8[s] || s, n.join(' ');
        }, A8e = function (e, n) {
            if (n.tween && n.tween._time === n.tween._dur) {
                var r = n.t, s = r.style, i = n.u, o = r._gsap, a, l, u;
                if (i === 'all' || i === true) {
                    ;
                    l = 1;
                    ;
                } else {
                    for (i = i.split(','), u = i.length; --u > -1;) {
                        a = i[u];
                        ya[a] && (l = 1, a = a === 'transformOrigin' ? va : Kn);
                        Af(r, a);
                        ;
                    }
                }
                l && (Af(r, Kn), o && (o.svg && r.removeAttribute('transform'), If(r, 1), o.uncache = 1));
            }
        }, bm = {
            clearProps: function (e, n, r, s, i) {
                if (i.data !== 'isFromStart') {
                    var o = e._pt = new Ur(e._pt, n, r, 0, 0, A8e);
                    return o.u = s, o.pr = -10, o.tween = i, e._props.push(r), 1;
                }
            }
        }, Cf = [
            1,
            0,
            0,
            1,
            0,
            0
        ], Wk = { i: 1 }, Hk = function (e) {
            return e === 'matrix(1, 0, 0, 1, 0, 0)' || e === 'none' || !e;
        }, o8 = function (e) {
            var n = co(e, Kn);
            return Hk(n) ? Cf : n.substr(7).match(/[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g).map(Ct);
        }, z5 = function (e, n) {
            var r = e._gsap || bc(e), s = e.style, i = o8(e), o, a, l, u;
            return r.svg && e.getAttribute('transform') ? (l = e.transform.baseVal.consolidate().matrix, i = [
                l.a,
                l.b,
                l.c,
                l.d,
                l.e,
                l.f
            ], i.join(',') === '1,0,0,1,0,0' ? Cf : i) : (i === Cf && !e.offsetParent && e !== Ul && !r.svg && (l = s.display, s.display = 'block', o = e.parentNode, (!o || !e.offsetParent) && (u = 1, a = e.nextSibling, Ul.appendChild(e)), i = o8(e), l ? s.display = l : Af(e, 'display'), u && (a ? o.insertBefore(e, a) : o ? o.appendChild(e) : Ul.removeChild(e))), n && i.length > 6 ? [
                i[0],
                i[1],
                i[4],
                i[5],
                i[12],
                i[13]
            ] : i);
        }, V2 = function (e, n, r, s, i, o) {
            var a = e._gsap, l = i || z5(e, true), u = a.xOrigin || 0, f = a.yOrigin || 0, d = a.xOffset || 0, p = a.yOffset || 0, _ = l[0], v = l[1], y = l[2], g = l[3], b = l[4], A = l[5], N = n.split(' '), I = parseFloat(N[0]) || 0, O = parseFloat(N[1]) || 0, x, M, L, U;
            r ? l !== Cf && (M = _ * g - v * y) && (L = I * (g / M) + O * (-y / M) + (y * A - g * b) / M, U = I * (-v / M) + O * (_ / M) - (_ * A - v * b) / M, I = L, O = U) : (x = Gk(e), I = x.x + (~N[0].indexOf('%') ? I / 100 * x.width : I), O = x.y + (~(N[1] || N[0]).indexOf('%') ? O / 100 * x.height : O));
            s || s !== false && a.smooth ? (b = I - u, A = O - f, a.xOffset = d + (b * _ + A * y) - b, a.yOffset = p + (b * v + A * g) - A) : a.xOffset = a.yOffset = 0;
            ;
            ;
            ;
            ;
            ;
            e.style[va] = '0px 0px';
            o && (Zo(o, a, 'xOrigin', u, I), Zo(o, a, 'yOrigin', f, O), Zo(o, a, 'xOffset', d, a.xOffset), Zo(o, a, 'yOffset', p, a.yOffset));
            e.setAttribute('data-svg-origin', I + ' ' + O);
            ;
        }, If = function (e, n) {
            var r = e._gsap || new xk(e);
            if ('x' in r && !n && !r.uncache) {
                return r;
            }
            var s = e.style, i = r.scaleX < 0, l = co(e, va) || '0', u, f, d, p, _, v, y, g, b, A, N, I, O, x, M, L, U, ee, ae, Z, fe, ge, Y, Q, ue, _e, Oe, be, Ce, Me, Fe, st;
            return u = f = d = v = y = g = b = A = N = 0, p = _ = 1, r.svg = !!(e.getCTM && jk(e)), x = z5(e, r.svg), r.svg && (Q = (!r.uncache || l === '0px 0px') && !n && e.getAttribute('data-svg-origin'), V2(e, Q || l, !!Q || r.originIsAbsolute, r.smooth !== false, x)), I = r.xOrigin || 0, O = r.yOrigin || 0, x !== Cf && (ee = x[0], ae = x[1], Z = x[2], fe = x[3], u = ge = x[4], f = Y = x[5], x.length === 6 ? (p = Math.sqrt(ee * ee + ae * ae), _ = Math.sqrt(fe * fe + Z * Z), v = ee || ae ? al(ae, ee) * ec : 0, b = Z || fe ? al(Z, fe) * ec + v : 0, b && (_ *= Math.abs(Math.cos(b * Bl))), r.svg && (u -= I - (I * ee + O * Z), f -= O - (I * ae + O * fe))) : (st = x[6], Me = x[7], Oe = x[8], be = x[9], Ce = x[10], Fe = x[11], u = x[12], f = x[13], d = x[14], M = al(st, Ce), y = M * ec, M && (L = Math.cos(-M), U = Math.sin(-M), Q = ge * L + Oe * U, ue = Y * L + be * U, _e = st * L + Ce * U, Oe = ge * -U + Oe * L, be = Y * -U + be * L, Ce = st * -U + Ce * L, Fe = Me * -U + Fe * L, ge = Q, Y = ue, st = _e), M = al(-Z, Ce), g = M * ec, M && (L = Math.cos(-M), U = Math.sin(-M), Q = ee * L - Oe * U, ue = ae * L - be * U, _e = Z * L - Ce * U, Fe = fe * U + Fe * L, ee = Q, ae = ue, Z = _e), M = al(ae, ee), v = M * ec, M && (L = Math.cos(M), U = Math.sin(M), Q = ee * L + ae * U, ue = ge * L + Y * U, ae = ae * L - ee * U, Y = Y * L - ge * U, ee = Q, ge = ue), y && Math.abs(y) + Math.abs(v) > 359.9 && (y = v = 0, g = 180 - g), p = Ct(Math.sqrt(ee * ee + ae * ae + Z * Z)), _ = Ct(Math.sqrt(Y * Y + st * st)), M = al(ge, Y), b = Math.abs(M) > 0.0002 ? M * ec : 0, N = Fe ? 1 / (Fe < 0 ? -Fe : Fe) : 0), r.svg && (Q = e.getAttribute('transform'), r.forceCSS = e.setAttribute('transform', '') || !Hk(co(e, Kn)), Q && e.setAttribute('transform', Q))), Math.abs(b) > 90 && Math.abs(b) < 270 && (i ? (p *= -1, b += v <= 0 ? 180 : -180, v += v <= 0 ? 180 : -180) : (_ *= -1, b += b <= 0 ? 180 : -180)), r.x = u - ((r.xPercent = u && (r.xPercent || (Math.round(e.offsetWidth / 2) === Math.round(-u) ? -50 : 0))) ? e.offsetWidth * r.xPercent / 100 : 0) + 'px', r.y = f - ((r.yPercent = f && (r.yPercent || (Math.round(e.offsetHeight / 2) === Math.round(-f) ? -50 : 0))) ? e.offsetHeight * r.yPercent / 100 : 0) + 'px', r.z = d + 'px', r.scaleX = Ct(p), r.scaleY = Ct(_), r.rotation = Ct(v) + 'deg', r.rotationX = Ct(y) + 'deg', r.rotationY = Ct(g) + 'deg', r.skewX = b + 'deg', r.skewY = A + 'deg', r.transformPerspective = N + 'px', (r.zOrigin = parseFloat(l.split(' ')[2]) || 0) && (s[va] = Em(l)), r.xOffset = r.yOffset = 0, r.force3D = $r.force3D, r.renderTransform = r.svg ? I8e : Vk ? zk : C8e, r.uncache = 0, r;
        }, Em = function (e) {
            return (e = e.split(' '))[0] + ' ' + e[1];
        }, Jy = function (e, n, r) {
            var s = ts(n);
            return Ct(parseFloat(n) + parseFloat(ba(e, 'x', r + 'px', s))) + s;
        }, C8e = function (e, n) {
            ;
            ;
            ;
            zk(e, n);
            ;
        }, zk = function (e, n) {
            var r = n || this, s = r.xPercent, i = r.yPercent, o = r.x, a = r.y, l = r.z, u = r.rotation, f = r.rotationY, d = r.rotationX, p = r.skewX, _ = r.skewY, v = r.scaleX, y = r.scaleY, g = r.transformPerspective, b = r.force3D, A = r.target, N = r.zOrigin, I = '', O = b === 'auto' && e && e !== 1 || b === true;
            if (N && (d !== '0deg' || f !== '0deg')) {
                var x = parseFloat(f) * Bl, M = Math.sin(x), L = Math.cos(x), U;
                x = parseFloat(d) * Bl;
                U = Math.cos(x);
                o = Jy(A, o, M * U * -N);
                a = Jy(A, a, -Math.sin(x) * -N);
                l = Jy(A, l, L * U * -N + N);
                ;
            }
            g !== '0px' && (I += 'perspective(' + g + ') ');
            (s || i) && (I += 'translate(' + s + '%, ' + i + '%) ');
            (O || o !== '0px' || a !== '0px' || l !== '0px') && (I += l !== '0px' || O ? 'translate3d(' + o + ', ' + a + ', ' + l + ') ' : 'translate(' + o + ', ' + a + ') ');
            u !== '0deg' && (I += 'rotate(' + u + ') ');
            f !== '0deg' && (I += 'rotateY(' + f + ') ');
            d !== '0deg' && (I += 'rotateX(' + d + ') ');
            (p !== '0deg' || _ !== '0deg') && (I += 'skew(' + p + ', ' + _ + ') ');
            (v !== 1 || y !== 1) && (I += 'scale(' + v + ', ' + y + ') ');
            A.style[Kn] = I || 'translate(0, 0)';
            ;
        }, I8e = function (e, n) {
            var r = n || this, s = r.xPercent, i = r.yPercent, o = r.x, a = r.y, l = r.rotation, u = r.skewX, f = r.skewY, d = r.scaleX, p = r.scaleY, _ = r.target, v = r.xOrigin, y = r.yOrigin, g = r.xOffset, b = r.yOffset, A = r.forceCSS, N = parseFloat(o), I = parseFloat(a), O, x, M, L, U;
            l = parseFloat(l);
            u = parseFloat(u);
            f = parseFloat(f);
            f && (f = parseFloat(f), u += f, l += f);
            l || u ? (l *= Bl, u *= Bl, O = Math.cos(l) * d, x = Math.sin(l) * d, M = Math.sin(l - u) * -p, L = Math.cos(l - u) * p, u && (f *= Bl, U = Math.tan(u - f), U = Math.sqrt(1 + U * U), M *= U, L *= U, f && (U = Math.tan(f), U = Math.sqrt(1 + U * U), O *= U, x *= U)), O = Ct(O), x = Ct(x), M = Ct(M), L = Ct(L)) : (O = d, L = p, x = M = 0);
            (N && !~(o + '').indexOf('px') || I && !~(a + '').indexOf('px')) && (N = ba(_, 'x', o, 'px'), I = ba(_, 'y', a, 'px'));
            (v || y || g || b) && (N = Ct(N + v - (v * O + y * M) + g), I = Ct(I + y - (v * x + y * L) + b));
            (s || i) && (U = _.getBBox(), N = Ct(N + s / 100 * U.width), I = Ct(I + i / 100 * U.height));
            U = 'matrix(' + O + ',' + x + ',' + M + ',' + L + ',' + N + ',' + I + ')';
            _.setAttribute('transform', U);
            A && (_.style[Kn] = U);
            ;
        }, k8e = function (e, n, r, s, i, o) {
            var l = dr(i), u = parseFloat(i) * (l && ~i.indexOf('rad') ? ec : 1), f = o ? u * o : u - s, d = s + f + 'deg', p, _;
            return l && (p = i.split('_')[1], p === 'short' && (f %= 360, f !== f % 180 && (f += f < 0 ? 360 : -360)), p === 'cw' && f < 0 ? f = (f + 36000000000) % 360 - ~~(f / 360) * 360 : p === 'ccw' && f > 0 && (f = (f - 36000000000) % 360 - ~~(f / 360) * 360)), e._pt = _ = new Ur(e._pt, n, r, s, f, m8e), _.e = d, _.u = 'deg', e._props.push(r), _;
        }, a8 = function (e, n) {
            for (var r in n);
            return e;
        }, N8e = function (e, n, r) {
            var s = a8({}, r._gsap), o = r.style, a, l, u, f, d, p, _, v;
            s.svg ? (u = r.getAttribute('transform'), r.setAttribute('transform', ''), o[Kn] = n, a = If(r, 1), Af(r, Kn), r.setAttribute('transform', u)) : (u = getComputedStyle(r)[Kn], o[Kn] = n, a = If(r, 1), o[Kn] = u);
            for (l in ya)
                u = s[l], f = a[l], u !== f && 'perspective,force3D,transformOrigin,svgOrigin'.indexOf(l) < 0 && (_ = ts(u), v = ts(f), d = _ !== v ? ba(r, l, u, v) : parseFloat(u), p = parseFloat(f), e._pt = new Ur(e._pt, a, l, d, p - d, Uk), e._pt.u = v || 0, e._props.push(l));
            a8(a, s);
        };
    is('padding,margin,Width,Radius', function (t, e) {
        var o = (e < 3 ? [
            'Top',
            'Right',
            'Bottom',
            'Left'
        ] : [
            'TopLeft',
            'TopRight',
            'BottomRight',
            'BottomLeft'
        ]).map(function (a) {
            return e < 2 ? t + a : 'border' + a + t;
        });
        bm[e > 1 ? 'border' + t : t] = function (a, l, u, f, d) {
            var p, _;
            if (arguments.length < 4) {
                return p = o.map(function (v) {
                    return hl(a, v, u);
                }), _ = p.join(' '), _.split(p[0]).length === 5 ? p[0] : _;
            }
            p = (f + '').split(' ');
            _ = {};
            o.forEach(function (v, y) {
                return _[v] = p[y] = p[y] || p[(y - 1) / 2 | 0];
            });
            a.init(l, _, d);
            ;
        };
    });
    var Yk = {
        name: 'css',
        register: q2,
        targetTest: function (e) {
            return e.style && e.nodeType;
        },
        init: function (e, n, r, s, i) {
            var o = this._props, a = e.style, l = r.vars.startAt, u, f, d, p, _, v, y, g, b, A, N, I, O, x, M;
            H5 || q2();
            for (y in n)
                if (y !== 'autoRound' && (f = n[y], !(Xr[y] && Pk(y, n, r, s, e, i)))) {
                    if (_ = typeof f, v = bm[y], _ === 'function' && (f = f.call(r, s, e, i), _ = typeof f), _ === 'string' && ~f.indexOf('random(') && (f = Rg(f)), v) {
                        v(this, e, y, f, r) && (M = 1);
                    } else {
                        if (y.substr(0, 2) === '--') {
                            u = (getComputedStyle(e).getPropertyValue(y) + '').trim();
                            f += '';
                            ia.lastIndex = 0;
                            ia.test(u) || (g = ts(u), b = ts(f));
                            b ? g !== b && (u = ba(e, y, u, b) + b) : g && (f += g);
                            this.add(a, 'setProperty', u, f, s, i, 0, 0, y);
                            o.push(y);
                            ;
                        } else {
                            if (_ !== 'undefined') {
                                if (l && y in l ? (u = typeof l[y] == 'function' ? l[y].call(r, s, e, i) : l[y], y in $r.units && !ts(u) && (u += $r.units[y]), (u + '').charAt(1) === '=' && (u = hl(e, y))) : u = hl(e, y), p = parseFloat(u), A = _ === 'string' && f.charAt(1) === '=' ? +(f.charAt(0) + '1') : 0, A && (f = f.substr(2)), d = parseFloat(f), y in Ko && (y === 'autoAlpha' && (p === 1 && hl(e, 'visibility') === 'hidden' && d && (p = 0), Zo(this, a, 'visibility', p ? 'inherit' : 'hidden', d ? 'inherit' : 'hidden', !d)), y !== 'scale' && y !== 'transform' && (y = Ko[y], ~y.indexOf(',') && (y = y.split(',')[0]))), N = y in ya, N) {
                                    if (I || (O = e._gsap, O.renderTransform && !n.parseTransform || If(e, n.parseTransform), x = n.smoothOrigin !== false && O.smooth, I = this._pt = new Ur(this._pt, a, Kn, 0, 1, O.renderTransform, O, 0, -1), I.dep = 1), y === 'scale') {
                                        this._pt = new Ur(this._pt, O, 'scaleY', O.scaleY, (A ? A * d : d - O.scaleY) || 0);
                                        o.push('scaleY', y);
                                        y += 'X';
                                        ;
                                    } else {
                                        if (y === 'transformOrigin') {
                                            f = O8e(f);
                                            O.svg ? V2(e, f, 0, x, 0, this) : (b = parseFloat(f.split(' ')[2]) || 0, b !== O.zOrigin && Zo(this, O, 'zOrigin', O.zOrigin, b), Zo(this, a, y, Em(u), Em(f)));
                                            ;
                                            continue;
                                        } else {
                                            if (y === 'svgOrigin') {
                                                V2(e, f, 1, x, 0, this);
                                                continue;
                                            } else {
                                                if (y in Wk) {
                                                    k8e(this, O, y, p, f, A);
                                                    continue;
                                                } else {
                                                    if (y === 'smoothOrigin') {
                                                        Zo(this, O, 'smooth', O.smooth, f);
                                                        continue;
                                                    } else {
                                                        if (y === 'force3D') {
                                                            O[y] = f;
                                                            continue;
                                                        } else {
                                                            if (y === 'transform') {
                                                                N8e(this, f, e);
                                                                continue;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                } else {
                                    y in a || (y = gu(y) || y);
                                }
                                if (N || (d || d === 0) && (p || p === 0) && !/[\s,\(]\S/.test(f) && y in a) {
                                    g = (u + '').substr((p + '').length);
                                    d || (d = 0);
                                    b = ts(f) || (y in $r.units ? $r.units[y] : g);
                                    g !== b && (p = ba(e, y, u, b));
                                    this._pt = new Ur(this._pt, N ? O : a, y, p, A ? A * d : d - p, !N && (b === 'px' || y === 'zIndex') && n.autoRound !== false ? _8e : Uk);
                                    this._pt.u = b || 0;
                                    if (g !== b) {
                                        this._pt.b = u;
                                        this._pt.r = g8e;
                                    }
                                    ;
                                } else {
                                    if (y in a) {
                                        w8e.call(this, e, y, u, f);
                                    } else {
                                        if (y in e) {
                                            this.add(e, y, u || e[y], f, s, i);
                                        } else {
                                            L5(y, f);
                                            continue;
                                        }
                                    }
                                }
                                o.push(y);
                            }
                        }
                    }
                }
            M && Lk(this);
        },
        get: hl,
        aliases: Ko,
        getSetter: function (e, n, r) {
            var s = Ko[n];
            return s && s.indexOf(',') < 0 && (n = s), n in ya && n !== va && (e._gsap.x || hl(e, 'x')) ? r && e8 === r ? n === 'scale' ? E8e : b8e : (e8 = r || {}) && (n === 'scale' ? T8e : S8e) : e.style && !D5(e.style[n]) ? y8e : ~n.indexOf('-') ? v8e : j5(e, n);
        },
        core: {
            _removeProperty: Af,
            _getMatrix: z5
        }
    };
    Pi.utils.checkPrefix = gu;
    (function (t, e, n, r) {
        var s = is(t + ',' + e + ',' + n, function (i) {
            ;
        });
        is(e, function (i) {
            $r.units[i] = 'deg';
            ;
            ;
        });
        Ko[s[13]] = t + ',' + e;
        is(r, function (i) {
            var o = i.split(':');
            Ko[o[1]] = s[o[0]];
        });
        ;
    }('x,y,z,scale,scaleX,scaleY,xPercent,yPercent', 'rotation,rotationX,rotationY,skewX,skewY', 'transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective', '0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY'));
    is('x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective', function (t) {
        $r.units[t] = 'px';
    });
    Pi.registerPlugin(Yk);
    var Y5 = Pi.registerPlugin(Yk) || Pi;
    Y5.core.Tween;
    var D8e = Math.PI / 180, Cp = Math.sin, Ip = Math.cos, Fh = Math.abs, lh = Math.sqrt, c8 = function (e) {
            return typeof e == 'string';
        }, Kk = function (e) {
            return typeof e == 'number';
        }, Fo = function (e) {
            return Math.round(e * 100000) / 100000 || 0;
        };
    function $8e(t) {
        t = c8(t) && /(^[#\.][a-z]|[a-y][a-z])/i.test(t) && document.querySelector(t) || t;
        var e = t.getAttribute ? t : 0, n;
        return e && (t = t.getAttribute('d')) ? (e._gsPath || (e._gsPath = {}), n = e._gsPath[t], n && !n._dirty ? n : e._gsPath[t] = oa(t)) : t ? c8(t) ? oa(t) : Kk(t[0]) ? [t] : t : console.warn('Expecting a <path> element or an SVG path data string');
    }
    function gh(t) {
        var e = 0, n;
        for (t.reverse(); e < t.length; e += 2) {
            n = t[e];
            ;
            t[e + 1] = n;
            ;
        }
        ;
    }
    var L8e = function (e, n) {
            var r = document.createElementNS('http://www.w3.org/2000/svg', 'path'), s = [].slice.call(e.attributes), i = s.length, o;
            for (n = ',' + n + ','; --i > -1;) {
                o = s[i].nodeName.toLowerCase();
                n.indexOf(',' + o + ',') < 0 && r.setAttributeNS(null, o, s[i].nodeValue);
                ;
            }
            return r;
        }, U8e = function (e, n) {
            for (var r = n ? n.split(',') : [], s = {}, i = r.length; --i > -1;) {
                s[r[i]] = +e.getAttribute(r[i]) || 0;
            }
            return s;
        };
    function Zk(t, e) {
        var n = t.tagName.toLowerCase(), s, i, o, a, l, u, f, d, p, _, v, y, g, b, A, N, I, O, x, M, L, U;
        return n === 'path' || !t.getBBox ? t : (u = L8e(t, 'x,y,width,height,cx,cy,rx,ry,r,x1,x2,y1,y2,points'), U = U8e(t, F8e[n]), n === 'rect' ? (a = U.rx, l = U.ry || a, i = U.x, o = U.y, _ = U.width - a * 2, v = U.height - l * 2, a || l ? (y = i + a * 0.44771525016900005, g = i + a, b = g + _, A = b + a * 0.552284749831, N = b + a, I = o + l * 0.44771525016900005, O = o + l, x = O + v, M = x + l * 0.552284749831, L = x + l, s = 'M' + N + ',' + O + ' V' + x + ' C' + [
            N,
            M,
            A,
            L,
            b,
            L,
            b - (b - g) / 3,
            L,
            g + (b - g) / 3,
            L,
            g,
            L,
            y,
            L,
            i,
            M,
            i,
            x,
            i,
            x - (x - O) / 3,
            i,
            O + (x - O) / 3,
            i,
            O,
            i,
            I,
            y,
            o,
            g,
            o,
            g + (b - g) / 3,
            o,
            b - (b - g) / 3,
            o,
            b,
            o,
            A,
            o,
            N,
            I,
            N,
            O
        ].join(',') + 'z') : s = 'M' + (i + _) + ',' + o + ' v' + v + ' h' + -_ + ' v' + -v + ' h' + _ + 'z') : n === 'circle' || n === 'ellipse' ? (n === 'circle' ? (a = l = U.r, d = a * 0.552284749831) : (a = U.rx, l = U.ry, d = l * 0.552284749831), i = U.cx, o = U.cy, f = a * 0.552284749831, s = 'M' + (i + a) + ',' + o + ' C' + [
            i + a,
            o + d,
            i + f,
            o + l,
            i,
            o + l,
            i - f,
            o + l,
            i - a,
            o + d,
            i - a,
            o,
            i - a,
            o - d,
            i - f,
            o - l,
            i,
            o - l,
            i + f,
            o - l,
            i + a,
            o - d,
            i + a,
            o
        ].join(',') + 'z') : n === 'line' ? s = 'M' + U.x1 + ',' + U.y1 + ' L' + U.x2 + ',' + U.y2 : (n === 'polyline' || n === 'polygon') && (p = (t.getAttribute('points') + '').match(/(?:(-)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/ig) || [], i = p.shift(), o = p.shift(), s = 'M' + i + ',' + o + ' L' + p.join(','), n === 'polygon' && (s += ',' + i + ',' + o + 'z')), u.setAttribute('d', ql(u._gsRawPath = oa(s))), e && t.parentNode && (t.parentNode.insertBefore(u, t), t.parentNode.removeChild(t)), u);
    }
    function B8e(t, e, n, r, s, i, o, a, l) {
        if (!(t === a && e === l)) {
            n = Fh(n);
            r = Fh(r);
            ;
            var u = s % 360 * D8e, f = Ip(u), d = Cp(u), p = Math.PI, _ = p * 2, v = (t - a) / 2, y = (e - l) / 2, g = f * v + d * y, b = -d * v + f * y, A = g * g, N = b * b, I = A / (n * n) + N / (r * r);
            if (I > 1) {
                n = lh(I) * n;
                r = lh(I) * r;
            }
            var O = n * n, x = r * r, M = (O * x - O * N - x * A) / (O * N + x * A);
            M < 0 && (M = 0);
            var L = (i === o ? -1 : 1) * lh(M), U = L * (n * b / r), ee = L * -(r * g / n), ae = (t + a) / 2, Z = (e + l) / 2, fe = ae + (f * U - d * ee), ge = Z + (d * U + f * ee), Y = (g - U) / n, Q = (b - ee) / r, ue = (-g - U) / n, _e = (-b - ee) / r, Oe = Y * Y + Q * Q, be = (Q < 0 ? -1 : 1) * Math.acos(Y / lh(Oe)), Ce = (Y * _e - Q * ue < 0 ? -1 : 1) * Math.acos((Y * ue + Q * _e) / lh(Oe * (ue * ue + _e * _e)));
            isNaN(Ce) && (Ce = p);
            !o && Ce > 0 ? Ce -= _ : o && Ce < 0 && (Ce += _);
            be %= _;
            Ce %= _;
            ;
            var Me = Math.ceil(Fh(Ce) / (_ / 4)), Fe = [], st = Ce / Me, Ve = 1.3333333333333333 * Cp(st / 2) / (1 + Ip(st / 2)), Ke = f * n, rt = d * n, w = d * -r, R = f * r, H;
            for (H = 0; H < Me; H++) {
                s = be + H * st;
                g = Ip(s);
                b = Cp(s);
                Y = Ip(s += st);
                Q = Cp(s);
                Fe.push(g - Ve * b, b + Ve * g, Y + Ve * Q, Q - Ve * Y, Y, Q);
                ;
            }
            for (H = 0; H < Fe.length; H += 2) {
                g = Fe[H];
                b = Fe[H + 1];
                Fe[H] = g * Ke + b * w + fe;
                Fe[H + 1] = g * rt + b * R + ge;
                ;
            }
            return Fe[H - 2] = a, Fe[H - 1] = l, Fe;
        }
    }
    function oa(t) {
        var e = (t + '').replace(/[\+\-]?\d*\.?\d+e[\+\-]?\d+/ig, function (U) {
                var ee = +U;
                return ee < 0.0001 && ee > -0.0001 ? 0 : ee;
            }).match(/[achlmqstvz]|(-?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/ig) || [], n = [], r = 0, s = 0, o = e.length, a = 0, l = 'ERROR: malformed path: ' + t, u, f, d, p, _, v, y, g, b, A, N, I, O, x, M, L = function (ee, ae, Z, fe) {
                A = (Z - ee) / 3;
                N = (fe - ae) / 3;
                y.push(ee + A, ae + N, Z - A, fe - N, Z, fe);
                ;
            };
        if (!t || !isNaN(e[0]) || isNaN(e[1])) {
            return console.log(l), n;
        }
        for (u = 0; u < o; u++) {
            if (O = _, isNaN(e[u]) ? (_ = e[u].toUpperCase(), v = _ !== e[u]) : u--, d = +e[u + 1], p = +e[u + 2], v && (d += r, p += s), u || (g = d, b = p), _ === 'M') {
                y && (y.length < 8 ? n.length -= 1 : a += y.length);
                r = g = d;
                s = b = p;
                y = [
                    d,
                    p
                ];
                n.push(y);
                u += 2;
                _ = 'L';
                ;
            } else {
                if (_ === 'C') {
                    y || (y = [
                        0,
                        0
                    ]);
                    v || (r = s = 0);
                    y.push(d, p, r + e[u + 3] * 1, s + e[u + 4] * 1, r += e[u + 5] * 1, s += e[u + 6] * 1);
                    u += 6;
                    ;
                } else {
                    if (_ === 'S') {
                        A = r;
                        N = s;
                        (O === 'C' || O === 'S') && (A += r - y[y.length - 4], N += s - y[y.length - 3]);
                        v || (r = s = 0);
                        y.push(A, N, d, p, r += e[u + 3] * 1, s += e[u + 4] * 1);
                        u += 4;
                        ;
                    } else {
                        if (_ === 'Q') {
                            A = r + (d - r) * 0.6666666666666666;
                            N = s + (p - s) * 0.6666666666666666;
                            v || (r = s = 0);
                            r += e[u + 3] * 1;
                            s += e[u + 4] * 1;
                            y.push(A, N, r + (d - r) * 0.6666666666666666, s + (p - s) * 0.6666666666666666, r, s);
                            u += 4;
                            ;
                        } else {
                            if (_ === 'T') {
                                A = r - y[y.length - 4];
                                N = s - y[y.length - 3];
                                y.push(r + A, s + N, d + (r + A * 1.5 - d) * 0.6666666666666666, p + (s + N * 1.5 - p) * 0.6666666666666666, r = d, s = p);
                                u += 2;
                                ;
                            } else {
                                if (_ === 'H') {
                                    L(r, s, r = d, s);
                                    u += 1;
                                    ;
                                } else {
                                    if (_ === 'V') {
                                        L(r, s, r, s = d + (v ? s - r : 0));
                                        u += 1;
                                        ;
                                    } else {
                                        if (_ === 'L' || _ === 'Z') {
                                            if (_ === 'Z') {
                                                d = g;
                                                p = b;
                                                y.closed = true;
                                            }
                                            (_ === 'L' || Fh(r - d) > 0.5 || Fh(s - p) > 0.5) && (L(r, s, d, p), _ === 'L' && (u += 2));
                                            r = d;
                                            s = p;
                                            ;
                                        } else {
                                            if (_ === 'A') {
                                                if (x = e[u + 4], M = e[u + 5], A = e[u + 6], N = e[u + 7], f = 7, x.length > 1 && (x.length < 3 ? (N = A, A = M, f--) : (N = M, A = x.substr(2), f -= 2), M = x.charAt(1), x = x.charAt(0)), I = B8e(r, s, +e[u + 1], +e[u + 2], +e[u + 3], +x, +M, (v ? r : 0) + A * 1, (v ? s : 0) + N * 1), u += f, I) {
                                                    for (f = 0; f < I.length; f++) {
                                                        y.push(I[f]);
                                                    }
                                                }
                                                r = y[y.length - 2];
                                                s = y[y.length - 1];
                                                ;
                                            } else {
                                                console.log(l);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        return u = y.length, u < 6 ? (n.pop(), u = 0) : y[0] === y[u - 2] && y[1] === y[u - 1] && (y.closed = true), n.totalPoints = a + u, n;
    }
    function ql(t) {
        Kk(t[0]) && (t = [t]);
        var e = '', n = t.length, r, s, i, o;
        for (s = 0; s < n; s++) {
            for (o = t[s], e += 'M' + Fo(o[0]) + ',' + Fo(o[1]) + ' C', r = o.length, i = 2; i < r; i++) {
                e += Fo(o[i++]) + ',' + Fo(o[i++]) + ' ' + Fo(o[i++]) + ',' + Fo(o[i++]) + ' ' + Fo(o[i++]) + ',' + Fo(o[i]) + ' ';
            }
            o.closed && (e += 'z');
        }
        return e;
    }
    var js, K5, _h, Xk, yh, Qk = function () {
            return js || typeof window < 'u' && (js = window.gsap) && js.registerPlugin && js;
        }, e0 = function (e) {
            return typeof e == 'function';
        }, fc = Math.atan2, u8 = Math.cos, h8 = Math.sin, io = Math.sqrt, Mg = Math.PI, f8 = Mg * 2, q8e = Mg * 0.3, V8e = Mg * 0.7, Xo = function (e) {
            return console && console.warn(e);
        }, d8 = function (e) {
            var n = e.length, r = 0, s = 0, i;
            for (i = 0; i < n; i++) {
                r += e[i++];
                s += e[i];
                ;
            }
            return [
                r / (n / 2),
                s / (n / 2)
            ];
        }, Vl = function (e) {
            var n = e.length, r = e[0], s = r, i = e[1], o = i, a, l, u;
            for (u = 6; u < n; u += 6) {
                a = e[u];
                l = e[u + 1];
                a > r ? r = a : a < s && (s = a);
                l > i ? i = l : l < o && (o = l);
                ;
            }
            return e.centerX = (r + s) / 2, e.centerY = (i + o) / 2, e.size = (r - s) * (i - o);
        }, Uh = function (e, n) {
            n === void 0 && (n = 3);
            for (var r = e.length, s = e[0][0], i = s, o = e[0][1], a = o, l = 1 / n, u, f, d, p, _, v, y, g, b, A, N, I, O, x, M, L; --r > -1;) {
                for (_ = e[r], u = _.length, p = 6; p < u; p += 6) {
                    for (b = _[p], A = _[p + 1], N = _[p + 2] - b, x = _[p + 3] - A, I = _[p + 4] - b, M = _[p + 5] - A, O = _[p + 6] - b, L = _[p + 7] - A, v = n; --v > -1;) {
                        y = l * v;
                        g = 1 - y;
                        f = (y * y * O + 3 * g * (y * I + g * N)) * y + b;
                        d = (y * y * L + 3 * g * (y * M + g * x)) * y + A;
                        f > s ? s = f : f < i && (i = f);
                        d > o ? o = d : d < a && (a = d);
                        ;
                    }
                }
            }
            return e.centerX = (s + i) / 2, e.centerY = (o + a) / 2, e.left = i, e.width = s - i, e.top = a, e.height = o - a, e.size = (s - i) * (o - a);
        }, H8e = function (e, n) {
            return n.length - e.length;
        }, p8 = function (e, n) {
            var r = e.size || Vl(e), s = n.size || Vl(n);
            return Math.abs(s - r) < (r + s) / 20 ? n.centerX - e.centerX || n.centerY - e.centerY : s - r;
        }, m8 = function (e, n) {
            var r = e.slice(0), s = e.length, i = s - 2, o, a;
            for (n = n | 0, o = 0; o < s; o++) {
                a = (o + n) % i;
                e[o++] = r[a];
                ;
                ;
            }
        }, t0 = function (e, n, r, s, i) {
            var o = e.length, a = 0, l = o - 2, u, f, d, p;
            for (r *= 6, f = 0; f < o; f += 6) {
                u = (f + r) % l;
                p = e[u] - (n[f] - s);
                d = e[u + 1] - (n[f + 1] - i);
                a += io(d * d + p * p);
                ;
            }
            return a;
        }, z8e = function (e, n, r) {
            var s = e.length, i = d8(e), o = d8(n), a = o[0] - i[0], l = o[1] - i[1], u = t0(e, n, 0, a, l), f = 0, d, p, _;
            for (_ = 6; _ < s; _ += 6) {
                p = t0(e, n, _ / 6, a, l);
                if (p < u) {
                    u = p;
                    f = _;
                }
                ;
            }
            if (r) {
                for (d = e.slice(0), gh(d), _ = 6; _ < s; _ += 6) {
                    p = t0(d, n, _ / 6, a, l);
                    if (p < u) {
                        u = p;
                        f = -_;
                    }
                    ;
                }
            }
            return f / 6;
        }, Y8e = function (e, n, r) {
            for (var s = e.length, i = 100000000000000000000, o = 0, a = 0, l, u, f, d, p, _; --s > -1;) {
                for (l = e[s], _ = l.length, p = 0; p < _; p += 6) {
                    u = l[p] - n;
                    f = l[p + 1] - r;
                    d = io(u * u + f * f);
                    if (d < i) {
                        i = d;
                        o = l[p];
                        a = l[p + 1];
                    }
                    ;
                }
            }
            return [
                o,
                a
            ];
        }, K8e = function (e, n, r, s, i, o) {
            var a = n.length, l = 0, u = Math.min(e.size || Vl(e), n[r].size || Vl(n[r])) * s, f = 100000000000000000000, d = e.centerX + i, p = e.centerY + o, _, v, y, g, b;
            for (v = r; v < a && (_ = n[v].size || Vl(n[v]), !(_ < u)); v++) {
                y = n[v].centerX - d;
                g = n[v].centerY - p;
                b = io(y * y + g * g);
                if (b < f) {
                    l = v;
                    f = b;
                }
                ;
            }
            return b = n[l], n.splice(l, 1), b;
        }, n0 = function (e, n) {
            var r = 0, i = e.length, o = n / ((i - 2) / 6), a, l, u, f, d, p, _, v, y, g, b, A, N, I;
            for (N = 2; N < i; N += 6) {
                for (r += o; r > 0.999999;) {
                    a = e[N - 2];
                    l = e[N - 1];
                    u = e[N];
                    f = e[N + 1];
                    d = e[N + 2];
                    p = e[N + 3];
                    _ = e[N + 4];
                    v = e[N + 5];
                    I = 1 / ((Math.floor(r) || 1) + 1);
                    y = a + (u - a) * I;
                    b = u + (d - u) * I;
                    y += (b - y) * I;
                    b += (d + (_ - d) * I - b) * I;
                    g = l + (f - l) * I;
                    A = f + (p - f) * I;
                    g += (A - g) * I;
                    A += (p + (v - p) * I - A) * I;
                    e.splice(N, 4, a + (u - a) * I, l + (f - l) * I, y, g, y + (b - y) * I, g + (A - g) * I, b, A, d + (_ - d) * I, p + (v - p) * I);
                    N += 6;
                    i += 6;
                    r--;
                    ;
                }
            }
            return e;
        }, G2 = function (e, n, r, s, i) {
            var o = n.length - e.length, a = o > 0 ? n : e, l = o > 0 ? e : n, u = 0, f = s === 'complexity' ? H8e : p8, d = s === 'position' ? 0 : typeof s == 'number' ? s : 0.8, p = l.length, _ = typeof r == 'object' && r.push ? r.slice(0) : [r], v = _[0] === 'reverse' || _[0] < 0, y = r === 'log', g, b, A, N, I, O, x;
            if (l[0]) {
                if (a.length > 1 && (e.sort(f), n.sort(f), O = a.size || Uh(a), O = l.size || Uh(l), O = a.centerX - l.centerX, x = a.centerY - l.centerY, f === p8)) {
                    for (p = 0; p < l.length; p++) {
                        a.splice(p, 0, K8e(l[p], a, p, d, O, x));
                    }
                }
                if (o) {
                    for (o < 0 && (o = -o), a[0].length > l[0].length && n0(l[0], (a[0].length - l[0].length) / 6 | 0), p = l.length; u < o;) {
                        N = a[p].size || Vl(a[p]);
                        A = Y8e(l, a[p].centerX, a[p].centerY);
                        N = A[0];
                        I = A[1];
                        l[p++] = [
                            N,
                            I,
                            N,
                            I,
                            N,
                            I,
                            N,
                            I
                        ];
                        ;
                        u++;
                        ;
                    }
                }
                for (p = 0; p < e.length; p++) {
                    g = n[p];
                    b = e[p];
                    o = g.length - b.length;
                    o < 0 ? n0(g, -o / 6 | 0) : o > 0 && n0(b, o / 6 | 0);
                    v && i !== false && !b.reversed && gh(b);
                    r = _[p] || _[p] === 0 ? _[p] : 'auto';
                    r && (b.closed || Math.abs(b[0] - b[b.length - 2]) < 0.5 && Math.abs(b[1] - b[b.length - 1]) < 0.5 ? r === 'auto' || r === 'log' ? (_[p] = r = z8e(b, g, !p || i === false), r < 0 && (v = true, gh(b), r = -r), m8(b, r * 6)) : r !== 'reverse' && (p && r < 0 && gh(b), m8(b, (r < 0 ? -r : r) * 6)) : !v && (r === 'auto' && Math.abs(g[0] - b[0]) + Math.abs(g[1] - b[1]) + Math.abs(g[g.length - 2] - b[b.length - 2]) + Math.abs(g[g.length - 1] - b[b.length - 1]) > Math.abs(g[0] - b[b.length - 2]) + Math.abs(g[1] - b[b.length - 1]) + Math.abs(g[g.length - 2] - b[0]) + Math.abs(g[g.length - 1] - b[1]) || r % 2) ? (gh(b), _[p] = -1, v = true) : r === 'auto' ? _[p] = 0 : r === 'reverse' && (_[p] = -1), b.closed !== g.closed && (b.closed = g.closed = false));
                    ;
                }
                return y && Xo('shapeIndex:[' + _.join(',') + ']'), e.shapeIndex = _, _;
            }
        }, g8 = function (e, n, r, s, i) {
            var o = oa(e[0]), a = oa(e[1]);
            G2(o, a, n || n === 0 ? n : 'auto', r, i) && (e[0] = ql(o), e[1] = ql(a), (s === 'log' || s === true) && Xo('precompile:["' + e[0] + '","' + e[1] + '"]'));
        }, Z8e = function (e, n) {
            if (!n) {
                return e;
            }
            var r = e.match(/[-+=\.]*\d+[\.e\-\+]*\d*[e\-\+]*\d*/gi) || [], s = r.length, i = '', o, a, l;
            for (n === 'reverse' ? (a = s - 1, o = -2) : (a = ((parseInt(n, 10) || 0) * 2 + 1 + s * 100) % s, o = 2), l = 0; l < s; l += 2) {
                i += r[a - 1] + ',' + r[a] + ' ';
                a = (a + o) % s;
                ;
            }
            return i;
        }, _8 = function (e, n) {
            var r = 0, s = parseFloat(e[0]), i = parseFloat(e[1]), o = s + ',' + i + ' ', l, u, f, d, p, _, v;
            for (f = e.length, l = n * 0.5 / (f * 0.5 - 1), u = 0; u < f - 2; u += 2) {
                if (r += l, _ = parseFloat(e[u + 2]), v = parseFloat(e[u + 3]), r > 0.999999) {
                    for (p = 1 / (Math.floor(r) + 1), d = 1; r > 0.999999;) {
                        o += (s + (_ - s) * p * d).toFixed(2) + ',' + (i + (v - i) * p * d).toFixed(2) + ' ';
                        r--;
                        d++;
                        ;
                    }
                }
                o += _ + ',' + v + ' ';
                s = _;
                i = v;
                ;
            }
            return o;
        }, j2 = function (e) {
            var n = e[0].match(/[-+=\.]*\d+[\.e\-\+]*\d*[e\-\+]*\d*/gi) || [], r = e[1].match(/[-+=\.]*\d+[\.e\-\+]*\d*[e\-\+]*\d*/gi) || [], s = r.length - n.length;
            s > 0 ? e[0] = _8(n, s) : e[1] = _8(r, -s);
        }, X8e = function (e) {
            return isNaN(e) ? j2 : function (n) {
                j2(n);
                n[1] = Z8e(n[1], parseInt(e, 10));
                ;
            };
        }, Q8e = function (e, n, r) {
            var s = typeof e == 'string', i, o;
            return (!s || /(^[#\.][a-z]|[a-y][a-z])/i.test(e) || (e.match(/[-+=\.]*\d+[\.e\-\+]*\d*[e\-\+]*\d*/gi) || []).length < 3) && (i = K5(e)[0], i ? (o = (i.nodeName + '').toUpperCase(), n && o !== 'PATH' && (i = Zk(i, false), o = 'PATH'), e = i.getAttribute(o === 'PATH' ? 'd' : 'points') || '', i === r && (e = i.getAttributeNS(null, 'data-original') || e)) : (Xo('WARNING: invalid morph to: ' + e), e = false)), e;
        }, y8 = function (e, n) {
            for (var r = e.length, s = 0.2 * (n || 1), i, o, a, l, u, f, d, p, _, v, y, g; --r > -1;) {
                for (o = e[r], y = o.isSmooth = o.isSmooth || [
                        0,
                        0,
                        0,
                        0
                    ], g = o.smoothData = o.smoothData || [
                        0,
                        0,
                        0,
                        0
                    ], y.length = 4, p = o.length - 2, d = 6; d < p; d += 6) {
                    a = o[d] - o[d - 2];
                    l = o[d + 1] - o[d - 1];
                    u = o[d + 2] - o[d];
                    f = o[d + 3] - o[d + 1];
                    _ = fc(l, a);
                    v = fc(f, u);
                    i = Math.abs(_ - v) < s;
                    i && (g[d - 2] = _, g[d + 2] = v, g[d - 1] = io(a * a + l * l), g[d + 3] = io(u * u + f * f));
                    y.push(i, i, 0, 0, i, i);
                    ;
                }
                o[p] === o[0] && o[p + 1] === o[1] && (a = o[0] - o[p - 2], l = o[1] - o[p - 1], u = o[2] - o[0], f = o[3] - o[1], _ = fc(l, a), v = fc(f, u), Math.abs(_ - v) < s && (g[p - 2] = _, g[2] = v, g[p - 1] = io(a * a + l * l), g[3] = io(u * u + f * f), y[p - 2] = y[p - 1] = true));
            }
            return e;
        }, v8 = function (e) {
            var n = e.trim().split(' '), r = ~e.indexOf('left') ? 0 : ~e.indexOf('right') ? 100 : isNaN(parseFloat(n[0])) ? 50 : parseFloat(n[0]), s = ~e.indexOf('top') ? 0 : ~e.indexOf('bottom') ? 100 : isNaN(parseFloat(n[1])) ? 50 : parseFloat(n[1]);
            return {
                x: r / 100,
                y: s / 100
            };
        }, J8e = function (e) {
            return e !== e % Mg ? e + (e < 0 ? f8 : -f8) : e;
        }, e7e = function (e, n, r, s) {
            var i = this._origin, o = this._eOrigin, a = e[r] - i.x, l = e[r + 1] - i.y, u = io(a * a + l * l), f = fc(l, a), d, p;
            return a = n[r] - o.x, l = n[r + 1] - o.y, d = fc(l, a) - f, p = J8e(d), !s && _h && Math.abs(p + _h.ca) < q8e && (s = _h), this._anchorPT = _h = {
                _next: this._anchorPT,
                t: e,
                sa: f,
                ca: s && p * s.ca < 0 && Math.abs(p) > V8e ? d : p,
                sl: u,
                cl: io(a * a + l * l) - u,
                i: r
            };
        }, E8 = function (e) {
            js = Qk();
            yh = yh || js && js.plugins.morphSVG;
            js && yh ? (K5 = js.utils.toArray, yh.prototype._tweenRotation = e7e, Xk = 1) : e && Xo('Please gsap.registerPlugin(MorphSVGPlugin)');
            ;
        }, bl = {
            version: '3.7.0',
            name: 'morphSVG',
            rawVars: 1,
            register: function (e, n) {
                js = e;
                yh = n;
                E8();
                ;
            },
            init: function (e, n, r, s, i) {
                if (Xk || E8(1), !n) {
                    return Xo('invalid shape'), false;
                }
                e0(n) && (n = n.call(r, s, e, i));
                var o, a, l, u, f, d, p, _, v, y, g, b, A, N, I, O, x, M, L, U, ee, ae;
                if (typeof n == 'string' || n.getBBox || n[0]) {
                    n = { shape: n };
                } else {
                    if (typeof n == 'object') {
                        o = {};
                        for (a in n);
                        n = o;
                    }
                }
                var Z = e.nodeType ? window.getComputedStyle(e) : {}, fe = Z.fill + '', ge = !(fe === 'none' || (fe.match(/[-+=\.]*\d+[\.e\-\+]*\d*[e\-\+]*\d*/gi) || [])[3] === '0' || Z.fillRule === 'evenodd'), Y = (n.origin || '50 50').split(',');
                if (o = (e.nodeName + '').toUpperCase(), f = o === 'POLYLINE' || o === 'POLYGON', o !== 'PATH' && !f && !n.prop) {
                    return Xo('Cannot morph a <' + o + '> element. ' + 'Use MorphSVGPlugin.convertToPath() to convert to a path before morphing.'), false;
                }
                if (a = o === 'PATH' ? 'd' : 'points', !n.prop && !e0(e.setAttribute)) {
                    return false;
                }
                if (u = Q8e(n.shape || n.d || n.points || '', a === 'd', e), f && /[achlmqstvz]/i.test(u)) {
                    return Xo('A <' + o + '> cannot accept path data. ' + 'Use MorphSVGPlugin.convertToPath() to convert to a path before morphing.'), false;
                }
                if (d = n.shapeIndex || n.shapeIndex === 0 ? n.shapeIndex : 'auto', p = n.map || bl.defaultMap, this._prop = n.prop, this._render = n.render || bl.defaultRender, this._apply = 'updateTarget' in n ? n.updateTarget : bl.defaultUpdateTarget, this._rnd = Math.pow(10, isNaN(n.precision) ? 2 : +n.precision), this._tween = r, u) {
                    if (this._target = e, x = typeof n.precompile == 'object', y = this._prop ? e[this._prop] : e.getAttribute(a), !this._prop && !e.getAttributeNS(null, 'data-original') && e.setAttributeNS(null, 'data-original', y), a === 'd' || this._prop) {
                        if (y = oa(x ? n.precompile[0] : y), g = oa(x ? n.precompile[1] : u), !x && !G2(y, g, d, p, ge)) {
                            return false;
                        }
                        for ((n.precompile === 'log' || n.precompile === true) && Xo('precompile:["' + ql(y) + '","' + ql(g) + '"]'), ee = (n.type || bl.defaultType) !== 'linear', ee && (y = y8(y, n.smoothTolerance), g = y8(g, n.smoothTolerance), y.size || Uh(y), g.size || Uh(g), U = v8(Y[0]), this._origin = y.origin = {
                                x: y.left + U.x * y.width,
                                y: y.top + U.y * y.height
                            }, Y[1] && (U = v8(Y[1])), this._eOrigin = {
                                x: g.left + U.x * g.width,
                                y: g.top + U.y * g.height
                            }), this._rawPath = e._gsRawPath = y, A = y.length; --A > -1;) {
                            for (I = y[A], O = g[A], _ = I.isSmooth || [], v = O.isSmooth || [], N = I.length, _h = 0, b = 0; b < N; b += 2) {
                                (O[b] !== I[b] || O[b + 1] !== I[b + 1]) && (ee ? _[b] && v[b] ? (M = I.smoothData, L = O.smoothData, ae = b + (b === N - 4 ? 7 - N : 5), this._controlPT = {
                                    _next: this._controlPT,
                                    i: b,
                                    j: A,
                                    l1s: M[b + 1],
                                    l1c: L[b + 1] - M[b + 1],
                                    l2s: M[ae],
                                    l2c: L[ae] - M[ae]
                                }, l = this._tweenRotation(I, O, b + 2), this._tweenRotation(I, O, b, l), this._tweenRotation(I, O, ae - 1, l), b += 4) : this._tweenRotation(I, O, b) : (l = this.add(I, b, I[b], O[b]), l = this.add(I, b + 1, I[b + 1], O[b + 1]) || l));
                            }
                        }
                    } else {
                        l = this.add(e, 'setAttribute', e.getAttribute(a) + '', u + '', s, i, 0, X8e(d), a);
                    }
                    ee && (this.add(this._origin, 'x', this._origin.x, this._eOrigin.x), l = this.add(this._origin, 'y', this._origin.y, this._eOrigin.y));
                    l && (this._props.push('morphSVG'), l.end = u, l.endProp = a);
                    ;
                }
                return 1;
            },
            render: function (e, n) {
                for (var r = n._rawPath, s = n._controlPT, i = n._anchorPT, o = n._rnd, a = n._target, l = n._pt, u, f, d, p, _, v, y, g, b, A, N, I, O; l;) {
                    l.r(e, l.d);
                    l = l._next;
                    ;
                }
                if (e === 1 && n._apply) {
                    for (l = n._pt; l;) {
                        l.end && (n._prop ? a[n._prop] = l.end : a.setAttribute(l.endProp, l.end));
                        l = l._next;
                        ;
                    }
                } else {
                    if (r) {
                        for (; i;) {
                            v = i.sa + e * i.ca;
                            _ = i.sl + e * i.cl;
                            i.t[i.i] = n._origin.x + u8(v) * _;
                            i.t[i.i + 1] = n._origin.y + h8(v) * _;
                            i = i._next;
                            ;
                        }
                        for (d = e < 0.5 ? 2 * e * e : (4 - 2 * e) * e - 1; s;) {
                            y = s.i;
                            p = r[s.j];
                            O = y + (y === p.length - 4 ? 7 - p.length : 5);
                            v = fc(p[O] - p[y + 1], p[O - 1] - p[y]);
                            N = h8(v);
                            I = u8(v);
                            b = p[y + 2];
                            A = p[y + 3];
                            _ = s.l1s + d * s.l1c;
                            p[y] = b - I * _;
                            p[y + 1] = A - N * _;
                            _ = s.l2s + d * s.l2c;
                            p[O - 1] = b + I * _;
                            p[O] = A + N * _;
                            s = s._next;
                            ;
                        }
                        if (a._gsRawPath = r, n._apply) {
                            for (u = '', f = ' ', g = 0; g < r.length; g++) {
                                for (p = r[g], _ = p.length, u += 'M' + (p[0] * o | 0) / o + f + (p[1] * o | 0) / o + ' C', y = 2; y < _; y++) {
                                    u += (p[y] * o | 0) / o + f;
                                }
                            }
                            n._prop ? a[n._prop] = u : a.setAttribute('d', u);
                        }
                    }
                }
                n._render && r && n._render.call(n._tween, r, a);
            },
            kill: function (e) {
                this._pt = this._rawPath = 0;
            },
            getRawPath: $8e,
            stringToRawPath: oa,
            rawPathToString: ql,
            normalizeStrings: function (e, n, r) {
                var s = r.shapeIndex, i = r.map, o = [
                        e,
                        n
                    ];
                return g8(o, s, i), o;
            },
            pathFilter: g8,
            pointsFilter: j2,
            getTotalSize: Uh,
            equalizeSegmentQuantity: G2,
            convertToPath: function (e, n) {
                return K5(e).map(function (r) {
                    return Zk(r, n !== false);
                });
            },
            defaultType: 'linear',
            defaultUpdateTarget: true,
            defaultMap: 'size'
        };
    Qk() && js.registerPlugin(bl);
    const pi = {
        perfect: '#ffcd00',
        good: '#b16b00',
        okay: '#643d00',
        aux: '#e9852d',
        auxDark: '#9c500e',
        bass: '#6b3ad8',
        bassDark: '#3c188c',
        counter: '#d83cb4',
        counterDark: '#8c1972',
        drums: '#e12929',
        drumsDark: '#940c0c',
        harmony: '#1ec88d',
        harmonyDark: '#038155',
        melody: '#287ce7',
        melodyDark: '#0b4b9c',
        signature: '#fed141',
        signatureDark: '#ad8916'
    };
    Y5.registerPlugin(bl);
    class eN {
        constructor() {
            Ae(this, 'timeline', Y5.timeline());
            Ae(this, 'colors');
            this.timeline.pause();
        }
        getParkVars(e) {
            return {
                glow: {
                    opacity: 0,
                    scale: 1.5,
                    ease: 'power2.out'
                },
                lightBottom: {
                    stopColor: pi.okay,
                    stopOpacity: 0,
                    attr: { offset: '100%' }
                },
                lightTop: {
                    stopColor: pi.okay,
                    attr: { offset: '80%' }
                },
                outer: {
                    stroke: this.colors.categoryDark,
                    strokeWidth: 8
                },
                straight: {
                    morphSVG: e.straight,
                    stroke: this.colors.categoryDark,
                    strokeOpacity: 1,
                    strokeWidth: 8
                }
            };
        }
        getStateVars(e) {
            return {
                perfect: {
                    glow: {
                        opacity: 1,
                        scale: 1
                    },
                    lightBottom: {
                        stopColor: pi.perfect,
                        stopOpacity: 0.5,
                        attr: { offset: '50%' }
                    },
                    lightTop: {
                        stopColor: pi.perfect,
                        attr: { offset: '0%' }
                    },
                    outer: {
                        stroke: pi.perfect,
                        strokeWidth: 16
                    },
                    straight: {
                        morphSVG: e.smooth,
                        stroke: pi.perfect,
                        strokeWidth: 16
                    }
                },
                good: {
                    glow: {
                        opacity: 1,
                        scale: 1
                    },
                    lightBottom: {
                        stopColor: pi.good,
                        stopOpacity: 0.5,
                        attr: { offset: '66%' }
                    },
                    lightTop: {
                        stopColor: pi.good,
                        attr: { offset: '33%' }
                    },
                    outer: {
                        stroke: pi.good,
                        strokeWidth: 14
                    },
                    straight: {
                        morphSVG: e.sharp,
                        strokeWidth: 14
                    }
                },
                okay: {
                    glow: {
                        opacity: 1,
                        scale: 1
                    },
                    lightBottom: {
                        stopOpacity: 0.5,
                        attr: { offset: '70%' }
                    },
                    lightTop: { attr: { offset: '50%' } },
                    outer: {
                        stroke: pi.okay,
                        strokeWidth: 10
                    },
                    straight: {
                        morphSVG: e.sharp,
                        strokeWidth: 10
                    }
                },
                miss: {
                    lightBottom: { stopOpacity: 0 },
                    outer: { stroke: this.colors.categoryDark },
                    straight: {
                        strokeOpacity: 0.2,
                        strokeWidth: 20
                    }
                },
                flub: {
                    lightBottom: { stopOpacity: 0 },
                    outer: { stroke: '#000' },
                    straight: { stroke: '#000' }
                }
            };
        }
        setup(e, n) {
            this.colors = n;
            const r = this.getParkVars(e), s = this.getStateVars(e), i = Object.keys(s);
            i.forEach((d, p) => {
                const _ = Object.keys(s[d]), v = p * 2 * 1;
                if (this.timeline.addLabel(d, v), this.timeline.addPause(`${ d }+=${ 0.6 }`), _.forEach(b => {
                        if (b === 'straight') {
                            this.timeline.set(e[b], s[d][b], d);
                            const A = {
                                ...r[b],
                                duration: 0.6
                            };
                            this.timeline.to(e[b], A, d);
                        } else {
                            const A = {
                                ...r[b],
                                duration: 0.4
                            };
                            this.timeline.fromTo(e[b], s[d][b], A, d);
                        }
                    }), d === 'flub' || d === 'miss') {
                    return;
                }
                const y = `${ d }Hold`, g = v + 1;
                this.timeline.addLabel(y, g);
                this.timeline.addPause(`${ y }+=${ 0.6 }`);
                _.forEach(b => {
                    const A = b === 'lightBottom' || b === 'lightTop' ? {
                        ...s[d][b],
                        duration: 0.4
                    } : {
                        ...r[b],
                        duration: 0.4
                    };
                    this.timeline.fromTo(e[b], s[d][b], A, y);
                });
                ;
            });
            const u = Object.keys(r), f = i.length * 2 * 1;
            this.timeline.addLabel('park', f);
            u.forEach(d => {
                this.timeline.set(e[d], r[d], 'park');
            });
            this.timeline.seek('park');
            ;
        }
        park() {
            this.timeline.seek('park');
        }
        play(e, n) {
            n ? this.timeline.play(`${ e }Hold`) : this.timeline.play(e);
        }
    }
    const y7e = at({
        props: {
            feedback: {
                type: Array,
                required: true
            },
            index: {
                type: Number,
                required: true
            },
            isActive: {
                type: Boolean,
                required: true
            },
            isHolding: {
                type: Boolean,
                required: true
            }
        },
        setup() {
            return { timelineManager: new eN() };
        },
        watch: {
            feedback: {
                handler: 'onFeedbackChange',
                deep: true
            },
            isHolding: 'onIsHoldingChange'
        },
        mounted() {
            this.timelineManager.setup(this.$refs, {
                category: getComputedStyle(this.$refs.root).getPropertyValue('--category-color'),
                categoryDark: getComputedStyle(this.$refs.root).getPropertyValue('--category-color-dark')
            });
        },
        methods: {
            onFeedbackChange(t) {
                const e = t[t.length - 1];
                if (e === 0 || e === 10) {
                    this.timelineManager.play('perfect', e === 10);
                    return;
                }
                if (e === 1 || e === 11) {
                    this.timelineManager.play('good', e === 11);
                    return;
                }
                if (e === 2 || e === 12) {
                    this.timelineManager.play('okay', e === 12);
                    return;
                }
                if (e === 3) {
                    this.timelineManager.play('miss', false);
                    return;
                }
                this.timelineManager.play('flub', false);
            },
            onIsHoldingChange(t) {
                t || this.timelineManager.park();
            }
        }
    });
    function S7e(t, e, n, r, s, i) {
        return G(), K('div', {
            ref: 'root',
            class: nt([
                'lane',
                {
                    active: t.isActive,
                    holding: t.isHolding
                }
            ])
        }, [(G(), K('svg', v7e, [
                V('path', b7e, null, 512),
                V('path', E7e, null, 512),
                V('path', T7e, null, 512)
            ]))], 2);
    }
    const w7e = Je(y7e, [
            [
                'render',
                S7e
            ],
            [
                '__scopeId',
                'data-v-e8de279d'
            ]
        ]), O7e = at({
            props: {
                feedback: {
                    type: Array,
                    required: true
                },
                hotkey: {
                    type: String,
                    required: true
                },
                index: {
                    type: Number,
                    required: true
                },
                isActive: {
                    type: Boolean,
                    required: true
                },
                isHolding: {
                    type: Boolean,
                    required: true
                }
            },
            setup() {
                return { timelineManager: new eN() };
            },
            computed: {
                classes() {
                    const t = [];
                    return this.isActive && t.push('active'), this.isHolding && t.push('holding'), this.text.length > 1 && t.push('long'), t;
                },
                text() {
                    return this.hotkey === ' ' ? this.$t('MENU.SPACEBAR') : this.hotkey;
                }
            },
            watch: {
                feedback: {
                    handler: 'onFeedbackChange',
                    deep: true
                },
                isHolding: 'onIsHoldingChange'
            },
            mounted() {
                this.timelineManager.setup(this.$refs, {
                    category: getComputedStyle(this.$refs.root).getPropertyValue('--category-color'),
                    categoryDark: getComputedStyle(this.$refs.root).getPropertyValue('--category-color-dark')
                });
            },
            methods: {
                onFeedbackChange(t) {
                    const e = t[t.length - 1];
                    if (e === 0 || e === 10) {
                        this.timelineManager.play('perfect', e === 10);
                        return;
                    }
                    if (e === 1 || e === 11) {
                        this.timelineManager.play('good', e === 11);
                        return;
                    }
                    if (e === 2 || e === 12) {
                        this.timelineManager.play('okay', e === 12);
                        return;
                    }
                    if (e === 3) {
                        this.timelineManager.play('miss', false);
                        return;
                    }
                    this.timelineManager.play('flub', false);
                },
                onIsHoldingChange(t) {
                    t || this.timelineManager.park();
                }
            }
        }), Z5 = t => (Ri('data-v-91f80890'), t = t(), Mi(), t), C7e = ['id'], x7e = Z5(() => V('circle', {
            class: 'back',
            cx: '55',
            cy: '55',
            r: '55'
        }, null, -1)), P7e = Z5(() => V('circle', {
            class: 'inner',
            cx: '55',
            cy: '55',
            r: '25'
        }, null, -1)), D7e = Z5(() => V('circle', {
            class: 'head',
            cx: '55',
            cy: '55',
            r: '53'
        }, null, -1)), $7e = ['fill'];
    function L7e(t, e, n, r, s, i) {
        return G(), K('div', {
            ref: 'root',
            class: nt([
                'lane',
                t.classes
            ])
        }, [(G(), K('svg', A7e, [
                V('linearGradient', {
                    id: `light-gradient-${ t.index }`,
                    class: 'light-gradient',
                    x1: '0%',
                    y1: '0%',
                    x2: '0%',
                    y2: '100%',
                    gradientUnits: 'objectBoundingBox'
                }, [
                    V('stop', I7e, null, 512),
                    V('stop', k7e, null, 512)
                ], 8, C7e),
                V('circle', N7e, null, 512),
                x7e,
                P7e,
                V('circle', R7e, null, 512),
                V('text', M7e, Nt(t.text), 1),
                D7e,
                V('path', {
                    class: 'light',
                    fill: `url(#light-gradient-${ t.index })`,
                    d: 'M114,55c0,32.58-26.42,59-59,59S-4,87.58-4,55v-315h118V55z'
                }, null, 8, $7e)
            ]))], 2);
    }
    const F7e = Je(O7e, [
            [
                'render',
                L7e
            ],
            [
                '__scopeId',
                'data-v-91f80890'
            ]
        ]), U7e = at({
            props: {
                feedback: {
                    type: Array,
                    required: true
                }
            },
            data() {
                return {
                    textItems: [],
                    cleanupInterval: window.setInterval(this.cleanup, 2000)
                };
            },
            watch: {
                feedback: {
                    handler: 'onFeedbackChange',
                    deep: true
                }
            },
            beforeUnmount() {
                window.clearInterval(this.cleanupInterval);
            },
            methods: {
                onFeedbackChange(t) {
                    const e = t[t.length - 1];
                    if (e !== null) {
                        (e === 0 || e === 10) && this.textItems.push([
                            'QUALITY.PERFECT',
                            'perfect',
                            Date.now()
                        ]);
                        (e === 1 || e === 11) && this.textItems.push([
                            'QUALITY.GOOD',
                            'good',
                            Date.now()
                        ]);
                        (e === 2 || e === 12) && this.textItems.push([
                            'QUALITY.OKAY',
                            'okay',
                            Date.now()
                        ]);
                    }
                },
                cleanup() {
                    const t = Date.now() - 2000, e = this.textItems.findIndex(([n, r, s]) => s < t);
                    this.textItems.splice(e);
                }
            }
        });
    function V7e(t, e, n, r, s, i) {
        const o = fn('t');
        return G(), K('div', B7e, [V('div', q7e, [(G(true), K(gt, null, wn(t.textItems, a => qe((G(), K('p', {
                    key: a[2],
                    class: nt([
                        'text-item',
                        a[1]
                    ])
                }, null, 2)), [[
                        o,
                        a[0]
                    ]])), 128))])]);
    }
    const G7e = Je(U7e, [
            [
                'render',
                V7e
            ],
            [
                '__scopeId',
                'data-v-b11a6ed5'
            ]
        ]), j7e = at({
            components: {
                Beatlines: QI,
                LaneLine: w7e,
                LaneRing: F7e,
                LaneText: G7e
            },
            props: {
                manager: {
                    type: Object,
                    required: true
                },
                showCta: {
                    type: Boolean,
                    required: true
                }
            },
            computed: {
                hotkeys() {
                    return this.$hotkeyManager.mappings.get(this.manager.lanes.length);
                },
                layout() {
                    return x5(this.manager.lanes.length);
                },
                lanes() {
                    return this.manager.lanes.map((t, e) => ({
                        isActive: t.isActive,
                        isHolding: t.activeInput !== void 0,
                        feedback: t.feedback,
                        hotkey: this.hotkeys.keys[e],
                        styles: {
                            width: `${ this.layout.hit }%`,
                            left: `${ this.layout.lanes[e].center }%`
                        }
                    }));
                },
                scrollStyles() {
                    return { transform: `translateY(${ this.manager.progress * 100 }%)` };
                },
                showCombo() {
                    return this.manager.currentCombo > this.manager.minimumDisplayCombo;
                },
                homeClasses() {
                    return this.showCta ? ['alert'] : [];
                },
                inputs() {
                    const t = [];
                    return this.manager.inputs.forEach(e => {
                        e.forEach(n => {
                            n.isVisible && n.indicators.forEach(r => {
                                const s = this.layout.lanes[r.lane];
                                if (s === void 0) {
                                    console.warn('unrenderable lane', r.lane);
                                    return;
                                }
                                const i = {
                                    classes: [],
                                    key: r.key,
                                    headStyles: {
                                        left: `${ s.center }%`,
                                        width: `${ this.layout.hit }%`,
                                        bottom: `${ n.y * 100 }%`
                                    }
                                };
                                n.isHolding && i.classes.push('holding');
                                n.isMissed && i.classes.push('missed');
                                n.isTaken && i.classes.push('taken');
                                n.isHold && n.height && (i.holdStyles = {
                                    left: i.headStyles.left,
                                    width: `${ this.layout.hit * 0.65 }%`,
                                    bottom: i.headStyles.bottom,
                                    height: `${ n.height * 100 }%`
                                });
                                t.push(i);
                                ;
                            });
                        });
                    }), t;
                }
            }
        }), tN = t => (Ri('data-v-546beebe'), t = t(), Mi(), t), Y7e = tN(() => V('div', { class: 'home' }, null, -1)), e9e = tN(() => V('circle', {
            cx: '55',
            cy: '55',
            r: '53'
        }, null, -1)), t9e = [e9e];
    function o9e(t, e, n, r, s, i) {
        const o = We('Beatlines'), a = We('LaneLine'), l = We('LaneRing'), u = We('LaneText'), f = fn('t');
        return G(), K('div', W7e, [
            V('div', H7e, [Ye(o, {
                    class: 'scroll-container',
                    guide: t.manager.guide,
                    duration: t.manager.duration,
                    style: an(t.scrollStyles)
                }, null, 8, [
                    'guide',
                    'duration',
                    'style'
                ])]),
            t.showCombo ? (G(), K('div', z7e)) : De('', true),
            V('div', {
                class: nt([
                    'constrainer',
                    t.homeClasses
                ])
            }, [
                Y7e,
                (G(true), K(gt, null, wn(t.lanes, (d, p) => (G(), wt(a, {
                    key: p,
                    style: an(d.styles),
                    feedback: d.feedback,
                    index: p,
                    'is-active': d.isActive,
                    'is-holding': d.isHolding
                }, null, 8, [
                    'style',
                    'feedback',
                    'index',
                    'is-active',
                    'is-holding'
                ]))), 128))
            ], 2),
            V('div', K7e, [V('div', {
                    class: 'scroll-container',
                    style: an(t.scrollStyles)
                }, [V('div', Z7e, [(G(true), K(gt, null, wn(t.inputs, d => (G(), K(gt, { key: d.key }, [d.holdStyles ? (G(), K('div', {
                                key: 0,
                                class: nt([
                                    'hold',
                                    d.classes
                                ]),
                                style: an(d.holdStyles)
                            }, null, 6)) : De('', true)], 64))), 128))])], 4)]),
            V('div', X7e, [(G(true), K(gt, null, wn(t.lanes, (d, p) => (G(), wt(l, {
                    key: p,
                    style: an(d.styles),
                    feedback: d.feedback,
                    hotkey: d.hotkey,
                    index: p,
                    'is-active': d.isActive,
                    'is-holding': d.isHolding
                }, null, 8, [
                    'style',
                    'feedback',
                    'hotkey',
                    'index',
                    'is-active',
                    'is-holding'
                ]))), 128))]),
            V('div', Q7e, [V('div', {
                    class: 'scroll-container',
                    style: an(t.scrollStyles)
                }, [V('div', J7e, [(G(true), K(gt, null, wn(t.inputs, d => (G(), K('svg', {
                            key: d.key,
                            class: nt([
                                'head',
                                d.classes
                            ]),
                            viewBox: '0 0 110 110',
                            style: an(d.headStyles)
                        }, t9e, 6))), 128))])], 4)]),
            V('div', n9e, [(G(true), K(gt, null, wn(t.lanes, (d, p) => (G(), wt(u, {
                    key: p,
                    style: an(d.styles),
                    feedback: d.feedback
                }, null, 8, [
                    'style',
                    'feedback'
                ]))), 128))]),
            Ye(Ta, { name: 'cta' }, {
                default: go(() => [t.showCta ? (G(), K('div', r9e, [V('div', s9e, [qe(V('p', i9e, null, 512), [[
                                    f,
                                    'INFO.DISCRETE'
                                ]])])])) : De('', true)]),
                _: 1
            })
        ]);
    }
    const a9e = Je(j7e, [
            [
                'render',
                o9e
            ],
            [
                '__scopeId',
                'data-v-546beebe'
            ]
        ]), c9e = at({
            props: {
                manager: {
                    type: Object,
                    required: true
                }
            },
            emits: { didProveAsDesktop: () => true },
            computed: {
                hotkeys() {
                    return this.$hotkeyManager.mappings.get(this.manager.lanes.length).keys;
                },
                layout() {
                    return x5(this.manager.lanes.length);
                }
            },
            mounted() {
                window.addEventListener('keydown', this.onKeyDown);
                window.addEventListener('keyup', this.onKeyUp);
                ;
            },
            beforeUnmount() {
                window.removeEventListener('keydown', this.onKeyDown);
                window.removeEventListener('keyup', this.onKeyUp);
                ;
            },
            methods: {
                onPointerBoxStart(t) {
                    if (t.detail.type === 'mouse' && this.$emit('didProveAsDesktop'), !this.manager.isRunning) {
                        return;
                    }
                    const e = t.detail.percentX * 100;
                    if (e < 0 || e > 100) {
                        return;
                    }
                    const n = this.layout.lanes.findIndex(r => e >= r.left && e <= r.right);
                    n !== -1 && this.manager.onDown(n, t.detail.id);
                },
                onPointerBoxEnd(t) {
                    this.manager.onUp(t.detail.id);
                },
                onKeyDown(t) {
                    if (this.$emit('didProveAsDesktop'), t.repeat || !this.manager.isRunning) {
                        return;
                    }
                    const e = t.key.toLowerCase(), n = this.hotkeys.indexOf(e);
                    n !== -1 && this.manager.onDown(n, e);
                },
                onKeyUp(t) {
                    if (t.repeat) {
                        return;
                    }
                    const e = t.key.toLowerCase();
                    this.manager.onUp(e);
                },
                onContextMenu(t) {
                    return t.preventDefault(), false;
                }
            }
        });
    function l9e(t, e, n, r, s, i) {
        const o = fn('pointerbox');
        return qe((G(), K('div', {
            class: 'constrainer controls',
            onContextmenu: e[0] || (e[0] = (...a) => t.onContextMenu && t.onContextMenu(...a)),
            'onPointerbox:start': e[1] || (e[1] = (...a) => t.onPointerBoxStart && t.onPointerBoxStart(...a)),
            'onPointerbox:end': e[2] || (e[2] = (...a) => t.onPointerBoxEnd && t.onPointerBoxEnd(...a))
        }, null, 544)), [[
                o,
                void 0,
                void 0,
                {
                    multi: true,
                    restrict: true
                }
            ]]);
    }
    const u9e = Je(c9e, [[
                'render',
                l9e
            ]]), h9e = at({
            components: {
                ContinuousControls: H6e,
                ContinuousVisuals: bwe,
                DiscreteControls: u9e,
                DiscreteVisuals: a9e,
                InstrumentSVG: cC
            },
            props: {
                beatmap: {
                    type: Object,
                    required: true
                },
                countInOffset: {
                    type: Number,
                    required: true
                },
                instrument: {
                    type: Object,
                    required: true
                },
                isAudience: {
                    type: Boolean,
                    required: true
                },
                player: {
                    type: Object,
                    required: true
                },
                shouldRun: {
                    type: Boolean,
                    required: true
                }
            },
            data({
                beatmap: t,
                instrument: e,
                player: n
            }) {
                const r = {
                    beatmap: t.config,
                    criteria: {
                        time: n.recordingInfo.discreteCriteria,
                        factors: n.recordingInfo.continuousCriteriaFactors,
                        percentage: n.recordingInfo.continuousPercentageCriteria,
                        signal: n.recordingInfo.continuousSignalCriteria
                    },
                    duration: n.recordingInfo.duration,
                    guide: n.guide.guide,
                    instrument: e.config,
                    isAudience: this.isAudience,
                    minimumDisplayCombo: n.recordingInfo.minDisplayCombo,
                    noteQualityScoreFactors: n.recordingInfo.noteQualityScoreFactors,
                    offset: n.recordingInfo.position,
                    responseKey: n.responseEntity,
                    scorePerHighestCombo: n.recordingInfo.scorePerHighestCombo,
                    scorePoolPerDifficulty: n.recordingInfo.scorePoolPerDifficulty,
                    successPercentage: n.recordingInfo.successPercentage,
                    wsClient: this.$ecast
                };
                return {
                    manager: t.config.type === 'Continuous' ? new V6e(r) : new Ewe(r),
                    showCTA: false
                };
            },
            computed: {
                classes() {
                    const t = [];
                    return this.beatmap.config.type === 'Continuous' ? t.push('continuous') : t.push('discrete'), t;
                },
                categoryKey() {
                    return lr.categoryI18ByKey(this.beatmap.config.category);
                }
            },
            watch: {
                shouldRun: {
                    immediate: true,
                    handler: 'onShouldRunChange'
                }
            },
            beforeUnmount() {
                var t;
                (t = this.manager) == null || t.destroy();
                this.manager = null;
                ;
            },
            methods: {
                onShouldRunChange(t, e) {
                    var n;
                    if (t && !e) {
                        let r = this.countInOffset;
                        this.player.recordingInfo.position ? r += this.player.recordingInfo.timeAfterCountInDuringSong : (r += this.player.recordingInfo.timeAfterCountInBeforeSong, this.showCTA = true, window.setTimeout(() => {
                            this.showCTA = false;
                        }, r + 1000));
                        window.setTimeout(() => {
                            var s;
                            (s = this.manager) == null || s.start(this.player.recordingInfo.position);
                        }, r);
                        ;
                    }
                    !t && e && ((n = this.manager) == null || n.stop());
                }
            }
        });
    function y9e(t, e, n, r, s, i) {
        const o = We('ContinuousVisuals'), a = We('ContinuousControls'), l = We('DiscreteVisuals'), u = We('DiscreteControls'), f = We('InstrumentSVG'), d = fn('t');
        return t.manager ? (G(), K('div', {
            key: 0,
            class: nt([
                t.classes,
                'beatmap'
            ])
        }, [
            t.beatmap.config.type === 'Continuous' ? (G(), K(gt, { key: 0 }, [
                Ye(o, {
                    manager: t.manager,
                    'show-cta': t.showCTA
                }, null, 8, [
                    'manager',
                    'show-cta'
                ]),
                t.manager.isLoaded ? (G(), wt(a, {
                    key: 0,
                    manager: t.manager
                }, null, 8, ['manager'])) : De('', true)
            ], 64)) : (G(), K(gt, { key: 1 }, [
                Ye(l, {
                    manager: t.manager,
                    'show-cta': t.showCTA
                }, null, 8, [
                    'manager',
                    'show-cta'
                ]),
                t.manager.isLoaded ? (G(), wt(u, {
                    key: 0,
                    manager: t.manager
                }, null, 8, ['manager'])) : De('', true)
            ], 64)),
            V('div', f9e, [V('div', d9e, [
                    V('div', p9e, [Ye(f, {
                            category: t.beatmap.config.category,
                            slug: t.instrument.config.slug,
                            class: 'icon'
                        }, null, 8, [
                            'category',
                            'slug'
                        ])]),
                    V('div', m9e, [
                        V('p', g9e, Nt(t.instrument.name), 1),
                        qe(V('p', _9e, null, 512), [[
                                d,
                                t.categoryKey
                            ]])
                    ])
                ])])
        ], 2)) : De('', true);
    }
    const v9e = Je(h9e, [[
                'render',
                y9e
            ]]), A9e = at({
            props: {
                state: {
                    type: String,
                    required: true
                },
                keys: {
                    type: Array,
                    required: true
                }
            },
            emits: { didCountIn: t => true },
            setup() {
                const t = Pt.supportsType('ogg') ? 'ogg' : 'mp3';
                return {
                    players: new uf({
                        one: new URL(Object.assign({
                            '../../assets/tap1.mp3': 'https://bundles.jackbox.tv/main/pp10-nopus-opus/assets/50849cf6.mp3',
                            '../../assets/tap1.ogg': 'https://bundles.jackbox.tv/main/pp10-nopus-opus/assets/9431923a.ogg'
                        })[`../../assets/tap1.${ t }`], self.location).href,
                        two: new URL(Object.assign({
                            '../../assets/tap2.mp3': 'https://bundles.jackbox.tv/main/pp10-nopus-opus/assets/2188b01d.mp3',
                            '../../assets/tap2.ogg': 'https://bundles.jackbox.tv/main/pp10-nopus-opus/assets/9f40765c.ogg'
                        })[`../../assets/tap2.${ t }`], self.location).href,
                        three: new URL(Object.assign({
                            '../../assets/tap3.mp3': 'https://bundles.jackbox.tv/main/pp10-nopus-opus/assets/20141192.mp3',
                            '../../assets/tap3.ogg': 'https://bundles.jackbox.tv/main/pp10-nopus-opus/assets/8e80ea3f.ogg'
                        })[`../../assets/tap3.${ t }`], self.location).href
                    }).toDestination()
                };
            },
            data() {
                return {
                    taps: 3,
                    count: 0,
                    timeoutDuration: 2500,
                    timeout: null
                };
            },
            computed: {
                titleKey() {
                    return this.state === 'Inactive' ? 'COUNT_IN.WAIT' : null;
                },
                infoKey() {
                    return this.state === 'Inactive' ? 'COUNT_IN.TAP_ALONG' : this.count === 0 ? 'COUNT_IN.GET_READY' : 'COUNT_IN.SYNCING';
                },
                buttonKey() {
                    return this.state === 'Inactive' ? 'COUNT_IN.TAP_HERE' : this.count === this.taps ? 'COUNT_IN.SYNCED' : 'COUNT_IN.TAP';
                },
                classes() {
                    const t = [];
                    return this.state !== 'Inactive' && this.state !== 'CountIn' && t.push('resync'), this.state === 'Inactive' ? t.push('inactive') : (t.push('tap-0'), this.count >= 1 && t.push('tap-1'), this.count >= 2 && t.push('tap-2'), this.count >= 3 && t.push('tap-3', 'synced')), t;
                }
            },
            mounted() {
                window.addEventListener('keydown', this.onKeyDown);
            },
            beforeUnmount() {
                window.removeEventListener('keydown', this.onKeyDown);
            },
            methods: {
                onKeyDown(t) {
                    this.$hotkeyManager.checkEvent(t);
                    this.keys.includes(t.key) && this.state !== 'Inactive' && this.onCount();
                    ;
                },
                onPointerDown(t) {
                    this.$hotkeyManager.checkEvent(t);
                    this.state !== 'Inactive' && this.onCount();
                    ;
                },
                onTimeout() {
                    this.count = this.taps;
                    this.$emit('didCountIn', this.timeoutDuration);
                    ;
                },
                async onCount() {
                    this.count += 1;
                    this.$vibrate();
                    this.timeout && (window.clearTimeout(this.timeout), this.timeout = null);
                    ;
                    try {
                        await uI();
                        this.count === 1 && this.players.player('one').start(0, 0.01);
                        this.count === 2 && this.players.player('two').start(0, 0.01);
                        this.count === 3 && this.players.player('three').start(0, 0.01);
                        ;
                    } catch (t) {
                        console.warn(t);
                    }
                    if (this.count === this.taps) {
                        this.$emit('didCountIn', 0);
                        return;
                    }
                    this.timeout = window.setTimeout(() => {
                        this.onTimeout();
                    }, this.timeoutDuration);
                }
            }
        }), k9e = Ea('<div class="pips" data-v-37be8aae><svg viewBox="0 0 500 420" data-v-37be8aae><path class="off" d="m412.04,321.58c48.43-52.01,47.19-149.17-8.36-195.23-36.19-24.05-68.2-31.14-96.45-26.38-2.21-30.37-4.01-58.37-19.63-83.11-14.7-22.41-42.96-1.41-32.98,20.67,10.82,19.51,41.7,46.16,44.96,64.06-68.54,17.11-114.06,104.55-142.89,183.89-35.21-42.2-64.47-84.61-80.59-120.44-12.49,44.6-3.62,96.45,23.74,133.67-13.53-7.22-26.44-15.24-38.69-23.74,7.19,36.02,42.04,64.14,76.51,75.63l-1.76-.88c31.9,13.71,69.86,22.37,108.4,24.18,1.05,8.9-5.57,39.76,7.23,38.7,11.91.71,6.31-29.14,6.83-38.34,9.55.03,19.09-.38,28.55-1.25.92,9.95-6.32,49.68,12.11,37.39,4.17-1.53,2.12-32.1,2.18-39.08,42.1-6.06,81.57-21.76,110.83-49.73Z" data-v-37be8aae></path><path class="on" d="m353.31,299.96c-4.8,3.26-9.49,6.61-14.34,9.7-12.51,7.99-26.41,12.64-40.56,16.82-15.18,4.48-30.68,6.87-46.4,8.27-1.13.1-2.63,2.07-3.01,3.43-1.03,3.66-1.46,7.48-2.3,11.19-1.48,6.64-6.29,9.67-12.34,7.9-5.1-1.49-7.45-7.08-5.69-13.11.87-2.97,1.42-6.03,2.24-9.61-7.34,0-14.23.28-21.08-.06-11.61-.58-23.19-1.58-34.79-2.34-9.15-.6-18.36-.73-27.46-1.75-30.11-3.38-58.82-10.32-80.53-33.67-.52-.56-.98-1.16-1.15-2.73,12.49,1.86,24.97,3.73,37.46,5.59.26-.51.52-1.03.78-1.54-16.51-11.59-31.63-24.54-42.78-41.47-10.97-16.65-19.52-34.23-22.52-55.22,2.19,1.16,3.79,1.73,5.04,2.72,27.34,21.58,56.67,40.05,87.79,55.75,6.22,3.14,12.39,6.37,18.59,9.55,1.82-2.11,2.58-22.48,1.17-31.83-3.9.46-7.79,1.06-11.71,1.34-9.32.67-18.3-1.53-26.65-5.05-14.06-5.92-26.84-14.05-36.95-25.75-1.61-1.86-2.95-3.96-4.3-6.02-5.36-8.22-.25-11.72,7.03-12.57,4.75-.56,9.57-.55,14.36-.87,1-.07,1.97-.47,4.07-1.01-2.41-1.75-3.9-3.01-5.56-3.99-7.35-4.36-15.02-8.24-22.04-13.07-5.73-3.94-11.13-8.58-15.91-13.63-5.56-5.88-4.06-12.05,3.31-15.64,2.65-1.29,5.72-2.27,8.63-2.36,8.63-.25,17.31-.43,25.91.2,8.07.6,16.09,2.05,24.06,3.52,13.35,2.48,25.89,7.24,37.61,14.08,3.1,1.81,4.34.3,5.24-2.65,2.39-7.79,4.44-15.74,7.65-23.2,7.69-17.92,18.64-33.41,34.93-44.93,10.48-7.42,22.1-12.21,33.98-16.57,17.16-6.3,35.14-8.26,53.13-6.67,25.05,2.22,47.3,11.92,65.58,29.44,7.32,7.02,13.89,14.8,20.6,22.02,9.09-5.48,18.49-11.59,28.31-16.96,13.93-7.61,28.88-12.7,44.53-15.49,4.02-.72,8.3-.61,12.39-.22,6.51.63,12.35,6.87,8.27,14.55-6.49,12.23-16.62,21.09-26.33,30.43-3.03,2.92-6.19,5.7-9.12,9.45,4.11-.32,8.22-.64,12.33-.95,3.82-.28,7.65-.68,11.48-.76,3.23-.07,5.07,2.11,4.79,4.97-.36,3.6-.98,7.45-2.63,10.6-10.49,19.98-26.18,34.43-47.43,42.64-3.71,1.43-7.64,2.32-11.34,3.77-1.05.41-2.27,1.83-2.41,2.91-1.43,11.18-2.15,22.47-4.05,33.56-3.72,21.75-13.64,40.61-28.87,56.63-2.12,2.23-2.37,3.68.07,5.52,10.22,7.69,20.4,15.42,30.66,23.06,2.31,1.72,4.98,2.97,7.25,4.75,3.51,2.75,4.36,6.85,2.44,10.24-1.99,3.53-6.45,5.46-10.36,3.57-3.91-1.89-7.76-4.32-10.92-7.27-9.64-9.04-18.93-18.44-28.35-27.7-.48-.47-1.01-.9-1.78-1.58Z" data-v-37be8aae></path></svg><svg viewBox="0 0 500 420" data-v-37be8aae><path class="off" d="m412.04,321.58c48.43-52.01,47.19-149.17-8.36-195.23-36.19-24.05-68.2-31.14-96.45-26.38-2.21-30.37-4.01-58.37-19.63-83.11-14.7-22.41-42.96-1.41-32.98,20.67,10.82,19.51,41.7,46.16,44.96,64.06-68.54,17.11-114.06,104.55-142.89,183.89-35.21-42.2-64.47-84.61-80.59-120.44-12.49,44.6-3.62,96.45,23.74,133.67-13.53-7.22-26.44-15.24-38.69-23.74,7.19,36.02,42.04,64.14,76.51,75.63l-1.76-.88c31.9,13.71,69.86,22.37,108.4,24.18,1.05,8.9-5.57,39.76,7.23,38.7,11.91.71,6.31-29.14,6.83-38.34,9.55.03,19.09-.38,28.55-1.25.92,9.95-6.32,49.68,12.11,37.39,4.17-1.53,2.12-32.1,2.18-39.08,42.1-6.06,81.57-21.76,110.83-49.73Z" data-v-37be8aae></path><path class="on" d="m260.59,361.54c-.48,1.56-.49,3.63-1.54,4.54-1.48,1.3-3.83,2.6-5.6,2.37-3.18-.41-4.73-3.07-4.73-6.32,0-11.51.06-23.03.09-34.54-.01-.55-.02-1.09-.03-1.64-2.31-3.3-5.33-.62-7.86-.62-6.24,0-12.48.89-18.72,1.49-.6.06-1.16.54-1.74.82-.23.82-.45,1.63-.68,2.45-.06,9.72-.13,19.45-.17,29.17-.02,5.81-2.17,9.54-5.59,9.57-3.46.03-5.9-3.48-6.3-9.04,0-.3-.01-.6-.02-.91.03-8.77.07-17.53.1-26.3.02-.3.03-.6.05-.9-.36-1.25-.71-2.5-1.08-3.79-2.91,0-5.75,0-8.59,0-.36.02-.72.05-1.09.07-.75,0-1.5.02-2.25.02-3.11-.01-6.22-.02-9.33-.03-.76-.03-1.51-.06-2.27-.09-.34-.03-.69-.06-1.03-.09-8.09-.33-16.21-.45-24.28-1.08-5.11-.4-10.25-1.21-15.22-2.45-11.02-2.74-22.12-5.36-32.87-8.97-15.31-5.13-27.76-14.77-38.5-26.63-.57-.63-.78-1.6-1.7-3.57,4.49.52,8.11.65,11.59,1.41,7.1,1.53,14.11,3.45,21.18,5.08,1.01.23,2.18-.24,3.28-.38-.48-1-.72-2.24-1.47-2.96-7.47-7.1-15.48-13.71-22.46-21.25-12.02-12.97-19.96-28.45-26.34-44.85-3.56-9.16-5.85-18.54-7.32-28.18-.22-1.44-.03-2.94-.03-5.63,28.37,26.71,58.97,48.6,91.7,67.53.55-.35,1.1-.7,1.65-1.05-.73-4.2-1.51-8.4-2.18-12.61-.88-5.59-1.56-11.2-2.58-16.76-.19-1.02-1.39-2.29-2.41-2.68-26.61-9.97-51.02-23.77-73.28-41.34-9.52-7.51-19.2-14.83-28.45-22.65-5.63-4.76-11.36-7.66-19.05-6.87-7.32-.99-13.49-1.99-13.42-8.02.05-4.26.29-4.35-.02-8.58-.25-3.42,8.51-6.28,11.58-6.42,3.26-.15,6.52-.8,9.71-1.54,1.15-.27,2.43-1.23,3.08-2.24,3.63-5.6,6.76-11.54,10.68-16.92,4.15-5.69,4.44-8.14-1.31-12.19-8.16-5.75-14.15-13.05-17.09-22.47-1.55-4.97-2.21-10.29-2.64-15.51-.16-1.99.89-5.19,2.37-5.96,2.54-1.31,5.72-1.26,8.41,1.13,10.61,9.42,21.33,18.71,32.03,28.02,15.59,13.56,31.25,27.04,46.79,40.64,8.6,7.53,17.01,15.27,25.57,22.85.91.8,2.27,1.11,3.42,1.64.53-1.15,1.32-2.24,1.55-3.44,1.93-10.07,4.53-19.92,9.6-28.94,2.16-3.83,3.09-7.36,1.75-11.97-1.72-5.95-2.14-12.27-3-18.45-.61-4.36,1.81-7.35,5.59-8.48,7.13-2.14,14.39-4.16,21.73-5.28,9.16-1.4,18.54-1.43,27.7-2.83,6.21-.95,12.15-3.59,18.33-4.84,7.03-1.43,14.19-2.29,21.33-3.14,4.49-.53,9.03-.88,13.55-.8,14.07.23,27.52,3.46,40.71,8.24,3.6,1.31,7.77,1.04,11.66,1.58,9.68,1.35,19.38,2.64,29.03,4.19,2.94.47,5.83,1.48,8.61,2.59,4.52,1.79,6.01,6.09,4.79,12.26-.94,4.76-1.79,9.54-2.37,14.36-.19,1.62.05,3.72.97,4.97,6.81,9.26,11.59,19.51,15.64,30.16.33.86.83,1.66,1.62,3.22,1.92-1.55,3.6-2.81,5.18-4.19,31-27.1,62-54.21,92.99-81.32.72-.63,1.42-1.6,2.25-1.76,2.22-.42,4.8-1.19,6.67-.44,1.26.5,2.12,3.33,2.21,5.16.47,10.26-2.01,19.94-7.96,28.3-2.8,3.92-6.93,6.97-10.72,10.11-6.09,5.05-6.16,6.81-1.65,13.03,3.83,5.27,6.82,11.13,10.41,16.59.84,1.28,2.47,2.59,3.93,2.85,9.82,1.77,19.71,3.19,29.54,4.9,2.61.45,5.7.76,6.36,4.18.73,3.76-.74,6.69-3.9,8.82-6.11,4.12-13.16,6.16-20.24,5.9-9.6-.35-17.39,1.82-24.91,8.21-12.37,10.5-25.61,19.98-38.64,29.7-14.74,11-31.07,19.32-47.49,27.48-2.22,1.1-4.65,3.28-5.44,5.5-5.09,14.37-11.05,28.32-19.5,41.05-12.93,19.48-28.24,36.71-49.75,47.15-7.98,3.87-16.65,6.31-24.98,9.47-2.03.77-4.99.45-5.12,3.8-.05,1.18-.1,2.37-.16,3.55.09,10.64.19,21.27.28,31.91-.06.64-.12,1.27-.18,1.91ZM148.63,102.21c.5.16,1,.32,1.51.47.59-1.24,1.6-2.46,1.65-3.72.07-1.86.13-4.41-3.56-3.35.13,2.2.27,4.4.4,6.59Z" data-v-37be8aae></path></svg><svg viewBox="0 0 500 420" data-v-37be8aae><path class="off" d="m412.04,321.58c48.43-52.01,47.19-149.17-8.36-195.23-36.19-24.05-68.2-31.14-96.45-26.38-2.21-30.37-4.01-58.37-19.63-83.11-14.7-22.41-42.96-1.41-32.98,20.67,10.82,19.51,41.7,46.16,44.96,64.06-68.54,17.11-114.06,104.55-142.89,183.89-35.21-42.2-64.47-84.61-80.59-120.44-12.49,44.6-3.62,96.45,23.74,133.67-13.53-7.22-26.44-15.24-38.69-23.74,7.19,36.02,42.04,64.14,76.51,75.63l-1.76-.88c31.9,13.71,69.86,22.37,108.4,24.18,1.05,8.9-5.57,39.76,7.23,38.7,11.91.71,6.31-29.14,6.83-38.34,9.55.03,19.09-.38,28.55-1.25.92,9.95-6.32,49.68,12.11,37.39,4.17-1.53,2.12-32.1,2.18-39.08,42.1-6.06,81.57-21.76,110.83-49.73Z" data-v-37be8aae></path><path class="on" d="m382.51,346.63c.79.02,1.58.05,2.37.07.32,0,.64.02.96.03.78,0,1.56,0,2.34.01.32,0,.65,0,.97,0,2.99,0,5.98.02,8.97.02.33,0,.65.02.98.03.78,0,1.57,0,2.35-.01.59,0,1.19,0,1.78,0,.52,0,1.03,0,1.55,0,.86-.05,1.72-.11,2.58-.16h5.75c-1.31,1.82-1.93,3.19-2.97,4.04-12.2,10.08-26.1,17.08-41.72,19.44-11.72,1.77-23.73,1.63-35.61,2.34-.37-.05-.74-.11-1.12-.16-7.56-1.36-15.12-2.72-23.86-4.29,0,8.93.01,17.78,0,26.64-.01,5.63.1,11.27-.16,16.89-.25,5.45-3.4,8.64-7.7,8.33-3.57-.26-6.16-2.79-6.19-6.39-.08-10.3-.17-20.61,0-30.91.08-5,.71-9.99,1.16-15.81-2.52.57-4.23.78-5.81,1.35-11.1,4.06-22.65,6.76-34.36,6.93-9.9.14-19.81-2.25-28.84-6.78-3.78-1.9-4.83-.63-6.06,2.86-4.48,12.78-9.21,25.47-14.05,38.12-2.34,6.12-5.56,11.56-13.96,10.66-4.23-3.52-.67-7.46.67-11.02,5.76-15.25,11.86-30.37,17.78-45.57,1.01-2.59.65-4.89-1.44-7.16-11.9-12.95-21.14-27.74-29.62-43.04-.77-1.4-1.74-2.69-3.04-4.69-2.51,2.49-4.61,4.56-6.7,6.65-16.05,16-34.37,28.11-56.84,33.33-24.39,5.66-51.37-11.01-56.93-31.15-2.2-7.95-3.89-16.15-4.71-24.35-.97-9.77-1.08-19.66-.9-29.49.12-6.31.92-12.71,2.36-18.85,2.17-9.22,9.16-15.13,17.04-19.22,9.82-5.09,20.09-9.49,30.54-13.13,10.8-3.76,22.34,1.56,27.15,11.92,2.62,5.66,4.24,11.78,6.21,17.73.38,1.14.62,2.56.29,3.66-1.49,5.05-1.3,9.73,1.09,14.62.74,1.51-.38,4.65-1.66,6.27-2.86,3.63-6.04,7.17-9.69,9.99-2.84,2.2-4.38,4.36-3.85,7.88.52,3.43.28,7.18,1.65,10.22,2,4.42,6.18,5.28,11.06,4.54,8.85-1.33,16.65-4.72,23.55-10.29,7.28-5.87,7.38-7.27,4.51-16.28-4.63-14.53-9.22-29.04-10.28-44.48-1.47-21.35,1.03-41.86,10.35-61.34,6.01-12.56,14.85-22.92,26.07-30.94,8.68-6.2,17.74-12.4,27.53-16.43,9.71-4,20.5-5.56,30.92-7.68,5.46-1.12,11.13-1.48,16.73-1.63,14.14-.38,27.71,2.14,41.01,7.22,15.64,5.97,29.09,14.84,40.58,26.81,1.8,1.87,3.3,4.04,4.8,6.17,1.85,2.62,3.23,2.19,4.31-.52,4.47-11.29,8.91-22.59,13.37-33.89,2.44-6.17,4.89-12.34,7.36-18.51,6.31-15.77,12.62-31.55,18.95-47.31,5.73-14.26,11.5-28.51,17.25-42.76,2.19-5.43,6.07-7.67,12.05-7.11,3.17.3,4.34,1.83,4.99,4.43,2.4,9.68-.42,18.57-4.05,27.39-3.29,7.99-6.37,16.07-9.56,24.1-1.06,2.67-.54,4.71,2.88,6.5,2.47-4.73,5.01-9.22,7.2-13.87,4.67-9.9,9.07-19.92,13.78-29.8,1.28-2.69,3.03-5.26,5.01-7.51,2.83-3.22,8.57-3.98,12.21-2.06,3.73,1.96,5.23,4.96,3.32,10.25-3.19,8.85-7.03,17.48-10.88,26.08-3.19,7.1-6.7,14.06-10.25,21-1.14,2.22-.16,2.81,1.5,4.12,3.68,2.92,7.55,5.96,10.2,9.74,5.21,7.44,2.66,15.01-1.82,21.77-18.61,28.07-37.4,56.03-56.2,83.98-3.91,5.82-7.72,11.78-12.29,17.06-4.55,5.26-3.28,10.93-3.13,16.82.27,10.36.24,20.73,0,31.09-.24,10.55-2.6,20.76-6,30.74-1.35,3.96-2.72,7.91-4.43,12.85,2.76-.61,4.97-.82,6.98-1.57,26.24-9.8,51.35-21.98,75.68-35.77,2.27-1.29,4.41-2.83,6.71-4.06.67-.36,1.7-.07,2.56-.08,0,.88.24,1.84-.02,2.63-4.62,13.7-11.57,26.14-20.09,37.82-13.91,19.06-30.71,34.86-51.66,46.07-2.53,1.35-5.29,2.26-7.93,3.42-1.01.44-1.97,1-2.95,1.51.07.45.14.89.21,1.34,2.73.17,5.46.35,8.19.52.31.01.62.02.93.03Z" data-v-37be8aae></path></svg></div>', 1), M9e = ['disabled'];
    function D9e(t, e, n, r, s, i) {
        const o = fn('t'), a = fn('bb');
        return G(), K('div', {
            class: nt([
                'count-in',
                t.classes
            ])
        }, [V('div', C9e, [
                V('div', I9e, [
                    k9e,
                    V('div', N9e, [
                        t.titleKey ? qe((G(), K('p', x9e, null, 512)), [[
                                o,
                                t.titleKey
                            ]]) : De('', true),
                        t.infoKey ? qe((G(), K('p', P9e, null, 512)), [[
                                o,
                                t.infoKey
                            ]]) : De('', true)
                    ])
                ]),
                V('div', R9e, [qe(V('button', {
                        class: 'tap',
                        disabled: t.state === 'Inactive',
                        onPointerdown: e[0] || (e[0] = (...l) => t.onPointerDown && t.onPointerDown(...l))
                    }, null, 40, M9e), [[
                            a,
                            t.$t(t.buttonKey)
                        ]])])
            ])], 2);
    }
    const $9e = Je(A9e, [
            [
                'render',
                D9e
            ],
            [
                '__scopeId',
                'data-v-37be8aae'
            ]
        ]), L9e = at({
            props: {
                messageKey: {
                    type: String,
                    required: true
                }
            }
        });
    function B9e(t, e, n, r, s, i) {
        const o = fn('t');
        return G(), K('div', F9e, [V('div', U9e, [qe(V('p', null, null, 512), [[
                        o,
                        t.messageKey
                    ]])])]);
    }
    const q9e = Je(L9e, [
            [
                'render',
                B9e
            ],
            [
                '__scopeId',
                'data-v-1d7561d6'
            ]
        ]), V9e = at({
            components: {
                Beatmap: v9e,
                CountIn: $9e,
                Interruption: q9e
            },
            props: {
                beatmap: {
                    type: Object,
                    required: true
                },
                hostIsPaused: {
                    type: Boolean,
                    required: true
                },
                info: {
                    type: Object,
                    required: true
                },
                instrument: {
                    type: Object,
                    required: true
                },
                player: {
                    type: Object,
                    required: true
                }
            },
            data({player: t}) {
                const e = !t.recordingInfo.isTesting && t.recordingInfo.recordingState === 'Playing', n = t.recordingInfo.isTesting ?? false, r = !t.recordingInfo.isTesting;
                return {
                    runBeatmap: n,
                    showCountIn: r,
                    countInOffset: 0,
                    wasJoinedInProgress: e,
                    isDesktop: false
                };
            },
            computed: {
                classes() {
                    return [lr.categorySlugByKey(this.beatmap.config.category)];
                },
                drawDistance() {
                    return `${ this.player.recordingInfo.duration * 0.05 }%`;
                },
                hotkeys() {
                    return this.$hotkeyManager.getCountInKeys(this.beatmap.config.laneCount ?? null);
                }
            },
            watch: {
                hostIsPaused: {
                    handler: 'onPauseChanged',
                    immediate: true
                }
            },
            methods: {
                onPauseChanged(t) {
                    if (!this.player.recordingInfo.isTesting) {
                        if (t) {
                            this.runBeatmap = false;
                            this.showCountIn = false;
                            this.wasJoinedInProgress = false;
                            ;
                            return;
                        }
                        this.showCountIn = true;
                    }
                },
                onDidCountIn(t) {
                    this.countInOffset = t;
                    this.runBeatmap = true;
                    window.setTimeout(() => {
                        this.showCountIn = false;
                    }, 1000);
                    ;
                }
            }
        });
    function G9e(t, e, n, r, s, i) {
        const o = We('Beatmap'), a = We('CountIn'), l = We('Interruption');
        return G(), K('div', {
            class: nt([
                'recording',
                t.classes
            ]),
            style: an({ '--draw-distance': t.drawDistance })
        }, [
            t.wasJoinedInProgress ? De('', true) : (G(), wt(o, {
                key: t.instrument.name,
                beatmap: t.beatmap,
                'count-in-offset': t.countInOffset,
                instrument: t.instrument,
                'is-audience': t.info.isAudience ?? false,
                player: t.player,
                'should-run': t.runBeatmap
            }, null, 8, [
                'beatmap',
                'count-in-offset',
                'instrument',
                'is-audience',
                'player',
                'should-run'
            ])),
            !t.wasJoinedInProgress && t.showCountIn ? (G(), wt(a, {
                key: 1,
                state: t.player.recordingInfo.recordingState,
                keys: t.hotkeys,
                onDidCountIn: t.onDidCountIn
            }, null, 8, [
                'state',
                'keys',
                'onDidCountIn'
            ])) : De('', true),
            t.hostIsPaused ? (G(), wt(l, {
                key: 2,
                'message-key': 'INFO.PAUSED'
            }, null, 8, ['message-key'])) : t.wasJoinedInProgress ? (G(), wt(l, {
                key: 3,
                'message-key': 'INFO.IN_PROGRESS'
            }, null, 8, ['message-key'])) : De('', true)
        ], 6);
    }
    const j9e = Je(V9e, [
            [
                'render',
                G9e
            ],
            [
                '__scopeId',
                'data-v-4fd176f1'
            ]
        ]), W9e = at({
            props: {
                combo: {
                    type: Number,
                    required: true
                }
            }
        }), H9e = t => (Ri('data-v-fcc722b8'), t = t(), Mi(), t), Y9e = H9e(() => V('path', { d: 'm46,2L80,0l-15,20,5,7,7-12,17,39-8,30-25,16-35-7-19-28,5-31L46,2Z' }, null, -1));
    function Z9e(t, e, n, r, s, i) {
        return G(), K('svg', z9e, [
            Y9e,
            V('text', K9e, Nt(t.combo), 1)
        ]);
    }
    const X9e = Je(W9e, [
            [
                'render',
                Z9e
            ],
            [
                '__scopeId',
                'data-v-fcc722b8'
            ]
        ]), Q9e = at({
            components: {
                ChangeVIP: P5,
                PlayerHeader: Hf,
                ComboSVG: X9e,
                NoteSVG: R5
            },
            props: {
                beatmap: {
                    type: Object,
                    required: false
                },
                info: {
                    type: Object,
                    required: true
                },
                instrument: {
                    type: Object,
                    required: false
                },
                player: {
                    type: Object,
                    required: true
                },
                players: {
                    type: Object,
                    required: true
                },
                render: {
                    type: Object,
                    required: true
                }
            },
            data() {
                return { showChangeVIP: false };
            },
            computed: {
                classes() {
                    const t = [this.theme];
                    return this.info.isAudience && t.push('is-audience'), t;
                },
                theme() {
                    return this.info.isAudience && this.render.audienceSurvived !== void 0 ? this.render.audienceSurvived ? 'survived' : 'eaten' : this.render.survived ? 'survived' : 'eaten';
                },
                meterData() {
                    if (!this.scoreData) {
                        return null;
                    }
                    const t = this.scoreData.perfect, e = t + this.scoreData.great, n = e + this.scoreData.okay;
                    return {
                        perfect: `${ t / this.scoreData.total * 100 }%`,
                        great: `${ e / this.scoreData.total * 100 }%`,
                        okay: `${ n / this.scoreData.total * 100 }%`
                    };
                },
                scoreData() {
                    if (this.info.isAudience) {
                        const e = Dn.get('audienceScore', 'code');
                        if (!e) {
                            return null;
                        }
                        const [n, r, s, i, o, a, l] = e.split(':');
                        return {
                            score: parseInt(n, 10),
                            combo: parseInt(r, 10),
                            perfect: parseInt(s, 10),
                            great: parseInt(i, 10),
                            okay: parseInt(o, 10),
                            miss: parseInt(a, 10),
                            total: parseInt(l, 10)
                        };
                    }
                    const t = this.player.scoreboardInfo[this.info.id];
                    return {
                        score: Math.round(t.grade.score),
                        combo: t.grade.longestCombo,
                        perfect: t.grade.perfectNotes,
                        great: t.grade.greatNotes,
                        okay: t.grade.okayNotes,
                        miss: t.grade.missedNotes,
                        total: t.grade.totalNotes
                    };
                }
            },
            methods: {
                onDidRequestChangeVIP() {
                    this.showChangeVIP = true;
                },
                onDidRequestModalClose() {
                    this.showChangeVIP = false;
                },
                async onChoiceClick(t) {
                    if (this.player.responseKey) {
                        try {
                            await this.$ecast.updateObject(this.player.responseKey, { [t]: true });
                        } catch (e) {
                            this.$handleEcastError(e);
                        }
                    }
                }
            }
        });
    function EOe(t, e, n, r, s, i) {
        var d;
        const o = We('NoteSVG'), a = We('ComboSVG'), l = We('PlayerHeader'), u = We('ChangeVIP'), f = fn('t');
        return G(), K('div', J9e, [
            V('div', {
                class: nt([
                    'constrain menu has-header',
                    t.classes
                ])
            }, [
                V('div', eOe, [
                    (G(), K('svg', tOe, [
                        t.theme === 'survived' ? (G(), K('polygon', nOe)) : De('', true),
                        t.theme === 'survived' ? (G(), K('path', rOe)) : (G(), K('path', sOe))
                    ])),
                    V('div', iOe, [
                        t.info.isAudience ? qe((G(), K('p', oOe, null, 512)), [[
                                f,
                                'RESULTS.AUDIENCE'
                            ]]) : De('', true),
                        qe(V('h3', aOe, null, 512), [[
                                f,
                                t.render.survived ? 'RESULTS.SURVIVED' : 'RESULTS.EATEN'
                            ]])
                    ])
                ]),
                V('div', cOe, [t.scoreData ? (G(), K('div', lOe, [
                        V('p', uOe, [
                            Ye(o, { class: 'icon' }),
                            Tn(' ' + Nt((d = t.render) == null ? void 0 : d.title), 1)
                        ]),
                        V('div', hOe, [
                            V('p', fOe, [
                                Tn(Nt(t.scoreData.score.toLocaleString()) + ' ', 1),
                                Ye(a, { combo: t.scoreData.combo }, null, 8, ['combo'])
                            ]),
                            t.meterData ? (G(), K('div', dOe, [
                                V('div', {
                                    class: 'segment okay',
                                    style: an({ width: t.meterData.okay })
                                }, null, 4),
                                V('div', {
                                    class: 'segment great',
                                    style: an({ width: t.meterData.great })
                                }, null, 4),
                                V('div', {
                                    class: 'segment perfect',
                                    style: an({ width: t.meterData.perfect })
                                }, null, 4)
                            ])) : De('', true),
                            V('div', pOe, [
                                V('p', mOe, [
                                    Tn('Perfect'),
                                    V('span', null, Nt(t.scoreData.perfect.toLocaleString()), 1)
                                ]),
                                V('p', gOe, [
                                    Tn('Great'),
                                    V('span', null, Nt(t.scoreData.great.toLocaleString()), 1)
                                ]),
                                V('p', _Oe, [
                                    Tn('Okay'),
                                    V('span', null, Nt(t.scoreData.okay.toLocaleString()), 1)
                                ]),
                                V('p', yOe, [
                                    Tn('Miss'),
                                    V('span', null, Nt(t.scoreData.miss.toLocaleString()), 1)
                                ])
                            ])
                        ])
                    ])) : De('', true)]),
                t.info.isVip ? (G(), K('div', vOe, [V('div', bOe, [
                        qe(V('button', {
                            class: 'primary',
                            onClick: e[0] || (e[0] = p => t.onChoiceClick('retry'))
                        }, null, 512), [[
                                f,
                                'MENU.RETRY_SONG'
                            ]]),
                        qe(V('button', {
                            class: 'primary',
                            onClick: e[1] || (e[1] = p => t.onChoiceClick('newSong'))
                        }, null, 512), [[
                                f,
                                'MENU.NEW_SONG'
                            ]]),
                        qe(V('button', {
                            class: 'secondary',
                            onClick: e[2] || (e[2] = p => t.onChoiceClick('endSession'))
                        }, null, 512), [[
                                f,
                                'MENU.END_SESSION'
                            ]])
                    ])])) : De('', true)
            ], 2),
            Ye(l, {
                info: t.info,
                'is-vip': t.info.isVip && !t.info.isSolo,
                players: t.players,
                'response-key': t.player.responseKey,
                onDidRequestChangeVip: t.onDidRequestChangeVIP
            }, null, 8, [
                'info',
                'is-vip',
                'players',
                'response-key',
                'onDidRequestChangeVip'
            ]),
            t.showChangeVIP ? (G(), wt(u, {
                key: 0,
                info: t.info,
                players: t.players,
                'response-key': t.player.responseKey,
                onDidRequestClose: t.onDidRequestModalClose
            }, null, 8, [
                'info',
                'players',
                'response-key',
                'onDidRequestClose'
            ])) : De('', true)
        ]);
    }
    const TOe = Je(Q9e, [
            [
                'render',
                EOe
            ],
            [
                '__scopeId',
                'data-v-6a087b24'
            ]
        ]), SOe = at({
            props: {
                rating: {
                    type: Number,
                    required: true
                }
            },
            computed: {
                classes() {
                    const t = [];
                    return this.rating === 8 ? t.push('gold') : this.rating === 7 ? t.push('silver') : this.rating === 6 ? t.push('bronze') : this.rating === 5 && t.push('full'), this.rating === 0 ? t.push('rating-0') : this.rating === 1 ? t.push('rating-1') : this.rating === 2 ? t.push('rating-2') : this.rating === 3 ? t.push('rating-3') : this.rating === 4 ? t.push('rating-4') : t.push('rating-5'), t;
                }
            }
        }), OOe = Ea('<polygon class="bg" points="64.76 11.33 49.22 0 35.24 12.09 31.16 28.2 13.35 26.73 0 38.26 5.39 56.27 19.81 64.16 13.23 80.33 18.75 96.75 27.77 99.87 41 95.61 49.34 86.31 60.59 96.27 73.35 100 81.19 96.31 86.58 79.82 79.87 64.16 93.73 55.82 100 37.81 84.95 26.16 67.65 27.94 64.76 11.33" data-v-bc6516f8></polygon><polygon class="petal p5" points="6.02 40.04 9.72 51.11 20.82 59.07 33.04 59.07 44.64 52.45 38.75 41.82 29.84 33.99 16.18 32.08 6.02 40.04" data-v-bc6516f8></polygon><polygon class="petal p4" points="33.35 61.62 23.51 69.7 19.37 80.97 23.7 92.74 27.65 93.7 37.81 89.69 44.26 82.75 47.77 72.44 46.02 59.96 33.35 61.62" data-v-bc6516f8></polygon><polygon class="petal p3" points="75.24 67.92 64.2 60.6 52.98 59.83 52.73 71.8 55.61 83.51 62.76 90.83 72.23 93.83 77.49 91.28 80.5 79.19 75.24 67.92" data-v-bc6516f8></polygon><polygon class="petal p2" points="69.59 33.99 60.69 42.27 55.42 52.9 64.33 57.48 76.24 59.2 89.09 51.75 93.04 39.72 82.95 32.59 69.59 33.99" data-v-bc6516f8></polygon><polygon class="petal p1" points="62.45 29.41 60 15.47 49.34 7.57 39.56 15.47 36.68 28.2 41 38.89 49.53 47.87 57.62 40.04 62.45 29.41" data-v-bc6516f8></polygon>', 6);
    function AOe(t, e, n, r, s, i) {
        return G(), K('svg', {
            viewBox: '0 0 100 100',
            class: nt(t.classes)
        }, [
            t.rating > 5 ? (G(), K('polygon', wOe)) : De('', true),
            OOe
        ], 2);
    }
    const COe = Je(SOe, [
            [
                'render',
                AOe
            ],
            [
                '__scopeId',
                'data-v-bc6516f8'
            ]
        ]), IOe = {}, NOe = V('path', { d: 'm22,21l13-10,20,11v19l17,1-2-26L31,0,11,15,3,40h18l1-19Zm51,24L1,47l-1,46,40,7,35-5-2-50Zm-31,36h-9l-1-17,6-4,5,6-1,15Z' }, null, -1), xOe = [NOe];
    function POe(t, e) {
        return G(), K('svg', kOe, xOe);
    }
    const ROe = Je(IOe, [[
                'render',
                POe
            ]]), MOe = {}, $Oe = V('path', { d: 'm94.78,65H5.22c-4.32,0-6.76-4.68-4.13-7.91L46.12,1.84c2-2.45,5.76-2.45,7.76,0l45.03,55.25c2.63,3.23.19,7.91-4.13,7.91Z' }, null, -1), LOe = [$Oe];
    function FOe(t, e) {
        return G(), K('svg', DOe, LOe);
    }
    const UOe = Je(MOe, [[
                'render',
                FOe
            ]]), BOe = at({
            components: {
                ChangeVIP: P5,
                PlayerHeader: Hf,
                CategorySVG: YI,
                FlowerSVG: COe,
                LockSVG: ROe,
                NoteSVG: R5,
                UpArrowSVG: UOe
            },
            props: {
                info: {
                    type: Object,
                    required: true
                },
                players: {
                    type: Object,
                    required: true
                },
                player: {
                    type: Object,
                    required: true
                }
            },
            data() {
                return {
                    showChangeVIP: false,
                    localSelectedIndex: null
                };
            },
            computed: {
                selectedIndex() {
                    return this.choices.findIndex(t => t.isSelected) ?? null;
                },
                selectedChoice() {
                    return this.selectedIndex === null ? null : this.choices[this.selectedIndex] ?? null;
                },
                upChoice() {
                    return this.selectedIndex === null ? null : this.selectedIndex === 0 ? this.choices[this.choices.length - 1] : this.choices[this.selectedIndex - 1];
                },
                downChoice() {
                    return this.selectedIndex === null ? null : this.selectedIndex === this.choices.length - 1 ? this.choices[0] : this.choices[this.selectedIndex + 1];
                },
                choices() {
                    const t = [];
                    return this.player.songs.songs.forEach((e, n) => {
                        if (!this.info.isVip && e.isLocked) {
                            return;
                        }
                        const r = [];
                        e.isSelected && r.push('on-screen');
                        n === this.localSelectedIndex && r.push('nominated');
                        t.push({
                            classes: r,
                            name: e.name,
                            slug: e.slug,
                            highestRating: e.highestRating,
                            categories: e.beatmapProgress,
                            isSelected: e.isSelected,
                            isLocked: e.isLocked
                        });
                        ;
                    }), t;
                }
            },
            mounted() {
                document.addEventListener('keydown', this.onKeyDown);
            },
            beforeUnmount() {
                document.removeEventListener('keydown', this.onKeyDown);
            },
            methods: {
                onDidRequestChangeVIP() {
                    this.showChangeVIP = true;
                },
                onDidRequestModalClose() {
                    this.showChangeVIP = false;
                },
                onKeyDown(t) {
                    this.$hotkeyManager.checkEvent(t);
                    t.key === 'ArrowDown' && this.sendDirection('down');
                    t.key === 'ArrowUp' && this.sendDirection('up');
                    ;
                },
                onDirectionClick(t) {
                    this.sendDirection(t);
                },
                async sendDirection(t) {
                    if (this.info.isVip) {
                        try {
                            await this.$ecast.updateObject(this.player.responseKey, { scrollSong: t });
                        } catch (e) {
                            this.$handleEcastError(e);
                        }
                    }
                },
                async onSelectClick() {
                    if (this.selectedChoice) {
                        try {
                            await this.$ecast.updateObject(this.player.responseKey, { selectSong: true });
                        } catch (t) {
                            this.$handleEcastError(t);
                        }
                    }
                },
                async onVoteClick(t) {
                    this.localSelectedIndex = null;
                    window.setTimeout(() => {
                        this.localSelectedIndex = t;
                    }, 50);
                    ;
                    try {
                        await this.$ecast.updateObject(this.player.responseKey, { voteSong: this.choices[t].slug });
                    } catch (e) {
                        this.$handleEcastError(e);
                    }
                }
            }
        }), zOe = ['aria-label'], YOe = ['aria-label'], ZOe = ['onClick'], sAe = [
            'aria-label',
            'disabled'
        ];
    function iAe(t, e, n, r, s, i) {
        var v, y, g, b;
        const o = We('UpArrowSVG'), a = We('NoteSVG'), l = We('LockSVG'), u = We('FlowerSVG'), f = We('CategorySVG'), d = We('PlayerHeader'), p = We('ChangeVIP'), _ = fn('t');
        return G(), K('div', qOe, [
            V('div', VOe, [
                V('div', GOe, [t.info.isVip ? qe((G(), K('h3', jOe, null, 512)), [[
                            _,
                            'MENU.CHOOSE_SONG'
                        ]]) : qe((G(), K('h3', WOe, null, 512)), [[
                            _,
                            'MENU.VOTE_SONG'
                        ]])]),
                V('div', {
                    class: nt([
                        'choices-wrapper',
                        { 'is-choosing': t.info.isVip }
                    ])
                }, [t.info.isVip ? (G(), K('div', HOe, [
                        V('button', {
                            class: 'direction',
                            'aria-label': t.$t('ARIA.SONG_UP', { songName: ((v = t.upChoice) == null ? void 0 : v.name) ?? '' }),
                            onClick: e[0] || (e[0] = A => t.onDirectionClick('up'))
                        }, [Ye(o)], 8, zOe),
                        V('button', {
                            class: 'direction',
                            'aria-label': t.$t('ARIA.SONG_DOWN', { songName: ((y = t.downChoice) == null ? void 0 : y.name) ?? '' }),
                            onClick: e[1] || (e[1] = A => t.onDirectionClick('down'))
                        }, [Ye(o)], 8, YOe)
                    ])) : (G(), K('div', KOe, [(G(true), K(gt, null, wn(t.choices, (A, N) => (G(), K('button', {
                            key: N,
                            class: nt([
                                A.classes,
                                'choice has-icon'
                            ]),
                            onClick: Si(I => t.onVoteClick(N), ['prevent'])
                        }, [
                            A === t.selectedChoice ? (G(), wt(a, {
                                key: 0,
                                class: 'icon note'
                            })) : De('', true),
                            Tn(' ' + Nt(A.name), 1)
                        ], 10, ZOe))), 128))]))], 2),
                t.info.isVip && t.selectedChoice ? (G(), K('div', XOe, [V('div', QOe, [
                        V('p', JOe, [
                            t.selectedChoice.isLocked ? (G(), wt(l, {
                                key: 0,
                                class: 'icon'
                            })) : (G(), wt(a, {
                                key: 1,
                                class: 'icon'
                            })),
                            Tn(' ' + Nt(t.selectedChoice.name), 1)
                        ]),
                        V('div', eAe, [Ye(u, {
                                class: 'icon',
                                rating: t.selectedChoice.highestRating
                            }, null, 8, ['rating'])]),
                        V('div', tAe, [
                            qe(V('p', nAe, null, 512), [[
                                    _,
                                    'MENU.COMPLETED_PARTS'
                                ]]),
                            V('div', rAe, [(G(true), K(gt, null, wn(t.selectedChoice.categories, (A, N) => (G(), wt(f, {
                                    key: N,
                                    category: A.category,
                                    class: nt([
                                        'icon',
                                        {
                                            perfected: A.isPerfected,
                                            incomplete: !A.isSurvived
                                        }
                                    ])
                                }, null, 8, [
                                    'category',
                                    'class'
                                ]))), 128))])
                        ])
                    ])])) : De('', true),
                t.info.isVip ? qe((G(), K('button', {
                    key: 1,
                    'aria-label': t.$t('ARIA.SELECT_SONG', { songName: ((g = t.selectedChoice) == null ? void 0 : g.name) ?? '' }),
                    class: 'primary',
                    disabled: (b = t.selectedChoice) == null ? void 0 : b.isLocked,
                    onClick: e[2] || (e[2] = (...A) => t.onSelectClick && t.onSelectClick(...A))
                }, null, 8, sAe)), [[
                        _,
                        'MENU.SELECT_SONG'
                    ]]) : De('', true)
            ]),
            Ye(d, {
                info: t.info,
                players: t.players,
                'is-vip': t.info.isVip && !t.info.isSolo,
                'response-key': t.player.responseKey,
                onDidRequestChangeVip: t.onDidRequestChangeVIP
            }, null, 8, [
                'info',
                'players',
                'is-vip',
                'response-key',
                'onDidRequestChangeVip'
            ]),
            Ye(Ta, { name: 'modal' }, {
                default: go(() => [t.showChangeVIP ? (G(), wt(p, {
                        key: 0,
                        info: t.info,
                        players: t.players,
                        'response-key': t.player.responseKey,
                        onDidRequestClose: t.onDidRequestModalClose
                    }, null, 8, [
                        'info',
                        'players',
                        'response-key',
                        'onDidRequestClose'
                    ])) : De('', true)]),
                _: 1
            })
        ]);
    }
    const oAe = Je(BOe, [
            [
                'render',
                iAe
            ],
            [
                '__scopeId',
                'data-v-2e3fd015'
            ]
        ]), aAe = at({
            components: {
                PlayerHeader: Hf,
                LogoSVG: ZI
            },
            props: {
                info: {
                    type: Object,
                    required: true
                },
                player: {
                    type: Object,
                    required: false
                },
                players: {
                    type: Object,
                    required: false
                }
            },
            computed: {
                message() {
                    var t;
                    if (!((t = this.player) != null && t.category)) {
                        return null;
                    }
                    if (this.player.category === 'processing') {
                        return this.$t('INFO.PROCESSING');
                    }
                    if (this.player.category === 'songSelect') {
                        if (!this.players) {
                            return null;
                        }
                        const n = Object.keys(this.players).find(s => this.players[s].isVip);
                        if (!n) {
                            return null;
                        }
                        const r = this.players[n];
                        return this.$t('MENU.WAITING_FOR_SONG', { vipName: r.name });
                    }
                    return null;
                }
            }
        });
    function hAe(t, e, n, r, s, i) {
        const o = We('LogoSVG'), a = We('PlayerHeader');
        return G(), K('div', cAe, [
            V('div', lAe, [
                Ye(o, { class: 'logo' }),
                t.message ? (G(), K('p', uAe, Nt(t.message), 1)) : De('', true)
            ]),
            Ye(a, { info: t.info }, null, 8, ['info'])
        ]);
    }
    const fAe = Je(aAe, [
        [
            'render',
            hAe
        ],
        [
            '__scopeId',
            'data-v-08490565'
        ]
    ]);
    var W2 = { exports: {} };
    (function (t, e) {
        (function () {
            var n = this, r = n._, s = Array.prototype, i = Object.prototype, o = Function.prototype, a = s.push, l = s.slice, u = i.toString, f = i.hasOwnProperty, d = Array.isArray, p = Object.keys, _ = o.bind, v = Object.create, y = function () {
                }, g = function (w) {
                    if (w instanceof g) {
                        return w;
                    }
                    if (!(this instanceof g)) {
                        return new g(w);
                    }
                    this._wrapped = w;
                };
            t.exports && (e = t.exports = g);
            ;
            ;
            ;
            var b = function (w, R, H) {
                    if (R === void 0) {
                        return w;
                    }
                    switch (H ?? 3) {
                    case 1:
                        return function (X) {
                            return w.call(R, X);
                        };
                    case 2:
                        return function (X, k) {
                            return w.call(R, X, k);
                        };
                    case 3:
                        return function (X, k, T) {
                            return w.call(R, X, k, T);
                        };
                    case 4:
                        return function (X, k, T, S) {
                            return w.call(R, X, k, T, S);
                        };
                    }
                    return function () {
                        return w.apply(R, arguments);
                    };
                }, A = function (w, R, H) {
                    return w == null ? g.identity : g.isFunction(w) ? b(w, R, H) : g.isObject(w) ? g.matcher(w) : g.property(w);
                };
            ;
            var N = function (w, R) {
                    return function (H) {
                        var X = arguments.length;
                        if (X < 2 || H == null) {
                            return H;
                        }
                        for (var k = 1; k < X; k++) {
                            for (var T = arguments[k], S = w(T), P = S.length, B = 0; B < P; B++) {
                                var te = S[B];
                                (!R || H[te] === void 0) && (H[te] = T[te]);
                            }
                        }
                        return H;
                    };
                }, I = function (w) {
                    if (!g.isObject(w)) {
                        return {};
                    }
                    if (v) {
                        return v(w);
                    }
                    y.prototype = w;
                    var R = new y();
                    return y.prototype = null, R;
                }, O = function (w) {
                    return function (R) {
                        return R == null ? void 0 : R[w];
                    };
                }, x = Math.pow(2, 53) - 1, M = O('length'), L = function (w) {
                    var R = M(w);
                    return typeof R == 'number' && R >= 0 && R <= x;
                };
            ;
            ;
            ;
            function U(w) {
                function R(H, X, k, T, S, P) {
                    for (; S >= 0 && S < P; S += w) {
                        var B = T ? T[S] : S;
                        k = X(k, H[B], B, H);
                    }
                    return k;
                }
                return function (H, X, k, T) {
                    X = b(X, T, 4);
                    var S = !L(H) && g.keys(H), P = (S || H).length, B = w > 0 ? 0 : P - 1;
                    return arguments.length < 3 && (k = H[S ? S[B] : B], B += w), R(H, X, k, S, B, P);
                };
            }
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            var ee = function (w) {
                return function (R, H, X) {
                    var k = { T: w };
                    return H = A(H, X), g.each(R, function (T, S) {
                        var P = H(T, S, R);
                        w(k, T, P);
                    }), k;
                };
            };
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            var ae = function (w, R, H, X) {
                for (var k = [], T = 0, S = X || 0, P = M(w); S < P; S++) {
                    var B = w[S];
                    if (L(B) && (g.isArray(B) || g.isArguments(B))) {
                        R || (B = ae(B, R, H));
                        var te = 0, le = B.length;
                        for (k.length += le; te < le;) {
                            k[T++] = B[te++];
                        }
                    } else {
                        H || (k[T++] = B);
                    }
                }
                return k;
            };
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            function Z(w) {
                return function (R, H, X) {
                    H = A(H, X);
                    for (var k = M(R), T = w > 0 ? 0 : k - 1; T >= 0 && T < k; T += w) {
                        if (H(R[T], T, R)) {
                            return T;
                        }
                    }
                    return -1;
                };
            }
            ;
            ;
            ;
            ;
            function fe(w, R, H) {
                return function (X, k, T) {
                    var S = 0, P = M(X);
                    if (typeof T == 'number') {
                        w > 0 ? S = T >= 0 ? T : Math.max(T + P, S) : P = T >= 0 ? Math.min(T + 1, P) : T + P + 1;
                    } else {
                        if (H && T && P) {
                            return T = H(X, k), X[T] === k ? T : -1;
                        }
                    }
                    if (k !== k) {
                        return T = R(l.call(X, S, P), g.isNaN), T >= 0 ? T + S : -1;
                    }
                    for (T = w > 0 ? S : P - 1; T >= 0 && T < P; T += w) {
                        if (X[T] === k) {
                            return T;
                        }
                    }
                    return -1;
                };
            }
            ;
            ;
            ;
            ;
            var ge = function (w, R, H, X, k) {
                if (!(X instanceof R)) {
                    return w.apply(H, k);
                }
                var T = I(w.prototype), S = w.apply(T, k);
                return g.isObject(S) ? S : T;
            };
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            var Y = !{ toString: null }.propertyIsEnumerable('toString'), Q = [
                    'valueOf',
                    'isPrototypeOf',
                    'toString',
                    'propertyIsEnumerable',
                    'hasOwnProperty',
                    'toLocaleString'
                ];
            function ue(w, R) {
                var H = Q.length, X = w.constructor, k = g.isFunction(X) && X.prototype || i, T = 'constructor';
                for (g.has(w, T) && !g.contains(R, T) && R.push(T); H--;) {
                    T = Q[H];
                    T in w && w[T] !== k[T] && !g.contains(R, T) && R.push(T);
                    ;
                }
            }
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            var _e = function (w, R, H, X) {
                if (w === R) {
                    return w !== 0 || 1 / w === 1 / R;
                }
                if (w == null || R == null) {
                    return w === R;
                }
                w instanceof g && (w = w._wrapped);
                R instanceof g && (R = R._wrapped);
                ;
                var k = u.call(w);
                if (k !== u.call(R)) {
                    return false;
                }
                switch (k) {
                case '[object RegExp]':
                case '[object String]':
                    return '' + w == '' + R;
                case '[object Number]':
                    return +w != +w ? +R != +R : +w == 0 ? 1 / +w === 1 / R : +w == +R;
                case '[object Date]':
                case '[object Boolean]':
                    return +w == +R;
                }
                var T = k === '[object Array]';
                if (!T) {
                    if (typeof w != 'object' || typeof R != 'object') {
                        return false;
                    }
                    var S = w.constructor, P = R.constructor;
                    if (S !== P && !(g.isFunction(S) && S instanceof S && g.isFunction(P) && P instanceof P) && 'constructor' in w && 'constructor' in R) {
                        return false;
                    }
                }
                H = H || [];
                X = X || [];
                ;
                for (var B = H.length; B--;) {
                    if (H[B] === w) {
                        return X[B] === R;
                    }
                }
                if (H.push(w), X.push(R), T) {
                    if (B = w.length, B !== R.length) {
                        return false;
                    }
                    for (; B--;) {
                        if (!_e(w[B], R[B], H, X)) {
                            return false;
                        }
                    }
                } else {
                    var te = g.keys(w), le;
                    if (B = te.length, g.keys(R).length !== B) {
                        return false;
                    }
                    for (; B--;) {
                        if (le = te[B], !(g.has(R, le) && _e(w[le], R[le], H, X))) {
                            return false;
                        }
                    }
                }
                return H.pop(), X.pop(), true;
            };
            ;
            ;
            ;
            ;
            ;
            g.each([
                'Arguments',
                'Function',
                'String',
                'Number',
                'Date',
                'RegExp',
                'Error'
            ], function (w) {
                g['is' + w] = function (R) {
                    return u.call(R) === '[object ' + w + ']';
                };
            });
            g.isArguments(arguments) || (g.isArguments = function (w) {
                return g.has(w, 'callee');
            });
            typeof /./ != 'function' && typeof Int8Array != 'object' && (g.isFunction = function (w) {
                return typeof w == 'function' || false;
            });
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            ;
            var be = g.invert(Oe), Ce = function (w) {
                    var R = function (T) {
                            return w[T];
                        }, H = '(?:' + g.keys(w).join('|') + ')', X = RegExp(H), k = RegExp(H, 'g');
                    return function (T) {
                        return T = T == null ? '' : '' + T, X.test(T) ? T.replace(k, R) : T;
                    };
                };
            ;
            ;
            ;
            ;
            var Me = 0;
            ;
            ;
            ;
            var Ke = function (w) {
                return '\\' + st[w];
            };
            ;
            ;
            ;
            var rt = function (w, R) {
                return w._chain ? g(R).chain() : R;
            };
            ;
            g.mixin(g);
            g.each([
                'pop',
                'push',
                'reverse',
                'shift',
                'sort',
                'splice',
                'unshift'
            ], function (w) {
                var R = s[w];
                g.prototype[w] = function () {
                    var H = this._wrapped;
                    return R.apply(H, arguments), (w === 'shift' || w === 'splice') && H.length === 0 && delete H[0], rt(this, H);
                };
            });
            g.each([
                'concat',
                'join',
                'slice'
            ], function (w) {
                var R = s[w];
                g.prototype[w] = function () {
                    return rt(this, R.apply(this._wrapped, arguments));
                };
            });
            g.prototype.value = function () {
                return this._wrapped;
            };
            g.prototype.valueOf = g.prototype.toJSON = g.prototype.value;
            g.prototype.toString = function () {
                return '' + this._wrapped;
            };
            ;
        }.call(mn));
    }(W2, W2.exports));
    var vAe = W2.exports;
    const bAe = at({
            components: { BaseModal: zI },
            setup() {
                const t = Pt.supportsType('ogg') ? 'ogg' : 'mp3', e = new uf({
                        welcome1: new URL(Object.assign({
                            '../../assets/welcome1.mp3': 'https://bundles.jackbox.tv/main/pp10-nopus-opus/assets/0523d60f.mp3',
                            '../../assets/welcome1.ogg': 'https://bundles.jackbox.tv/main/pp10-nopus-opus/assets/6048b084.ogg'
                        })[`../../assets/welcome1.${ t }`], self.location).href,
                        welcome2: new URL(Object.assign({
                            '../../assets/welcome2.mp3': 'https://bundles.jackbox.tv/main/pp10-nopus-opus/assets/a4c32d49.mp3',
                            '../../assets/welcome2.ogg': 'https://bundles.jackbox.tv/main/pp10-nopus-opus/assets/7a6eefbc.ogg'
                        })[`../../assets/welcome2.${ t }`], self.location).href,
                        welcome3: new URL(Object.assign({
                            '../../assets/welcome3.mp3': 'https://bundles.jackbox.tv/main/pp10-nopus-opus/assets/23af5ef9.mp3',
                            '../../assets/welcome3.ogg': 'https://bundles.jackbox.tv/main/pp10-nopus-opus/assets/47782f89.ogg'
                        })[`../../assets/welcome3.${ t }`], self.location).href
                    }).toDestination();
                return e.volume.value = -3, { players: e };
            },
            methods: {
                onCloseClick() {
                    this.$emit('didRequestClose');
                },
                async onTestClick() {
                    const t = [
                        'welcome1',
                        'welcome2',
                        'welcome3'
                    ];
                    try {
                        await uI();
                        this.players.player(vAe.sample(t)).start(0, 0.01);
                        ;
                    } catch (e) {
                        console.warn(e);
                    }
                }
            }
        }), EAe = t => (Ri('data-v-bd67b09f'), t = t(), Mi(), t), SAe = EAe(() => V('svg', { viewBox: '0 0 100 100' }, [
            V('circle', {
                cx: '50',
                cy: '50',
                r: '50'
            }),
            V('polygon', { points: '32,25 75,50 32,75' })
        ], -1));
    function AAe(t, e, n, r, s, i) {
        const o = We('BaseModal'), a = fn('t');
        return G(), wt(o, { 'title-key': 'WELCOME.AUDIO_CHECK' }, {
            default: go(() => [
                V('div', TAe, [V('button', { onClick: e[0] || (e[0] = (...l) => t.onTestClick && t.onTestClick(...l)) }, [
                        SAe,
                        Tn(' ' + Nt(t.$t('WELCOME.TEST')), 1)
                    ])]),
                qe(V('p', wAe, null, 512), [[
                        a,
                        'WELCOME.NOT_HEARING'
                    ]]),
                qe(V('p', OAe, null, 512), [[
                        a,
                        'WELCOME.CHECK_SETTINGS'
                    ]]),
                V('dl', null, [
                    qe(V('dt', null, null, 512), [[
                            a,
                            'WELCOME.SILENT'
                        ]]),
                    qe(V('dd', null, null, 512), [[
                            a,
                            'WELCOME.OFF'
                        ]]),
                    qe(V('dt', null, null, 512), [[
                            a,
                            'WELCOME.POWER_SAVER'
                        ]]),
                    qe(V('dd', null, null, 512), [[
                            a,
                            'WELCOME.OFF'
                        ]]),
                    qe(V('dt', null, null, 512), [[
                            a,
                            'WELCOME.VOLUME'
                        ]]),
                    qe(V('dd', null, null, 512), [[
                            a,
                            'WELCOME.UP'
                        ]])
                ]),
                qe(V('button', {
                    class: 'secondary close',
                    onClick: e[1] || (e[1] = (...l) => t.onCloseClick && t.onCloseClick(...l))
                }, null, 512), [[
                        a,
                        'WELCOME.CONFIRM'
                    ]])
            ]),
            _: 1
        }, 8, ['title-key']);
    }
    const CAe = Je(bAe, [
            [
                'render',
                AAe
            ],
            [
                '__scopeId',
                'data-v-bd67b09f'
            ]
        ]), IAe = at({
            components: {
                InstrumentSelect: KSe,
                PostGame: N6e,
                Playback: B6e,
                Recording: j9e,
                Scoreboard: TOe,
                SongSelect: oAe,
                Waiting: fAe,
                Welcome: CAe
            },
            bb: {
                break: () => '<br />',
                info: (t, e) => `<span class="sub">${ e }</span>`
            },
            ecastKeys: {
                audience: 'audiencePlayer',
                player: ({id: t}) => `player:${ t }`,
                players: 'connectedPlayers',
                scoreboardInfo: 'scoreboardInfo'
            },
            ecastProviders: {
                artifact: t => {
                    if (t.artifact) {
                        return t.artifact;
                    }
                    let e = 0, n;
                    for (; t[`artifact:${ e }`];) {
                        n = t[`artifact:${ e }`];
                        e += 1;
                        ;
                    }
                    return n;
                },
                beatmaps: t => {
                    const e = {};
                    return Object.keys(t).forEach(n => {
                        const [r, s] = n.split(':');
                        r === 'beatmap' && (e[s] = t[n]);
                    }), e;
                },
                hostIsPaused: t => {
                    var e;
                    return ((e = t.hostIsPaused) == null ? void 0 : e.hostIsPaused) ?? false;
                },
                info: (t, {id: e}) => {
                    if (!t.connectedPlayers) {
                        return;
                    }
                    const n = t.connectedPlayers[e];
                    return t.audiencePlayer || !n ? {
                        name: '',
                        id: e,
                        avatar: 99,
                        isAudience: true
                    } : (Object.keys(t.connectedPlayers).length === 1 && (n.isSolo = true), n);
                },
                instruments: t => {
                    const e = {};
                    return Object.keys(t).forEach(n => {
                        const [r, s] = n.split(':');
                        r === 'instrument' && (e[s] = t[n]);
                    }), e;
                },
                renders: t => t.songData ? t.songData.songs : []
            },
            props: {
                artifact: Object,
                audience: Object,
                beatmaps: Object,
                hostIsPaused: Boolean,
                info: Object,
                instruments: Object,
                player: Object,
                players: Object,
                renders: Array,
                scoreboardInfo: Object
            },
            themeColor: '#000',
            data() {
                return {
                    showWelcome: false,
                    themeClass: 'theme-green'
                };
            },
            computed: {
                classes() {
                    const t = [this.themeClass];
                    return this.$hotkeyManager.isDesktop.value && t.push('desktop'), t;
                },
                isReady() {
                    return !(!this.player && !this.audience || this.player && !this.info);
                },
                lastRender() {
                    var t;
                    return (t = this.renders) != null && t.length ? this.renders[this.renders.length - 1] : null;
                },
                screen() {
                    var r, s, i;
                    const t = ((r = this.player) == null ? void 0 : r.kind) ?? ((s = this.audience) == null ? void 0 : s.kind), e = this.getBeatmapAndInstrument(), n = {
                            info: this.info,
                            player: this.player ?? this.audience
                        };
                    if ((i = this.info) != null && i.isAudience && this.scoreboardInfo) {
                        return n.players = this.players, n.render = this.lastRender, [
                            'Scoreboard',
                            n
                        ];
                    }
                    switch (t) {
                    case 'credits':
                        return n.artifact = this.artifact, n.renders = this.renders, [
                            'PostGame',
                            n
                        ];
                    case 'playback':
                        return [
                            'Playback',
                            n
                        ];
                    case 'audienceRecording':
                    case 'recording':
                        return e ? (n.hostIsPaused = this.hostIsPaused, n.beatmap = e[0], n.instrument = e[1], [
                            'Recording',
                            n
                        ]) : [
                            'Waiting',
                            n
                        ];
                    case 'instrumentSelect':
                        return n.beatmaps = this.beatmaps, n.instruments = this.instruments, n.players = this.players, [
                            'InstrumentSelect',
                            n
                        ];
                    case 'scoreboard':
                        return n.players = this.players, n.render = this.lastRender, [
                            'Scoreboard',
                            n
                        ];
                    case 'songSelect':
                        return n.players = this.players, [
                            'SongSelect',
                            n
                        ];
                    }
                    return n.players = this.players, [
                        'Waiting',
                        n
                    ];
                }
            },
            watch: {
                'player.kind': 'updateColors',
                'audience.kind': 'updateColors'
            },
            mounted() {
                var t, e;
                this.updateColors(((t = this.player) == null ? void 0 : t.kind) ?? ((e = this.audience) == null ? void 0 : e.kind) ?? '', true);
                document.body.classList.add('disabled-debug');
                setTimeout(() => {
                    var r;
                    !Dn.get('welcome', 'code') && ((r = this.info) == null ? void 0 : r.name) !== 'CARTOGRAPHER' && (this.showWelcome = true, Dn.set('welcome', 'true', 'code'));
                }, 500);
                ;
            },
            methods: {
                onDidRequestModalClose() {
                    this.showWelcome = false;
                },
                getBeatmapAndInstrument() {
                    if (!this.info || !this.beatmaps || !this.instruments) {
                        return null;
                    }
                    let t = this.info.beatmapSlug, e = this.info.instrumentSlug;
                    if (this.info.isAudience) {
                        const s = Dn.get('audienceId', 'code');
                        if (!s) {
                            return null;
                        }
                        [t, e] = s.split(':');
                    }
                    if (!t || !e) {
                        return null;
                    }
                    const n = this.beatmaps[t], r = this.instruments[e];
                    return !n || !r ? null : [
                        n,
                        r
                    ];
                },
                updateColors(t, e = false) {
                    if (t === 'audienceRecording') {
                        this.themeClass = 'theme-purple';
                        this.$setThemeColor('#1b0330');
                        ;
                        return;
                    }
                    if (t === 'credits') {
                        this.themeClass = 'theme-purple';
                        this.$setThemeColor('#000000');
                        ;
                        return;
                    }
                    if (t === 'instrumentSelect') {
                        this.themeClass = 'theme-purple';
                        this.$setThemeColor('#000000');
                        ;
                        return;
                    }
                    if (t === 'playback') {
                        this.themeClass = 'theme-purple';
                        this.$setThemeColor('#000000');
                        ;
                        return;
                    }
                    if (t === 'recording') {
                        this.themeClass = 'theme-purple';
                        this.$setThemeColor('#1b0330');
                        ;
                        return;
                    }
                    if (t === 'scoreboard') {
                        if (!this.lastRender || !this.info) {
                            return;
                        }
                        let n = this.lastRender.survived ? 'theme-green' : 'theme-purple';
                        this.info.isAudience && this.lastRender.audienceSurvived !== void 0 && (n = this.lastRender.audienceSurvived ? 'theme-green' : 'theme-purple');
                        this.themeClass = n;
                        this.$setThemeColor('#000000');
                        ;
                        return;
                    }
                    if (t === 'songSelect') {
                        this.themeClass = 'theme-green';
                        this.$setThemeColor('#000000');
                        ;
                        return;
                    }
                    if (e === true) {
                        this.themeClass = 'theme-green';
                        this.$setThemeColor('#000000');
                    }
                }
            }
        });
    function kAe(t, e, n, r, s, i) {
        const o = We('Welcome');
        return t.isReady ? (G(), K('div', {
            key: 0,
            class: nt([
                'nopus',
                t.classes
            ])
        }, [
            t.screen ? (G(), wt(Rm(t.screen[0]), Dm({
                key: 0,
                role: 'main'
            }, t.screen[1]), null, 16)) : De('', true),
            t.showWelcome ? (G(), wt(o, {
                key: 1,
                onDidRequestClose: t.onDidRequestModalClose
            }, null, 8, ['onDidRequestClose'])) : De('', true)
        ], 2)) : De('', true);
    }
    const NAe = Je(IAe, [[
            'render',
            kAe
        ]]);
    fme({
        MainView: NAe,
        messages: Qge,
        plugins: [
            pme,
            dpe
        ]
    });
});
export default xAe();